Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 1014FF93C6
	for <lists+amd-gfx@lfdr.de>; Tue, 12 Nov 2019 16:13:39 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 968D36EB5A;
	Tue, 12 Nov 2019 15:13:37 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-qt1-x841.google.com (mail-qt1-x841.google.com
 [IPv6:2607:f8b0:4864:20::841])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 09E796EB59
 for <amd-gfx@lists.freedesktop.org>; Tue, 12 Nov 2019 15:13:36 +0000 (UTC)
Received: by mail-qt1-x841.google.com with SMTP id y39so20137533qty.0
 for <amd-gfx@lists.freedesktop.org>; Tue, 12 Nov 2019 07:13:35 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=GYzwkl92eSgwPhk3+0FmS1UmDXJ3g1zhfil3PmKGFWw=;
 b=B6hHg2gY9KVsA3GCQ++cjcvIaj4jOPJeIPUstvln/RH8SHeAGyIv7cS5vngYQKCFa9
 YujRpzMDOq4FiShhg4e+BlScnlk0gmt22DnkzJcuIYYWGuV8SgoTNr4gHb9WxiQ85A+4
 yLZfjXbVl24IJGwVWCoYg792cNK6dkkRzHutQqFaR3uWQXbGPztx7Sa4GzeXvEi5OE3Q
 4mHl5jMsG7UC/GINyTq44cnotivAngoeypJRGUXRq7H8le3u6r7EyZzdM/XKVq2tqTb+
 HpKZfHAC1zLSDoz8yxcOAQAHQkJ4v3Tichd+iNz4G0P2keWv6cc4dYf+T+TraFvvyhp5
 B0bA==
X-Gm-Message-State: APjAAAUZ152UtOdHR7gso1zN7yjINiNtynQ8pg5MHMtPmaxp5gvN2Z/C
 n1LRi4YBVPMZVKcYKiY/iv/K4jv9
X-Google-Smtp-Source: APXvYqyDadAAe2IXe2X97cAP4yBIrWNkWdYmxtrU/H/oK3fYubNqkISyf9nOb0KOOakZHcPkOM+YVg==
X-Received: by 2002:ac8:3849:: with SMTP id r9mr31505192qtb.370.1573571614695; 
 Tue, 12 Nov 2019 07:13:34 -0800 (PST)
Received: from localhost.localdomain ([71.219.59.120])
 by smtp.gmail.com with ESMTPSA id j71sm10437094qke.90.2019.11.12.07.13.33
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Tue, 12 Nov 2019 07:13:34 -0800 (PST)
From: Alex Deucher <alexdeucher@gmail.com>
X-Google-Original-From: Alex Deucher <alexander.deucher@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH] drm/amdgpu: don't read registers if gfxoff is enabled (v2)
Date: Tue, 12 Nov 2019 10:13:27 -0500
Message-Id: <20191112151327.108438-1-alexander.deucher@amd.com>
X-Mailer: git-send-email 2.23.0
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=GYzwkl92eSgwPhk3+0FmS1UmDXJ3g1zhfil3PmKGFWw=;
 b=Da7tBWlc1RjCw7XJtMZul7cUK4iEU4Q+JfUlwU9J7KJo3aVr8G2zK1ysdxts26ULEW
 4oS2Zv5E8+9Z9D4cSryOZrwniXgAseMG+AfFAIXhJDe3EkB3lFjm2elvoNk9IY+QiaDu
 fSMJYDpe5ntFsbZL+xD92kPsFENQf/zV/Ruzu6PZ5+1cQ+TlEXyNC/XDqwRlo0cYTYKR
 +46X69m5YC44HUlOM7atVxw6cPAD53feLggy4x1f1oyiUuCF9lqKkNXT4KiUcDyqpCh8
 3kw9LKhJET+C27ZOWUkaKJUIDfMU/CL4396LVrKRcHmm7nhxveUTCpKRPmKz08Y2zvvy
 finQ==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Alex Deucher <alexander.deucher@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

V2hlbiBnZnhvZmYgaXMgZW5hYmxlZCwgYWNjZXNzaW5nIGdmeCByZWdpc3RlcnMgdmlhIE1NSU8K
Y2FuIGxlYWQgdG8gYSBoYW5nLgoKdjI6IHJldHVybiBjYWNoZWQgcmVnaXN0ZXJzIHByb3Blcmx5
LgoKQnVnOiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTIwNTQ5
NwpTaWduZWQtb2ZmLWJ5OiBBbGV4IERldWNoZXIgPGFsZXhhbmRlci5kZXVjaGVyQGFtZC5jb20+
Ci0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbnYuYyAgICB8IDI3ICsrKysrKysrKysr
KysrKystLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zb2MxNS5jIHwgMzEg
KysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQsIDM2IGluc2Vy
dGlvbnMoKyksIDIyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L252LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9udi5jCmluZGV4IGFm
NjhmOTgxNWYyOC4uNzI4M2Q2MTk4Yjg5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9udi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L252LmMKQEAgLTIw
MSwxNyArMjAxLDI1IEBAIHN0YXRpYyB1aW50MzJfdCBudl9yZWFkX2luZGV4ZWRfcmVnaXN0ZXIo
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHUzMiBzZV9udW0sCiAJcmV0dXJuIHZhbDsKIH0K
IAotc3RhdGljIHVpbnQzMl90IG52X2dldF9yZWdpc3Rlcl92YWx1ZShzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiwKK3N0YXRpYyBpbnQgbnZfZ2V0X3JlZ2lzdGVyX3ZhbHVlKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LAogCQkJCSAgICAgIGJvb2wgaW5kZXhlZCwgdTMyIHNlX251bSwKLQkJ
CQkgICAgICB1MzIgc2hfbnVtLCB1MzIgcmVnX29mZnNldCkKKwkJCQkgICAgICB1MzIgc2hfbnVt
LCB1MzIgcmVnX29mZnNldCwKKwkJCQkgICAgICB1MzIgKnZhbHVlKQogewogCWlmIChpbmRleGVk
KSB7Ci0JCXJldHVybiBudl9yZWFkX2luZGV4ZWRfcmVnaXN0ZXIoYWRldiwgc2VfbnVtLCBzaF9u
dW0sIHJlZ19vZmZzZXQpOworCQlpZiAoYWRldi0+cG0ucHBfZmVhdHVyZSAmIFBQX0dGWE9GRl9N
QVNLKQorCQkJcmV0dXJuIC1FSU5WQUw7CisJCSp2YWx1ZSA9IG52X3JlYWRfaW5kZXhlZF9yZWdp
c3RlcihhZGV2LCBzZV9udW0sIHNoX251bSwgcmVnX29mZnNldCk7CiAJfSBlbHNlIHsKLQkJaWYg
KHJlZ19vZmZzZXQgPT0gU09DMTVfUkVHX09GRlNFVChHQywgMCwgbW1HQl9BRERSX0NPTkZJRykp
Ci0JCQlyZXR1cm4gYWRldi0+Z2Z4LmNvbmZpZy5nYl9hZGRyX2NvbmZpZzsKLQkJcmV0dXJuIFJS
RUczMihyZWdfb2Zmc2V0KTsKKwkJaWYgKHJlZ19vZmZzZXQgPT0gU09DMTVfUkVHX09GRlNFVChH
QywgMCwgbW1HQl9BRERSX0NPTkZJRykpIHsKKwkJCSp2YWx1ZSA9IGFkZXYtPmdmeC5jb25maWcu
Z2JfYWRkcl9jb25maWc7CisJCX0gZWxzZSB7CisJCQlpZiAoYWRldi0+cG0ucHBfZmVhdHVyZSAm
IFBQX0dGWE9GRl9NQVNLKQorCQkJCXJldHVybiAtRUlOVkFMOworCQkJKnZhbHVlID0gUlJFRzMy
KHJlZ19vZmZzZXQpOworCQl9CiAJfQorCXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IG52X3Jl
YWRfcmVnaXN0ZXIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHUzMiBzZV9udW0sCkBAIC0y
MjcsMTAgKzIzNSw5IEBAIHN0YXRpYyBpbnQgbnZfcmVhZF9yZWdpc3RlcihzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiwgdTMyIHNlX251bSwKIAkJICAgIChhZGV2LT5yZWdfb2Zmc2V0W2VuLT5o
d2lwXVtlbi0+aW5zdF1bZW4tPnNlZ10gKyBlbi0+cmVnX29mZnNldCkpCiAJCQljb250aW51ZTsK
IAotCQkqdmFsdWUgPSBudl9nZXRfcmVnaXN0ZXJfdmFsdWUoYWRldiwKLQkJCQkJICAgICAgIG52
X2FsbG93ZWRfcmVhZF9yZWdpc3RlcnNbaV0uZ3JibV9pbmRleGVkLAotCQkJCQkgICAgICAgc2Vf
bnVtLCBzaF9udW0sIHJlZ19vZmZzZXQpOwotCQlyZXR1cm4gMDsKKwkJcmV0dXJuIG52X2dldF9y
ZWdpc3Rlcl92YWx1ZShhZGV2LAorCQkJCQkgICAgIG52X2FsbG93ZWRfcmVhZF9yZWdpc3RlcnNb
aV0uZ3JibV9pbmRleGVkLAorCQkJCQkgICAgIHNlX251bSwgc2hfbnVtLCByZWdfb2Zmc2V0LCB2
YWx1ZSk7CiAJfQogCXJldHVybiAtRUlOVkFMOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvc29jMTUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NvYzE1
LmMKaW5kZXggMzA1YWQzZWVjOTg3Li4yY2MxNmU5ZjM5ZmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L3NvYzE1LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvc29jMTUuYwpAQCAtMzYzLDE5ICszNjMsMjcgQEAgc3RhdGljIHVpbnQzMl90IHNvYzE1X3Jl
YWRfaW5kZXhlZF9yZWdpc3RlcihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdTMyIHNlX24K
IAlyZXR1cm4gdmFsOwogfQogCi1zdGF0aWMgdWludDMyX3Qgc29jMTVfZ2V0X3JlZ2lzdGVyX3Zh
bHVlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAorc3RhdGljIGludCBzb2MxNV9nZXRfcmVn
aXN0ZXJfdmFsdWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJCQkJCSBib29sIGluZGV4
ZWQsIHUzMiBzZV9udW0sCi0JCQkJCSB1MzIgc2hfbnVtLCB1MzIgcmVnX29mZnNldCkKKwkJCQkJ
IHUzMiBzaF9udW0sIHUzMiByZWdfb2Zmc2V0LAorCQkJCQkgdTMyICp2YWx1ZSkKIHsKIAlpZiAo
aW5kZXhlZCkgewotCQlyZXR1cm4gc29jMTVfcmVhZF9pbmRleGVkX3JlZ2lzdGVyKGFkZXYsIHNl
X251bSwgc2hfbnVtLCByZWdfb2Zmc2V0KTsKKwkJaWYgKGFkZXYtPnBtLnBwX2ZlYXR1cmUgJiBQ
UF9HRlhPRkZfTUFTSykKKwkJCXJldHVybiAtRUlOVkFMOworCSAgICAgICAgKnZhbHVlID0gc29j
MTVfcmVhZF9pbmRleGVkX3JlZ2lzdGVyKGFkZXYsIHNlX251bSwgc2hfbnVtLCByZWdfb2Zmc2V0
KTsKIAl9IGVsc2UgewotCQlpZiAocmVnX29mZnNldCA9PSBTT0MxNV9SRUdfT0ZGU0VUKEdDLCAw
LCBtbUdCX0FERFJfQ09ORklHKSkKLQkJCXJldHVybiBhZGV2LT5nZnguY29uZmlnLmdiX2FkZHJf
Y29uZmlnOwotCQllbHNlIGlmIChyZWdfb2Zmc2V0ID09IFNPQzE1X1JFR19PRkZTRVQoR0MsIDAs
IG1tREJfREVCVUcyKSkKLQkJCXJldHVybiBhZGV2LT5nZnguY29uZmlnLmRiX2RlYnVnMjsKLQkJ
cmV0dXJuIFJSRUczMihyZWdfb2Zmc2V0KTsKKwkJaWYgKHJlZ19vZmZzZXQgPT0gU09DMTVfUkVH
X09GRlNFVChHQywgMCwgbW1HQl9BRERSX0NPTkZJRykpIHsKKwkJCSp2YWx1ZSA9IGFkZXYtPmdm
eC5jb25maWcuZ2JfYWRkcl9jb25maWc7CisJCX0gZWxzZSBpZiAocmVnX29mZnNldCA9PSBTT0Mx
NV9SRUdfT0ZGU0VUKEdDLCAwLCBtbURCX0RFQlVHMikpIHsKKwkJCSp2YWx1ZSA9IGFkZXYtPmdm
eC5jb25maWcuZGJfZGVidWcyOworCQl9IGVsc2UgeworCQkJaWYgKGFkZXYtPnBtLnBwX2ZlYXR1
cmUgJiBQUF9HRlhPRkZfTUFTSykKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCSp2YWx1ZSA9IFJS
RUczMihyZWdfb2Zmc2V0KTsKKwkJfQogCX0KKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGludCBz
b2MxNV9yZWFkX3JlZ2lzdGVyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1MzIgc2VfbnVt
LApAQCAtMzkxLDEwICszOTksOSBAQCBzdGF0aWMgaW50IHNvYzE1X3JlYWRfcmVnaXN0ZXIoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHUzMiBzZV9udW0sCiAJCQkJCSsgZW4tPnJlZ19vZmZz
ZXQpKQogCQkJY29udGludWU7CiAKLQkJKnZhbHVlID0gc29jMTVfZ2V0X3JlZ2lzdGVyX3ZhbHVl
KGFkZXYsCi0JCQkJCQkgIHNvYzE1X2FsbG93ZWRfcmVhZF9yZWdpc3RlcnNbaV0uZ3JibV9pbmRl
eGVkLAotCQkJCQkJICBzZV9udW0sIHNoX251bSwgcmVnX29mZnNldCk7Ci0JCXJldHVybiAwOwor
CQlyZXR1cm4gc29jMTVfZ2V0X3JlZ2lzdGVyX3ZhbHVlKGFkZXYsCisJCQkJCQlzb2MxNV9hbGxv
d2VkX3JlYWRfcmVnaXN0ZXJzW2ldLmdyYm1faW5kZXhlZCwKKwkJCQkJCXNlX251bSwgc2hfbnVt
LCByZWdfb2Zmc2V0LCB2YWx1ZSk7CiAJfQogCXJldHVybiAtRUlOVkFMOwogfQotLSAKMi4yMy4w
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwphbWQtZ2Z4
IG1haWxpbmcgbGlzdAphbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2FtZC1nZng=
