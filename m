Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A7FE3DE272
	for <lists+amd-gfx@lfdr.de>; Mon, 21 Oct 2019 05:01:56 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1D3C38991C;
	Mon, 21 Oct 2019 03:01:55 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM01-SN1-obe.outbound.protection.outlook.com
 (mail-eopbgr820074.outbound.protection.outlook.com [40.107.82.74])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C7B2B8991C
 for <amd-gfx@lists.freedesktop.org>; Mon, 21 Oct 2019 03:01:52 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Erx2B3fwVT5dLeeCpbbNFAMBFdgfoW//Gg5h/hcBtiDPDaMwxOSi2jFVr7yBpSZM1lvqZWOwS8nkHagPQ+60DHft5m/Uy7Ewr/saQ2EFjhW2VdqDJGHRqQaFkE2/FE8HrDaonxA/WNhsuYtsH4C2HSmTFvEsU3nGccKlqzljccYV/1azQPjVT1tH8FULWial5rx7cks1xh/w45iDlL7LX83NntzkLr6nOPW9FnjZI2oAT4r3DQJhFscd2+1GsHlvGbqsgxEGuu6Clj1AGO8ZQy3kU8ls8uwqua7t5tTD++Ykr9GZ5e1kKgOxGgvfD22HqPoHVT9HhGvJGUG3tIKllw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CUB4esqvepen/HnK9oIZwQ07w9wJ2ZXz6CzZ5kqFkVc=;
 b=AWd7niXYQ4/kEnQyZNG37m0hAJKVopklIkdKZFfWDrcywGbMzJFLzHHJIidVZo0uj8uVa75c6omW1XsvhojvFE5qut6UkwjXrW6JpDoABmg/XowktLyL6HLRUeM94r04Ec4g77Hxy0EceBproGWkwQmrknA3D3E4Jb+KkUNrh5hLPmolKEEYOPmQtSioGxn3SApuWc9KQ8NhQmHodQ3/Z4B6OuHzLgwqUmXjamcpucr2PGcsfEGyP+xe1GteR1txm7ghUeWGWp2cpTy7vwQ9pR8MOl0gDBR+SZ9qarHjfHthAGi4W//Q2YHHzGg9t6Iw4DyTmCDOmc4KtG3NcJGomA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from MN2PR12MB3167.namprd12.prod.outlook.com (20.179.80.95) by
 MN2PR12MB3183.namprd12.prod.outlook.com (20.179.82.85) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2347.16; Mon, 21 Oct 2019 03:01:50 +0000
Received: from MN2PR12MB3167.namprd12.prod.outlook.com
 ([fe80::cd2d:baa5:ebc4:e00e]) by MN2PR12MB3167.namprd12.prod.outlook.com
 ([fe80::cd2d:baa5:ebc4:e00e%4]) with mapi id 15.20.2347.028; Mon, 21 Oct 2019
 03:01:50 +0000
From: "Li, Dennis" <Dennis.Li@amd.com>
To: "Grodzovsky, Andrey" <Andrey.Grodzovsky@amd.com>,
 "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Subject: RE: [PATCH 2/4] drm/amd/powerplay: Add EEPROM I2C read/write support
 to Arcturus.
Thread-Topic: [PATCH 2/4] drm/amd/powerplay: Add EEPROM I2C read/write support
 to Arcturus.
Thread-Index: AQHVhfWb0LEn91tZnkC6En0xwOzlM6dkZ5uw
Date: Mon, 21 Oct 2019 03:01:50 +0000
Message-ID: <MN2PR12MB3167E8AFBF75FA273FC9E9B5ED690@MN2PR12MB3167.namprd12.prod.outlook.com>
References: <1571431711-30149-1-git-send-email-andrey.grodzovsky@amd.com>
 <1571431711-30149-3-git-send-email-andrey.grodzovsky@amd.com>
In-Reply-To: <1571431711-30149-3-git-send-email-andrey.grodzovsky@amd.com>
Accept-Language: zh-CN, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 61425434-2a9c-434a-bb2f-08d755d3051d
x-ms-office365-filtering-ht: Tenant
x-ms-traffictypediagnostic: MN2PR12MB3183:
x-ms-exchange-purlcount: 1
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <MN2PR12MB3183DC0ACC27980258120D0EED690@MN2PR12MB3183.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:4303;
x-forefront-prvs: 0197AFBD92
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(136003)(39860400002)(366004)(376002)(396003)(346002)(189003)(199004)(13464003)(53546011)(229853002)(966005)(478600001)(2501003)(4326008)(5660300002)(26005)(6506007)(52536014)(102836004)(7696005)(76176011)(186003)(66066001)(2906002)(25786009)(8936002)(74316002)(14454004)(6306002)(7736002)(305945005)(9686003)(76116006)(66946007)(66476007)(66556008)(64756008)(66446008)(110136005)(54906003)(81166006)(81156014)(8676002)(256004)(14444005)(6246003)(86362001)(316002)(11346002)(476003)(99286004)(446003)(6116002)(486006)(33656002)(55016002)(3846002)(6436002)(71200400001)(71190400001);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB3183;
 H:MN2PR12MB3167.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; MX:1; A:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: 33Sxofq2WQ77XHqz9BxHDyjUlUVTiDGpXGxSy3hnchy7RkQJhDvDurs+Y7jl5KPEE0Wdse6hJ07lxSK84IpZFY2JZ7GdLRCr0m1ukGltgMPn2qWdEXcWGGv/MqyolfZ+VrqgF/csWB2ltmi3PVtElkqaAKHl1KMWEoobUy63w60aZUENAPHyo1LrCfRdvkv4qM2YUQE88xDIejqq1yftSYlVhzQsulcAv6IMWawbehoMFZGdKLkd2o0VfdBq7Zyzj4PZW8Ib+pYVbusOZKhHZcNzQBjojvt8kHX2umoGDJkiACHOO1+Ieql2bnuvIdmvEsX15F4He0MnzPSAvmKiHes9Q8MovA14uC6tROqyTimFPvNa3lTIkfQIr0fq5GNchZwhGUZ2ujlb2AaNA6nCLk8fvhjXd3amcmibo6YmcIcdEW71qslOSZ1eWAS8CTQIKK/ydkEKS0HWu29bUaAntg==
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 61425434-2a9c-434a-bb2f-08d755d3051d
X-MS-Exchange-CrossTenant-originalarrivaltime: 21 Oct 2019 03:01:50.5910 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: i09MrGQJQrEkLvY6srjMHjcNaODN3Wl7VlVOLb+azECO4lYD23KhiNw2+ucU1n8L
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3183
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CUB4esqvepen/HnK9oIZwQ07w9wJ2ZXz6CzZ5kqFkVc=;
 b=NYI3AJ6FJa4PMv57C9Cv65hp+wPuH0bzOkhJfTElE7YDEb1e3sLM6p1GtcFoaPtxR9oRdCJL7fjGiutPRc4d0C+w5hmJDaH8znQaY4sg5jEKLEmmDD6EBLTwgVgH59dDBDvOf6Vghp9dgaf7MkPCZ93h501bUKg0GhayMS6Q7jo=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Dennis.Li@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Grodzovsky, Andrey" <Andrey.Grodzovsky@amd.com>, "Chen,
 Guchun" <Guchun.Chen@amd.com>, "Zhou1, Tao" <Tao.Zhou1@amd.com>,
 "noreply-confluence@amd.com" <noreply-confluence@amd.com>, "Deucher, 
 Alexander" <Alexander.Deucher@amd.com>, "Quan, Evan" <Evan.Quan@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VG8gbWFrZSB0aGUgZnVuY3Rpb24gYmVoYXZpb3IgbW9yZSBjbGVhciwgSXQncyBiZXR0ZXIgdG8g
Y2hhbmdlIHRoZSBmdW5jdGlvbiBkZWNsYXJhdGlvbiBmcm9tIA0KDQorIHN0YXRpYyB2b2lkIGFy
Y3R1cnVzX2ZpbGxfZWVwcm9tX2kyY19yZXEoU3dJMmNSZXF1ZXN0X3QgICpyZXEsIGJvb2wgd3Jp
dGUsDQorCQkJCSAgdWludDhfdCBhZGRyZXNzLCB1aW50MzJfdCBudW1ieXRlcywNCisJCQkJICB1
aW50OF90ICpkYXRhKQ0KDQp0bw0KDQorc3RhdGljIHZvaWQgYXJjdHVydXNfZmlsbF9lZXByb21f
aTJjX3JlcShTd0kyY1JlcXVlc3RfdCAgKnJlcSwgYm9vbCB3cml0ZV9vcl9yZWFkLA0KKwkJCQkg
IHVpbnQ4X3QgYWRkcmVzcywgdWludDMyX3QgbnVtYnl0ZXMsDQorCQkJCSAgdWludDhfdCAqZGF0
YSkNCg0KQmVzdCBSZWdhcmRzDQpEZW5uaXMgTGkNCi0tLS0tT3JpZ2luYWwgTWVzc2FnZS0tLS0t
DQpGcm9tOiBhbWQtZ2Z4IDxhbWQtZ2Z4LWJvdW5jZXNAbGlzdHMuZnJlZWRlc2t0b3Aub3JnPiBP
biBCZWhhbGYgT2YgQW5kcmV5IEdyb2R6b3Zza3kNClNlbnQ6IFNhdHVyZGF5LCBPY3RvYmVyIDE5
LCAyMDE5IDQ6NDggQU0NClRvOiBhbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZw0KQ2M6IEdy
b2R6b3Zza3ksIEFuZHJleSA8QW5kcmV5Lkdyb2R6b3Zza3lAYW1kLmNvbT47IENoZW4sIEd1Y2h1
biA8R3VjaHVuLkNoZW5AYW1kLmNvbT47IFpob3UxLCBUYW8gPFRhby5aaG91MUBhbWQuY29tPjsg
bm9yZXBseS1jb25mbHVlbmNlQGFtZC5jb207IERldWNoZXIsIEFsZXhhbmRlciA8QWxleGFuZGVy
LkRldWNoZXJAYW1kLmNvbT47IFF1YW4sIEV2YW4gPEV2YW4uUXVhbkBhbWQuY29tPg0KU3ViamVj
dDogW1BBVENIIDIvNF0gZHJtL2FtZC9wb3dlcnBsYXk6IEFkZCBFRVBST00gSTJDIHJlYWQvd3Jp
dGUgc3VwcG9ydCB0byBBcmN0dXJ1cy4NCg0KVGhlIGNvbW11bmljYXRpb24gaXMgZG9uZSB0aHJv
dWdoIFNNVSB0YWJsZSBhbmQgaGVuY2UgdGhlIGNvZGUgaXMgaW4gcG93ZXJwbGF5Lg0KDQpTaWdu
ZWQtb2ZmLWJ5OiBBbmRyZXkgR3JvZHpvdnNreSA8YW5kcmV5Lmdyb2R6b3Zza3lAYW1kLmNvbT4N
Ci0tLQ0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FyY3R1cnVzX3BwdC5jIHwgMjI5
ICsrKysrKysrKysrKysrKysrKysrKysrKysrKw0KIDEgZmlsZSBjaGFuZ2VkLCAyMjkgaW5zZXJ0
aW9ucygrKQ0KDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYXJj
dHVydXNfcHB0LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hcmN0dXJ1c19wcHQu
Yw0KaW5kZXggOTBkODcxYS4uNTNkMDhkZTUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL3Bvd2VycGxheS9hcmN0dXJ1c19wcHQuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9w
b3dlcnBsYXkvYXJjdHVydXNfcHB0LmMNCkBAIC0zNiw2ICszNiwxMSBAQA0KICNpbmNsdWRlICJz
bXVfdjExXzBfcHB0YWJsZS5oIg0KICNpbmNsdWRlICJhcmN0dXJ1c19wcHNtYy5oIg0KICNpbmNs
dWRlICJuYmlvL25iaW9fN180X3NoX21hc2suaCINCisjaW5jbHVkZSA8bGludXgvaTJjLmg+DQor
I2luY2x1ZGUgPGxpbnV4L3BjaS5oPg0KKyNpbmNsdWRlICJhbWRncHVfcmFzLmgiDQorDQorI2Rl
ZmluZSB0b19hbWRncHVfZGV2aWNlKHgpIChjb250YWluZXJfb2YoeCwgc3RydWN0IGFtZGdwdV9y
YXMsIA0KK2VlcHJvbV9jb250cm9sLmVlcHJvbV9hY2Nlc3NvcikpLT5hZGV2DQogDQogI2RlZmlu
ZSBDVEZfT0ZGU0VUX0VER0UJCQk1DQogI2RlZmluZSBDVEZfT0ZGU0VUX0hPVFNQT1QJCTUNCkBA
IC0xNzEsNiArMTc2LDcgQEAgc3RhdGljIHN0cnVjdCBzbXVfMTFfMF9jbW4yYWlzY19tYXBwaW5n
IGFyY3R1cnVzX3RhYmxlX21hcFtTTVVfVEFCTEVfQ09VTlRdID0gew0KIAlUQUJfTUFQKFNNVV9N
RVRSSUNTKSwNCiAJVEFCX01BUChEUklWRVJfU01VX0NPTkZJRyksDQogCVRBQl9NQVAoT1ZFUkRS
SVZFKSwNCisJVEFCX01BUChJMkNfQ09NTUFORFMpLA0KIH07DQogDQogc3RhdGljIHN0cnVjdCBz
bXVfMTFfMF9jbW4yYWlzY19tYXBwaW5nIGFyY3R1cnVzX3B3cl9zcmNfbWFwW1NNVV9QT1dFUl9T
T1VSQ0VfQ09VTlRdID0geyBAQCAtMjkzLDYgKzI5OSw5IEBAIHN0YXRpYyBpbnQgYXJjdHVydXNf
dGFibGVzX2luaXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHN0cnVjdCBzbXVfdGFibGUgKnRh
YmxlDQogCVNNVV9UQUJMRV9JTklUKHRhYmxlcywgU01VX1RBQkxFX1NNVV9NRVRSSUNTLCBzaXpl
b2YoU211TWV0cmljc190KSwNCiAJCSAgICAgICBQQUdFX1NJWkUsIEFNREdQVV9HRU1fRE9NQUlO
X1ZSQU0pOw0KIA0KKwlTTVVfVEFCTEVfSU5JVCh0YWJsZXMsIFNNVV9UQUJMRV9JMkNfQ09NTUFO
RFMsIHNpemVvZihTd0kyY1JlcXVlc3RfdCksDQorCQkJICAgICAgIFBBR0VfU0laRSwgQU1ER1BV
X0dFTV9ET01BSU5fVlJBTSk7DQorDQogCXNtdV90YWJsZS0+bWV0cmljc190YWJsZSA9IGt6YWxs
b2Moc2l6ZW9mKFNtdU1ldHJpY3NfdCksIEdGUF9LRVJORUwpOw0KIAlpZiAoIXNtdV90YWJsZS0+
bWV0cmljc190YWJsZSkNCiAJCXJldHVybiAtRU5PTUVNOw0KQEAgLTE5MjcsNiArMTkzNiwyMjQg
QEAgc3RhdGljIGludCBhcmN0dXJ1c19kcG1fc2V0X3V2ZF9lbmFibGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIGJvb2wgZW5hYmxlKQ0KIAlyZXR1cm4gcmV0Ow0KIH0NCiANCisNCitzdGF0aWMg
dm9pZCBhcmN0dXJ1c19maWxsX2VlcHJvbV9pMmNfcmVxKFN3STJjUmVxdWVzdF90ICAqcmVxLCBi
b29sIHdyaXRlLA0KKwkJCQkgIHVpbnQ4X3QgYWRkcmVzcywgdWludDMyX3QgbnVtYnl0ZXMsDQor
CQkJCSAgdWludDhfdCAqZGF0YSkNCit7DQorCWludCBpOw0KKw0KKwlCVUdfT04obnVtYnl0ZXMg
PiBNQVhfU1dfSTJDX0NPTU1BTkRTKTsNCisNCisJcmVxLT5JMkNjb250cm9sbGVyUG9ydCA9IDA7
DQorCXJlcS0+STJDU3BlZWQgPSAyOw0KKwlyZXEtPlNsYXZlQWRkcmVzcyA9IGFkZHJlc3M7DQor
CXJlcS0+TnVtQ21kcyA9IG51bWJ5dGVzOw0KKw0KKwlmb3IgKGkgPSAwOyBpIDwgbnVtYnl0ZXM7
IGkrKykgew0KKwkJU3dJMmNDbWRfdCAqY21kID0gICZyZXEtPlN3STJjQ21kc1tpXTsNCisNCisJ
CS8qIEZpcnN0IDIgYnl0ZXMgYXJlIGFsd2F5cyB3cml0ZSBmb3IgbG93ZXIgMmIgRUVQUk9NIGFk
ZHJlc3MgKi8NCisJCWlmIChpIDwgMikNCisJCQljbWQtPkNtZCA9IDE7DQorCQllbHNlDQorCQkJ
Y21kLT5DbWQgPSB3cml0ZTsNCisNCisNCisJCS8qIEFkZCBSRVNUQVJUIGZvciByZWFkICBhZnRl
ciBhZGRyZXNzIGZpbGxlZCAqLw0KKwkJY21kLT5DbWRDb25maWcgfD0gKGkgPT0gMiAmJiAhd3Jp
dGUpID8gQ01EQ09ORklHX1JFU1RBUlRfTUFTSyA6IDA7DQorDQorCQkvKiBBZGQgU1RPUCBpbiB0
aGUgZW5kICovDQorCQljbWQtPkNtZENvbmZpZyB8PSAoaSA9PSAobnVtYnl0ZXMgLSAxKSkgPyBD
TURDT05GSUdfU1RPUF9NQVNLIDogMDsNCisNCisJCS8qIEZpbGwgd2l0aCBkYXRhIHJlZ2FyZGxl
c3MgaWYgcmVhZCBvciB3cml0ZSB0byBzaW1wbGlmeSBjb2RlICovDQorCQljbWQtPlJlZ2lzdGVy
QWRkciA9IGRhdGFbaV07DQorCX0NCit9DQorDQorc3RhdGljIGludCBhcmN0dXJ1c19pMmNfZWVw
cm9tX3JlYWRfZGF0YShzdHJ1Y3QgaTJjX2FkYXB0ZXIgKmNvbnRyb2wsDQorCQkJCQkgICAgICAg
dWludDhfdCBhZGRyZXNzLA0KKwkJCQkJICAgICAgIHVpbnQ4X3QgKmRhdGEsDQorCQkJCQkgICAg
ICAgdWludDMyX3QgbnVtYnl0ZXMpDQorew0KKwl1aW50MzJfdCAgaSwgcmV0ID0gMDsNCisJU3dJ
MmNSZXF1ZXN0X3QgcmVxOw0KKwlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IHRvX2FtZGdw
dV9kZXZpY2UoY29udHJvbCk7DQorCXN0cnVjdCBzbXVfdGFibGVfY29udGV4dCAqc211X3RhYmxl
ID0gJmFkZXYtPnNtdS5zbXVfdGFibGU7DQorCXN0cnVjdCBzbXVfdGFibGUgKnRhYmxlID0gJnNt
dV90YWJsZS0+dGFibGVzW1NNVV9UQUJMRV9JMkNfQ09NTUFORFNdOw0KKw0KKwltZW1zZXQoJnJl
cSwgMCwgc2l6ZW9mKHJlcSkpOw0KKwlhcmN0dXJ1c19maWxsX2VlcHJvbV9pMmNfcmVxKCZyZXEs
IGZhbHNlLCBhZGRyZXNzLCBudW1ieXRlcywgZGF0YSk7DQorDQorCW11dGV4X2xvY2soJmFkZXYt
PnNtdS5tdXRleCk7DQorCS8qIE5vdyByZWFkIGRhdGEgc3RhcnRpbmcgd2l0aCB0aGF0IGFkZHJl
c3MgKi8NCisJcmV0ID0gc211X3VwZGF0ZV90YWJsZSgmYWRldi0+c211LCBTTVVfVEFCTEVfSTJD
X0NPTU1BTkRTLCAwLCAmcmVxLA0KKwkJCQkJdHJ1ZSk7DQorCW11dGV4X3VubG9jaygmYWRldi0+
c211Lm11dGV4KTsNCisNCisJaWYgKCFyZXQpIHsNCisJCVN3STJjUmVxdWVzdF90ICpyZXMgPSAo
U3dJMmNSZXF1ZXN0X3QgKil0YWJsZS0+Y3B1X2FkZHI7DQorDQorCQkvKiBBc3N1bWUgU01VICBm
aWxscyByZXMuU3dJMmNDbWRzW2ldLkRhdGEgd2l0aCByZWFkIGJ5dGVzICovDQorCQlmb3IgKGkg
PSAwOyBpIDwgbnVtYnl0ZXM7IGkrKykNCisJCQlkYXRhW2ldID0gcmVzLT5Td0kyY0NtZHNbaV0u
RGF0YTsNCisNCisJCXByX2RlYnVnKCJhcmN0dXJ1c19pMmNfZWVwcm9tX3JlYWRfZGF0YSwgYWRk
cmVzcyA9ICV4LCBieXRlcyA9ICVkLCBkYXRhIDoiLA0KKwkJCQkgICh1aW50MTZfdClhZGRyZXNz
LCBudW1ieXRlcyk7DQorDQorCQlwcmludF9oZXhfZHVtcChLRVJOX0RFQlVHLCAiZGF0YTogIiwg
RFVNUF9QUkVGSVhfTk9ORSwNCisJCQkgICAgICAgOCwgMSwgZGF0YSwgbnVtYnl0ZXMsIGZhbHNl
KTsNCisJfSBlbHNlDQorCQlwcl9lcnIoImFyY3R1cnVzX2kyY19lZXByb21fcmVhZF9kYXRhIC0g
ZXJyb3Igb2NjdXJyZWQgOiV4IiwgcmV0KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQorc3Rh
dGljIGludCBhcmN0dXJ1c19pMmNfZWVwcm9tX3dyaXRlX2RhdGEoc3RydWN0IGkyY19hZGFwdGVy
ICpjb250cm9sLA0KKwkJCQkJCXVpbnQ4X3QgYWRkcmVzcywNCisJCQkJCQl1aW50OF90ICpkYXRh
LA0KKwkJCQkJCXVpbnQzMl90IG51bWJ5dGVzKQ0KK3sNCisJdWludDMyX3QgcmV0Ow0KKwlTd0ky
Y1JlcXVlc3RfdCByZXE7DQorCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gdG9fYW1kZ3B1
X2RldmljZShjb250cm9sKTsNCisNCisJbWVtc2V0KCZyZXEsIDAsIHNpemVvZihyZXEpKTsNCisJ
YXJjdHVydXNfZmlsbF9lZXByb21faTJjX3JlcSgmcmVxLCB0cnVlLCBhZGRyZXNzLCBudW1ieXRl
cywgZGF0YSk7DQorDQorCW11dGV4X2xvY2soJmFkZXYtPnNtdS5tdXRleCk7DQorCXJldCA9IHNt
dV91cGRhdGVfdGFibGUoJmFkZXYtPnNtdSwgU01VX1RBQkxFX0kyQ19DT01NQU5EUywgMCwgJnJl
cSwgdHJ1ZSk7DQorCW11dGV4X3VubG9jaygmYWRldi0+c211Lm11dGV4KTsNCisNCisJaWYgKCFy
ZXQpIHsNCisJCXByX2RlYnVnKCJhcmN0dXJ1c19pMmNfd3JpdGUoKSwgYWRkcmVzcyA9ICV4LCBi
eXRlcyA9ICVkICwgZGF0YTogIiwNCisJCQkJCSAodWludDE2X3QpYWRkcmVzcywgbnVtYnl0ZXMp
Ow0KKw0KKwkJcHJpbnRfaGV4X2R1bXAoS0VSTl9ERUJVRywgImRhdGE6ICIsIERVTVBfUFJFRklY
X05PTkUsDQorCQkJICAgICAgIDgsIDEsIGRhdGEsIG51bWJ5dGVzLCBmYWxzZSk7DQorCQkvKg0K
KwkJICogQWNjb3JkaW5nIHRvIEVFUFJPTSBzcGVjIHRoZXJlIGlzIGEgTUFYIG9mIDEwIG1zIHJl
cXVpcmVkIGZvcg0KKwkJICogRUVQUk9NIHRvIGZsdXNoIGludGVybmFsIFJYIGJ1ZmZlciBhZnRl
ciBTVE9QIHdhcyBpc3N1ZWQgYXQgdGhlDQorCQkgKiBlbmQgb2Ygd3JpdGUgdHJhbnNhY3Rpb24u
IER1cmluZyB0aGlzIHRpbWUgdGhlIEVFUFJPTSB3aWxsIG5vdCBiZQ0KKwkJICogcmVzcG9uc2l2
ZSB0byBhbnkgbW9yZSBjb21tYW5kcyAtIHNvIHdhaXQgYSBiaXQgbW9yZS4NCisJCSAqLw0KKwkJ
bXNsZWVwKDEwKTsNCisNCisJfSBlbHNlDQorCQlwcl9lcnIoImFyY3R1cnVzX2kyY193cml0ZS0g
ZXJyb3Igb2NjdXJyZWQgOiV4IiwgcmV0KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQorc3Rh
dGljIGludCBhcmN0dXJ1c19pMmNfZWVwcm9tX2kyY194ZmVyKHN0cnVjdCBpMmNfYWRhcHRlciAq
aTJjX2FkYXAsDQorCQkJICAgICAgc3RydWN0IGkyY19tc2cgKm1zZ3MsIGludCBudW0pIHsNCisJ
dWludDMyX3QgIGksIGosIHJldCwgZGF0YV9zaXplLCBkYXRhX2NodW5rX3NpemUsIG5leHRfZWVw
cm9tX2FkZHIgPSAwOw0KKwl1aW50OF90ICpkYXRhX3B0ciwgZGF0YV9jaHVua1tNQVhfU1dfSTJD
X0NPTU1BTkRTXSA9IHsgMCB9Ow0KKw0KKwlmb3IgKGkgPSAwOyBpIDwgbnVtOyBpKyspIHsNCisJ
CS8qDQorCQkgKiBTTVUgaW50ZXJmYWNlIGFsbG93cyBhdCBtb3N0IE1BWF9TV19JMkNfQ09NTUFO
RFMgYnl0ZXMgb2YgZGF0YSBhdA0KKwkJICogb25jZSBhbmQgaGVuY2UgdGhlIGRhdGEgbmVlZHMg
dG8gYmUgc3BsaWNlZCBpbnRvIGNodW5rcyBhbmQgc2VudCBlYWNoDQorCQkgKiBjaHVuayBzZXBh
cmF0ZWx5DQorCQkgKi8NCisJCWRhdGFfc2l6ZSA9IG1zZ3NbaV0ubGVuIC0gMjsNCisJCWRhdGFf
Y2h1bmtfc2l6ZSA9IE1BWF9TV19JMkNfQ09NTUFORFMgLSAyOw0KKwkJbmV4dF9lZXByb21fYWRk
ciA9IChtc2dzW2ldLmJ1ZlswXSA8PCA4ICYgMHhmZjAwKSB8IChtc2dzW2ldLmJ1ZlsxXSAmIDB4
ZmYpOw0KKwkJZGF0YV9wdHIgPSBtc2dzW2ldLmJ1ZiArIDI7DQorDQorCQlmb3IgKGogPSAwOyBq
IDwgZGF0YV9zaXplIC8gZGF0YV9jaHVua19zaXplOyBqKyspIHsNCisJCQkvKiBJbnNlcnQgdGhl
IEVFUFJPTSBkZXN0IGFkZGVzcywgYml0cyAwLTE1ICovDQorCQkJZGF0YV9jaHVua1swXSA9ICgo
bmV4dF9lZXByb21fYWRkciA+PiA4KSAmIDB4ZmYpOw0KKwkJCWRhdGFfY2h1bmtbMV0gPSAobmV4
dF9lZXByb21fYWRkciAmIDB4ZmYpOw0KKw0KKwkJCWlmIChtc2dzW2ldLmZsYWdzICYgSTJDX01f
UkQpIHsNCisJCQkJcmV0ID0gYXJjdHVydXNfaTJjX2VlcHJvbV9yZWFkX2RhdGEoaTJjX2FkYXAs
DQorCQkJCQkJCQkodWludDhfdCltc2dzW2ldLmFkZHIsDQorCQkJCQkJCQlkYXRhX2NodW5rLCBN
QVhfU1dfSTJDX0NPTU1BTkRTKTsNCisNCisJCQkJbWVtY3B5KGRhdGFfcHRyLCBkYXRhX2NodW5r
ICsgMiwgZGF0YV9jaHVua19zaXplKTsNCisJCQl9IGVsc2Ugew0KKw0KKwkJCQltZW1jcHkoZGF0
YV9jaHVuayArIDIsIGRhdGFfcHRyLCBkYXRhX2NodW5rX3NpemUpOw0KKw0KKwkJCQlyZXQgPSBh
cmN0dXJ1c19pMmNfZWVwcm9tX3dyaXRlX2RhdGEoaTJjX2FkYXAsDQorCQkJCQkJCQkgKHVpbnQ4
X3QpbXNnc1tpXS5hZGRyLA0KKwkJCQkJCQkJIGRhdGFfY2h1bmssIE1BWF9TV19JMkNfQ09NTUFO
RFMpOw0KKwkJCX0NCisNCisJCQlpZiAocmV0KSB7DQorCQkJCW51bSA9IC1FSU87DQorCQkJCWdv
dG8gZmFpbDsNCisJCQl9DQorDQorCQkJbmV4dF9lZXByb21fYWRkciArPSBkYXRhX2NodW5rX3Np
emU7DQorCQkJZGF0YV9wdHIgKz0gZGF0YV9jaHVua19zaXplOw0KKwkJfQ0KKw0KKwkJaWYgKGRh
dGFfc2l6ZSAlIGRhdGFfY2h1bmtfc2l6ZSkgew0KKwkJCWRhdGFfY2h1bmtbMF0gPSAoKG5leHRf
ZWVwcm9tX2FkZHIgPj4gOCkgJiAweGZmKTsNCisJCQlkYXRhX2NodW5rWzFdID0gKG5leHRfZWVw
cm9tX2FkZHIgJiAweGZmKTsNCisNCisJCQlpZiAobXNnc1tpXS5mbGFncyAmIEkyQ19NX1JEKSB7
DQorCQkJCXJldCA9IGFyY3R1cnVzX2kyY19lZXByb21fcmVhZF9kYXRhKGkyY19hZGFwLA0KKwkJ
CQkJCQkJKHVpbnQ4X3QpbXNnc1tpXS5hZGRyLA0KKwkJCQkJCQkJZGF0YV9jaHVuaywgKGRhdGFf
c2l6ZSAlIGRhdGFfY2h1bmtfc2l6ZSkgKyAyKTsNCisNCisJCQkJbWVtY3B5KGRhdGFfcHRyLCBk
YXRhX2NodW5rICsgMiwgZGF0YV9zaXplICUgZGF0YV9jaHVua19zaXplKTsNCisJCQl9IGVsc2Ug
ew0KKwkJCQltZW1jcHkoZGF0YV9jaHVuayArIDIsIGRhdGFfcHRyLCBkYXRhX3NpemUgJSBkYXRh
X2NodW5rX3NpemUpOw0KKw0KKwkJCQlyZXQgPSBhcmN0dXJ1c19pMmNfZWVwcm9tX3dyaXRlX2Rh
dGEoaTJjX2FkYXAsDQorCQkJCQkJCQkgKHVpbnQ4X3QpbXNnc1tpXS5hZGRyLA0KKwkJCQkJCQkJ
IGRhdGFfY2h1bmssIChkYXRhX3NpemUgJSBkYXRhX2NodW5rX3NpemUpICsgMik7DQorCQkJfQ0K
Kw0KKwkJCWlmIChyZXQpIHsNCisJCQkJbnVtID0gLUVJTzsNCisJCQkJZ290byBmYWlsOw0KKwkJ
CX0NCisJCX0NCisJfQ0KKw0KK2ZhaWw6DQorCXJldHVybiBudW07DQorfQ0KKw0KK3N0YXRpYyB1
MzIgYXJjdHVydXNfaTJjX2VlcHJvbV9pMmNfZnVuYyhzdHJ1Y3QgaTJjX2FkYXB0ZXIgKmFkYXAp
IHsNCisJcmV0dXJuIEkyQ19GVU5DX0kyQyB8IEkyQ19GVU5DX1NNQlVTX0VNVUw7IH0NCisNCisN
CitzdGF0aWMgY29uc3Qgc3RydWN0IGkyY19hbGdvcml0aG0gYXJjdHVydXNfaTJjX2VlcHJvbV9p
MmNfYWxnbyA9IHsNCisJLm1hc3Rlcl94ZmVyID0gYXJjdHVydXNfaTJjX2VlcHJvbV9pMmNfeGZl
ciwNCisJLmZ1bmN0aW9uYWxpdHkgPSBhcmN0dXJ1c19pMmNfZWVwcm9tX2kyY19mdW5jLA0KK307
DQorDQoraW50IGFyY3R1cnVzX2kyY19lZXByb21fY29udHJvbF9pbml0KHN0cnVjdCBpMmNfYWRh
cHRlciAqY29udHJvbCkNCit7DQorCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gdG9fYW1k
Z3B1X2RldmljZShjb250cm9sKTsNCisJaW50IHJlczsNCisNCisJY29udHJvbC0+b3duZXIgPSBU
SElTX01PRFVMRTsNCisJY29udHJvbC0+Y2xhc3MgPSBJMkNfQ0xBU1NfU1BEOw0KKwljb250cm9s
LT5kZXYucGFyZW50ID0gJmFkZXYtPnBkZXYtPmRldjsNCisJY29udHJvbC0+YWxnbyA9ICZhcmN0
dXJ1c19pMmNfZWVwcm9tX2kyY19hbGdvOw0KKwlzbnByaW50Zihjb250cm9sLT5uYW1lLCBzaXpl
b2YoY29udHJvbC0+bmFtZSksICJSQVMgRUVQUk9NIik7DQorDQorCXJlcyA9IGkyY19hZGRfYWRh
cHRlcihjb250cm9sKTsNCisJaWYgKHJlcykNCisJCURSTV9FUlJPUigiRmFpbGVkIHRvIHJlZ2lz
dGVyIGh3IGkyYywgZXJyOiAlZFxuIiwgcmVzKTsNCisNCisJcmV0dXJuIHJlczsNCit9DQorDQor
dm9pZCBhcmN0dXJ1c19pMmNfZWVwcm9tX2NvbnRyb2xfZmluaShzdHJ1Y3QgaTJjX2FkYXB0ZXIg
KmNvbnRyb2wpDQorew0KKwlpMmNfZGVsX2FkYXB0ZXIoY29udHJvbCk7DQorfQ0KKw0KIHN0YXRp
YyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyBhcmN0dXJ1c19wcHRfZnVuY3MgPSB7DQogCS8q
IHRyYW5zbGF0ZSBzbXUgaW5kZXggaW50byBhcmN0dXJ1cyBzcGVjaWZpYyBpbmRleCAqLw0KIAku
Z2V0X3NtdV9tc2dfaW5kZXggPSBhcmN0dXJ1c19nZXRfc211X21zZ19pbmRleCwNCkBAIC0xOTY2
LDYgKzIxOTMsOCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHBwdGFibGVfZnVuY3MgYXJjdHVydXNf
cHB0X2Z1bmNzID0gew0KIAkuZ2V0X3Bvd2VyX2xpbWl0ID0gYXJjdHVydXNfZ2V0X3Bvd2VyX2xp
bWl0LA0KIAkuaXNfZHBtX3J1bm5pbmcgPSBhcmN0dXJ1c19pc19kcG1fcnVubmluZywNCiAJLmRw
bV9zZXRfdXZkX2VuYWJsZSA9IGFyY3R1cnVzX2RwbV9zZXRfdXZkX2VuYWJsZSwNCisJLmkyY19l
ZXByb21faW5pdCA9IGFyY3R1cnVzX2kyY19lZXByb21fY29udHJvbF9pbml0LA0KKwkuaTJjX2Vl
cHJvbV9maW5pID0gYXJjdHVydXNfaTJjX2VlcHJvbV9jb250cm9sX2ZpbmksDQogfTsNCiANCiB2
b2lkIGFyY3R1cnVzX3NldF9wcHRfZnVuY3Moc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpDQotLSAN
CjIuNy40DQoNCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
DQphbWQtZ2Z4IG1haWxpbmcgbGlzdA0KYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcNCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA0KX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KYW1kLWdmeCBtYWls
aW5nIGxpc3QKYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4
