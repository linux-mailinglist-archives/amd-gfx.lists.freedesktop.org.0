Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A73AAF1461
	for <lists+amd-gfx@lfdr.de>; Wed,  6 Nov 2019 11:52:23 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E81E16ECCF;
	Wed,  6 Nov 2019 10:52:21 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM01-BN3-obe.outbound.protection.outlook.com
 (mail-eopbgr740070.outbound.protection.outlook.com [40.107.74.70])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 17C146ECCF
 for <amd-gfx@lists.freedesktop.org>; Wed,  6 Nov 2019 10:52:21 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=kv64J43mQkg5x/sYIb8JHrLaxNYYXUfEXS25rEOutykPtGhJrf10DoHgeFTFx3b5ZhwyWorYa/BCLlolOiN1AT2AE6R6jEleAwni1Z/OYa85sTUYT3GKX3ViZuySB5aOSyPhA7Mcm9tsaped9au8++SNQeAMCEjzn00xAcO8R3mJkpsUn9wbs1ElIRUHoYex08thMGGS+tMB/EK55t0r1Nf9n0Kfi4ZkiGBzIUXOwHqdMN5rW47NnnPlr14Scew8wXmQXb7t5fOhWbMm/nOCzTaF/eJvqpzWv3Dq1nIXBjrTknOshE1iQxkZSVNs7LhXf0d6vUNJ9xR09IqNXHU1tw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=yTQJd5pvaT9nHzKmihDb7gwbzIh75dN+eJLZ01+kjgI=;
 b=Y8TS1eA9FWM2WdaqVteRw6NK+amZTuAoD3avw/zDm3NrfrVidpJsbFqKNQRj/5PGo5FGeZN9wa/obZtkNgTpV9yFQNWqD5OzWvsauT6+1Ds7G67LVYMDHgv2iKD7a4XcHQZwx25PtW9P84J5EhTS9YVDYb5CVQ6Dncurwt5/EF0hwIAnt4FYc5mvdg4EO5g3q8zZJZSuc1uUND52Q9NQDte/4bdHbK1JXpvCCrH6L2+6+D/Q2E0AzdTqJS2J/wR4t6tJm8s+jC/5rE51VMAz8Cmu1wbRSf5cd4kuXPO1Rd7B23s/I59SWmXVWKOmvIduey6jsoTIi/v7WHy01FUgHg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from MN2PR12MB2896.namprd12.prod.outlook.com (20.179.80.214) by
 MN2PR12MB3184.namprd12.prod.outlook.com (20.179.82.18) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2408.24; Wed, 6 Nov 2019 10:52:19 +0000
Received: from MN2PR12MB2896.namprd12.prod.outlook.com
 ([fe80::9973:de2e:58b4:282a]) by MN2PR12MB2896.namprd12.prod.outlook.com
 ([fe80::9973:de2e:58b4:282a%7]) with mapi id 15.20.2408.024; Wed, 6 Nov 2019
 10:52:19 +0000
From: "Zhu, Changfeng" <Changfeng.Zhu@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>, "Tuikov, 
 Luben" <Luben.Tuikov@amd.com>, "Koenig, Christian"
 <Christian.Koenig@amd.com>, "Huang, Ray" <Ray.Huang@amd.com>, "Huang,
 Shimmer" <Xinmei.Huang@amd.com>
Subject: [PATCH 1/2] drm/amdgpu: add dummy read by engines for some GCVM
 status registers in gfx10
Thread-Topic: [PATCH 1/2] drm/amdgpu: add dummy read by engines for some GCVM
 status registers in gfx10
Thread-Index: AQHVlJBCNtRDGD/LEk6J06w0rfy/LQ==
Date: Wed, 6 Nov 2019 10:52:18 +0000
Message-ID: <20191106105136.14413-1-changfeng.zhu@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: HK2PR04CA0060.apcprd04.prod.outlook.com
 (2603:1096:202:14::28) To MN2PR12MB2896.namprd12.prod.outlook.com
 (2603:10b6:208:ab::22)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.17.1
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-ht: Tenant
x-ms-office365-filtering-correlation-id: 425505bd-c3ad-4aa8-3215-08d762a764a6
x-ms-traffictypediagnostic: MN2PR12MB3184:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <MN2PR12MB3184547830A1F5C6534F345FFD790@MN2PR12MB3184.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:6108;
x-forefront-prvs: 02135EB356
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(39860400002)(346002)(366004)(376002)(136003)(396003)(189003)(199004)(6116002)(2616005)(52116002)(476003)(316002)(1076003)(6486002)(6512007)(5660300002)(6506007)(66066001)(110136005)(26005)(71200400001)(81166006)(66946007)(186003)(8936002)(386003)(81156014)(8676002)(66556008)(3846002)(4326008)(478600001)(305945005)(256004)(102836004)(66476007)(99286004)(36756003)(14444005)(6436002)(66446008)(50226002)(486006)(14454004)(2501003)(86362001)(7736002)(25786009)(71190400001)(2906002)(64756008)(6636002);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB3184;
 H:MN2PR12MB2896.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; MX:1; A:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: ulJ9O9gRn1R6aLxOdvDya5gSfyi7kK/K0kN3wt9Lj1NClAjbd/Js8YhJJPsFIIxXQ0KpbfrzvNn/dYE488B44YRDaSgwxMz66NUO2gnQ/hdnHcpdiYxwYFuYL8OCgvyaomxNQFREzSDfbjT9TBPgvfW+PYPLQ5lVP4InsftiM00D22FUCf4tq3zUZqPi4aZDPs4OsQW3BTXt8InwMbWl+0aHoDA8Nk7w6xZ+4qSwxYcd+sGdg7l4NN+CtoCtoyy5vGm4TD2dnfjkF3xkenW+8XP5bYLf5WNBKn2x9P6KI/ZhIMTWzAzq9gFvkGbbjcUYDwMHA6MC4E8Yliqs8YJ75DKwLVepToy6C3X4EtBFCdHmIOiE6WeKJ1FxI/0kDxkkp0KYJpzrYu8+GXDdfWMrYuYM57n6FM653MSQguGaKsLUIwEn8bmL0jYtHt2wTYET
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 425505bd-c3ad-4aa8-3215-08d762a764a6
X-MS-Exchange-CrossTenant-originalarrivaltime: 06 Nov 2019 10:52:18.9775 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: dBvJXkan7RvMSQgDDMJLydFVLjixjrhdkFr/qlAsm5LXOBh02Fx4Nm85sIbc+aJ1WF7JTtI+UU+XQwG68A/cAQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3184
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=yTQJd5pvaT9nHzKmihDb7gwbzIh75dN+eJLZ01+kjgI=;
 b=3FoN6aqI4CSNmrmdjQwsMdEslw8/H85KOHfCm+okzCJlM4UabAA3XyYFsTUJMtP0vHSFUwpB2nqULu3oYwLDzE5nB8cyPYrd0+zEs9Fqu+ZY1S9S1yJdCr2yhHxq12fn8Ff7EQHhEjFDTpyEEUeHmywG2xO9bSZ7uOv6+dcgrI8=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Changfeng.Zhu@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Zhu, Changfeng" <Changfeng.Zhu@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RnJvbTogY2hhbmd6aHUgPENoYW5nZmVuZy5aaHVAYW1kLmNvbT4KClRoZSBHUkJNIHJlZ2lzdGVy
IGludGVyZmFjZSBpcyBub3cgY2FwYWJsZSBvZiBidXJzdGluZyAxIGN5Y2xlIHBlcgpyZWdpc3Rl
ciB3ci0+d3IsIHdyLT5yZCBtdWNoIGZhc3RlciB0aGFuIHByZXZpb3VzIG11dGljeWNsZSBwZXIK
dHJhbnNhY3Rpb24gZG9uZSBpbnRlcmZhY2UuICBUaGlzIGhhcyBjYXVzZWQgYSBwcm9ibGVtIHdo
ZXJlCnN0YXR1cyByZWdpc3RlcnMgcmVxdWlyaW5nIEhXIHRvIHVwZGF0ZSBoYXZlIGEgMSBjeWNs
ZSBkZWxheSwgZHVlCnRvIHRoZSByZWdpc3RlciB1cGRhdGUgaGF2aW5nIHRvIGdvIHRocm91Z2gg
R1JCTS4KCkZvciBjcCB1Y29kZSwgaXQgaGFzIHJlYWxpemVkIGR1bW15IHJlYWQgaW4gY3AgZmly
bXdhcmUuSXQgY292ZXJzCnRoZSB1c2Ugb2YgV0FJVF9SRUdfTUVNIG9wZXJhdGlvbiAxIGNhc2Ug
b25seS5TbyBpdCBuZWVkcyB0byBjYWxsCmdmeF92MTBfMF93YWl0X3JlZ19tZW0gaW4gZ2Z4MTAu
IEJlc2lkZXMgaXQgYWxzbyBuZWVkcyB0byBhZGQgd2FybmluZyB0bwp1cGRhdGUgZmlybXdhcmUg
aW4gY2FzZSBmaXJtd2FyZSBpcyB0b28gb2xkIHRvIGhhdmUgZnVuY3Rpb24gdG8gcmVhbGl6ZQpk
dW1teSByZWFkIGluIGNwIGZpcm13YXJlLgoKRm9yIHNkbWEgdWNvZGUsIGl0IGhhc24ndCByZWFs
aXplZCBkdW1teSByZWFkIGluIHNkbWEgZmlybXdhcmUuIHNkbWEgaXMKbW92ZWQgdG8gZ2Z4aHVi
IGluIGdmeDEwLiBTbyBpdCBuZWVkcyB0byBhZGQgZHVtbXkgcmVhZCBpbiBkcml2ZXIKYmV0d2Vl
biBhbWRncHVfcmluZ19lbWl0X3dyZWcgYW5kIGFtZGdwdV9yaW5nX2VtaXRfcmVnX3dhaXQgZm9y
IHNkbWFfdjVfMC4KCkNoYW5nZS1JZDogSWUwMjhmMzdlYjc4OTk2NmQ0NTkzOTg0YmQ2NjFiMjQ4
ZWJlYjFhYzMKU2lnbmVkLW9mZi1ieTogY2hhbmd6aHUgPENoYW5nZmVuZy5aaHVAYW1kLmNvbT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZ2Z4LmggfCAgMSArCiBkcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAuYyAgfCA0OCArKysrKysrKysrKysrKysr
KysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjEwXzAuYyAgfCAgOCAr
Ky0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92NV8wLmMgIHwgMTMgKysrKysr
LQogNCBmaWxlcyBjaGFuZ2VkLCA2NCBpbnNlcnRpb25zKCspLCA2IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguaCBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguaAppbmRleCA0NTlhYTkwNTk1NDIuLmE3
NGVjZDQ0OTc3NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2dmeC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguaApAQCAt
MjY3LDYgKzI2Nyw3IEBAIHN0cnVjdCBhbWRncHVfZ2Z4IHsKIAl1aW50MzJfdAkJCW1lYzJfZmVh
dHVyZV92ZXJzaW9uOwogCWJvb2wJCQkJbWVjX2Z3X3dyaXRlX3dhaXQ7CiAJYm9vbAkJCQltZV9m
d193cml0ZV93YWl0OworCWJvb2wJCQkJY3BfZndfd3JpdGVfd2FpdDsKIAlzdHJ1Y3QgYW1kZ3B1
X3JpbmcJCWdmeF9yaW5nW0FNREdQVV9NQVhfR0ZYX1JJTkdTXTsKIAl1bnNpZ25lZAkJCW51bV9n
ZnhfcmluZ3M7CiAJc3RydWN0IGFtZGdwdV9yaW5nCQljb21wdXRlX3JpbmdbQU1ER1BVX01BWF9D
T01QVVRFX1JJTkdTXTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92MTBfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3YxMF8wLmMKaW5kZXgg
MTdhNWNiZmQwMDI0Li5jN2E2Zjk4YmY2YjggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dmeF92MTBfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92MTBfMC5jCkBAIC01NjEsNiArNTYxLDMyIEBAIHN0YXRpYyB2b2lkIGdmeF92MTBfMF9mcmVl
X21pY3JvY29kZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAlrZnJlZShhZGV2LT5nZngu
cmxjLnJlZ2lzdGVyX2xpc3RfZm9ybWF0KTsKIH0KIAorc3RhdGljIHZvaWQgZ2Z4X3YxMF8wX2No
ZWNrX2Z3X3dyaXRlX3dhaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCit7CisJYWRldi0+
Z2Z4LmNwX2Z3X3dyaXRlX3dhaXQgPSBmYWxzZTsKKworCXN3aXRjaCAoYWRldi0+YXNpY190eXBl
KSB7CisJY2FzZSBDSElQX05BVkkxMDoKKwljYXNlIENISVBfTkFWSTEyOgorCWNhc2UgQ0hJUF9O
QVZJMTQ6CisJCWlmICgoYWRldi0+Z2Z4Lm1lX2Z3X3ZlcnNpb24gPj0gMHgwMDAwMDA0NikgJiYK
KwkJICAgIChhZGV2LT5nZngubWVfZmVhdHVyZV92ZXJzaW9uID49IDI3KSAmJgorCQkgICAgKGFk
ZXYtPmdmeC5wZnBfZndfdmVyc2lvbiA+PSAweDAwMDAwMDY4KSAmJgorCQkgICAgKGFkZXYtPmdm
eC5wZnBfZmVhdHVyZV92ZXJzaW9uID49IDI3KSAmJgorCQkgICAgKGFkZXYtPmdmeC5tZWNfZndf
dmVyc2lvbiA+PSAweDAwMDAwMDViKSAmJgorCQkgICAgKGFkZXYtPmdmeC5tZWNfZmVhdHVyZV92
ZXJzaW9uID49IDI3KSkKKwkJCWFkZXYtPmdmeC5jcF9md193cml0ZV93YWl0ID0gdHJ1ZTsKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJYnJlYWs7CisJfQorCisJaWYgKGFkZXYtPmdmeC5jcF9md193
cml0ZV93YWl0ID09IGZhbHNlKQorCQlEUk1fV0FSTl9PTkNFKCJXYXJuaW5nOiBjaGVjayBjcF9m
d192ZXJzaW9uIGFuZCB1cGRhdGUgaXQgdG8gcmVhbGl6ZSBcCisJCQkgICAgICBHUkJNIHJlcXVp
cmVzIDEtY3ljbGUgZGVsYXkgaW4gY3AgZmlybXdhcmVcbiIpOworfQorCisKIHN0YXRpYyB2b2lk
IGdmeF92MTBfMF9pbml0X3JsY19leHRfbWljcm9jb2RlKHN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2KQogewogCWNvbnN0IHN0cnVjdCBybGNfZmlybXdhcmVfaGVhZGVyX3YyXzEgKnJsY19oZHI7
CkBAIC04MjksNiArODU1LDcgQEAgc3RhdGljIGludCBnZnhfdjEwXzBfaW5pdF9taWNyb2NvZGUo
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCX0KIAl9CiAKKwlnZnhfdjEwXzBfY2hlY2tf
Zndfd3JpdGVfd2FpdChhZGV2KTsKIG91dDoKIAlpZiAoZXJyKSB7CiAJCWRldl9lcnIoYWRldi0+
ZGV2LApAQCAtNDc2OCw2ICs0Nzk1LDI0IEBAIHN0YXRpYyB2b2lkIGdmeF92MTBfMF9yaW5nX2Vt
aXRfcmVnX3dhaXQoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nLCB1aW50MzJfdCByZWcsCiAJZ2Z4
X3YxMF8wX3dhaXRfcmVnX21lbShyaW5nLCAwLCAwLCAwLCByZWcsIDAsIHZhbCwgbWFzaywgMHgy
MCk7CiB9CiAKK3N0YXRpYyB2b2lkIGdmeF92MTBfMF9yaW5nX2VtaXRfcmVnX3dyaXRlX3JlZ193
YWl0KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywKKwkJCQkJCSAgIHVpbnQzMl90IHJlZzAsIHVp
bnQzMl90IHJlZzEsCisJCQkJCQkgICB1aW50MzJfdCByZWYsIHVpbnQzMl90IG1hc2spCit7CisJ
aW50IHVzZXBmcCA9IChyaW5nLT5mdW5jcy0+dHlwZSA9PSBBTURHUFVfUklOR19UWVBFX0dGWCk7
CisJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OworCWJvb2wgZndfdmVy
c2lvbl9vayA9IGZhbHNlOworCisJZndfdmVyc2lvbl9vayA9IGFkZXYtPmdmeC5jcF9md193cml0
ZV93YWl0OworCisJaWYgKGZ3X3ZlcnNpb25fb2spCisJCWdmeF92MTBfMF93YWl0X3JlZ19tZW0o
cmluZywgdXNlcGZwLCAwLCAxLCByZWcwLCByZWcxLAorCQkJCSAgICAgICByZWYsIG1hc2ssIDB4
MjApOworCWVsc2UKKwkJYW1kZ3B1X3JpbmdfZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXRfaGVscGVy
KHJpbmcsIHJlZzAsIHJlZzEsCisJCQkJCQkJICAgcmVmLCBtYXNrKTsKK30KKwogc3RhdGljIHZv
aWQKIGdmeF92MTBfMF9zZXRfZ2Z4X2VvcF9pbnRlcnJ1cHRfc3RhdGUoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsCiAJCQkJICAgICAgdWludDMyX3QgbWUsIHVpbnQzMl90IHBpcGUsCkBAIC01
MTU4LDYgKzUyMDMsNyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGFtZGdwdV9yaW5nX2Z1bmNzIGdm
eF92MTBfMF9yaW5nX2Z1bmNzX2dmeCA9IHsKIAkuZW1pdF90bXogPSBnZnhfdjEwXzBfcmluZ19l
bWl0X3RteiwKIAkuZW1pdF93cmVnID0gZ2Z4X3YxMF8wX3JpbmdfZW1pdF93cmVnLAogCS5lbWl0
X3JlZ193YWl0ID0gZ2Z4X3YxMF8wX3JpbmdfZW1pdF9yZWdfd2FpdCwKKwkuZW1pdF9yZWdfd3Jp
dGVfcmVnX3dhaXQgPSBnZnhfdjEwXzBfcmluZ19lbWl0X3JlZ193cml0ZV9yZWdfd2FpdCwKIH07
CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgYW1kZ3B1X3JpbmdfZnVuY3MgZ2Z4X3YxMF8wX3Jpbmdf
ZnVuY3NfY29tcHV0ZSA9IHsKQEAgLTUxOTEsNiArNTIzNyw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgYW1kZ3B1X3JpbmdfZnVuY3MgZ2Z4X3YxMF8wX3JpbmdfZnVuY3NfY29tcHV0ZSA9IHsKIAku
cGFkX2liID0gYW1kZ3B1X3JpbmdfZ2VuZXJpY19wYWRfaWIsCiAJLmVtaXRfd3JlZyA9IGdmeF92
MTBfMF9yaW5nX2VtaXRfd3JlZywKIAkuZW1pdF9yZWdfd2FpdCA9IGdmeF92MTBfMF9yaW5nX2Vt
aXRfcmVnX3dhaXQsCisJLmVtaXRfcmVnX3dyaXRlX3JlZ193YWl0ID0gZ2Z4X3YxMF8wX3Jpbmdf
ZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXQsCiB9OwogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGFtZGdw
dV9yaW5nX2Z1bmNzIGdmeF92MTBfMF9yaW5nX2Z1bmNzX2tpcSA9IHsKQEAgLTUyMjEsNiArNTI2
OCw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgYW1kZ3B1X3JpbmdfZnVuY3MgZ2Z4X3YxMF8wX3Jp
bmdfZnVuY3Nfa2lxID0gewogCS5lbWl0X3JyZWcgPSBnZnhfdjEwXzBfcmluZ19lbWl0X3JyZWcs
CiAJLmVtaXRfd3JlZyA9IGdmeF92MTBfMF9yaW5nX2VtaXRfd3JlZywKIAkuZW1pdF9yZWdfd2Fp
dCA9IGdmeF92MTBfMF9yaW5nX2VtaXRfcmVnX3dhaXQsCisJLmVtaXRfcmVnX3dyaXRlX3JlZ193
YWl0ID0gZ2Z4X3YxMF8wX3JpbmdfZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXQsCiB9OwogCiBzdGF0
aWMgdm9pZCBnZnhfdjEwXzBfc2V0X3JpbmdfZnVuY3Moc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjEwXzAuYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jCmluZGV4IDNiMDBiY2UxNGNm
Yi4uYWYyNjE1YmE1MmFhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9n
bWNfdjEwXzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjEwXzAuYwpA
QCAtMzQ0LDExICszNDQsOSBAQCBzdGF0aWMgdWludDY0X3QgZ21jX3YxMF8wX2VtaXRfZmx1c2hf
Z3B1X3RsYihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcsCiAJYW1kZ3B1X3JpbmdfZW1pdF93cmVn
KHJpbmcsIGh1Yi0+Y3R4MF9wdGJfYWRkcl9oaTMyICsgKDIgKiB2bWlkKSwKIAkJCSAgICAgIHVw
cGVyXzMyX2JpdHMocGRfYWRkcikpOwogCi0JYW1kZ3B1X3JpbmdfZW1pdF93cmVnKHJpbmcsIGh1
Yi0+dm1faW52X2VuZzBfcmVxICsgZW5nLCByZXEpOwotCi0JLyogd2FpdCBmb3IgdGhlIGludmFs
aWRhdGUgdG8gY29tcGxldGUgKi8KLQlhbWRncHVfcmluZ19lbWl0X3JlZ193YWl0KHJpbmcsIGh1
Yi0+dm1faW52X2VuZzBfYWNrICsgZW5nLAotCQkJCSAgMSA8PCB2bWlkLCAxIDw8IHZtaWQpOwor
CWFtZGdwdV9yaW5nX2VtaXRfcmVnX3dyaXRlX3JlZ193YWl0KHJpbmcsIGh1Yi0+dm1faW52X2Vu
ZzBfcmVxICsgZW5nLAorCQkJCQkgICAgaHViLT52bV9pbnZfZW5nMF9hY2sgKyBlbmcsCisJCQkJ
CSAgICByZXEsIDEgPDwgdm1pZCk7CiAKIAlyZXR1cm4gcGRfYWRkcjsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjVfMC5jIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvc2RtYV92NV8wLmMKaW5kZXggMzQ2MGMwMGYzZWFhLi5lYzQ3NTQyZTIxYjAg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjVfMC5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjVfMC5jCkBAIC0xMTcwLDYgKzExNzAs
MTYgQEAgc3RhdGljIHZvaWQgc2RtYV92NV8wX3JpbmdfZW1pdF9yZWdfd2FpdChzdHJ1Y3QgYW1k
Z3B1X3JpbmcgKnJpbmcsIHVpbnQzMl90IHJlZywKIAkJCSAgU0RNQV9QS1RfUE9MTF9SRUdNRU1f
RFc1X0lOVEVSVkFMKDEwKSk7CiB9CiAKK3N0YXRpYyB2b2lkIHNkbWFfdjVfMF9yaW5nX2VtaXRf
cmVnX3dyaXRlX3JlZ193YWl0KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywKKwkJCQkJCSAgIHVp
bnQzMl90IHJlZzAsIHVpbnQzMl90IHJlZzEsCisJCQkJCQkgICB1aW50MzJfdCByZWYsIHVpbnQz
Ml90IG1hc2spCit7CisJYW1kZ3B1X3JpbmdfZW1pdF93cmVnKHJpbmcsIHJlZzAsIHJlZik7CisJ
Lyogd2FpdCBmb3IgYSBjeWNsZSB0byByZXNldCB2bV9pbnZfZW5nKl9hY2sgKi8KKwlhbWRncHVf
cmluZ19lbWl0X3JlZ193YWl0KHJpbmcsIHJlZzAsIDAsIDApOworCWFtZGdwdV9yaW5nX2VtaXRf
cmVnX3dhaXQocmluZywgcmVnMSwgbWFzaywgbWFzayk7Cit9CisKIHN0YXRpYyBpbnQgc2RtYV92
NV8wX2Vhcmx5X2luaXQodm9pZCAqaGFuZGxlKQogewogCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gKHN0cnVjdCBhbWRncHVfZGV2aWNlICopaGFuZGxlOwpAQCAtMTU4NSw3ICsxNTk1LDcg
QEAgc3RhdGljIGNvbnN0IHN0cnVjdCBhbWRncHVfcmluZ19mdW5jcyBzZG1hX3Y1XzBfcmluZ19m
dW5jcyA9IHsKIAkJNiArIC8qIHNkbWFfdjVfMF9yaW5nX2VtaXRfcGlwZWxpbmVfc3luYyAqLwog
CQkvKiBzZG1hX3Y1XzBfcmluZ19lbWl0X3ZtX2ZsdXNoICovCiAJCVNPQzE1X0ZMVVNIX0dQVV9U
TEJfTlVNX1dSRUcgKiAzICsKLQkJU09DMTVfRkxVU0hfR1BVX1RMQl9OVU1fUkVHX1dBSVQgKiA2
ICsKKwkJU09DMTVfRkxVU0hfR1BVX1RMQl9OVU1fUkVHX1dBSVQgKiA2ICogMiArCiAJCTEwICsg
MTAgKyAxMCwgLyogc2RtYV92NV8wX3JpbmdfZW1pdF9mZW5jZSB4MyBmb3IgdXNlciBmZW5jZSwg
dm0gZmVuY2UgKi8KIAkuZW1pdF9pYl9zaXplID0gNyArIDYsIC8qIHNkbWFfdjVfMF9yaW5nX2Vt
aXRfaWIgKi8KIAkuZW1pdF9pYiA9IHNkbWFfdjVfMF9yaW5nX2VtaXRfaWIsCkBAIC0xNTk5LDYg
KzE2MDksNyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGFtZGdwdV9yaW5nX2Z1bmNzIHNkbWFfdjVf
MF9yaW5nX2Z1bmNzID0gewogCS5wYWRfaWIgPSBzZG1hX3Y1XzBfcmluZ19wYWRfaWIsCiAJLmVt
aXRfd3JlZyA9IHNkbWFfdjVfMF9yaW5nX2VtaXRfd3JlZywKIAkuZW1pdF9yZWdfd2FpdCA9IHNk
bWFfdjVfMF9yaW5nX2VtaXRfcmVnX3dhaXQsCisJLmVtaXRfcmVnX3dyaXRlX3JlZ193YWl0ID0g
c2RtYV92NV8wX3JpbmdfZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXQsCiAJLmluaXRfY29uZF9leGVj
ID0gc2RtYV92NV8wX3JpbmdfaW5pdF9jb25kX2V4ZWMsCiAJLnBhdGNoX2NvbmRfZXhlYyA9IHNk
bWFfdjVfMF9yaW5nX3BhdGNoX2NvbmRfZXhlYywKIAkucHJlZW1wdF9pYiA9IHNkbWFfdjVfMF9y
aW5nX3ByZWVtcHRfaWIsCi0tIAoyLjE3LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vYW1kLWdmeA==
