Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 51087B1D33
	for <lists+amd-gfx@lfdr.de>; Fri, 13 Sep 2019 14:18:07 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CFF7F6F37B;
	Fri, 13 Sep 2019 12:18:05 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-wm1-x342.google.com (mail-wm1-x342.google.com
 [IPv6:2a00:1450:4864:20::342])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 15C276F37A
 for <amd-gfx@lists.freedesktop.org>; Fri, 13 Sep 2019 12:18:05 +0000 (UTC)
Received: by mail-wm1-x342.google.com with SMTP id c10so2532941wmc.0
 for <amd-gfx@lists.freedesktop.org>; Fri, 13 Sep 2019 05:18:04 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=r2sOPul0YB/tGWgbl+7jJu8WquvZMZGZH9Pn04bq96Q=;
 b=geX0/ScsH3unHF+XN5ZawKtCkHOO2fs+2B9TV3ymYfa8X3rbd05a3wRUNNwkFKpkM7
 9phxND5HjxHj7GHtLAXF0249CxfoQAdRYfD3k6FEoH3Zj6f4ZzWthux+giHBNIaFmWEC
 Hgwvk8gMqEl1n/UEaLtrkmmKupazZEPsKQyWT1Esm8UtfNU2UG3P8t0D0C4DMNxbKNdu
 3vMC6arGdOabRcrZQ14n+hqIDGIZwCHfwbXtTqzbAuQYOHnM+XCRyUodaVa37fbfaWVL
 Z7DZrUKZg80hZvJNvuPvgVctrMBryOMoHi9oypNRvP2JU77uyf2YVEnG9EE0BMw9XD5t
 I93A==
X-Gm-Message-State: APjAAAXCftFxNR+2ocGI8OKH+Fw9N5hQAcSFY4l6B2IlPLeftey9C9Rk
 Sg6iWkCWjS60YMEE5gu+Fex1WF+R
X-Google-Smtp-Source: APXvYqzHwsOMJVVQhcxJXRPca7x+N+kw4Ji8J7WPflW0sAThx/J0NL2SqcL1Sb4j0o/Fr4S1cKeeBA==
X-Received: by 2002:a1c:f417:: with SMTP id z23mr3293006wma.77.1568377083341; 
 Fri, 13 Sep 2019 05:18:03 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:fd97:b16a:b9f0:9362])
 by smtp.gmail.com with ESMTPSA id q15sm35882532wrg.65.2019.09.13.05.18.02
 for <amd-gfx@lists.freedesktop.org>
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 13 Sep 2019 05:18:02 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH 1/3] drm/amdgpu: cleanup coding style in the VM code a bit
Date: Fri, 13 Sep 2019 14:17:59 +0200
Message-Id: <20190913121801.96728-1-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=r2sOPul0YB/tGWgbl+7jJu8WquvZMZGZH9Pn04bq96Q=;
 b=ptvSZ+KVi5OgDaZSN9zE3GcYpY39WXw7APIZJoZ0zlCFs5emNfPaCkQfJ8xxGscmzn
 NricvbqSoaVK6jBKF2VCfBi4I81BaYRe/J3rjJuplBBCuas2LRGXg1Oxl6rD0p0UGSmj
 2z5z4zJqmiPRmk0pxGyj1GQNaumLyj3675OQVOndo3rWCDZrXq5ZN9+nq+dS/k8FCGbf
 xhtPh6cdUZHR2A5dXDgrQXnH6XLK1SWQSZoF5rjAoFIL+mtLw5/hOHFstedNeW4j8BRg
 jCLAdi3iCZl5c6GQWTQ5baB0FS9k9Mt6uxbRQ1Tw+M9opyhJsOWpkl55qhnu9L8fRgB/
 28wg==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

Tm8gZnVuY3Rpb25hbCBjaGFuZ2UuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpc3RpYW4gS8O2bmlnIDxj
aHJpc3RpYW4ua29lbmlnQGFtZC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3ZtLmMgfCA1NSArKysrKysrKysrKysrKysrKy0tLS0tLS0tLQogMSBmaWxlIGNoYW5n
ZWQsIDM2IGluc2VydGlvbnMoKyksIDE5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92bS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X3ZtLmMKaW5kZXggNDgzNDllNGYwNzAxLi5lYzI2YTZiMzc4YTkgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92bS5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92bS5jCkBAIC0xMzAsNyArMTMwLDggQEAgc3Rh
dGljIHVuc2lnbmVkIGFtZGdwdV92bV9udW1fZW50cmllcyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiwKIAogCWlmIChsZXZlbCA9PSBhZGV2LT52bV9tYW5hZ2VyLnJvb3RfbGV2ZWwpCiAJCS8q
IEZvciB0aGUgcm9vdCBkaXJlY3RvcnkgKi8KLQkJcmV0dXJuIHJvdW5kX3VwKGFkZXYtPnZtX21h
bmFnZXIubWF4X3BmbiwgMVVMTCA8PCBzaGlmdCkgPj4gc2hpZnQ7CisJCXJldHVybiByb3VuZF91
cChhZGV2LT52bV9tYW5hZ2VyLm1heF9wZm4sIDFVTEwgPDwgc2hpZnQpCisJCQk+PiBzaGlmdDsK
IAllbHNlIGlmIChsZXZlbCAhPSBBTURHUFVfVk1fUFRCKQogCQkvKiBFdmVyeXRoaW5nIGluIGJl
dHdlZW4gKi8KIAkJcmV0dXJuIDUxMjsKQEAgLTU2Niw2ICs1NjcsMTQgQEAgdm9pZCBhbWRncHVf
dm1fZ2V0X3BkX2JvKHN0cnVjdCBhbWRncHVfdm0gKnZtLAogCWxpc3RfYWRkKCZlbnRyeS0+dHYu
aGVhZCwgdmFsaWRhdGVkKTsKIH0KIAorLyoqCisgKiBhbWRncHVfdm1fZGVsX2Zyb21fbHJ1X25v
dGlmeSAtIHVwZGF0ZSBidWxrX21vdmVhYmxlIGZsYWcKKyAqCisgKiBAYm86IEJPIHdoaWNoIHdh
cyByZW1vdmVkIGZyb20gdGhlIExSVQorICoKKyAqIE1ha2Ugc3VyZSB0aGUgYnVsa19tb3ZlYWJs
ZSBmbGFnIGlzIHVwZGF0ZWQgd2hlbiBhIEJPIGlzIHJlbW92ZWQgZnJvbSB0aGUKKyAqIExSVS4K
KyAqLwogdm9pZCBhbWRncHVfdm1fZGVsX2Zyb21fbHJ1X25vdGlmeShzdHJ1Y3QgdHRtX2J1ZmZl
cl9vYmplY3QgKmJvKQogewogCXN0cnVjdCBhbWRncHVfYm8gKmFibzsKQEAgLTEwMjgsNyArMTAz
Nyw4IEBAIGJvb2wgYW1kZ3B1X3ZtX25lZWRfcGlwZWxpbmVfc3luYyhzdHJ1Y3QgYW1kZ3B1X3Jp
bmcgKnJpbmcsCiAgKiBSZXR1cm5zOgogICogMCBvbiBzdWNjZXNzLCBlcnJubyBvdGhlcndpc2Uu
CiAgKi8KLWludCBhbWRncHVfdm1fZmx1c2goc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nLCBzdHJ1
Y3QgYW1kZ3B1X2pvYiAqam9iLCBib29sIG5lZWRfcGlwZV9zeW5jKQoraW50IGFtZGdwdV92bV9m
bHVzaChzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcsIHN0cnVjdCBhbWRncHVfam9iICpqb2IsCisJ
CSAgICBib29sIG5lZWRfcGlwZV9zeW5jKQogewogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
ID0gcmluZy0+YWRldjsKIAl1bnNpZ25lZCB2bWh1YiA9IHJpbmctPmZ1bmNzLT52bWh1YjsKQEAg
LTE2MzMsNyArMTY0Myw4IEBAIHN0YXRpYyBpbnQgYW1kZ3B1X3ZtX2JvX3NwbGl0X21hcHBpbmco
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJCQkJZG1hX2FkZHIgPSBwYWdlc19hZGRyOwog
CQkJfSBlbHNlIHsKIAkJCQlhZGRyID0gcGFnZXNfYWRkcltwZm5dOwotCQkJCW1heF9lbnRyaWVz
ID0gY291bnQgKiBBTURHUFVfR1BVX1BBR0VTX0lOX0NQVV9QQUdFOworCQkJCW1heF9lbnRyaWVz
ID0gY291bnQgKgorCQkJCQlBTURHUFVfR1BVX1BBR0VTX0lOX0NQVV9QQUdFOwogCQkJfQogCiAJ
CX0gZWxzZSBpZiAoZmxhZ3MgJiBBTURHUFVfUFRFX1ZBTElEKSB7CkBAIC0xNjcyLDggKzE2ODMs
NyBAQCBzdGF0aWMgaW50IGFtZGdwdV92bV9ib19zcGxpdF9tYXBwaW5nKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2LAogICogUmV0dXJuczoKICAqIDAgZm9yIHN1Y2Nlc3MsIC1FSU5WQUwgZm9y
IGZhaWx1cmUuCiAgKi8KLWludCBhbWRncHVfdm1fYm9fdXBkYXRlKHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2LAotCQkJc3RydWN0IGFtZGdwdV9ib192YSAqYm9fdmEsCitpbnQgYW1kZ3B1X3Zt
X2JvX3VwZGF0ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgc3RydWN0IGFtZGdwdV9ib192
YSAqYm9fdmEsCiAJCQlib29sIGNsZWFyKQogewogCXN0cnVjdCBhbWRncHVfYm8gKmJvID0gYm9f
dmEtPmJhc2UuYm87CkBAIC0xNzQ0LDcgKzE3NTQsOCBAQCBpbnQgYW1kZ3B1X3ZtX2JvX3VwZGF0
ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAlpZiAoYm8gJiYgYm8tPnRiby5yZXN2ID09
IHZtLT5yb290LmJhc2UuYm8tPnRiby5yZXN2KSB7CiAJCXVpbnQzMl90IG1lbV90eXBlID0gYm8t
PnRiby5tZW0ubWVtX3R5cGU7CiAKLQkJaWYgKCEoYm8tPnByZWZlcnJlZF9kb21haW5zICYgYW1k
Z3B1X21lbV90eXBlX3RvX2RvbWFpbihtZW1fdHlwZSkpKQorCQlpZiAoIShiby0+cHJlZmVycmVk
X2RvbWFpbnMgJgorCQkgICAgICBhbWRncHVfbWVtX3R5cGVfdG9fZG9tYWluKG1lbV90eXBlKSkp
CiAJCQlhbWRncHVfdm1fYm9fZXZpY3RlZCgmYm9fdmEtPmJhc2UpOwogCQllbHNlCiAJCQlhbWRn
cHVfdm1fYm9faWRsZSgmYm9fdmEtPmJhc2UpOwpAQCAtMjcwNiw3ICsyNzE3LDggQEAgaW50IGFt
ZGdwdV92bV9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBzdHJ1Y3QgYW1kZ3B1X3Zt
ICp2bSwKIAl9CiAJRFJNX0RFQlVHX0RSSVZFUigiVk0gdXBkYXRlIG1vZGUgaXMgJXNcbiIsCiAJ
CQkgdm0tPnVzZV9jcHVfZm9yX3VwZGF0ZSA/ICJDUFUiIDogIlNETUEiKTsKLQlXQVJOX09OQ0Uo
KHZtLT51c2VfY3B1X2Zvcl91cGRhdGUgJiYgIWFtZGdwdV9nbWNfdnJhbV9mdWxsX3Zpc2libGUo
JmFkZXYtPmdtYykpLAorCVdBUk5fT05DRSgodm0tPnVzZV9jcHVfZm9yX3VwZGF0ZSAmJgorCQkg
ICAhYW1kZ3B1X2dtY192cmFtX2Z1bGxfdmlzaWJsZSgmYWRldi0+Z21jKSksCiAJCSAgIkNQVSB1
cGRhdGUgb2YgVk0gcmVjb21tZW5kZWQgb25seSBmb3IgbGFyZ2UgQkFSIHN5c3RlbVxuIik7CiAK
IAlpZiAodm0tPnVzZV9jcHVfZm9yX3VwZGF0ZSkKQEAgLTI4MjMsNyArMjgzNSw4IEBAIHN0YXRp
YyBpbnQgYW1kZ3B1X3ZtX2NoZWNrX2NsZWFuX3Jlc2VydmVkKHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2LAogICogUmV0dXJuczoKICAqIDAgZm9yIHN1Y2Nlc3MsIC1lcnJubyBmb3IgZXJyb3Jz
LgogICovCi1pbnQgYW1kZ3B1X3ZtX21ha2VfY29tcHV0ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiwgc3RydWN0IGFtZGdwdV92bSAqdm0sIHVuc2lnbmVkIGludCBwYXNpZCkKK2ludCBhbWRn
cHVfdm1fbWFrZV9jb21wdXRlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBzdHJ1Y3QgYW1k
Z3B1X3ZtICp2bSwKKwkJCSAgIHVuc2lnbmVkIGludCBwYXNpZCkKIHsKIAlib29sIHB0ZV9zdXBw
b3J0X2F0cyA9IChhZGV2LT5hc2ljX3R5cGUgPT0gQ0hJUF9SQVZFTik7CiAJaW50IHI7CkBAIC0y
ODY1LDcgKzI4NzgsOCBAQCBpbnQgYW1kZ3B1X3ZtX21ha2VfY29tcHV0ZShzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiwgc3RydWN0IGFtZGdwdV92bSAqdm0sIHVucwogCQkJCSAgICBBTURHUFVf
Vk1fVVNFX0NQVV9GT1JfQ09NUFVURSk7CiAJRFJNX0RFQlVHX0RSSVZFUigiVk0gdXBkYXRlIG1v
ZGUgaXMgJXNcbiIsCiAJCQkgdm0tPnVzZV9jcHVfZm9yX3VwZGF0ZSA/ICJDUFUiIDogIlNETUEi
KTsKLQlXQVJOX09OQ0UoKHZtLT51c2VfY3B1X2Zvcl91cGRhdGUgJiYgIWFtZGdwdV9nbWNfdnJh
bV9mdWxsX3Zpc2libGUoJmFkZXYtPmdtYykpLAorCVdBUk5fT05DRSgodm0tPnVzZV9jcHVfZm9y
X3VwZGF0ZSAmJgorCQkgICAhYW1kZ3B1X2dtY192cmFtX2Z1bGxfdmlzaWJsZSgmYWRldi0+Z21j
KSksCiAJCSAgIkNQVSB1cGRhdGUgb2YgVk0gcmVjb21tZW5kZWQgb25seSBmb3IgbGFyZ2UgQkFS
IHN5c3RlbVxuIik7CiAKIAlpZiAodm0tPnVzZV9jcHVfZm9yX3VwZGF0ZSkKQEAgLTMwNzEsOCAr
MzA4NSw5IEBAIGludCBhbWRncHVfdm1faW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9p
ZCAqZGF0YSwgc3RydWN0IGRybV9maWxlICpmaWxwKQogCiAJc3dpdGNoIChhcmdzLT5pbi5vcCkg
ewogCWNhc2UgQU1ER1BVX1ZNX09QX1JFU0VSVkVfVk1JRDoKLQkJLyogY3VycmVudCwgd2Ugb25s
eSBoYXZlIHJlcXVpcmVtZW50IHRvIHJlc2VydmUgdm1pZCBmcm9tIGdmeGh1YiAqLwotCQlyID0g
YW1kZ3B1X3ZtaWRfYWxsb2NfcmVzZXJ2ZWQoYWRldiwgJmZwcml2LT52bSwgQU1ER1BVX0dGWEhV
Ql8wKTsKKwkJLyogV2Ugb25seSBoYXZlIHJlcXVpcmVtZW50IHRvIHJlc2VydmUgdm1pZCBmcm9t
IGdmeGh1YiAqLworCQlyID0gYW1kZ3B1X3ZtaWRfYWxsb2NfcmVzZXJ2ZWQoYWRldiwgJmZwcml2
LT52bSwKKwkJCQkJICAgICAgIEFNREdQVV9HRlhIVUJfMCk7CiAJCWlmIChyKQogCQkJcmV0dXJu
IHI7CiAJCWJyZWFrOwpAQCAtMzExNSwxNSArMzEzMCwxNyBAQCB2b2lkIGFtZGdwdV92bV9nZXRf
dGFza19pbmZvKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1bnNpZ25lZCBpbnQgcGFzaWQs
CiAgKi8KIHZvaWQgYW1kZ3B1X3ZtX3NldF90YXNrX2luZm8oc3RydWN0IGFtZGdwdV92bSAqdm0p
CiB7Ci0JaWYgKCF2bS0+dGFza19pbmZvLnBpZCkgewotCQl2bS0+dGFza19pbmZvLnBpZCA9IGN1
cnJlbnQtPnBpZDsKLQkJZ2V0X3Rhc2tfY29tbSh2bS0+dGFza19pbmZvLnRhc2tfbmFtZSwgY3Vy
cmVudCk7CisJaWYgKHZtLT50YXNrX2luZm8ucGlkKQorCQlyZXR1cm47CiAKLQkJaWYgKGN1cnJl
bnQtPmdyb3VwX2xlYWRlci0+bW0gPT0gY3VycmVudC0+bW0pIHsKLQkJCXZtLT50YXNrX2luZm8u
dGdpZCA9IGN1cnJlbnQtPmdyb3VwX2xlYWRlci0+cGlkOwotCQkJZ2V0X3Rhc2tfY29tbSh2bS0+
dGFza19pbmZvLnByb2Nlc3NfbmFtZSwgY3VycmVudC0+Z3JvdXBfbGVhZGVyKTsKLQkJfQotCX0K
Kwl2bS0+dGFza19pbmZvLnBpZCA9IGN1cnJlbnQtPnBpZDsKKwlnZXRfdGFza19jb21tKHZtLT50
YXNrX2luZm8udGFza19uYW1lLCBjdXJyZW50KTsKKworCWlmIChjdXJyZW50LT5ncm91cF9sZWFk
ZXItPm1tICE9IGN1cnJlbnQtPm1tKQorCQlyZXR1cm47CisKKwl2bS0+dGFza19pbmZvLnRnaWQg
PSBjdXJyZW50LT5ncm91cF9sZWFkZXItPnBpZDsKKwlnZXRfdGFza19jb21tKHZtLT50YXNrX2lu
Zm8ucHJvY2Vzc19uYW1lLCBjdXJyZW50LT5ncm91cF9sZWFkZXIpOwogfQogCiAvKioKLS0gCjIu
MTcuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KYW1k
LWdmeCBtYWlsaW5nIGxpc3QKYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4
