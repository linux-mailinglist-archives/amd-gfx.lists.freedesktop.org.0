Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 73414E7369
	for <lists+amd-gfx@lfdr.de>; Mon, 28 Oct 2019 15:09:17 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DCA786E8AD;
	Mon, 28 Oct 2019 14:09:15 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM04-BN3-obe.outbound.protection.outlook.com
 (mail-eopbgr680075.outbound.protection.outlook.com [40.107.68.75])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 12B896E8AD
 for <amd-gfx@lists.freedesktop.org>; Mon, 28 Oct 2019 14:09:14 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Hl6AERiGUYheBJhduy+YndHhXwJalyMNDBPajLuxgeX9meyxbmOauguaxTk5a8zlWb1f4KIE/nV4IVNg2oaMCTnIMhoXC9j/AJ5w++o1Ods80xm40FMAEgY1X8rJzjRAgHQ3MCZNDpOHH/hp1K24CqQh/NGIqMI2Ygczn0iduv/Avy1t+9MPgiI5305BC7FkGxutbeJxIFxnUprgv+WawKXNq+Q1Y/Xhf9/ikXoFoP1bl8jTq8JgBbpq2CmgtYdSXGRQdpmmWaliUxnA8djTYsMCYaDo23ZZUABt8hDVacR6KW2gHb/ld98256z2pavIPno46gWnwyp+vMXoz/0B/Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zrHHPmoPrv+dKUdfpd10dK1CXrnNV7iUbf/uMdi0P+4=;
 b=Xlha0puTCnsfYGNrXR4BeHFj4qWxyeAoavLf1r2RKnOLi2hZ7P4K134gVR31CkGxkP+dfav5LL903/64FrXnD1+YdnNv/WFoop4bqeBq5mpvXfbkSrdSAufFZUa8g8Z6xo2FlIt/BvuiKBuwKMdZ96AVV2nTcV65Rx6qtqiMl4fkLT1rjTdaLqrh2VeenErzxWt/A8oJrGUdheTYRYzOcT/tQRuDsCLrIOOfMUpO7uqXz8e2aY2TchlkEJyMBwjgcY5fEFoBLH1WCfIPB7LaKuQMoerg4I/0FMTF5yJs4z42nEWReFWKipLlLtovIlh3Ttr+aYeE6jkUr4L5nGKxQA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=none (sender ip is
 165.204.84.17) smtp.rcpttodomain=lists.freedesktop.org smtp.mailfrom=amd.com; 
 dmarc=permerror action=none header.from=amd.com; dkim=none (message not
 signed); arc=none
Received: from DM3PR12CA0110.namprd12.prod.outlook.com (2603:10b6:0:55::30) by
 MN2PR12MB3070.namprd12.prod.outlook.com (2603:10b6:208:c1::27) with
 Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2387.22; Mon, 28 Oct 2019 14:09:10 +0000
Received: from BY2NAM03FT036.eop-NAM03.prod.protection.outlook.com
 (2a01:111:f400:7e4a::205) by DM3PR12CA0110.outlook.office365.com
 (2603:10b6:0:55::30) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.2387.22 via Frontend
 Transport; Mon, 28 Oct 2019 14:09:10 +0000
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXMB02.amd.com (165.204.84.17) by
 BY2NAM03FT036.mail.protection.outlook.com (10.152.85.141) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.2387.20 via Frontend Transport; Mon, 28 Oct 2019 14:09:10 +0000
Received: from SATLEXMB05.amd.com (10.181.40.146) by SATLEXMB02.amd.com
 (10.181.40.143) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Mon, 28 Oct
 2019 09:09:09 -0500
Received: from SATLEXMB01.amd.com (10.181.40.142) by SATLEXMB05.amd.com
 (10.181.40.146) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Mon, 28 Oct
 2019 09:08:59 -0500
Received: from kazvm.amd.com (10.180.168.240) by SATLEXMB01.amd.com
 (10.181.40.142) with Microsoft SMTP Server id 15.1.1713.5 via Frontend
 Transport; Mon, 28 Oct 2019 09:08:59 -0500
From: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
To: <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 09/11] drm/amd/display: Add DMUB support to DC
Date: Mon, 28 Oct 2019 10:08:35 -0400
Message-ID: <20191028140837.7908-10-nicholas.kazlauskas@amd.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191028140837.7908-1-nicholas.kazlauskas@amd.com>
References: <20191028140837.7908-1-nicholas.kazlauskas@amd.com>
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; IPV:NLI; CTRY:US; EFV:NLI;
 SFV:NSPM;
 SFS:(10009020)(4636009)(396003)(136003)(346002)(39860400002)(376002)(428003)(199004)(189003)(44832011)(305945005)(2351001)(50226002)(4326008)(6916009)(486006)(2870700001)(8936002)(36756003)(426003)(336012)(2616005)(476003)(2906002)(81156014)(81166006)(316002)(11346002)(8676002)(26005)(51416003)(7696005)(48376002)(186003)(53416004)(446003)(47776003)(126002)(5660300002)(70206006)(70586007)(14444005)(76176011)(30864003)(478600001)(50466002)(356004)(6666004)(86362001)(1076003);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB3070; H:SATLEXMB02.amd.com; FPR:;
 SPF:None; LANG:en; PTR:InfoDomainNonexistent; A:1; MX:1; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ceaffb0b-387d-404e-ef6a-08d75bb0674d
X-MS-TrafficTypeDiagnostic: MN2PR12MB3070:
X-Microsoft-Antispam-PRVS: <MN2PR12MB3070E4D44C7BAC29AA868847EC660@MN2PR12MB3070.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-Forefront-PRVS: 0204F0BDE2
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: hYrMiYrorDMvuWO4fXuYqcEtr/+6rexNN6wSyMeGauYKoGrqqsdslZLHVC2bzhzSmsOwggwUZ3En2qn1c7f/4Fz+OY1QMwZvKambkJx3DE7HOd9OxK+Rc+UuAGWuSKDsv0ul+ZDXtK0Zoju2q0FfX2pDWu3HsrXXM3R5f2WbaUJgl+8CTGST0grm2D7VAer7gbs8nvA6rpsAp/1+b256g42YwX+Spb122cpxfjdCbwXEyDvyRXRCTyJ9HTaupa+hsESEE1TecMbUwoHB8c457IGXBisDbIoS29E8dSh5yX6CSezbMzy0C5wdQaFklBOgp9jHBRwy9c06OwIQGnkAdEMG69mNuwGmGvoyMNhIIR2VSFA8IRAkod72Bcc0vyGAONBNcmEQc2A0XtLT9GQc3t2z6+aKGTOZxC7SOr1vqU1krGnTKP730FKGFcqZus6q
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 28 Oct 2019 14:09:10.0466 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: ceaffb0b-387d-404e-ef6a-08d75bb0674d
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXMB02.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3070
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zrHHPmoPrv+dKUdfpd10dK1CXrnNV7iUbf/uMdi0P+4=;
 b=1Rdcj0cb44gZPknbCC7hvRDsw5xHs9rFFaEcgwvbqSaY0XCsue8xyPGZUSMqFviagjF0rh+z3cHx5i2Z4sxU34n9w5BzGwfVQnJuMntTlP5t5t151Xsy5QweEj0EtHBpqH92vp3gcwixSkkqXvmy9qMxBnllLTUValWJaj7BbYA=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is
 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

REMgd2lsbCB1c2UgRE1VQiBmb3IgY29tbWFuZCBzdWJtaXNzaW9uIGFuZCBmbG93IGNvbnRyb2wg
ZHVyaW5nCmluaXRpYWxpemF0aW9uLgoKUmVnaXN0ZXIgb2ZmbG9hZGluZyBhcyB3ZWxsIGFzIHN1
Ym1pdHRpbmcgc29tZSBCSU9TIGNvbW1hbmRzIGFyZSBwYXJ0Cm9mIHRoZSBEQyBpbnRlcm5hbCBp
bnRlcmZhY2UgYnV0IGFyZSBndWFyZGVkIGJlaGluZCBkZWJ1ZyBvcHRpb25zLgoKSXQgd29uJ3Qg
YmUgZnVuY3Rpb25hbCBpbiBhbWRncHVfZG0geWV0IHNpbmNlIHdlIGRvbid0IHBhc3MgdGhlCkRN
VUIgc2VydmljZSB0byBEQyBmb3IgdXNlLgoKU2lnbmVkLW9mZi1ieTogTmljaG9sYXMgS2F6bGF1
c2thcyA8bmljaG9sYXMua2F6bGF1c2thc0BhbWQuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9kYy9NYWtlZmlsZSAgICAgICB8ICAgNiArLQogLi4uL2RybS9hbWQvZGlzcGxh
eS9kYy9iaW9zL2NvbW1hbmRfdGFibGUyLmMgIHwgIDkxICsrKysrKwogZHJpdmVycy9ncHUvZHJt
L2FtZC9kaXNwbGF5L2RjL2NvcmUvZGMuYyAgICAgIHwgICA4ICsKIGRyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9kYy9kYy5oICAgICAgICAgICB8ICAxMiArCiBkcml2ZXJzL2dwdS9kcm0vYW1k
L2Rpc3BsYXkvZGMvZGNfZG11Yl9zcnYuYyAgfCAxMTkgKysrKysrKysKIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kYy9kY19kbXViX3Nydi5oICB8ICA2MCArKysrCiBkcml2ZXJzL2dwdS9k
cm0vYW1kL2Rpc3BsYXkvZGMvZGNfaGVscGVyLmMgICAgfCAyNzMgKysrKysrKysrKysrKysrKysr
CiBkcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNfdHlwZXMuaCAgICAgfCAgIDYgKwog
Li4uL2RybS9hbWQvZGlzcGxheS9kYy9kY24xMC9kY24xMF9kcHBfY20uYyAgIHwgICA3ICsKIC4u
Li9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjbjEwL2RjbjEwX29wdGMuYyB8ICAgOCArCiAuLi4v
Z3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY24yMC9kY24yMF9tcGMuYyAgfCAgMTEgKwogLi4uL2Ry
bS9hbWQvZGlzcGxheS9kYy9kY24yMS9kY24yMV9yZXNvdXJjZS5jIHwgICAzICsKIGRyaXZlcnMv
Z3B1L2RybS9hbWQvZGlzcGxheS9kYy9kbV9zZXJ2aWNlcy5oICB8ICAxNCArCiAuLi4vZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kYy9pbmMvcmVnX2hlbHBlci5oICAgfCAgMjIgKysKIGRyaXZlcnMvZ3B1
L2RybS9hbWQvZGlzcGxheS9kYy9vc190eXBlcy5oICAgICB8ICAgMSArCiAxNSBmaWxlcyBjaGFu
Z2VkLCA2NDAgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQogY3JlYXRlIG1vZGUgMTAwNjQ0
IGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY19kbXViX3Nydi5jCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjX2RtdWJfc3J2LmgKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvTWFrZWZpbGUgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvTWFrZWZpbGUKaW5kZXggYTE2MDUxMmEyZjA0Li42
ZmUzOWY2MzkyYzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9N
YWtlZmlsZQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvTWFrZWZpbGUKQEAg
LTcwLDUgKzcwLDkgQEAgQU1EX0RNX1JFR19VUERBVEUgPSAkKGFkZHByZWZpeCAkKEFNRERBTFBB
VEgpL2RjLyxkY19oZWxwZXIubykKIEFNRF9ESVNQTEFZX0ZJTEVTICs9ICQoQU1EX0RJU1BMQVlf
Q09SRSkKIEFNRF9ESVNQTEFZX0ZJTEVTICs9ICQoQU1EX0RNX1JFR19VUERBVEUpCiAKLQoraWZk
ZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgorRENfRE1VQiArPSBkY19kbXViX3Nydi5vCitBTURf
RElTUExBWV9ETVVCID0gJChhZGRwcmVmaXggJChBTUREQUxQQVRIKS9kYy8sJChEQ19ETVVCKSkK
K0FNRF9ESVNQTEFZX0ZJTEVTICs9ICQoQU1EX0RJU1BMQVlfRE1VQikKK2VuZGlmCiAKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9iaW9zL2NvbW1hbmRfdGFibGUy
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvYmlvcy9jb21tYW5kX3RhYmxlMi5j
CmluZGV4IGJiMmU4MTA1ZTZhYi4uYTNkODkwMDUwZTM5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2Rpc3BsYXkvZGMvYmlvcy9jb21tYW5kX3RhYmxlMi5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvZGlzcGxheS9kYy9iaW9zL2NvbW1hbmRfdGFibGUyLmMKQEAgLTM3LDYgKzM3
LDEwIEBACiAjaW5jbHVkZSAiYmlvc19wYXJzZXJfdHlwZXNfaW50ZXJuYWwyLmgiCiAjaW5jbHVk
ZSAiYW1kZ3B1LmgiCiAKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCisjaW5jbHVkZSAi
ZGNfZG11Yl9zcnYuaCIKKyNpbmNsdWRlICJkYy5oIgorI2VuZGlmCiAKICNkZWZpbmUgRENfTE9H
R0VSIFwKIAlicC0+YmFzZS5jdHgtPmxvZ2dlcgpAQCAtMTAzLDYgKzEwNywyMSBAQCBzdGF0aWMg
dm9pZCBpbml0X2RpZ19lbmNvZGVyX2NvbnRyb2woc3RydWN0IGJpb3NfcGFyc2VyICpicCkKIAl9
CiB9CiAKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCitzdGF0aWMgdm9pZCBlbmNvZGVy
X2NvbnRyb2xfZG1jdWIoCisJCXN0cnVjdCBkY19kbXViX3NydiAqZG1jdWIsCisJCXN0cnVjdCBk
aWdfZW5jb2Rlcl9zdHJlYW1fc2V0dXBfcGFyYW1ldGVyc192MV81ICpkaWcpCit7CisJc3RydWN0
IGRtdWJfcmJfY21kX2RpZ3hfZW5jb2Rlcl9jb250cm9sIGVuY29kZXJfY29udHJvbCA9IHsgMCB9
OworCisJZW5jb2Rlcl9jb250cm9sLmhlYWRlci50eXBlID0gRE1VQl9DTURfX0RJR1hfRU5DT0RF
Ul9DT05UUk9MOworCWVuY29kZXJfY29udHJvbC5lbmNvZGVyX2NvbnRyb2wuZGlnLnN0cmVhbV9w
YXJhbSA9ICpkaWc7CisKKwlkY19kbXViX3Nydl9jbWRfcXVldWUoZG1jdWIsICZlbmNvZGVyX2Nv
bnRyb2wuaGVhZGVyKTsKKwlkY19kbXViX3Nydl9jbWRfZXhlY3V0ZShkbWN1Yik7CisJZGNfZG11
Yl9zcnZfd2FpdF9pZGxlKGRtY3ViKTsKK30KKyNlbmRpZgogc3RhdGljIGVudW0gYnBfcmVzdWx0
IGVuY29kZXJfY29udHJvbF9kaWd4X3YxXzUoCiAJc3RydWN0IGJpb3NfcGFyc2VyICpicCwKIAlz
dHJ1Y3QgYnBfZW5jb2Rlcl9jb250cm9sICpjbnRsKQpAQCAtMTU0LDYgKzE3MywxMyBAQCBzdGF0
aWMgZW51bSBicF9yZXN1bHQgZW5jb2Rlcl9jb250cm9sX2RpZ3hfdjFfNSgKIAkJZGVmYXVsdDoK
IAkJCWJyZWFrOwogCQl9CisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgorCWlmIChicC0+
YmFzZS5jdHgtPmRjLT5jdHgtPmRtdWJfc3J2ICYmCisJICAgIGJwLT5iYXNlLmN0eC0+ZGMtPmRl
YnVnLmRtdWJfY29tbWFuZF90YWJsZSkgeworCQllbmNvZGVyX2NvbnRyb2xfZG1jdWIoYnAtPmJh
c2UuY3R4LT5kbXViX3NydiwgJnBhcmFtcyk7CisJCXJldHVybiBCUF9SRVNVTFRfT0s7CisJfQor
I2VuZGlmCiAKIAlpZiAoRVhFQ19CSU9TX0NNRF9UQUJMRShkaWd4ZW5jb2RlcmNvbnRyb2wsIHBh
cmFtcykpCiAJCXJlc3VsdCA9IEJQX1JFU1VMVF9PSzsKQEAgLTE5MCw3ICsyMTYsMjEgQEAgc3Rh
dGljIHZvaWQgaW5pdF90cmFuc21pdHRlcl9jb250cm9sKHN0cnVjdCBiaW9zX3BhcnNlciAqYnAp
CiAJCWJyZWFrOwogCX0KIH0KKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCitzdGF0aWMg
dm9pZCB0cmFuc21pdHRlcl9jb250cm9sX2RtY3ViKAorCQlzdHJ1Y3QgZGNfZG11Yl9zcnYgKmRt
Y3ViLAorCQlzdHJ1Y3QgZGlnX3RyYW5zbWl0dGVyX2NvbnRyb2xfcGFyYW1ldGVyc192MV82ICpk
aWcpCit7CisJc3RydWN0IGRtdWJfcmJfY21kX2RpZzFfdHJhbnNtaXR0ZXJfY29udHJvbCB0cmFu
c21pdHRlcl9jb250cm9sOworCisJdHJhbnNtaXR0ZXJfY29udHJvbC5oZWFkZXIudHlwZSA9IERN
VUJfQ01EX19ESUcxX1RSQU5TTUlUVEVSX0NPTlRST0w7CisJdHJhbnNtaXR0ZXJfY29udHJvbC50
cmFuc21pdHRlcl9jb250cm9sLmRpZyA9ICpkaWc7CiAKKwlkY19kbXViX3Nydl9jbWRfcXVldWUo
ZG1jdWIsICZ0cmFuc21pdHRlcl9jb250cm9sLmhlYWRlcik7CisJZGNfZG11Yl9zcnZfY21kX2V4
ZWN1dGUoZG1jdWIpOworCWRjX2RtdWJfc3J2X3dhaXRfaWRsZShkbWN1Yik7Cit9CisjZW5kaWYK
IHN0YXRpYyBlbnVtIGJwX3Jlc3VsdCB0cmFuc21pdHRlcl9jb250cm9sX3YxXzYoCiAJc3RydWN0
IGJpb3NfcGFyc2VyICpicCwKIAlzdHJ1Y3QgYnBfdHJhbnNtaXR0ZXJfY29udHJvbCAqY250bCkK
QEAgLTIyMyw2ICsyNjMsMTQgQEAgc3RhdGljIGVudW0gYnBfcmVzdWx0IHRyYW5zbWl0dGVyX2Nv
bnRyb2xfdjFfNigKIAl9CiAKIAorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlpZiAo
YnAtPmJhc2UuY3R4LT5kYy0+Y3R4LT5kbXViX3NydiAmJgorCSAgICBicC0+YmFzZS5jdHgtPmRj
LT5kZWJ1Zy5kbXViX2NvbW1hbmRfdGFibGUpIHsKKwkJdHJhbnNtaXR0ZXJfY29udHJvbF9kbWN1
YihicC0+YmFzZS5jdHgtPmRtdWJfc3J2LCAmcHMucGFyYW0pOworCQlyZXR1cm4gQlBfUkVTVUxU
X09LOworCX0KKyNlbmRpZgorCiAvKmNvbG9yX2RlcHRoIG5vdCB1c2VkIGFueSBtb3JlLCBkcml2
ZXIgaGFzIGRlZXAgY29sb3IgZmFjdG9yIGluIHRoZSBQaHljbGsqLwogCWlmIChFWEVDX0JJT1Nf
Q01EX1RBQkxFKGRpZzF0cmFuc21pdHRlcmNvbnRyb2wsIHBzKSkKIAkJcmVzdWx0ID0gQlBfUkVT
VUxUX09LOwpAQCAtMjU1LDcgKzMwMywyMSBAQCBzdGF0aWMgdm9pZCBpbml0X3NldF9waXhlbF9j
bG9jayhzdHJ1Y3QgYmlvc19wYXJzZXIgKmJwKQogCX0KIH0KIAorI2lmZGVmIENPTkZJR19EUk1f
QU1EX0RDX0RNVUIKK3N0YXRpYyB2b2lkIHNldF9waXhlbF9jbG9ja19kbWN1YigKKwkJc3RydWN0
IGRjX2RtdWJfc3J2ICpkbWN1YiwKKwkJc3RydWN0IHNldF9waXhlbF9jbG9ja19wYXJhbWV0ZXJf
djFfNyAqY2xrKQoreworCXN0cnVjdCBkbXViX3JiX2NtZF9zZXRfcGl4ZWxfY2xvY2sgcGl4ZWxf
Y2xvY2sgPSB7IDAgfTsKIAorCXBpeGVsX2Nsb2NrLmhlYWRlci50eXBlICAgICA9IERNVUJfQ01E
X19TRVRfUElYRUxfQ0xPQ0s7CisJcGl4ZWxfY2xvY2sucGl4ZWxfY2xvY2suY2xrID0gKmNsazsK
KworCWRjX2RtdWJfc3J2X2NtZF9xdWV1ZShkbWN1YiwgJnBpeGVsX2Nsb2NrLmhlYWRlcik7CisJ
ZGNfZG11Yl9zcnZfY21kX2V4ZWN1dGUoZG1jdWIpOworCWRjX2RtdWJfc3J2X3dhaXRfaWRsZShk
bWN1Yik7Cit9CisjZW5kaWYKIAogc3RhdGljIGVudW0gYnBfcmVzdWx0IHNldF9waXhlbF9jbG9j
a192NygKIAlzdHJ1Y3QgYmlvc19wYXJzZXIgKmJwLApAQCAtMzMxLDYgKzM5MywxMyBAQCBzdGF0
aWMgZW51bSBicF9yZXN1bHQgc2V0X3BpeGVsX2Nsb2NrX3Y3KAogCQlpZiAoYnBfcGFyYW1zLT5z
aWduYWxfdHlwZSA9PSBTSUdOQUxfVFlQRV9EVklfRFVBTF9MSU5LKQogCQkJY2xrLm1pc2NpbmZv
IHw9IFBJWEVMX0NMT0NLX1Y3X01JU0NfRFZJX0RVQUxMSU5LX0VOOwogCisjaWZkZWYgQ09ORklH
X0RSTV9BTURfRENfRE1VQgorCQlpZiAoYnAtPmJhc2UuY3R4LT5kYy0+Y3R4LT5kbXViX3NydiAm
JgorCQkgICAgYnAtPmJhc2UuY3R4LT5kYy0+ZGVidWcuZG11Yl9jb21tYW5kX3RhYmxlKSB7CisJ
CQlzZXRfcGl4ZWxfY2xvY2tfZG1jdWIoYnAtPmJhc2UuY3R4LT5kbXViX3NydiwgJmNsayk7CisJ
CQlyZXR1cm4gQlBfUkVTVUxUX09LOworCQl9CisjZW5kaWYKIAkJaWYgKEVYRUNfQklPU19DTURf
VEFCTEUoc2V0cGl4ZWxjbG9jaywgY2xrKSkKIAkJCXJlc3VsdCA9IEJQX1JFU1VMVF9PSzsKIAl9
CkBAIC01ODQsNyArNjUzLDIxIEBAIHN0YXRpYyB2b2lkIGluaXRfZW5hYmxlX2Rpc3BfcG93ZXJf
Z2F0aW5nKAogCQlicmVhazsKIAl9CiB9CisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgor
c3RhdGljIHZvaWQgZW5hYmxlX2Rpc3BfcG93ZXJfZ2F0aW5nX2RtY3ViKAorCXN0cnVjdCBkY19k
bXViX3NydiAqZG1jdWIsCisJc3RydWN0IGVuYWJsZV9kaXNwX3Bvd2VyX2dhdGluZ19wYXJhbWV0
ZXJzX3YyXzEgKnB3cikKK3sKKwlzdHJ1Y3QgZG11Yl9yYl9jbWRfZW5hYmxlX2Rpc3BfcG93ZXJf
Z2F0aW5nIHBvd2VyX2dhdGluZzsKKworCXBvd2VyX2dhdGluZy5oZWFkZXIudHlwZSAgICAgID0g
RE1VQl9DTURfX0VOQUJMRV9ESVNQX1BPV0VSX0dBVElORzsKKwlwb3dlcl9nYXRpbmcucG93ZXJf
Z2F0aW5nLnB3ciA9ICpwd3I7CiAKKwlkY19kbXViX3Nydl9jbWRfcXVldWUoZG1jdWIsICZwb3dl
cl9nYXRpbmcuaGVhZGVyKTsKKwlkY19kbXViX3Nydl9jbWRfZXhlY3V0ZShkbWN1Yik7CisJZGNf
ZG11Yl9zcnZfd2FpdF9pZGxlKGRtY3ViKTsKK30KKyNlbmRpZgogc3RhdGljIGVudW0gYnBfcmVz
dWx0IGVuYWJsZV9kaXNwX3Bvd2VyX2dhdGluZ192Ml8xKAogCXN0cnVjdCBiaW9zX3BhcnNlciAq
YnAsCiAJZW51bSBjb250cm9sbGVyX2lkIGNydGNfaWQsCkBAIC02MDQsNiArNjg3LDE0IEBAIHN0
YXRpYyBlbnVtIGJwX3Jlc3VsdCBlbmFibGVfZGlzcF9wb3dlcl9nYXRpbmdfdjJfMSgKIAlwcy5w
YXJhbS5lbmFibGUgPQogCQlicC0+Y21kX2hlbHBlci0+ZGlzcF9wb3dlcl9nYXRpbmdfYWN0aW9u
X3RvX2F0b20oYWN0aW9uKTsKIAorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlpZiAo
YnAtPmJhc2UuY3R4LT5kYy0+Y3R4LT5kbXViX3NydiAmJgorCSAgICBicC0+YmFzZS5jdHgtPmRj
LT5kZWJ1Zy5kbXViX2NvbW1hbmRfdGFibGUpIHsKKwkJZW5hYmxlX2Rpc3BfcG93ZXJfZ2F0aW5n
X2RtY3ViKGJwLT5iYXNlLmN0eC0+ZG11Yl9zcnYsCisJCQkJCSAgICAgICAmcHMucGFyYW0pOwor
CQlyZXR1cm4gQlBfUkVTVUxUX09LOworCX0KKyNlbmRpZgogCWlmIChFWEVDX0JJT1NfQ01EX1RB
QkxFKGVuYWJsZWRpc3Bwb3dlcmdhdGluZywgcHMucGFyYW0pKQogCQlyZXN1bHQgPSBCUF9SRVNV
TFRfT0s7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9jb3Jl
L2RjLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kYy5jCmluZGV4IDMy
ZjMxYmY5MTkxNS4uMmJmNGRhNDE1NzdhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2Rpc3BsYXkvZGMvY29yZS9kYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9k
Yy9jb3JlL2RjLmMKQEAgLTU5LDYgKzU5LDEwIEBACiAKICNpbmNsdWRlICJkY19saW5rX2RwLmgi
CiAKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCisjaW5jbHVkZSAiZGNfZG11Yl9zcnYu
aCIKKyNlbmRpZgorCiAjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRFNDX1NVUFBPUlQKICNpbmNs
dWRlICJkc2MuaCIKICNlbmRpZgpAQCAtMjQwNiw2ICsyNDEwLDEwIEBAIHZvaWQgZGNfc2V0X3Bv
d2VyX3N0YXRlKAogCXN3aXRjaCAocG93ZXJfc3RhdGUpIHsKIAljYXNlIERDX0FDUElfQ01fUE9X
RVJfU1RBVEVfRDA6CiAJCWRjX3Jlc291cmNlX3N0YXRlX2NvbnN0cnVjdChkYywgZGMtPmN1cnJl
bnRfc3RhdGUpOworI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwkJaWYgKGRjLT5jdHgt
PmRtdWJfc3J2KQorCQkJZGNfZG11Yl9zcnZfd2FpdF9waHlfaW5pdChkYy0+Y3R4LT5kbXViX3Ny
dik7CisjZW5kaWYKIAogCQlkYy0+aHdzcy5pbml0X2h3KGRjKTsKIApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rp
c3BsYXkvZGMvZGMuaAppbmRleCAwNDE2YTE3YjA4OTcuLjMzODI4ZjAzZmU5ZSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjLmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L2RjL2RjLmgKQEAgLTExMiw2ICsxMTIsOSBAQCBzdHJ1Y3QgZGNfY2Fw
cyB7CiAJYm9vbCBkaXNhYmxlX2RwX2Nsa19zaGFyZTsKIAlib29sIHBzcF9zZXR1cF9wYW5lbF9t
b2RlOwogCWJvb2wgZXh0ZW5kZWRfYXV4X3RpbWVvdXRfc3VwcG9ydDsKKyNpZmRlZiBDT05GSUdf
RFJNX0FNRF9EQ19ETVVCCisJYm9vbCBkbWN1Yl9zdXBwb3J0OworI2VuZGlmCiAjaWZkZWYgQ09O
RklHX0RSTV9BTURfRENfRENOMl8wCiAJYm9vbCBod18zZF9sdXQ7CiAjZW5kaWYKQEAgLTQwMSw2
ICs0MDQsMTEgQEAgc3RydWN0IGRjX2RlYnVnX29wdGlvbnMgewogCXVuc2lnbmVkIGludCBmb3Jj
ZV9vZG1fY29tYmluZTsgLy9iaXQgdmVjdG9yIGJhc2VkIG9uIG90ZyBpbnN0CiAJdW5zaWduZWQg
aW50IGZvcmNlX2ZjbGtfa2h6OwogCWJvb2wgZGlzYWJsZV90cmlfYnVmOworI2lmZGVmIENPTkZJ
R19EUk1fQU1EX0RDX0RNVUIKKwlib29sIGRtdWJfb2ZmbG9hZF9lbmFibGVkOworCWJvb2wgZG1j
dWJfZW11bGF0aW9uOworCWJvb2wgZG11Yl9jb21tYW5kX3RhYmxlOyAvKiBmb3IgdGVzdGluZyBv
bmx5ICovCisjZW5kaWYKIAlzdHJ1Y3QgZGNfYndfdmFsaWRhdGlvbl9wcm9maWxlIGJ3X3ZhbF9w
cm9maWxlOwogI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RTQ19TVVBQT1JUCiAJYm9vbCBkaXNh
YmxlX2ZlYzsKQEAgLTU1OCw2ICs1NjYsMTAgQEAgc3RydWN0IGRjX2luaXRfZGF0YSB7CiAJc3Ry
dWN0IGRjX2Jpb3MgKnZiaW9zX292ZXJyaWRlOwogCWVudW0gZGNlX2Vudmlyb25tZW50IGRjZV9l
bnZpcm9ubWVudDsKIAorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlzdHJ1Y3QgZG11
Yl9vZmZsb2FkX2Z1bmNzICpkbXViX2lmOworCXN0cnVjdCBkY19yZWdfaGVscGVyX3N0YXRlICpk
bXViX29mZmxvYWQ7CisjZW5kaWYKIAlzdHJ1Y3QgZGNfY29uZmlnIGZsYWdzOwogCXVpbnQzMl90
IGxvZ19tYXNrOwogI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMApkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjX2RtdWJfc3J2LmMgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNfZG11Yl9zcnYuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCAwMDAwMDAwMDAwMDAuLjYxY2VmZTBhMzc5MAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY19kbXViX3Nydi5jCkBAIC0wLDAgKzEsMTE5IEBA
CisvKgorICogQ29weXJpZ2h0IDIwMTkgQWR2YW5jZWQgTWljcm8gRGV2aWNlcywgSW5jLgorICoK
KyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkg
cGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0
ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0
aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
dGlvbgorICogdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gs
IGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNv
ZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlz
IGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6
CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBu
b3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KKyAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwg
cG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgorICoKKyAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURF
RCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCisgKiBJ
TVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1F
UkNIQU5UQUJJTElUWSwKKyAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBO
T05JTkZSSU5HRU1FTlQuICBJTiBOTyBFVkVOVCBTSEFMTAorICogVEhFIENPUFlSSUdIVCBIT0xE
RVIoUykgT1IgQVVUSE9SKFMpIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SCisg
KiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JU
IE9SIE9USEVSV0lTRSwKKyAqIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04g
V0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUgorICogT1RIRVIgREVBTElOR1MgSU4gVEhF
IFNPRlRXQVJFLgorICoKKyAqIEF1dGhvcnM6IEFNRAorICoKKyAqLworCisjaW5jbHVkZSAiZGMu
aCIKKyNpbmNsdWRlICJkY19kbXViX3Nydi5oIgorI2luY2x1ZGUgIi4uL2RtdWIvaW5jL2RtdWJf
c3J2LmgiCisKK3N0YXRpYyB2b2lkIGRjX2RtdWJfc3J2X2NvbnN0cnVjdChzdHJ1Y3QgZGNfZG11
Yl9zcnYgKmRjX3Nydiwgc3RydWN0IGRjICpkYywKKwkJCQkgIHN0cnVjdCBkbXViX3NydiAqZG11
YikKK3sKKwlkY19zcnYtPmRtdWIgPSBkbXViOworCWRjX3Nydi0+Y3R4ID0gZGMtPmN0eDsKK30K
Kworc3RydWN0IGRjX2RtdWJfc3J2ICpkY19kbXViX3Nydl9jcmVhdGUoc3RydWN0IGRjICpkYywg
c3RydWN0IGRtdWJfc3J2ICpkbXViKQoreworCXN0cnVjdCBkY19kbXViX3NydiAqZGNfc3J2ID0K
KwkJa3phbGxvYyhzaXplb2Yoc3RydWN0IGRjX2RtdWJfc3J2KSwgR0ZQX0tFUk5FTCk7CisKKwlp
ZiAoZGNfc3J2ID09IE5VTEwpIHsKKwkJQlJFQUtfVE9fREVCVUdHRVIoKTsKKwkJcmV0dXJuIE5V
TEw7CisJfQorCisJZGNfZG11Yl9zcnZfY29uc3RydWN0KGRjX3NydiwgZGMsIGRtdWIpOworCisJ
cmV0dXJuIGRjX3NydjsKK30KKwordm9pZCBkY19kbXViX3Nydl9kZXN0cm95KHN0cnVjdCBkY19k
bXViX3NydiAqKmRtdWJfc3J2KQoreworCWlmICgqZG11Yl9zcnYpIHsKKwkJa2ZyZWUoKmRtdWJf
c3J2KTsKKwkJKmRtdWJfc3J2ID0gTlVMTDsKKwl9Cit9CisKK3ZvaWQgZGNfZG11Yl9zcnZfY21k
X3F1ZXVlKHN0cnVjdCBkY19kbXViX3NydiAqZGNfZG11Yl9zcnYsCisJCQkgICBzdHJ1Y3QgZG11
Yl9jbWRfaGVhZGVyICpjbWQpCit7CisJc3RydWN0IGRtdWJfc3J2ICpkbXViID0gZGNfZG11Yl9z
cnYtPmRtdWI7CisJc3RydWN0IGRjX2NvbnRleHQgKmRjX2N0eCA9IGRjX2RtdWJfc3J2LT5jdHg7
CisJZW51bSBkbXViX3N0YXR1cyBzdGF0dXM7CisKKwlzdGF0dXMgPSBkbXViX3Nydl9jbWRfcXVl
dWUoZG11YiwgY21kKTsKKwlpZiAoc3RhdHVzID09IERNVUJfU1RBVFVTX09LKQorCQlyZXR1cm47
CisKKwlpZiAoc3RhdHVzICE9IERNVUJfU1RBVFVTX1FVRVVFX0ZVTEwpCisJCWdvdG8gZXJyb3I7
CisKKwkvKiBFeGVjdXRlIGFuZCB3YWl0IGZvciBxdWV1ZSB0byBiZWNvbWUgZW1wdHkgYWdhaW4u
ICovCisJZGNfZG11Yl9zcnZfY21kX2V4ZWN1dGUoZGNfZG11Yl9zcnYpOworCWRjX2RtdWJfc3J2
X3dhaXRfaWRsZShkY19kbXViX3Nydik7CisKKwkvKiBSZXF1ZXVlIHRoZSBjb21tYW5kLiAqLwor
CXN0YXR1cyA9IGRtdWJfc3J2X2NtZF9xdWV1ZShkbXViLCBjbWQpOworCWlmIChzdGF0dXMgPT0g
RE1VQl9TVEFUVVNfT0spCisJCXJldHVybjsKKworZXJyb3I6CisJRENfRVJST1IoIkVycm9yIHF1
ZXVpbmcgRE1VQiBjb21tYW5kOiBzdGF0dXM9JWRcbiIsIHN0YXR1cyk7Cit9CisKK3ZvaWQgZGNf
ZG11Yl9zcnZfY21kX2V4ZWN1dGUoc3RydWN0IGRjX2RtdWJfc3J2ICpkY19kbXViX3NydikKK3sK
KwlzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIgPSBkY19kbXViX3Nydi0+ZG11YjsKKwlzdHJ1Y3QgZGNf
Y29udGV4dCAqZGNfY3R4ID0gZGNfZG11Yl9zcnYtPmN0eDsKKwllbnVtIGRtdWJfc3RhdHVzIHN0
YXR1czsKKworCXN0YXR1cyA9IGRtdWJfc3J2X2NtZF9leGVjdXRlKGRtdWIpOworCWlmIChzdGF0
dXMgIT0gRE1VQl9TVEFUVVNfT0spCisJCURDX0VSUk9SKCJFcnJvciBzdGFydGluZyBETVVCIGV4
ZXVjdGlvbjogc3RhdHVzPSVkXG4iLCBzdGF0dXMpOworfQorCit2b2lkIGRjX2RtdWJfc3J2X3dh
aXRfaWRsZShzdHJ1Y3QgZGNfZG11Yl9zcnYgKmRjX2RtdWJfc3J2KQoreworCXN0cnVjdCBkbXVi
X3NydiAqZG11YiA9IGRjX2RtdWJfc3J2LT5kbXViOworCXN0cnVjdCBkY19jb250ZXh0ICpkY19j
dHggPSBkY19kbXViX3Nydi0+Y3R4OworCWVudW0gZG11Yl9zdGF0dXMgc3RhdHVzOworCisJc3Rh
dHVzID0gZG11Yl9zcnZfd2FpdF9mb3JfaWRsZShkbXViLCAxMDAwMDApOworCWlmIChzdGF0dXMg
IT0gRE1VQl9TVEFUVVNfT0spCisJCURDX0VSUk9SKCJFcnJvciB3YWl0aW5nIGZvciBETVVCIGlk
bGU6IHN0YXR1cz0lZFxuIiwgc3RhdHVzKTsKK30KKwordm9pZCBkY19kbXViX3Nydl93YWl0X3Bo
eV9pbml0KHN0cnVjdCBkY19kbXViX3NydiAqZGNfZG11Yl9zcnYpCit7CisJc3RydWN0IGRtdWJf
c3J2ICpkbXViID0gZGNfZG11Yl9zcnYtPmRtdWI7CisJc3RydWN0IGRjX2NvbnRleHQgKmRjX2N0
eCA9IGRjX2RtdWJfc3J2LT5jdHg7CisJZW51bSBkbXViX3N0YXR1cyBzdGF0dXM7CisKKwlzdGF0
dXMgPSBkbXViX3Nydl93YWl0X2Zvcl9waHlfaW5pdChkbXViLCAxMDAwMDAwKTsKKwlpZiAoc3Rh
dHVzICE9IERNVUJfU1RBVFVTX09LKQorCQlEQ19FUlJPUigiRXJyb3Igd2FpdGluZyBmb3IgRE1V
QiBwaHkgaW5pdDogc3RhdHVzPSVkXG4iLAorCQkJIHN0YXR1cyk7Cit9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNfZG11Yl9zcnYuaCBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvZGlzcGxheS9kYy9kY19kbXViX3Nydi5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAwMC4uNzU0YjYwNzc1MzljCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjX2RtdWJfc3J2LmgKQEAgLTAsMCArMSw2MCBAQAor
LyoKKyAqIENvcHlyaWdodCAyMDE4IEFkdmFuY2VkIE1pY3JvIERldmljZXMsIEluYy4KKyAqCisg
KiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBl
cnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVk
IGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwKKyAqIHRvIGRlYWwgaW4gdGhl
IFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRp
b24KKyAqIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBk
aXN0cmlidXRlLCBzdWJsaWNlbnNlLAorICogYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0
d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCisgKiBTb2Z0d2FyZSBpcyBm
dXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgor
ICoKKyAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90
aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCisgKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBv
cnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQg
IkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorICogSU1Q
TElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJD
SEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9O
SU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBDT1BZUklHSFQgSE9MREVS
KFMpIE9SIEFVVEhPUihTKSBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUgorICog
T1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBP
UiBPVEhFUldJU0UsCisgKiBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJ
VEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKKyAqIE9USEVSIERFQUxJTkdTIElOIFRIRSBT
T0ZUV0FSRS4KKyAqCisgKiBBdXRob3JzOiBBTUQKKyAqCisgKi8KKworI2lmbmRlZiBfRE1VQl9E
Q19TUlZfSF8KKyNkZWZpbmUgX0RNVUJfRENfU1JWX0hfCisKKyNpbmNsdWRlICJvc190eXBlcy5o
IgorI2luY2x1ZGUgIi4uL2RtdWIvaW5jL2RtdWJfY21kLmgiCisKK3N0cnVjdCBkbXViX3NydjsK
K3N0cnVjdCBkbXViX2NtZF9oZWFkZXI7CisKK3N0cnVjdCBkY19yZWdfaGVscGVyX3N0YXRlIHsK
Kwlib29sIGdhdGhlcl9pbl9wcm9ncmVzczsKKwl1aW50MzJfdCBzYW1lX2FkZHJfY291bnQ7CisJ
Ym9vbCBzaG91bGRfYnVyc3Rfd3JpdGU7CisJdW5pb24gZG11Yl9yYl9jbWQgY21kX2RhdGE7CisJ
dW5zaWduZWQgaW50IHJlZ19zZXFfY291bnQ7Cit9OworCitzdHJ1Y3QgZGNfZG11Yl9zcnYgewor
CXN0cnVjdCBkbXViX3NydiAqZG11YjsKKwlzdHJ1Y3QgZGNfcmVnX2hlbHBlcl9zdGF0ZSByZWdf
aGVscGVyX29mZmxvYWQ7CisKKwlzdHJ1Y3QgZGNfY29udGV4dCAqY3R4OworCXZvaWQgKmRtOwor
fTsKKwordm9pZCBkY19kbXViX3Nydl9jbWRfcXVldWUoc3RydWN0IGRjX2RtdWJfc3J2ICpkY19k
bXViX3NydiwKKwkJCSAgIHN0cnVjdCBkbXViX2NtZF9oZWFkZXIgKmNtZCk7CisKK3ZvaWQgZGNf
ZG11Yl9zcnZfY21kX2V4ZWN1dGUoc3RydWN0IGRjX2RtdWJfc3J2ICpkY19kbXViX3Nydik7CisK
K3ZvaWQgZGNfZG11Yl9zcnZfd2FpdF9pZGxlKHN0cnVjdCBkY19kbXViX3NydiAqZGNfZG11Yl9z
cnYpOworCit2b2lkIGRjX2RtdWJfc3J2X3dhaXRfcGh5X2luaXQoc3RydWN0IGRjX2RtdWJfc3J2
ICpkY19kbXViX3Nydik7CisKKyNlbmRpZiAvKiBfRE1VQl9EQ19TUlZfSF8gKi8KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY19oZWxwZXIuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY19oZWxwZXIuYwppbmRleCAzMGIyZjllZGQ0MmYuLjU5
YjRiYmVmYjdhNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2Rj
X2hlbHBlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY19oZWxwZXIu
YwpAQCAtMzIsNiArMzIsNzYgQEAKICNpbmNsdWRlICJkbV9zZXJ2aWNlcy5oIgogI2luY2x1ZGUg
PHN0ZGFyZy5oPgogCisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgorI2luY2x1ZGUgImRj
LmgiCisjaW5jbHVkZSAiZGNfZG11Yl9zcnYuaCIKKworc3RhdGljIGlubGluZSB2b2lkIHN1Ym1p
dF9kbXViX3JlYWRfbW9kaWZ5X3dyaXRlKAorCXN0cnVjdCBkY19yZWdfaGVscGVyX3N0YXRlICpv
ZmZsb2FkLAorCWNvbnN0IHN0cnVjdCBkY19jb250ZXh0ICpjdHgpCit7CisJc3RydWN0IGRtdWJf
cmJfY21kX3JlYWRfbW9kaWZ5X3dyaXRlICpjbWRfYnVmID0gJm9mZmxvYWQtPmNtZF9kYXRhLnJl
YWRfbW9kaWZ5X3dyaXRlOworCWJvb2wgZ2F0aGVyID0gZmFsc2U7CisKKwlvZmZsb2FkLT5zaG91
bGRfYnVyc3Rfd3JpdGUgPQorCQkJKG9mZmxvYWQtPnNhbWVfYWRkcl9jb3VudCA9PSAoRE1VQl9S
RUFEX01PRElGWV9XUklURV9TRVFfX01BWCAtIDEpKTsKKwljbWRfYnVmLT5oZWFkZXIucGF5bG9h
ZF9ieXRlcyA9CisJCQlzaXplb2Yoc3RydWN0IGRtdWJfY21kX3JlYWRfbW9kaWZ5X3dyaXRlX3Nl
cXVlbmNlKSAqIG9mZmxvYWQtPnJlZ19zZXFfY291bnQ7CisKKwlnYXRoZXIgPSBjdHgtPmRtdWJf
c3J2LT5yZWdfaGVscGVyX29mZmxvYWQuZ2F0aGVyX2luX3Byb2dyZXNzOworCWN0eC0+ZG11Yl9z
cnYtPnJlZ19oZWxwZXJfb2ZmbG9hZC5nYXRoZXJfaW5fcHJvZ3Jlc3MgPSBmYWxzZTsKKworCWRj
X2RtdWJfc3J2X2NtZF9xdWV1ZShjdHgtPmRtdWJfc3J2LCAmY21kX2J1Zi0+aGVhZGVyKTsKKwor
CWN0eC0+ZG11Yl9zcnYtPnJlZ19oZWxwZXJfb2ZmbG9hZC5nYXRoZXJfaW5fcHJvZ3Jlc3MgPSBn
YXRoZXI7CisKKwltZW1zZXQoY21kX2J1ZiwgMCwgc2l6ZW9mKCpjbWRfYnVmKSk7CisKKwlvZmZs
b2FkLT5yZWdfc2VxX2NvdW50ID0gMDsKKwlvZmZsb2FkLT5zYW1lX2FkZHJfY291bnQgPSAwOwor
fQorCitzdGF0aWMgaW5saW5lIHZvaWQgc3VibWl0X2RtdWJfYnVyc3Rfd3JpdGUoCisJc3RydWN0
IGRjX3JlZ19oZWxwZXJfc3RhdGUgKm9mZmxvYWQsCisJY29uc3Qgc3RydWN0IGRjX2NvbnRleHQg
KmN0eCkKK3sKKwlzdHJ1Y3QgZG11Yl9yYl9jbWRfYnVyc3Rfd3JpdGUgKmNtZF9idWYgPSAmb2Zm
bG9hZC0+Y21kX2RhdGEuYnVyc3Rfd3JpdGU7CisJYm9vbCBnYXRoZXIgPSBmYWxzZTsKKworCWNt
ZF9idWYtPmhlYWRlci5wYXlsb2FkX2J5dGVzID0KKwkJCXNpemVvZih1aW50MzJfdCkgKiBvZmZs
b2FkLT5yZWdfc2VxX2NvdW50OworCisJZ2F0aGVyID0gY3R4LT5kbXViX3Nydi0+cmVnX2hlbHBl
cl9vZmZsb2FkLmdhdGhlcl9pbl9wcm9ncmVzczsKKwljdHgtPmRtdWJfc3J2LT5yZWdfaGVscGVy
X29mZmxvYWQuZ2F0aGVyX2luX3Byb2dyZXNzID0gZmFsc2U7CisKKwlkY19kbXViX3Nydl9jbWRf
cXVldWUoY3R4LT5kbXViX3NydiwgJmNtZF9idWYtPmhlYWRlcik7CisKKwljdHgtPmRtdWJfc3J2
LT5yZWdfaGVscGVyX29mZmxvYWQuZ2F0aGVyX2luX3Byb2dyZXNzID0gZ2F0aGVyOworCisJbWVt
c2V0KGNtZF9idWYsIDAsIHNpemVvZigqY21kX2J1ZikpOworCisJb2ZmbG9hZC0+cmVnX3NlcV9j
b3VudCA9IDA7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBzdWJtaXRfZG11Yl9yZWdfd2FpdCgK
KwkJc3RydWN0IGRjX3JlZ19oZWxwZXJfc3RhdGUgKm9mZmxvYWQsCisJCWNvbnN0IHN0cnVjdCBk
Y19jb250ZXh0ICpjdHgpCit7CisJc3RydWN0IGRtdWJfcmJfY21kX3JlZ193YWl0ICpjbWRfYnVm
ID0gJm9mZmxvYWQtPmNtZF9kYXRhLnJlZ193YWl0OworCWJvb2wgZ2F0aGVyID0gZmFsc2U7CisK
KwlnYXRoZXIgPSBjdHgtPmRtdWJfc3J2LT5yZWdfaGVscGVyX29mZmxvYWQuZ2F0aGVyX2luX3By
b2dyZXNzOworCWN0eC0+ZG11Yl9zcnYtPnJlZ19oZWxwZXJfb2ZmbG9hZC5nYXRoZXJfaW5fcHJv
Z3Jlc3MgPSBmYWxzZTsKKworCWRjX2RtdWJfc3J2X2NtZF9xdWV1ZShjdHgtPmRtdWJfc3J2LCAm
Y21kX2J1Zi0+aGVhZGVyKTsKKworCW1lbXNldChjbWRfYnVmLCAwLCBzaXplb2YoKmNtZF9idWYp
KTsKKwlvZmZsb2FkLT5yZWdfc2VxX2NvdW50ID0gMDsKKworCWN0eC0+ZG11Yl9zcnYtPnJlZ19o
ZWxwZXJfb2ZmbG9hZC5nYXRoZXJfaW5fcHJvZ3Jlc3MgPSBnYXRoZXI7Cit9CisjZW5kaWYKKwog
c3RydWN0IGRjX3JlZ192YWx1ZV9tYXNrcyB7CiAJdWludDMyX3QgdmFsdWU7CiAJdWludDMyX3Qg
bWFzazsKQEAgLTc3LDYgKzE0NywxMDAgQEAgc3RhdGljIHZvaWQgc2V0X3JlZ19maWVsZF92YWx1
ZXMoc3RydWN0IGRjX3JlZ192YWx1ZV9tYXNrcyAqZmllbGRfdmFsdWVfbWFzaywKIAl9CiB9CiAK
KyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCitzdGF0aWMgdm9pZCBkbXViX2ZsdXNoX2J1
ZmZlcl9leGVjdXRlKAorCQlzdHJ1Y3QgZGNfcmVnX2hlbHBlcl9zdGF0ZSAqb2ZmbG9hZCwKKwkJ
Y29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0eCkKK3sKKwlzdWJtaXRfZG11Yl9yZWFkX21vZGlm
eV93cml0ZShvZmZsb2FkLCBjdHgpOworCWRjX2RtdWJfc3J2X2NtZF9leGVjdXRlKGN0eC0+ZG11
Yl9zcnYpOworfQorCitzdGF0aWMgdm9pZCBkbXViX2ZsdXNoX2J1cnN0X3dyaXRlX2J1ZmZlcl9l
eGVjdXRlKAorCQlzdHJ1Y3QgZGNfcmVnX2hlbHBlcl9zdGF0ZSAqb2ZmbG9hZCwKKwkJY29uc3Qg
c3RydWN0IGRjX2NvbnRleHQgKmN0eCkKK3sKKwlzdWJtaXRfZG11Yl9idXJzdF93cml0ZShvZmZs
b2FkLCBjdHgpOworCWRjX2RtdWJfc3J2X2NtZF9leGVjdXRlKGN0eC0+ZG11Yl9zcnYpOworfQor
CitzdGF0aWMgYm9vbCBkbXViX3JlZ192YWx1ZV9idXJzdF9zZXRfcGFjayhjb25zdCBzdHJ1Y3Qg
ZGNfY29udGV4dCAqY3R4LCB1aW50MzJfdCBhZGRyLAorCQl1aW50MzJfdCByZWdfdmFsKQorewor
CXN0cnVjdCBkY19yZWdfaGVscGVyX3N0YXRlICpvZmZsb2FkID0gJmN0eC0+ZG11Yl9zcnYtPnJl
Z19oZWxwZXJfb2ZmbG9hZDsKKwlzdHJ1Y3QgZG11Yl9yYl9jbWRfYnVyc3Rfd3JpdGUgKmNtZF9i
dWYgPSAmb2ZmbG9hZC0+Y21kX2RhdGEuYnVyc3Rfd3JpdGU7CisKKwkvKiBmbHVzaCBjb21tYW5k
IGlmIGJ1ZmZlciBpcyBmdWxsICovCisJaWYgKG9mZmxvYWQtPnJlZ19zZXFfY291bnQgPT0gRE1V
Ql9CVVJTVF9XUklURV9WQUxVRVNfX01BWCkKKwkJZG11Yl9mbHVzaF9idXJzdF93cml0ZV9idWZm
ZXJfZXhlY3V0ZShvZmZsb2FkLCBjdHgpOworCisJaWYgKG9mZmxvYWQtPmNtZF9kYXRhLmNtZF9j
b21tb24uaGVhZGVyLnR5cGUgPT0gRE1VQl9DTURfX1JFR19TRVFfQlVSU1RfV1JJVEUgJiYKKwkJ
CWFkZHIgIT0gY21kX2J1Zi0+YWRkcikgeworCQlkbXViX2ZsdXNoX2J1cnN0X3dyaXRlX2J1ZmZl
cl9leGVjdXRlKG9mZmxvYWQsIGN0eCk7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwljbWRfYnVm
LT5oZWFkZXIudHlwZSA9IERNVUJfQ01EX19SRUdfU0VRX0JVUlNUX1dSSVRFOworCWNtZF9idWYt
PmFkZHIgPSBhZGRyOworCWNtZF9idWYtPndyaXRlX3ZhbHVlc1tvZmZsb2FkLT5yZWdfc2VxX2Nv
dW50XSA9IHJlZ192YWw7CisJb2ZmbG9hZC0+cmVnX3NlcV9jb3VudCsrOworCisJcmV0dXJuIHRy
dWU7Cit9CisKK3N0YXRpYyB1aW50MzJfdCBkbXViX3JlZ192YWx1ZV9wYWNrKGNvbnN0IHN0cnVj
dCBkY19jb250ZXh0ICpjdHgsIHVpbnQzMl90IGFkZHIsCisJCXN0cnVjdCBkY19yZWdfdmFsdWVf
bWFza3MgKmZpZWxkX3ZhbHVlX21hc2spCit7CisJc3RydWN0IGRjX3JlZ19oZWxwZXJfc3RhdGUg
Km9mZmxvYWQgPSAmY3R4LT5kbXViX3Nydi0+cmVnX2hlbHBlcl9vZmZsb2FkOworCXN0cnVjdCBk
bXViX3JiX2NtZF9yZWFkX21vZGlmeV93cml0ZSAqY21kX2J1ZiA9ICZvZmZsb2FkLT5jbWRfZGF0
YS5yZWFkX21vZGlmeV93cml0ZTsKKwlzdHJ1Y3QgZG11Yl9jbWRfcmVhZF9tb2RpZnlfd3JpdGVf
c2VxdWVuY2UgKnNlcTsKKworCS8qIGZsdXNoIGNvbW1hbmQgaWYgYnVmZmVyIGlzIGZ1bGwgKi8K
KwlpZiAob2ZmbG9hZC0+Y21kX2RhdGEuY21kX2NvbW1vbi5oZWFkZXIudHlwZSAhPSBETVVCX0NN
RF9fUkVHX1NFUV9CVVJTVF9XUklURSAmJgorCQkJb2ZmbG9hZC0+cmVnX3NlcV9jb3VudCA9PSBE
TVVCX1JFQURfTU9ESUZZX1dSSVRFX1NFUV9fTUFYKQorCQlkbXViX2ZsdXNoX2J1ZmZlcl9leGVj
dXRlKG9mZmxvYWQsIGN0eCk7CisKKwlpZiAob2ZmbG9hZC0+c2hvdWxkX2J1cnN0X3dyaXRlKSB7
CisJCWlmIChkbXViX3JlZ192YWx1ZV9idXJzdF9zZXRfcGFjayhjdHgsIGFkZHIsIGZpZWxkX3Zh
bHVlX21hc2stPnZhbHVlKSkKKwkJCXJldHVybiBmaWVsZF92YWx1ZV9tYXNrLT52YWx1ZTsKKwkJ
ZWxzZQorCQkJb2ZmbG9hZC0+c2hvdWxkX2J1cnN0X3dyaXRlID0gZmFsc2U7CisJfQorCisJLyog
cGFjayBjb21tYW5kcyAqLworCWNtZF9idWYtPmhlYWRlci50eXBlID0gRE1VQl9DTURfX1JFR19T
RVFfUkVBRF9NT0RJRllfV1JJVEU7CisJc2VxID0gJmNtZF9idWYtPnNlcVtvZmZsb2FkLT5yZWdf
c2VxX2NvdW50XTsKKworCWlmIChvZmZsb2FkLT5yZWdfc2VxX2NvdW50KSB7CisJCWlmIChjbWRf
YnVmLT5zZXFbb2ZmbG9hZC0+cmVnX3NlcV9jb3VudCAtIDFdLmFkZHIgPT0gYWRkcikKKwkJCW9m
ZmxvYWQtPnNhbWVfYWRkcl9jb3VudCsrOworCQllbHNlCisJCQlvZmZsb2FkLT5zYW1lX2FkZHJf
Y291bnQgPSAwOworCX0KKworCXNlcS0+YWRkciA9IGFkZHI7CisJc2VxLT5tb2RpZnlfbWFzayA9
IGZpZWxkX3ZhbHVlX21hc2stPm1hc2s7CisJc2VxLT5tb2RpZnlfdmFsdWUgPSBmaWVsZF92YWx1
ZV9tYXNrLT52YWx1ZTsKKwlvZmZsb2FkLT5yZWdfc2VxX2NvdW50Kys7CisKKwlyZXR1cm4gZmll
bGRfdmFsdWVfbWFzay0+dmFsdWU7Cit9CisKK3N0YXRpYyB2b2lkIGRtdWJfcmVnX3dhaXRfZG9u
ZV9wYWNrKGNvbnN0IHN0cnVjdCBkY19jb250ZXh0ICpjdHgsIHVpbnQzMl90IGFkZHIsCisJCXVp
bnQzMl90IG1hc2ssIHVpbnQzMl90IHNoaWZ0LCB1aW50MzJfdCBjb25kaXRpb25fdmFsdWUsIHVp
bnQzMl90IHRpbWVfb3V0X3VzKQoreworCXN0cnVjdCBkY19yZWdfaGVscGVyX3N0YXRlICpvZmZs
b2FkID0gJmN0eC0+ZG11Yl9zcnYtPnJlZ19oZWxwZXJfb2ZmbG9hZDsKKwlzdHJ1Y3QgZG11Yl9y
Yl9jbWRfcmVnX3dhaXQgKmNtZF9idWYgPSAmb2ZmbG9hZC0+Y21kX2RhdGEucmVnX3dhaXQ7CisK
KwljbWRfYnVmLT5oZWFkZXIudHlwZSA9IERNVUJfQ01EX19SRUdfUkVHX1dBSVQ7CisJY21kX2J1
Zi0+cmVnX3dhaXQuYWRkciA9IGFkZHI7CisJY21kX2J1Zi0+cmVnX3dhaXQuY29uZGl0aW9uX2Zp
ZWxkX3ZhbHVlID0gbWFzayAmIChjb25kaXRpb25fdmFsdWUgPDwgc2hpZnQpOworCWNtZF9idWYt
PnJlZ193YWl0Lm1hc2sgPSBtYXNrOworCWNtZF9idWYtPnJlZ193YWl0LnRpbWVfb3V0X3VzID0g
dGltZV9vdXRfdXM7Cit9CisKKyNlbmRpZgorCiB1aW50MzJfdCBnZW5lcmljX3JlZ191cGRhdGVf
ZXgoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0eCwKIAkJdWludDMyX3QgYWRkciwgaW50IG4s
CiAJCXVpbnQ4X3Qgc2hpZnQxLCB1aW50MzJfdCBtYXNrMSwgdWludDMyX3QgZmllbGRfdmFsdWUx
LApAQCAtOTMsNiArMjU3LDEzIEBAIHVpbnQzMl90IGdlbmVyaWNfcmVnX3VwZGF0ZV9leChjb25z
dCBzdHJ1Y3QgZGNfY29udGV4dCAqY3R4LAogCiAJdmFfZW5kKGFwKTsKIAorI2lmZGVmIENPTkZJ
R19EUk1fQU1EX0RDX0RNVUIKKwlpZiAoY3R4LT5kbXViX3NydiAmJgorCSAgICBjdHgtPmRtdWJf
c3J2LT5yZWdfaGVscGVyX29mZmxvYWQuZ2F0aGVyX2luX3Byb2dyZXNzKQorCQlyZXR1cm4gZG11
Yl9yZWdfdmFsdWVfcGFjayhjdHgsIGFkZHIsICZmaWVsZF92YWx1ZV9tYXNrKTsKKwkJLyogdG9k
bzogcmV0dXJuIHZvaWQgc28gd2UgY2FuIGRlY291cGxlIGNvZGUgcnVubmluZyBpbiBkcml2ZXIg
ZnJvbSByZWdpc3RlciBzdGF0ZXMgKi8KKyNlbmRpZgorCiAJLyogbW1pbyB3cml0ZSBkaXJlY3Rs
eSAqLwogCXJlZ192YWwgPSBkbV9yZWFkX3JlZyhjdHgsIGFkZHIpOwogCXJlZ192YWwgPSAocmVn
X3ZhbCAmIH5maWVsZF92YWx1ZV9tYXNrLm1hc2spIHwgZmllbGRfdmFsdWVfbWFzay52YWx1ZTsK
QEAgLTExOCw2ICsyODksMTMgQEAgdWludDMyX3QgZ2VuZXJpY19yZWdfc2V0X2V4KGNvbnN0IHN0
cnVjdCBkY19jb250ZXh0ICpjdHgsCiAKIAkvKiBtbWlvIHdyaXRlIGRpcmVjdGx5ICovCiAJcmVn
X3ZhbCA9IChyZWdfdmFsICYgfmZpZWxkX3ZhbHVlX21hc2subWFzaykgfCBmaWVsZF92YWx1ZV9t
YXNrLnZhbHVlOworI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlpZiAoY3R4LT5kbXVi
X3NydiAmJgorCSAgICBjdHgtPmRtdWJfc3J2LT5yZWdfaGVscGVyX29mZmxvYWQuZ2F0aGVyX2lu
X3Byb2dyZXNzKSB7CisJCXJldHVybiBkbXViX3JlZ192YWx1ZV9idXJzdF9zZXRfcGFjayhjdHgs
IGFkZHIsIHJlZ192YWwpOworCQkvKiB0b2RvOiByZXR1cm4gdm9pZCBzbyB3ZSBjYW4gZGVjb3Vw
bGUgY29kZSBydW5uaW5nIGluIGRyaXZlciBmcm9tIHJlZ2lzdGVyIHN0YXRlcyAqLworCX0KKyNl
bmRpZgogCWRtX3dyaXRlX3JlZyhjdHgsIGFkZHIsIHJlZ192YWwpOwogCXJldHVybiByZWdfdmFs
OwogfQpAQCAtMTM0LDYgKzMxMiwxNiBAQCB1aW50MzJfdCBkbV9yZWFkX3JlZ19mdW5jKAogCQly
ZXR1cm4gMDsKIAl9CiAjZW5kaWYKKworI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlp
ZiAoY3R4LT5kbXViX3NydiAmJgorCSAgICBjdHgtPmRtdWJfc3J2LT5yZWdfaGVscGVyX29mZmxv
YWQuZ2F0aGVyX2luX3Byb2dyZXNzICYmCisJICAgICFjdHgtPmRtdWJfc3J2LT5yZWdfaGVscGVy
X29mZmxvYWQuc2hvdWxkX2J1cnN0X3dyaXRlKSB7CisJCUFTU0VSVChmYWxzZSk7CisJCXJldHVy
biAwOworCX0KKyNlbmRpZgorCiAJdmFsdWUgPSBjZ3NfcmVhZF9yZWdpc3RlcihjdHgtPmNnc19k
ZXZpY2UsIGFkZHJlc3MpOwogCXRyYWNlX2FtZGdwdV9kY19ycmVnKCZjdHgtPnBlcmZfdHJhY2Ut
PnJlYWRfY291bnQsIGFkZHJlc3MsIHZhbHVlKTsKIApAQCAtMjk5LDYgKzQ4NywxNSBAQCB2b2lk
IGdlbmVyaWNfcmVnX3dhaXQoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0eCwKIAl1aW50MzJf
dCByZWdfdmFsOwogCWludCBpOwogCisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgorCWlm
IChjdHgtPmRtdWJfc3J2ICYmCisJICAgIGN0eC0+ZG11Yl9zcnYtPnJlZ19oZWxwZXJfb2ZmbG9h
ZC5nYXRoZXJfaW5fcHJvZ3Jlc3MpIHsKKwkJZG11Yl9yZWdfd2FpdF9kb25lX3BhY2soY3R4LCBh
ZGRyLCBtYXNrLCBzaGlmdCwgY29uZGl0aW9uX3ZhbHVlLAorCQkJCWRlbGF5X2JldHdlZW5fcG9s
bF91cyAqIHRpbWVfb3V0X251bV90cmllcyk7CisJCXJldHVybjsKKwl9CisjZW5kaWYKKwogCS8q
IHNvbWV0aGluZyBpcyB0ZXJyaWJseSB3cm9uZyBpZiB0aW1lIG91dCBpcyA+IDIwMG1zLiAoNUh6
KSAqLwogCUFTU0VSVChkZWxheV9iZXR3ZWVuX3BvbGxfdXMgKiB0aW1lX291dF9udW1fdHJpZXMg
PD0gMzAwMDAwMCk7CiAKQEAgLTM0NSw2ICs1NDIsMTMgQEAgdWludDMyX3QgZ2VuZXJpY19yZWFk
X2luZGlyZWN0X3JlZyhjb25zdCBzdHJ1Y3QgZGNfY29udGV4dCAqY3R4LAogCQl1aW50MzJfdCBp
bmRleCkKIHsKIAl1aW50MzJfdCB2YWx1ZSA9IDA7CisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENf
RE1VQgorCS8vIHdoZW4gcmVnIHJlYWQsIHRoZXJlIHNob3VsZCBub3QgYmUgYW55IG9mZmxvYWQu
CisJaWYgKGN0eC0+ZG11Yl9zcnYgJiYKKwkgICAgY3R4LT5kbXViX3Nydi0+cmVnX2hlbHBlcl9v
ZmZsb2FkLmdhdGhlcl9pbl9wcm9ncmVzcykgeworCQlBU1NFUlQoZmFsc2UpOworCX0KKyNlbmRp
ZgogCiAJZG1fd3JpdGVfcmVnKGN0eCwgYWRkcl9pbmRleCwgaW5kZXgpOwogCXZhbHVlID0gZG1f
cmVhZF9yZWcoY3R4LCBhZGRyX2RhdGEpOwpAQCAtMzgyLDMgKzU4Niw3MiBAQCB1aW50MzJfdCBn
ZW5lcmljX2luZGlyZWN0X3JlZ191cGRhdGVfZXgoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0
eCwKIAogCXJldHVybiByZWdfdmFsOwogfQorCisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRE1V
Qgordm9pZCByZWdfc2VxdWVuY2Vfc3RhcnRfZ2F0aGVyKGNvbnN0IHN0cnVjdCBkY19jb250ZXh0
ICpjdHgpCit7CisJLyogaWYgcmVnIHNlcXVlbmNlIGlzIHN1cHBvcnRlZCBhbmQgZW5hYmxlZCwg
c2V0IGZsYWcgdG8KKwkgKiBpbmRpY2F0ZSB3ZSB3YW50IHRvIGhhdmUgUkVHX1NFVCwgUkVHX1VQ
REFURSBtYWNybyBidWlsZAorCSAqIHJlZyBzZXF1ZW5jZSBjb21tYW5kIGJ1ZmZlciByYXRoZXIg
dGhhbiBNTUlPIGRpcmVjdGx5LgorCSAqLworCisJaWYgKGN0eC0+ZG11Yl9zcnYgJiYgY3R4LT5k
Yy0+ZGVidWcuZG11Yl9vZmZsb2FkX2VuYWJsZWQpIHsKKwkJc3RydWN0IGRjX3JlZ19oZWxwZXJf
c3RhdGUgKm9mZmxvYWQgPQorCQkJJmN0eC0+ZG11Yl9zcnYtPnJlZ19oZWxwZXJfb2ZmbG9hZDsK
KworCQkvKiBjYWxsZXIgc2VxdWVuY2UgbWlzbWF0Y2guICBuZWVkIHRvIGRlYnVnIGNhbGxlci4g
IG9mZmxvYWQgd2lsbCBub3Qgd29yayEhISAqLworCQlBU1NFUlQoIW9mZmxvYWQtPmdhdGhlcl9p
bl9wcm9ncmVzcyk7CisKKwkJb2ZmbG9hZC0+Z2F0aGVyX2luX3Byb2dyZXNzID0gdHJ1ZTsKKwl9
Cit9CisKK3ZvaWQgcmVnX3NlcXVlbmNlX3N0YXJ0X2V4ZWN1dGUoY29uc3Qgc3RydWN0IGRjX2Nv
bnRleHQgKmN0eCkKK3sKKwlzdHJ1Y3QgZGNfcmVnX2hlbHBlcl9zdGF0ZSAqb2ZmbG9hZDsKKwor
CWlmICghY3R4LT5kbXViX3NydikKKwkJcmV0dXJuOworCisJb2ZmbG9hZCA9ICZjdHgtPmRtdWJf
c3J2LT5yZWdfaGVscGVyX29mZmxvYWQ7CisKKwlpZiAob2ZmbG9hZCAmJiBvZmZsb2FkLT5nYXRo
ZXJfaW5fcHJvZ3Jlc3MpIHsKKwkJb2ZmbG9hZC0+Z2F0aGVyX2luX3Byb2dyZXNzID0gZmFsc2U7
CisJCW9mZmxvYWQtPnNob3VsZF9idXJzdF93cml0ZSA9IGZhbHNlOworCQlzd2l0Y2ggKG9mZmxv
YWQtPmNtZF9kYXRhLmNtZF9jb21tb24uaGVhZGVyLnR5cGUpIHsKKwkJY2FzZSBETVVCX0NNRF9f
UkVHX1NFUV9SRUFEX01PRElGWV9XUklURToKKwkJCXN1Ym1pdF9kbXViX3JlYWRfbW9kaWZ5X3dy
aXRlKG9mZmxvYWQsIGN0eCk7CisJCQlicmVhazsKKwkJY2FzZSBETVVCX0NNRF9fUkVHX1JFR19X
QUlUOgorCQkJc3VibWl0X2RtdWJfcmVnX3dhaXQob2ZmbG9hZCwgY3R4KTsKKwkJCWJyZWFrOwor
CQljYXNlIERNVUJfQ01EX19SRUdfU0VRX0JVUlNUX1dSSVRFOgorCQkJc3VibWl0X2RtdWJfYnVy
c3Rfd3JpdGUob2ZmbG9hZCwgY3R4KTsKKwkJCWJyZWFrOworCQlkZWZhdWx0OgorCQkJcmV0dXJu
OworCQl9CisKKwkJZGNfZG11Yl9zcnZfY21kX2V4ZWN1dGUoY3R4LT5kbXViX3Nydik7CisJfQor
fQorCit2b2lkIHJlZ19zZXF1ZW5jZV93YWl0X2RvbmUoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQg
KmN0eCkKK3sKKwkvKiBjYWxsYmFjayB0byBETSB0byBwb2xsIGZvciBsYXN0IHN1Ym1pc3Npb24g
ZG9uZSovCisJc3RydWN0IGRjX3JlZ19oZWxwZXJfc3RhdGUgKm9mZmxvYWQ7CisKKwlpZiAoIWN0
eC0+ZG11Yl9zcnYpCisJCXJldHVybjsKKworCW9mZmxvYWQgPSAmY3R4LT5kbXViX3Nydi0+cmVn
X2hlbHBlcl9vZmZsb2FkOworCisJaWYgKG9mZmxvYWQgJiYKKwkgICAgY3R4LT5kYy0+ZGVidWcu
ZG11Yl9vZmZsb2FkX2VuYWJsZWQgJiYKKwkgICAgIWN0eC0+ZGMtPmRlYnVnLmRtY3ViX2VtdWxh
dGlvbikgeworCQlkY19kbXViX3Nydl93YWl0X2lkbGUoY3R4LT5kbXViX3Nydik7CisJfQorfQor
CisKKyNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2Rj
X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNfdHlwZXMuaAppbmRl
eCBkOWJlOGZjMzg4OWYuLmZiNzBlZDliMzUxZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2FtZC9kaXNwbGF5L2RjL2RjX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNw
bGF5L2RjL2RjX3R5cGVzLmgKQEAgLTQ4LDYgKzQ4LDkgQEAgc3RydWN0IGRjX3N0cmVhbV9zdGF0
ZTsKIHN0cnVjdCBkY19saW5rOwogc3RydWN0IGRjX3Npbms7CiBzdHJ1Y3QgZGFsOworI2lmZGVm
IENPTkZJR19EUk1fQU1EX0RDX0RNVUIKK3N0cnVjdCBkY19kbXViX3NydjsKKyNlbmRpZgogCiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAqIEVudmlyb25tZW50IGRlZmluaXRp
b25zCkBAIC0xMDksNiArMTEyLDkgQEAgc3RydWN0IGRjX2NvbnRleHQgewogCXVpbnQzMl90IGRj
X3NpbmtfaWRfY291bnQ7CiAJdWludDMyX3QgZGNfc3RyZWFtX2lkX2NvdW50OwogCXVpbnQ2NF90
IGZiY19ncHVfYWRkcjsKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCisJc3RydWN0IGRj
X2RtdWJfc3J2ICpkbXViX3NydjsKKyNlbmRpZgogI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0hE
Q1AKIAlzdHJ1Y3QgY3BfcHNwIGNwX3BzcDsKICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjbjEwL2RjbjEwX2RwcF9jbS5jIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L2RjL2RjbjEwL2RjbjEwX2RwcF9jbS5jCmluZGV4IGFhMGM3YTdkMTNh
MC4uNDFhMGU1M2QyYmE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkv
ZGMvZGNuMTAvZGNuMTBfZHBwX2NtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L2RjL2RjbjEwL2RjbjEwX2RwcF9jbS5jCkBAIC0zNTIsNiArMzUyLDkgQEAgdm9pZCBkcHAxX2Nt
X3Byb2dyYW1fcmVnYW1tYV9sdXQoc3RydWN0IGRwcCAqZHBwX2Jhc2UsCiAJdWludDMyX3QgaTsK
IAlzdHJ1Y3QgZGNuMTBfZHBwICpkcHAgPSBUT19EQ04xMF9EUFAoZHBwX2Jhc2UpOwogCisjaWZk
ZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgorCVJFR19TRVFfU1RBUlQoKTsKKyNlbmRpZgogCWZv
ciAoaSA9IDAgOyBpIDwgbnVtOyBpKyspIHsKIAkJUkVHX1NFVChDTV9SR0FNX0xVVF9EQVRBLCAw
LCBDTV9SR0FNX0xVVF9EQVRBLCByZ2JbaV0ucmVkX3JlZyk7CiAJCVJFR19TRVQoQ01fUkdBTV9M
VVRfREFUQSwgMCwgQ01fUkdBTV9MVVRfREFUQSwgcmdiW2ldLmdyZWVuX3JlZyk7CkBAIC02MzAs
NiArNjMzLDEwIEBAIHZvaWQgZHBwMV9zZXRfZGVnYW1tYSgKIAkJQlJFQUtfVE9fREVCVUdHRVIo
KTsKIAkJYnJlYWs7CiAJfQorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlSRUdfU0VR
X1NVQk1JVCgpOworCVJFR19TRVFfV0FJVF9ET05FKCk7CisjZW5kaWYKIH0KIAogdm9pZCBkcHAx
X2RlZ2FtbWFfcmFtX3NlbGVjdCgKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlz
cGxheS9kYy9kY24xMC9kY24xMF9vcHRjLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkv
ZGMvZGNuMTAvZGNuMTBfb3B0Yy5jCmluZGV4IGRhYmNjYmQ0OWFkNC4uODcxMGYzYWMyYWJmIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNuMTAvZGNuMTBfb3B0
Yy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY24xMC9kY24xMF9vcHRj
LmMKQEAgLTQ1NywxMSArNDU3LDE5IEBAIHN0YXRpYyBib29sIG9wdGMxX2VuYWJsZV9jcnRjKHN0
cnVjdCB0aW1pbmdfZ2VuZXJhdG9yICpvcHRjKQogCVJFR19VUERBVEUoQ09OVFJPTCwKIAkJCVZU
RzBfRU5BQkxFLCAxKTsKIAorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlSRUdfU0VR
X1NUQVJUKCk7CisjZW5kaWYKIAkvKiBFbmFibGUgQ1JUQyAqLwogCVJFR19VUERBVEVfMihPVEdf
Q09OVFJPTCwKIAkJCU9UR19ESVNBQkxFX1BPSU5UX0NOVEwsIDMsCiAJCQlPVEdfTUFTVEVSX0VO
LCAxKTsKIAorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKKwlSRUdfU0VRX1NVQk1JVCgp
OworCVJFR19TRVFfV0FJVF9ET05FKCk7CisjZW5kaWYKKwogCXJldHVybiB0cnVlOwogfQogCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNuMjAvZGNuMjBfbXBj
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNuMjAvZGNuMjBfbXBjLmMKaW5k
ZXggNWExODhiMmJjMDMzLi4yNDE3ZDkzM2VmMmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kYy9kY24yMC9kY24yMF9tcGMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvZGMvZGNuMjAvZGNuMjBfbXBjLmMKQEAgLTM0NSw2ICszNDUsMTEgQEAgc3Rh
dGljIHZvaWQgbXBjMjBfcHJvZ3JhbV9vZ2FtX3B3bCgKIAl1aW50MzJfdCBpOwogCXN0cnVjdCBk
Y24yMF9tcGMgKm1wYzIwID0gVE9fRENOMjBfTVBDKG1wYyk7CiAKKyNpZmRlZiBDT05GSUdfRFJN
X0FNRF9EQ19ETVVCCisJUEVSRl9UUkFDRSgpOworCVJFR19TRVFfU1RBUlQoKTsKKyNlbmRpZgor
CiAJZm9yIChpID0gMCA7IGkgPCBudW07IGkrKykgewogCQlSRUdfU0VUKE1QQ0NfT0dBTV9MVVRf
REFUQVttcGNjX2lkXSwgMCwgTVBDQ19PR0FNX0xVVF9EQVRBLCByZ2JbaV0ucmVkX3JlZyk7CiAJ
CVJFR19TRVQoTVBDQ19PR0FNX0xVVF9EQVRBW21wY2NfaWRdLCAwLCBNUENDX09HQU1fTFVUX0RB
VEEsIHJnYltpXS5ncmVlbl9yZWcpOwpAQCAtNDYzLDYgKzQ2OCwxMiBAQCB2b2lkIG1wYzJfYXNz
ZXJ0X21wY2NfaWRsZV9iZWZvcmVfY29ubmVjdChzdHJ1Y3QgbXBjICptcGMsIGludCBtcGNjX2lk
KQogCQlBU1NFUlQoIW1wY19kaXNhYmxlZCk7CiAJCUFTU0VSVCghbXBjX2lkbGUpOwogCX0KKyNp
ZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCisJUkVHX1NFUV9TVUJNSVQoKTsKKwlQRVJGX1RS
QUNFKCk7CisJUkVHX1NFUV9XQUlUX0RPTkUoKTsKKwlQRVJGX1RSQUNFKCk7CisjZW5kaWYKIH0K
IAogc3RhdGljIHZvaWQgbXBjMl9pbml0X21wY2Moc3RydWN0IG1wY2MgKm1wY2MsIGludCBtcGNj
X2luc3QpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNuMjEv
ZGNuMjFfcmVzb3VyY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY24yMS9k
Y24yMV9yZXNvdXJjZS5jCmluZGV4IGFlMWEyNTBjMmY3ZC4uZWI3Y2U0YTVjYmFjIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNuMjEvZGNuMjFfcmVzb3VyY2Uu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNuMjEvZGNuMjFfcmVzb3Vy
Y2UuYwpAQCAtMTY3OCw2ICsxNjc4LDkgQEAgc3RhdGljIGJvb2wgY29uc3RydWN0KAogCWRjLT5j
YXBzLnBvc3RfYmxlbmRfY29sb3JfcHJvY2Vzc2luZyA9IHRydWU7CiAJZGMtPmNhcHMuZm9yY2Vf
ZHBfdHBzNF9mb3JfY3AyNTIwID0gdHJ1ZTsKIAlkYy0+Y2Fwcy5leHRlbmRlZF9hdXhfdGltZW91
dF9zdXBwb3J0ID0gdHJ1ZTsKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCisJZGMtPmNh
cHMuZG1jdWJfc3VwcG9ydCA9IHRydWU7CisjZW5kaWYKIAogCWlmIChkYy0+Y3R4LT5kY2VfZW52
aXJvbm1lbnQgPT0gRENFX0VOVl9QUk9EVUNUSU9OX0RSVikKIAkJZGMtPmRlYnVnID0gZGVidWdf
ZGVmYXVsdHNfZHJ2OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2Rj
L2RtX3NlcnZpY2VzLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZG1fc2Vydmlj
ZXMuaAppbmRleCAxYTA0Mjk3NDQ2MzAuLjBhMzg5MWVkZmQ5NCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RtX3NlcnZpY2VzLmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L2RjL2RtX3NlcnZpY2VzLmgKQEAgLTQwLDYgKzQwLDExIEBACiAKICN1
bmRlZiBERVBSRUNBVEVECiAKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCitzdHJ1Y3Qg
ZG11Yl9zcnY7CitzdHJ1Y3QgZGNfZG11Yl9zcnY7CisKKyNlbmRpZgogaXJxX2hhbmRsZXJfaWR4
IGRtX3JlZ2lzdGVyX2ludGVycnVwdCgKIAlzdHJ1Y3QgZGNfY29udGV4dCAqY3R4LAogCXN0cnVj
dCBkY19pbnRlcnJ1cHRfcGFyYW1zICppbnRfcGFyYW1zLApAQCAtMTM5LDYgKzE0NCwxNSBAQCB1
aW50MzJfdCBnZW5lcmljX3JlZ191cGRhdGVfZXgoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0
eCwKIAkJdWludDMyX3QgYWRkciwgaW50IG4sCiAJCXVpbnQ4X3Qgc2hpZnQxLCB1aW50MzJfdCBt
YXNrMSwgdWludDMyX3QgZmllbGRfdmFsdWUxLCAuLi4pOwogCisjaWZkZWYgQ09ORklHX0RSTV9B
TURfRENfRE1VQgorc3RydWN0IGRjX2RtdWJfc3J2ICpkY19kbXViX3Nydl9jcmVhdGUoc3RydWN0
IGRjICpkYywgc3RydWN0IGRtdWJfc3J2ICpkbXViKTsKK3ZvaWQgZGNfZG11Yl9zcnZfZGVzdHJv
eShzdHJ1Y3QgZGNfZG11Yl9zcnYgKipkbXViX3Nydik7CisKK3ZvaWQgcmVnX3NlcXVlbmNlX3N0
YXJ0X2dhdGhlcihjb25zdCBzdHJ1Y3QgZGNfY29udGV4dCAqY3R4KTsKK3ZvaWQgcmVnX3NlcXVl
bmNlX3N0YXJ0X2V4ZWN1dGUoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0eCk7Cit2b2lkIHJl
Z19zZXF1ZW5jZV93YWl0X2RvbmUoY29uc3Qgc3RydWN0IGRjX2NvbnRleHQgKmN0eCk7CisjZW5k
aWYKKwogI2RlZmluZSBGRChyZWdfZmllbGQpCXJlZ19maWVsZCAjIyBfX1NISUZULCBcCiAJCQkJ
CQlyZWdfZmllbGQgIyMgX01BU0sKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9k
aXNwbGF5L2RjL2luYy9yZWdfaGVscGVyLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkv
ZGMvaW5jL3JlZ19oZWxwZXIuaAppbmRleCA4NTAzZDljYzQ3NjMuLmE5YTk2NTdjMDk1YSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2luYy9yZWdfaGVscGVyLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2luYy9yZWdfaGVscGVyLmgKQEAg
LTQ4NSw0ICs0ODUsMjYgQEAgdWludDMyX3QgZ2VuZXJpY19pbmRpcmVjdF9yZWdfdXBkYXRlX2V4
KGNvbnN0IHN0cnVjdCBkY19jb250ZXh0ICpjdHgsCiAJCXVpbnQ4X3Qgc2hpZnQxLCB1aW50MzJf
dCBtYXNrMSwgdWludDMyX3QgZmllbGRfdmFsdWUxLAogCQkuLi4pOwogCisKKyNpZmRlZiBDT05G
SUdfRFJNX0FNRF9EQ19ETVVCCisvKiByZWdpc3RlciBvZmZsb2FkIG1hY3JvcworICoKKyAqIGlu
c3RlYWQgb2YgTU1JTyB0byByZWdpc3RlciBkaXJlY3RseSwgaW4gc29tZSBjYXNlcyB3ZSB3YW50
CisgKiB0byBnYXRoZXIgcmVnaXN0ZXIgc2VxdWVuY2UgYW5kIGV4ZWN1dGUgdGhlIHJlZ2lzdGVy
IHNlcXVlbmNlCisgKiBmcm9tIGFub3RoZXIgdGhyZWFkIHNvIHdlIG9wdGltaXplIHRpbWUgcmVx
dWlyZWQgZm9yIGxlbmd0aHkgb3BzCisgKi8KKworLyogc3RhcnQgZ2F0aGVyaW5nIHJlZ2lzdGVy
IHNlcXVlbmNlICovCisjZGVmaW5lIFJFR19TRVFfU1RBUlQoKSBcCisJcmVnX3NlcXVlbmNlX3N0
YXJ0X2dhdGhlcihDVFgpCisKKy8qIHN0YXJ0IGV4ZWN1dGlvbiBvZiByZWdpc3RlciBzZXF1ZW5j
ZSBnYXRoZXJlZCBzaW5jZSBSRUdfU0VRX1NUQVJUICovCisjZGVmaW5lIFJFR19TRVFfU1VCTUlU
KCkgXAorCXJlZ19zZXF1ZW5jZV9zdGFydF9leGVjdXRlKENUWCkKKworLyogd2FpdCBmb3IgdGhl
IGxhc3QgUkVHX1NFUV9TVUJNSVQgdG8gZmluaXNoICovCisjZGVmaW5lIFJFR19TRVFfV0FJVF9E
T05FKCkgXAorCXJlZ19zZXF1ZW5jZV93YWl0X2RvbmUoQ1RYKQorI2VuZGlmCisKICNlbmRpZiAv
KiBEUklWRVJTX0dQVV9EUk1fQU1EX0RDX0RFVl9EQ19JTkNfUkVHX0hFTFBFUl9IXyAqLwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL29zX3R5cGVzLmggYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvb3NfdHlwZXMuaAppbmRleCAzMGVjODBhYzZmYzgu
LjlhNGI1YmFiMDNjNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2Rj
L29zX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL29zX3R5cGVz
LmgKQEAgLTI5LDYgKzI5LDcgQEAKICNpbmNsdWRlIDxsaW51eC9rZ2RiLmg+CiAjaW5jbHVkZSA8
bGludXgva3JlZi5oPgogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisjaW5jbHVkZSA8bGludXgv
c2xhYi5oPgogCiAjaW5jbHVkZSA8YXNtL2J5dGVvcmRlci5oPgogCi0tIAoyLjIwLjEKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGlu
ZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
