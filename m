Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id B878AE74A8
	for <lists+amd-gfx@lfdr.de>; Mon, 28 Oct 2019 16:14:14 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5FABB6E915;
	Mon, 28 Oct 2019 15:14:12 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-wm1-x341.google.com (mail-wm1-x341.google.com
 [IPv6:2a00:1450:4864:20::341])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 204C36E90E
 for <amd-gfx@lists.freedesktop.org>; Mon, 28 Oct 2019 15:14:11 +0000 (UTC)
Received: by mail-wm1-x341.google.com with SMTP id v3so9754741wmh.1
 for <amd-gfx@lists.freedesktop.org>; Mon, 28 Oct 2019 08:14:11 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=HOohJbu3+kpKnLRlo1HnYjhM1rK/0dyaizFzSYRGMa8=;
 b=ESoIVzaddiP7fC4m/uu8R9zOHG/lLNRyMShQELQfVIZaHSZa0UWTeiYkSdYDnSvDc8
 gAbAZgGfB8b7PsYB0bGvIETkCj4KmjubHNHyGb3NFpKHCb21ZczQxRYlRC5mj5/fCGO9
 NJzceUpNdLPIhFQqe6d8SLgotYlgysJ+JS0TAfiqOm+0Cy8+M7FifCd/2OjZvCRtbWcX
 8J3kbazNbe6uMcjhSV2MuLu9I63q8S9i0yLz0ZKDlOy0oae76Wq9mq47XbmPU8S3nZUK
 uzsVANw//guI49xylk3FtdbDgI/OFbw/YWYgHdromi3tuqSadzWhT3E7lKd5JliHHJtY
 mK2A==
X-Gm-Message-State: APjAAAUxslo4QD8kwACltsOxMlR7IchJXtyQMsH1H7y73Bw0k2j4g5nW
 beKjDw0pJHSZr311HikLXuX39y9C
X-Google-Smtp-Source: APXvYqyaY5ds2IpdzxQR8sEuE/Zq87c91y7GGf++qLm+SVKvJUA/6LXOgrQoZGyTJPALgPIIbWKSQw==
X-Received: by 2002:a7b:c444:: with SMTP id l4mr426272wmi.49.1572275649013;
 Mon, 28 Oct 2019 08:14:09 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:8f3:7d2:1770:2e29])
 by smtp.gmail.com with ESMTPSA id r5sm2772334wrl.86.2019.10.28.08.14.08
 for <amd-gfx@lists.freedesktop.org>
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 28 Oct 2019 08:14:08 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH 1/2] drm/amdgpu: add independent DMA-buf export v8
Date: Mon, 28 Oct 2019 16:14:06 +0100
Message-Id: <20191028151407.15357-1-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=HOohJbu3+kpKnLRlo1HnYjhM1rK/0dyaizFzSYRGMa8=;
 b=d+j/sJOYSx31OUGqvKc1LL/a0Ex4RNZ1RiLvLVqXQ3qhMc/dHhc9VsRluJFS3g9eq4
 P+4sFUvyRVoKQoGNdBr3fXUKt33GrETNWzLqKpONOxIr8spJ/lDTjK12zLYcYqsgqwPX
 QOo21ZWyi0JcUlh/Kt/+xNNFJE04WqBt0235mAz4fGgtN4eL13RqNQ/MPrFAhs6kF84G
 YHh/C+/xO4ZlQoEN7K95az8XKQnpP5XI3Be2h5MS0heSkTDApzUxIuHsmKwq9ul7+JMc
 L+WQjdIsy2hjKrWyF680PTsS+twL9Te4CfqWdgJ8T55ORqkUHBQRq17llvQy5Bv1TwSj
 QDXQ==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

QWRkIGFuIERNQS1idWYgZXhwb3J0IGltcGxlbWVudGF0aW9uIGluZGVwZW5kZW50IG9mIHRoZSBE
Uk0gaGVscGVycy4KClRoaXMgbm90IG9ubHkgYXZvaWRzIHRoZSBjYWNoaW5nIG9mIERNQS1idWYg
bWFwcGluZ3MsIGJ1dCBhbHNvCmFsbG93cyB1cyB0byB1c2UgdGhlIG5ldyBkeW5hbWljIGxvY2tp
bmcgYXBwcm9hY2guCgpUaGlzIGlzIGFsc28gYSBwcmVyZXF1aXNpdGUgb2YgdW5waW5uZWQgRE1B
LWJ1ZiBoYW5kbGluZy4KCnYyOiBmaXggdW5pbnRlbmRlZCByZWN1cnNpb24sIHJlbW92ZSBkZWJ1
Z2dpbmcgbGVmdG92ZXJzCnYzOiBzcGxpdCBvdXQgZnJvbSB1bnBpbm5lZCBETUEtYnVmIHdvcmsK
djQ6IHJlYmFzZSBvbiB0b3Agb2YgbmV3IG5vX3NndF9jYWNoZSBmbGFnCnY1OiBmaXggc29tZSB3
YXJuaW5ncyBieSBpbmNsdWRpbmcgYW1kZ3B1X2RtYV9idWYuaAp2NjogZml4IGxvY2tpbmcgZm9y
IG5vbiBhbWRncHUgZXhwb3J0cwp2NzogcmViYXNlZCBvbiBuZXcgRE1BLWJ1ZiBsb2NraW5nIHBh
dGNoCnY4OiBkcm9wIGV4dHJhIGluY2x1ZGUKClNpZ25lZC1vZmYtYnk6IENocmlzdGlhbiBLw7Zu
aWcgPGNocmlzdGlhbi5rb2VuaWdAYW1kLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfZG1hX2J1Zi5jIHwgMTcyICsrKysrKysrKysrLS0tLS0tLS0tCiBkcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZG1hX2J1Zi5oIHwgICAxIC0KIGRyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kcnYuYyAgICAgfCAgIDEgLQogMyBmaWxlcyBjaGFuZ2Vk
LCA5NiBpbnNlcnRpb25zKCspLCA3OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZG1hX2J1Zi5jIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X2RtYV9idWYuYwppbmRleCA2MWYxMDhlYzJiNWMuLmYxNGI1MmNjNzIw
NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RtYV9idWYu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZG1hX2J1Zi5jCkBAIC0z
NCwyNiArMzQsMTEgQEAKICNpbmNsdWRlICJhbWRncHUuaCIKICNpbmNsdWRlICJhbWRncHVfZGlz
cGxheS5oIgogI2luY2x1ZGUgImFtZGdwdV9nZW0uaCIKKyNpbmNsdWRlICJhbWRncHVfZG1hX2J1
Zi5oIgogI2luY2x1ZGUgPGRybS9hbWRncHVfZHJtLmg+CiAjaW5jbHVkZSA8bGludXgvZG1hLWJ1
Zi5oPgogI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS1hcnJheS5oPgogCi0vKioKLSAqIGFtZGdw
dV9nZW1fcHJpbWVfZ2V0X3NnX3RhYmxlIC0gJmRybV9kcml2ZXIuZ2VtX3ByaW1lX2dldF9zZ190
YWJsZQotICogaW1wbGVtZW50YXRpb24KLSAqIEBvYmo6IEdFTSBidWZmZXIgb2JqZWN0IChCTykK
LSAqCi0gKiBSZXR1cm5zOgotICogQSBzY2F0dGVyL2dhdGhlciB0YWJsZSBmb3IgdGhlIHBpbm5l
ZCBwYWdlcyBvZiB0aGUgQk8ncyBtZW1vcnkuCi0gKi8KLXN0cnVjdCBzZ190YWJsZSAqYW1kZ3B1
X2dlbV9wcmltZV9nZXRfc2dfdGFibGUoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmopCi17Ci0J
c3RydWN0IGFtZGdwdV9ibyAqYm8gPSBnZW1fdG9fYW1kZ3B1X2JvKG9iaik7Ci0JaW50IG5wYWdl
cyA9IGJvLT50Ym8ubnVtX3BhZ2VzOwotCi0JcmV0dXJuIGRybV9wcmltZV9wYWdlc190b19zZyhi
by0+dGJvLnR0bS0+cGFnZXMsIG5wYWdlcyk7Ci19Ci0KIC8qKgogICogYW1kZ3B1X2dlbV9wcmlt
ZV92bWFwIC0gJmRtYV9idWZfb3BzLnZtYXAgaW1wbGVtZW50YXRpb24KICAqIEBvYmo6IEdFTSBC
TwpAQCAtMTc5LDkyICsxNjQsMTI2IEBAIF9fZG1hX3Jlc3ZfbWFrZV9leGNsdXNpdmUoc3RydWN0
IGRtYV9yZXN2ICpvYmopCiB9CiAKIC8qKgotICogYW1kZ3B1X2RtYV9idWZfbWFwX2F0dGFjaCAt
ICZkbWFfYnVmX29wcy5hdHRhY2ggaW1wbGVtZW50YXRpb24KLSAqIEBkbWFfYnVmOiBTaGFyZWQg
RE1BIGJ1ZmZlcgorICogYW1kZ3B1X2RtYV9idWZfYXR0YWNoIC0gJmRtYV9idWZfb3BzLmF0dGFj
aCBpbXBsZW1lbnRhdGlvbgorICoKKyAqIEBkbWFidWY6IERNQS1idWYgd2hlcmUgd2UgYXR0YWNo
IHRvCisgKiBAYXR0YWNoOiBhdHRhY2htZW50IHRvIGFkZAorICoKKyAqIEFkZCB0aGUgYXR0YWNo
bWVudCBhcyB1c2VyIHRvIHRoZSBleHBvcnRlZCBETUEtYnVmLgorICovCitzdGF0aWMgaW50IGFt
ZGdwdV9kbWFfYnVmX2F0dGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLAorCQkJCSBzdHJ1Y3Qg
ZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gpCit7CisJc3RydWN0IGRybV9nZW1fb2JqZWN0ICpv
YmogPSBkbWFidWYtPnByaXY7CisJc3RydWN0IGFtZGdwdV9ibyAqYm8gPSBnZW1fdG9fYW1kZ3B1
X2JvKG9iaik7CisJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBhbWRncHVfdHRtX2FkZXYo
Ym8tPnRiby5iZGV2KTsKKwlpbnQgcjsKKworCWlmIChhdHRhY2gtPmRldi0+ZHJpdmVyID09IGFk
ZXYtPmRldi0+ZHJpdmVyKQorCQlyZXR1cm4gMDsKKworCXIgPSBhbWRncHVfYm9fcmVzZXJ2ZShi
bywgZmFsc2UpOworCWlmICh1bmxpa2VseShyICE9IDApKQorCQlyZXR1cm4gcjsKKworCS8qCisJ
ICogV2Ugb25seSBjcmVhdGUgc2hhcmVkIGZlbmNlcyBmb3IgaW50ZXJuYWwgdXNlLCBidXQgaW1w
b3J0ZXJzCisJICogb2YgdGhlIGRtYWJ1ZiByZWx5IG9uIGV4Y2x1c2l2ZSBmZW5jZXMgZm9yIGlt
cGxpY2l0bHkKKwkgKiB0cmFja2luZyB3cml0ZSBoYXphcmRzLiBBcyBhbnkgb2YgdGhlIGN1cnJl
bnQgZmVuY2VzIG1heQorCSAqIGNvcnJlc3BvbmQgdG8gYSB3cml0ZSwgd2UgbmVlZCB0byBjb252
ZXJ0IGFsbCBleGlzdGluZworCSAqIGZlbmNlcyBvbiB0aGUgcmVzZXJ2YXRpb24gb2JqZWN0IGlu
dG8gYSBzaW5nbGUgZXhjbHVzaXZlCisJICogZmVuY2UuCisJICovCisJciA9IF9fZG1hX3Jlc3Zf
bWFrZV9leGNsdXNpdmUoYm8tPnRiby5iYXNlLnJlc3YpOworCWlmIChyKQorCQlyZXR1cm4gcjsK
KworCWJvLT5wcmltZV9zaGFyZWRfY291bnQrKzsKKwlhbWRncHVfYm9fdW5yZXNlcnZlKGJvKTsK
KwlyZXR1cm4gMDsKK30KKworLyoqCisgKiBhbWRncHVfZG1hX2J1Zl9kZXRhY2ggLSAmZG1hX2J1
Zl9vcHMuZGV0YWNoIGltcGxlbWVudGF0aW9uCisgKgorICogQGRtYWJ1ZjogRE1BLWJ1ZiB3aGVy
ZSB3ZSByZW1vdmUgdGhlIGF0dGFjaG1lbnQgZnJvbQorICogQGF0dGFjaDogdGhlIGF0dGFjaG1l
bnQgdG8gcmVtb3ZlCisgKgorICogQ2FsbGVkIHdoZW4gYW4gYXR0YWNobWVudCBpcyByZW1vdmVk
IGZyb20gdGhlIERNQS1idWYuCisgKi8KK3N0YXRpYyB2b2lkIGFtZGdwdV9kbWFfYnVmX2RldGFj
aChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLAorCQkJCSAgc3RydWN0IGRtYV9idWZfYXR0YWNobWVu
dCAqYXR0YWNoKQoreworCXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqID0gZG1hYnVmLT5wcml2
OworCXN0cnVjdCBhbWRncHVfYm8gKmJvID0gZ2VtX3RvX2FtZGdwdV9ibyhvYmopOworCXN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2ID0gYW1kZ3B1X3R0bV9hZGV2KGJvLT50Ym8uYmRldik7CisK
KwlpZiAoYXR0YWNoLT5kZXYtPmRyaXZlciAhPSBhZGV2LT5kZXYtPmRyaXZlciAmJiBiby0+cHJp
bWVfc2hhcmVkX2NvdW50KQorCQliby0+cHJpbWVfc2hhcmVkX2NvdW50LS07Cit9CisKKy8qKgor
ICogYW1kZ3B1X2RtYV9idWZfbWFwIC0gJmRtYV9idWZfb3BzLm1hcF9kbWFfYnVmIGltcGxlbWVu
dGF0aW9uCiAgKiBAYXR0YWNoOiBETUEtYnVmIGF0dGFjaG1lbnQKKyAqIEBkaXI6IERNQSBkaXJl
Y3Rpb24KICAqCiAgKiBNYWtlcyBzdXJlIHRoYXQgdGhlIHNoYXJlZCBETUEgYnVmZmVyIGNhbiBi
ZSBhY2Nlc3NlZCBieSB0aGUgdGFyZ2V0IGRldmljZS4KICAqIEZvciBub3csIHNpbXBseSBwaW5z
IGl0IHRvIHRoZSBHVFQgZG9tYWluLCB3aGVyZSBpdCBzaG91bGQgYmUgYWNjZXNzaWJsZSBieQog
ICogYWxsIERNQSBkZXZpY2VzLgogICoKICAqIFJldHVybnM6Ci0gKiAwIG9uIHN1Y2Nlc3Mgb3Ig
YSBuZWdhdGl2ZSBlcnJvciBjb2RlIG9uIGZhaWx1cmUuCisgKiBzZ190YWJsZSBmaWxsZWQgd2l0
aCB0aGUgRE1BIGFkZHJlc3NlcyB0byB1c2Ugb3IgRVJSX1BSVCB3aXRoIG5lZ2F0aXZlIGVycm9y
CisgKiBjb2RlLgogICovCi1zdGF0aWMgaW50IGFtZGdwdV9kbWFfYnVmX21hcF9hdHRhY2goc3Ry
dWN0IGRtYV9idWYgKmRtYV9idWYsCi0JCQkJICAgICBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50
ICphdHRhY2gpCitzdGF0aWMgc3RydWN0IHNnX3RhYmxlICphbWRncHVfZG1hX2J1Zl9tYXAoc3Ry
dWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoLAorCQkJCQkgICBlbnVtIGRtYV9kYXRhX2Rp
cmVjdGlvbiBkaXIpCiB7CisJc3RydWN0IGRtYV9idWYgKmRtYV9idWYgPSBhdHRhY2gtPmRtYWJ1
ZjsKIAlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiA9IGRtYV9idWYtPnByaXY7CiAJc3RydWN0
IGFtZGdwdV9ibyAqYm8gPSBnZW1fdG9fYW1kZ3B1X2JvKG9iaik7Ci0Jc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYgPSBhbWRncHVfdHRtX2FkZXYoYm8tPnRiby5iZGV2KTsKKwlzdHJ1Y3Qgc2df
dGFibGUgKnNndDsKIAlsb25nIHI7CiAKLQlyID0gZHJtX2dlbV9tYXBfYXR0YWNoKGRtYV9idWYs
IGF0dGFjaCk7Ci0JaWYgKHIpCi0JCXJldHVybiByOwotCi0JciA9IGFtZGdwdV9ib19yZXNlcnZl
KGJvLCBmYWxzZSk7Ci0JaWYgKHVubGlrZWx5KHIgIT0gMCkpCi0JCWdvdG8gZXJyb3JfZGV0YWNo
OwotCi0KLQlpZiAoYXR0YWNoLT5kZXYtPmRyaXZlciAhPSBhZGV2LT5kZXYtPmRyaXZlcikgewot
CQkvKgotCQkgKiBXZSBvbmx5IGNyZWF0ZSBzaGFyZWQgZmVuY2VzIGZvciBpbnRlcm5hbCB1c2Us
IGJ1dCBpbXBvcnRlcnMKLQkJICogb2YgdGhlIGRtYWJ1ZiByZWx5IG9uIGV4Y2x1c2l2ZSBmZW5j
ZXMgZm9yIGltcGxpY2l0bHkKLQkJICogdHJhY2tpbmcgd3JpdGUgaGF6YXJkcy4gQXMgYW55IG9m
IHRoZSBjdXJyZW50IGZlbmNlcyBtYXkKLQkJICogY29ycmVzcG9uZCB0byBhIHdyaXRlLCB3ZSBu
ZWVkIHRvIGNvbnZlcnQgYWxsIGV4aXN0aW5nCi0JCSAqIGZlbmNlcyBvbiB0aGUgcmVzZXJ2YXRp
b24gb2JqZWN0IGludG8gYSBzaW5nbGUgZXhjbHVzaXZlCi0JCSAqIGZlbmNlLgotCQkgKi8KLQkJ
ciA9IF9fZG1hX3Jlc3ZfbWFrZV9leGNsdXNpdmUoYm8tPnRiby5iYXNlLnJlc3YpOwotCQlpZiAo
cikKLQkJCWdvdG8gZXJyb3JfdW5yZXNlcnZlOwotCX0KLQotCS8qIHBpbiBidWZmZXIgaW50byBH
VFQgKi8KIAlyID0gYW1kZ3B1X2JvX3BpbihibywgQU1ER1BVX0dFTV9ET01BSU5fR1RUKTsKIAlp
ZiAocikKLQkJZ290byBlcnJvcl91bnJlc2VydmU7CisJCXJldHVybiBFUlJfUFRSKHIpOwogCi0J
aWYgKGF0dGFjaC0+ZGV2LT5kcml2ZXIgIT0gYWRldi0+ZGV2LT5kcml2ZXIpCi0JCWJvLT5wcmlt
ZV9zaGFyZWRfY291bnQrKzsKKwlzZ3QgPSBkcm1fcHJpbWVfcGFnZXNfdG9fc2coYm8tPnRiby50
dG0tPnBhZ2VzLCBiby0+dGJvLm51bV9wYWdlcyk7CisJaWYgKElTX0VSUihzZ3QpKQorCQlyZXR1
cm4gc2d0OwogCi1lcnJvcl91bnJlc2VydmU6Ci0JYW1kZ3B1X2JvX3VucmVzZXJ2ZShibyk7CisJ
aWYgKCFkbWFfbWFwX3NnX2F0dHJzKGF0dGFjaC0+ZGV2LCBzZ3QtPnNnbCwgc2d0LT5uZW50cywg
ZGlyLAorCQkJICAgICAgRE1BX0FUVFJfU0tJUF9DUFVfU1lOQykpCisJCWdvdG8gZXJyb3JfZnJl
ZTsKIAotZXJyb3JfZGV0YWNoOgotCWlmIChyKQotCQlkcm1fZ2VtX21hcF9kZXRhY2goZG1hX2J1
ZiwgYXR0YWNoKTsKLQlyZXR1cm4gcjsKKwlyZXR1cm4gc2d0OworCitlcnJvcl9mcmVlOgorCXNn
X2ZyZWVfdGFibGUoc2d0KTsKKwlrZnJlZShzZ3QpOworCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OwogfQogCiAvKioKLSAqIGFtZGdwdV9kbWFfYnVmX21hcF9kZXRhY2ggLSAmZG1hX2J1Zl9vcHMu
ZGV0YWNoIGltcGxlbWVudGF0aW9uCi0gKiBAZG1hX2J1ZjogU2hhcmVkIERNQSBidWZmZXIKKyAq
IGFtZGdwdV9kbWFfYnVmX3VubWFwIC0gJmRtYV9idWZfb3BzLnVubWFwX2RtYV9idWYgaW1wbGVt
ZW50YXRpb24KICAqIEBhdHRhY2g6IERNQS1idWYgYXR0YWNobWVudAorICogQHNndDogc2dfdGFi
bGUgdG8gdW5tYXAKKyAqIEBkaXI6IERNQSBkaXJlY3Rpb24KICAqCiAgKiBUaGlzIGlzIGNhbGxl
ZCB3aGVuIGEgc2hhcmVkIERNQSBidWZmZXIgbm8gbG9uZ2VyIG5lZWRzIHRvIGJlIGFjY2Vzc2li
bGUgYnkKICAqIGFub3RoZXIgZGV2aWNlLiBGb3Igbm93LCBzaW1wbHkgdW5waW5zIHRoZSBidWZm
ZXIgZnJvbSBHVFQuCiAgKi8KLXN0YXRpYyB2b2lkIGFtZGdwdV9kbWFfYnVmX21hcF9kZXRhY2go
c3RydWN0IGRtYV9idWYgKmRtYV9idWYsCi0JCQkJICAgICAgc3RydWN0IGRtYV9idWZfYXR0YWNo
bWVudCAqYXR0YWNoKQorc3RhdGljIHZvaWQgYW1kZ3B1X2RtYV9idWZfdW5tYXAoc3RydWN0IGRt
YV9idWZfYXR0YWNobWVudCAqYXR0YWNoLAorCQkJCSBzdHJ1Y3Qgc2dfdGFibGUgKnNndCwKKwkJ
CQkgZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZGlyKQogewotCXN0cnVjdCBkcm1fZ2VtX29iamVj
dCAqb2JqID0gZG1hX2J1Zi0+cHJpdjsKKwlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiA9IGF0
dGFjaC0+ZG1hYnVmLT5wcml2OwogCXN0cnVjdCBhbWRncHVfYm8gKmJvID0gZ2VtX3RvX2FtZGdw
dV9ibyhvYmopOwotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gYW1kZ3B1X3R0bV9hZGV2
KGJvLT50Ym8uYmRldik7Ci0JaW50IHJldCA9IDA7Ci0KLQlyZXQgPSBhbWRncHVfYm9fcmVzZXJ2
ZShibywgdHJ1ZSk7Ci0JaWYgKHVubGlrZWx5KHJldCAhPSAwKSkKLQkJZ290byBlcnJvcjsKIAor
CWRtYV91bm1hcF9zZyhhdHRhY2gtPmRldiwgc2d0LT5zZ2wsIHNndC0+bmVudHMsIGRpcik7CisJ
c2dfZnJlZV90YWJsZShzZ3QpOworCWtmcmVlKHNndCk7CiAJYW1kZ3B1X2JvX3VucGluKGJvKTsK
LQlpZiAoYXR0YWNoLT5kZXYtPmRyaXZlciAhPSBhZGV2LT5kZXYtPmRyaXZlciAmJiBiby0+cHJp
bWVfc2hhcmVkX2NvdW50KQotCQliby0+cHJpbWVfc2hhcmVkX2NvdW50LS07Ci0JYW1kZ3B1X2Jv
X3VucmVzZXJ2ZShibyk7Ci0KLWVycm9yOgotCWRybV9nZW1fbWFwX2RldGFjaChkbWFfYnVmLCBh
dHRhY2gpOwogfQogCiAvKioKQEAgLTMwOCwxMCArMzI3LDExIEBAIHN0YXRpYyBpbnQgYW1kZ3B1
X2RtYV9idWZfYmVnaW5fY3B1X2FjY2VzcyhzdHJ1Y3QgZG1hX2J1ZiAqZG1hX2J1ZiwKIH0KIAog
Y29uc3Qgc3RydWN0IGRtYV9idWZfb3BzIGFtZGdwdV9kbWFidWZfb3BzID0gewotCS5hdHRhY2gg
PSBhbWRncHVfZG1hX2J1Zl9tYXBfYXR0YWNoLAotCS5kZXRhY2ggPSBhbWRncHVfZG1hX2J1Zl9t
YXBfZGV0YWNoLAotCS5tYXBfZG1hX2J1ZiA9IGRybV9nZW1fbWFwX2RtYV9idWYsCi0JLnVubWFw
X2RtYV9idWYgPSBkcm1fZ2VtX3VubWFwX2RtYV9idWYsCisJLmR5bmFtaWNfbWFwcGluZyA9IHRy
dWUsCisJLmF0dGFjaCA9IGFtZGdwdV9kbWFfYnVmX2F0dGFjaCwKKwkuZGV0YWNoID0gYW1kZ3B1
X2RtYV9idWZfZGV0YWNoLAorCS5tYXBfZG1hX2J1ZiA9IGFtZGdwdV9kbWFfYnVmX21hcCwKKwku
dW5tYXBfZG1hX2J1ZiA9IGFtZGdwdV9kbWFfYnVmX3VubWFwLAogCS5yZWxlYXNlID0gZHJtX2dl
bV9kbWFidWZfcmVsZWFzZSwKIAkuYmVnaW5fY3B1X2FjY2VzcyA9IGFtZGdwdV9kbWFfYnVmX2Jl
Z2luX2NwdV9hY2Nlc3MsCiAJLm1tYXAgPSBkcm1fZ2VtX2RtYWJ1Zl9tbWFwLApkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RtYV9idWYuaCBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kbWFfYnVmLmgKaW5kZXggNTAxMmU2YWI1OGYxLi5j
ZTFiM2YwMTc0NTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9kbWFfYnVmLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RtYV9i
dWYuaApAQCAtMjUsNyArMjUsNiBAQAogCiAjaW5jbHVkZSA8ZHJtL2RybV9nZW0uaD4KIAotc3Ry
dWN0IHNnX3RhYmxlICphbWRncHVfZ2VtX3ByaW1lX2dldF9zZ190YWJsZShzdHJ1Y3QgZHJtX2dl
bV9vYmplY3QgKm9iaik7CiBzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKgogYW1kZ3B1X2dlbV9wcmlt
ZV9pbXBvcnRfc2dfdGFibGUoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJCQkgc3RydWN0IGRt
YV9idWZfYXR0YWNobWVudCAqYXR0YWNoLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2Rydi5jCmluZGV4IDRkYTFkN2ZiMTBmNC4uODgwNTc3NmM4YzUyIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2Rydi5jCkBAIC0xNDQ1LDcgKzE0NDUsNiBAQCBzdGF0aWMgc3Ry
dWN0IGRybV9kcml2ZXIga21zX2RyaXZlciA9IHsKIAkucHJpbWVfZmRfdG9faGFuZGxlID0gZHJt
X2dlbV9wcmltZV9mZF90b19oYW5kbGUsCiAJLmdlbV9wcmltZV9leHBvcnQgPSBhbWRncHVfZ2Vt
X3ByaW1lX2V4cG9ydCwKIAkuZ2VtX3ByaW1lX2ltcG9ydCA9IGFtZGdwdV9nZW1fcHJpbWVfaW1w
b3J0LAotCS5nZW1fcHJpbWVfZ2V0X3NnX3RhYmxlID0gYW1kZ3B1X2dlbV9wcmltZV9nZXRfc2df
dGFibGUsCiAJLmdlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUgPSBhbWRncHVfZ2VtX3ByaW1lX2lt
cG9ydF9zZ190YWJsZSwKIAkuZ2VtX3ByaW1lX3ZtYXAgPSBhbWRncHVfZ2VtX3ByaW1lX3ZtYXAs
CiAJLmdlbV9wcmltZV92dW5tYXAgPSBhbWRncHVfZ2VtX3ByaW1lX3Z1bm1hcCwKLS0gCjIuMTcu
MQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KYW1kLWdm
eCBtYWlsaW5nIGxpc3QKYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4
