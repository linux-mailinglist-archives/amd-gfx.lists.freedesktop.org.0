Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 87AB9BBD02
	for <lists+amd-gfx@lfdr.de>; Mon, 23 Sep 2019 22:35:57 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 02D1689D8D;
	Mon, 23 Sep 2019 20:35:56 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-qt1-x843.google.com (mail-qt1-x843.google.com
 [IPv6:2607:f8b0:4864:20::843])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6F2F589D64
 for <amd-gfx@lists.freedesktop.org>; Mon, 23 Sep 2019 20:35:54 +0000 (UTC)
Received: by mail-qt1-x843.google.com with SMTP id n7so18834477qtb.6
 for <amd-gfx@lists.freedesktop.org>; Mon, 23 Sep 2019 13:35:54 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=kCnGLBB4WCyecBRDRRjIOFvUMkYi3M4jTyFcmPQRxJk=;
 b=gNFMlV+571F0Cy0E52YeGdkGukVXHDW0LuTC5V80HsAipkI6tyFo0EniURSRVDFTv5
 3xM8B5lABvFZ1SmlEAYQmMiTEkhEij47i5MiUr2yDzHtKRj0zCvpf2JZGjnM/poJ1Fyd
 Ybb1oyORNAPhjcAQ8TNr4l3dC+s36VNci7vxpPaRlb3e6zmyZq8ZArJpCB9CLxLVzuR/
 /rAGCPNqHZyEFpdG8lA4MKRMV4SXpwQMlSVRhZgRAtcjBVmHmcszBGOEbvXd04Xas70Y
 EmuzrwxGgwAdxeuADc5BG+ikXusur5FfPXSbmPHPpmLn8ERIhbV7qb6IrZrDMyi3yGRz
 krpA==
X-Gm-Message-State: APjAAAWynV+eM2nR8+PifXd0iktp2l2iHPj8CtqOBJd2Ks214JpqUF6M
 Y5O3xOfuDC6O9FNOrdYVqD9VHVMd
X-Google-Smtp-Source: APXvYqytiGlVuNAvA93iwidhLCQuZxFCpbZ2LEME+zWUrOxf9NtXq3oU1T7x5UIabsTRv5VJ4Mirrw==
X-Received: by 2002:ac8:2bc4:: with SMTP id n4mr2107550qtn.298.1569270953196; 
 Mon, 23 Sep 2019 13:35:53 -0700 (PDT)
Received: from localhost.localdomain ([71.219.73.178])
 by smtp.gmail.com with ESMTPSA id w34sm7762306qth.84.2019.09.23.13.35.52
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 23 Sep 2019 13:35:52 -0700 (PDT)
From: Alex Deucher <alexdeucher@gmail.com>
X-Google-Original-From: Alex Deucher <alexander.deucher@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH 1/2] drm/amdgpu/atomfirmware: use proper index for querying
 vram type (v3)
Date: Mon, 23 Sep 2019 15:35:36 -0500
Message-Id: <20190923203537.3301-1-alexander.deucher@amd.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=kCnGLBB4WCyecBRDRRjIOFvUMkYi3M4jTyFcmPQRxJk=;
 b=prBMRdaeRMiuo90otyc8MIMlLjaX6P5zJXlqIOldSaftCYk0DwlA8cmpSAo7/aABOf
 oaeiv+dEyPFaO49GuhyxU86Ls+5wHy1AO9rCq0tiiK/UtXj+EahPRZbWeLXzk64IIhQj
 38J9LPrLhSODIM9IUDvNoTz6cmlxUwURkMHz8a9pFkWnOUp/bN2SMhmjuWaMvG5KQTZq
 wyeX8JUOjBeODbztzWVjW1UboGiWw5jLHhn8A1EWoF1f3lHNkuqd5ouPR1F5xDSOIC90
 zFf8hPZdgHsmEQ8Ych6eyh0esMhFTAyIqgBjjxlAc8XvolZi5TkbUyQFVYPLv5eAuqhD
 R1DQ==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Alex Deucher <alexander.deucher@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VGhlIGluZGV4IGlzIHN0b3JlZCBpbiBzY3JhdGNoIHJlZ2lzdGVyIDQgYWZ0ZXIgYXNpYyBpbml0
LiAgVXNlCnRoYXQgaW5kZXguICBObyBmdW5jdGlvbmFsIGNoYW5nZSBzaW5jZSBhbGwgYXNpY3Mg
aW4gYSBmYW1pbHkKdXNlIHRoZSBzYW1lIHR5cGUgb2YgdnJhbSAoRzUsIEc2LCBIQk0pIGFuZCB0
aGF0IGlzIGFsbCB3ZSB1c2UKYXQgdGhlIG1vbmVudCwgYnV0IGlmIHdlIGV2ZXIgbmVlZCB0byBx
dWVyeSBvdGhlciBpbmZvLCB3ZSB3aWxsCm5vdyBoYXZlIHRoZSBwcm9wZXIgaW5kZXguCgp2Mjog
bW9kdWxlIGFycmF5IGlzIHZhcmlhYmxlIHNpemVkLCBoYW5kbGUgdGhhdC4KdjM6IGZpeCBvZmYg
Ynkgb25lIGluIGFycmF5IGhhbmRsaW5nCgpTaWduZWQtb2ZmLWJ5OiBBbGV4IERldWNoZXIgPGFs
ZXhhbmRlci5kZXVjaGVyQGFtZC5jb20+Ci0tLQogLi4uL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYXRvbWZpcm13YXJlLmMgIHwgMTU4ICsrKysrKysrKystLS0tLS0tLQogMSBmaWxlIGNoYW5n
ZWQsIDg4IGluc2VydGlvbnMoKyksIDcwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hdG9tZmlybXdhcmUuYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hdG9tZmlybXdhcmUuYwppbmRleCBkYWY2ODc0MjhjZGIu
LjlmZWNjZWMyZWE1ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X2F0b21maXJtd2FyZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hdG9tZmlybXdhcmUuYwpAQCAtMTIwLDY1ICsxMjAsMTQgQEAgdW5pb24gdnJhbV9pbmZvIHsK
IAlzdHJ1Y3QgYXRvbV92cmFtX2luZm9faGVhZGVyX3YyXzMgdjIzOwogCXN0cnVjdCBhdG9tX3Zy
YW1faW5mb19oZWFkZXJfdjJfNCB2MjQ7CiB9OwotLyoKLSAqIFJldHVybiB2cmFtIHdpZHRoIGZy
b20gaW50ZWdyYXRlZCBzeXN0ZW0gaW5mbyB0YWJsZSwgaWYgYXZhaWxhYmxlLAotICogb3IgMCBp
ZiBub3QuCi0gKi8KLWludCBhbWRncHVfYXRvbWZpcm13YXJlX2dldF92cmFtX3dpZHRoKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KQotewotCXN0cnVjdCBhbWRncHVfbW9kZV9pbmZvICptb2Rl
X2luZm8gPSAmYWRldi0+bW9kZV9pbmZvOwotCWludCBpbmRleDsKLQl1MTYgZGF0YV9vZmZzZXQs
IHNpemU7Ci0JdW5pb24gaWdwX2luZm8gKmlncF9pbmZvOwotCXVuaW9uIHZyYW1faW5mbyAqdnJh
bV9pbmZvOwotCXUzMiBtZW1fY2hhbm5lbF9udW1iZXI7Ci0JdTMyIG1lbV9jaGFubmVsX3dpZHRo
OwotCXU4IGZyZXYsIGNyZXY7Ci0KLQlpZiAoYWRldi0+ZmxhZ3MgJiBBTURfSVNfQVBVKQotCQlp
bmRleCA9IGdldF9pbmRleF9pbnRvX21hc3Rlcl90YWJsZShhdG9tX21hc3Rlcl9saXN0X29mX2Rh
dGFfdGFibGVzX3YyXzEsCi0JCQkJCQkgICAgaW50ZWdyYXRlZHN5c3RlbWluZm8pOwotCWVsc2UK
LQkJaW5kZXggPSBnZXRfaW5kZXhfaW50b19tYXN0ZXJfdGFibGUoYXRvbV9tYXN0ZXJfbGlzdF9v
Zl9kYXRhX3RhYmxlc192Ml8xLAotCQkJCQkJICAgIHZyYW1faW5mbyk7Ci0KLQkvKiBnZXQgYW55
IGlncCBzcGVjaWZpYyBvdmVycmlkZXMgKi8KLQlpZiAoYW1kZ3B1X2F0b21fcGFyc2VfZGF0YV9o
ZWFkZXIobW9kZV9pbmZvLT5hdG9tX2NvbnRleHQsIGluZGV4LCAmc2l6ZSwKLQkJCQkgICAmZnJl
diwgJmNyZXYsICZkYXRhX29mZnNldCkpIHsKLQkJaWYgKGFkZXYtPmZsYWdzICYgQU1EX0lTX0FQ
VSkgewotCQkJaWdwX2luZm8gPSAodW5pb24gaWdwX2luZm8gKikKLQkJCQkobW9kZV9pbmZvLT5h
dG9tX2NvbnRleHQtPmJpb3MgKyBkYXRhX29mZnNldCk7Ci0JCQlzd2l0Y2ggKGNyZXYpIHsKLQkJ
CWNhc2UgMTE6Ci0JCQkJbWVtX2NoYW5uZWxfbnVtYmVyID0gaWdwX2luZm8tPnYxMS51bWFjaGFu
bmVsbnVtYmVyOwotCQkJCS8qIGNoYW5uZWwgd2lkdGggaXMgNjQgKi8KLQkJCQlyZXR1cm4gbWVt
X2NoYW5uZWxfbnVtYmVyICogNjQ7Ci0JCQlkZWZhdWx0OgotCQkJCXJldHVybiAwOwotCQkJfQot
CQl9IGVsc2UgewotCQkJdnJhbV9pbmZvID0gKHVuaW9uIHZyYW1faW5mbyAqKQotCQkJCShtb2Rl
X2luZm8tPmF0b21fY29udGV4dC0+YmlvcyArIGRhdGFfb2Zmc2V0KTsKLQkJCXN3aXRjaCAoY3Jl
dikgewotCQkJY2FzZSAzOgotCQkJCW1lbV9jaGFubmVsX251bWJlciA9IHZyYW1faW5mby0+djIz
LnZyYW1fbW9kdWxlWzBdLmNoYW5uZWxfbnVtOwotCQkJCW1lbV9jaGFubmVsX3dpZHRoID0gdnJh
bV9pbmZvLT52MjMudnJhbV9tb2R1bGVbMF0uY2hhbm5lbF93aWR0aDsKLQkJCQlyZXR1cm4gbWVt
X2NoYW5uZWxfbnVtYmVyICogKDEgPDwgbWVtX2NoYW5uZWxfd2lkdGgpOwotCQkJY2FzZSA0Ogot
CQkJCW1lbV9jaGFubmVsX251bWJlciA9IHZyYW1faW5mby0+djI0LnZyYW1fbW9kdWxlWzBdLmNo
YW5uZWxfbnVtOwotCQkJCW1lbV9jaGFubmVsX3dpZHRoID0gdnJhbV9pbmZvLT52MjQudnJhbV9t
b2R1bGVbMF0uY2hhbm5lbF93aWR0aDsKLQkJCQlyZXR1cm4gbWVtX2NoYW5uZWxfbnVtYmVyICog
KDEgPDwgbWVtX2NoYW5uZWxfd2lkdGgpOwotCQkJZGVmYXVsdDoKLQkJCQlyZXR1cm4gMDsKLQkJ
CX0KLQkJfQotCX0KIAotCXJldHVybiAwOwotfQordW5pb24gdnJhbV9tb2R1bGUgeworCXN0cnVj
dCBhdG9tX3ZyYW1fbW9kdWxlX3Y5IHY5OworCXN0cnVjdCBhdG9tX3ZyYW1fbW9kdWxlX3YxMCB2
MTA7Cit9OwogCi1zdGF0aWMgaW50IGNvbnZlcnRfYXRvbV9tZW1fdHlwZV90b192cmFtX3R5cGUg
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAotCQkJCQkgICAgICAgaW50IGF0b21fbWVtX3R5
cGUpCitzdGF0aWMgaW50IGNvbnZlcnRfYXRvbV9tZW1fdHlwZV90b192cmFtX3R5cGUoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYsCisJCQkJCSAgICAgIGludCBhdG9tX21lbV90eXBlKQogewog
CWludCB2cmFtX3R5cGU7CiAKQEAgLTIxOSwxOSArMTY4LDIzIEBAIHN0YXRpYyBpbnQgY29udmVy
dF9hdG9tX21lbV90eXBlX3RvX3ZyYW1fdHlwZSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYs
CiAKIAlyZXR1cm4gdnJhbV90eXBlOwogfQotLyoKLSAqIFJldHVybiB2cmFtIHR5cGUgZnJvbSBl
aXRoZXIgaW50ZWdyYXRlZCBzeXN0ZW0gaW5mbyB0YWJsZQotICogb3IgdW1jIGluZm8gdGFibGUs
IGlmIGF2YWlsYWJsZSwgb3IgMCAoVFlQRV9VTktOT1dOKSBpZiBub3QKLSAqLwotaW50IGFtZGdw
dV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1fdHlwZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikK
Kworc3RhdGljIGludAorYW1kZ3B1X2F0b21maXJtd2FyZV9nZXRfdnJhbV9pbmZvKHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2LAorCQkJCSAgaW50ICp2cmFtX3dpZHRoLCBpbnQgKnZyYW1fdHlw
ZSkKIHsKIAlzdHJ1Y3QgYW1kZ3B1X21vZGVfaW5mbyAqbW9kZV9pbmZvID0gJmFkZXYtPm1vZGVf
aW5mbzsKLQlpbnQgaW5kZXg7CisJaW50IGluZGV4LCBpID0gMDsKIAl1MTYgZGF0YV9vZmZzZXQs
IHNpemU7CiAJdW5pb24gaWdwX2luZm8gKmlncF9pbmZvOwogCXVuaW9uIHZyYW1faW5mbyAqdnJh
bV9pbmZvOworCXVuaW9uIHZyYW1fbW9kdWxlICp2cmFtX21vZHVsZTsKIAl1OCBmcmV2LCBjcmV2
OwogCXU4IG1lbV90eXBlOworCXUzMiBtZW1fY2hhbm5lbF9udW1iZXI7CisJdTMyIG1lbV9jaGFu
bmVsX3dpZHRoOworCXUzMiBtb2R1bGVfaWQ7CisKIAogCWlmIChhZGV2LT5mbGFncyAmIEFNRF9J
U19BUFUpCiAJCWluZGV4ID0gZ2V0X2luZGV4X2ludG9fbWFzdGVyX3RhYmxlKGF0b21fbWFzdGVy
X2xpc3Rfb2ZfZGF0YV90YWJsZXNfdjJfMSwKQEAgLTIzOSw2ICsxOTIsNyBAQCBpbnQgYW1kZ3B1
X2F0b21maXJtd2FyZV9nZXRfdnJhbV90eXBlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQog
CWVsc2UKIAkJaW5kZXggPSBnZXRfaW5kZXhfaW50b19tYXN0ZXJfdGFibGUoYXRvbV9tYXN0ZXJf
bGlzdF9vZl9kYXRhX3RhYmxlc192Ml8xLAogCQkJCQkJICAgIHZyYW1faW5mbyk7CisKIAlpZiAo
YW1kZ3B1X2F0b21fcGFyc2VfZGF0YV9oZWFkZXIobW9kZV9pbmZvLT5hdG9tX2NvbnRleHQsCiAJ
CQkJCSAgaW5kZXgsICZzaXplLAogCQkJCQkgICZmcmV2LCAmY3JldiwgJmRhdGFfb2Zmc2V0KSkg
ewpAQCAtMjQ3LDMwICsyMDEsOTQgQEAgaW50IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1f
dHlwZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAkJCQkobW9kZV9pbmZvLT5hdG9tX2Nv
bnRleHQtPmJpb3MgKyBkYXRhX29mZnNldCk7CiAJCQlzd2l0Y2ggKGNyZXYpIHsKIAkJCWNhc2Ug
MTE6CisJCQkJbWVtX2NoYW5uZWxfbnVtYmVyID0gaWdwX2luZm8tPnYxMS51bWFjaGFubmVsbnVt
YmVyOworCQkJCS8qIGNoYW5uZWwgd2lkdGggaXMgNjQgKi8KKwkJCQlpZiAodnJhbV93aWR0aCkK
KwkJCQkJKnZyYW1fd2lkdGggPSBtZW1fY2hhbm5lbF9udW1iZXIgKiA2NDsKIAkJCQltZW1fdHlw
ZSA9IGlncF9pbmZvLT52MTEubWVtb3J5dHlwZTsKLQkJCQlyZXR1cm4gY29udmVydF9hdG9tX21l
bV90eXBlX3RvX3ZyYW1fdHlwZShhZGV2LCBtZW1fdHlwZSk7CisJCQkJaWYgKHZyYW1fdHlwZSkK
KwkJCQkJKnZyYW1fdHlwZSA9IGNvbnZlcnRfYXRvbV9tZW1fdHlwZV90b192cmFtX3R5cGUoYWRl
diwgbWVtX3R5cGUpOworCQkJCWJyZWFrOwogCQkJZGVmYXVsdDoKLQkJCQlyZXR1cm4gMDsKKwkJ
CQlyZXR1cm4gLUVJTlZBTDsKIAkJCX0KIAkJfSBlbHNlIHsKIAkJCXZyYW1faW5mbyA9ICh1bmlv
biB2cmFtX2luZm8gKikKIAkJCQkobW9kZV9pbmZvLT5hdG9tX2NvbnRleHQtPmJpb3MgKyBkYXRh
X29mZnNldCk7CisJCQltb2R1bGVfaWQgPSAoUlJFRzMyKGFkZXYtPmJpb3Nfc2NyYXRjaF9yZWdf
b2Zmc2V0ICsgNCkgJiAweDAwZmYwMDAwKSA+PiAxNjsKIAkJCXN3aXRjaCAoY3JldikgewogCQkJ
Y2FzZSAzOgotCQkJCW1lbV90eXBlID0gdnJhbV9pbmZvLT52MjMudnJhbV9tb2R1bGVbMF0ubWVt
b3J5X3R5cGU7Ci0JCQkJcmV0dXJuIGNvbnZlcnRfYXRvbV9tZW1fdHlwZV90b192cmFtX3R5cGUo
YWRldiwgbWVtX3R5cGUpOworCQkJCWlmIChtb2R1bGVfaWQgPiB2cmFtX2luZm8tPnYyMy52cmFt
X21vZHVsZV9udW0pCisJCQkJCW1vZHVsZV9pZCA9IDA7CisJCQkJdnJhbV9tb2R1bGUgPSAodW5p
b24gdnJhbV9tb2R1bGUgKil2cmFtX2luZm8tPnYyMy52cmFtX21vZHVsZTsKKwkJCQl3aGlsZSAo
aSA8IG1vZHVsZV9pZCkgeworCQkJCQl2cmFtX21vZHVsZSA9ICh1bmlvbiB2cmFtX21vZHVsZSAq
KQorCQkJCQkJKCh1OCAqKXZyYW1fbW9kdWxlICsgdnJhbV9tb2R1bGUtPnY5LnZyYW1fbW9kdWxl
X3NpemUpOworCQkJCQlpKys7CisJCQkJfQorCQkJCW1lbV90eXBlID0gdnJhbV9tb2R1bGUtPnY5
Lm1lbW9yeV90eXBlOworCQkJCWlmICh2cmFtX3R5cGUpCisJCQkJCSp2cmFtX3R5cGUgPSBjb252
ZXJ0X2F0b21fbWVtX3R5cGVfdG9fdnJhbV90eXBlKGFkZXYsIG1lbV90eXBlKTsKKwkJCQltZW1f
Y2hhbm5lbF9udW1iZXIgPSB2cmFtX21vZHVsZS0+djkuY2hhbm5lbF9udW07CisJCQkJbWVtX2No
YW5uZWxfd2lkdGggPSB2cmFtX21vZHVsZS0+djkuY2hhbm5lbF93aWR0aDsKKwkJCQlpZiAodnJh
bV93aWR0aCkKKwkJCQkJKnZyYW1fd2lkdGggPSBtZW1fY2hhbm5lbF9udW1iZXIgKiAoMSA8PCBt
ZW1fY2hhbm5lbF93aWR0aCk7CisJCQkJYnJlYWs7CiAJCQljYXNlIDQ6Ci0JCQkJbWVtX3R5cGUg
PSB2cmFtX2luZm8tPnYyNC52cmFtX21vZHVsZVswXS5tZW1vcnlfdHlwZTsKLQkJCQlyZXR1cm4g
Y29udmVydF9hdG9tX21lbV90eXBlX3RvX3ZyYW1fdHlwZShhZGV2LCBtZW1fdHlwZSk7CisJCQkJ
aWYgKG1vZHVsZV9pZCA+IHZyYW1faW5mby0+djI0LnZyYW1fbW9kdWxlX251bSkKKwkJCQkJbW9k
dWxlX2lkID0gMDsKKwkJCQl2cmFtX21vZHVsZSA9ICh1bmlvbiB2cmFtX21vZHVsZSAqKXZyYW1f
aW5mby0+djI0LnZyYW1fbW9kdWxlOworCQkJCXdoaWxlIChpIDwgbW9kdWxlX2lkKSB7CisJCQkJ
CXZyYW1fbW9kdWxlID0gKHVuaW9uIHZyYW1fbW9kdWxlICopCisJCQkJCQkoKHU4ICopdnJhbV9t
b2R1bGUgKyB2cmFtX21vZHVsZS0+djEwLnZyYW1fbW9kdWxlX3NpemUpOworCQkJCQlpKys7CisJ
CQkJfQorCQkJCW1lbV90eXBlID0gdnJhbV9tb2R1bGUtPnYxMC5tZW1vcnlfdHlwZTsKKwkJCQlp
ZiAodnJhbV90eXBlKQorCQkJCQkqdnJhbV90eXBlID0gY29udmVydF9hdG9tX21lbV90eXBlX3Rv
X3ZyYW1fdHlwZShhZGV2LCBtZW1fdHlwZSk7CisJCQkJbWVtX2NoYW5uZWxfbnVtYmVyID0gdnJh
bV9tb2R1bGUtPnYxMC5jaGFubmVsX251bTsKKwkJCQltZW1fY2hhbm5lbF93aWR0aCA9IHZyYW1f
bW9kdWxlLT52MTAuY2hhbm5lbF93aWR0aDsKKwkJCQlpZiAodnJhbV93aWR0aCkKKwkJCQkJKnZy
YW1fd2lkdGggPSBtZW1fY2hhbm5lbF9udW1iZXIgKiAoMSA8PCBtZW1fY2hhbm5lbF93aWR0aCk7
CisJCQkJYnJlYWs7CiAJCQlkZWZhdWx0OgotCQkJCXJldHVybiAwOworCQkJCXJldHVybiAtRUlO
VkFMOwogCQkJfQogCQl9CisKIAl9CiAKIAlyZXR1cm4gMDsKIH0KIAorLyoKKyAqIFJldHVybiB2
cmFtIHdpZHRoIGZyb20gaW50ZWdyYXRlZCBzeXN0ZW0gaW5mbyB0YWJsZSwgaWYgYXZhaWxhYmxl
LAorICogb3IgMCBpZiBub3QuCisgKi8KK2ludCBhbWRncHVfYXRvbWZpcm13YXJlX2dldF92cmFt
X3dpZHRoKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQoreworCWludCB2cmFtX3dpZHRoID0g
MCwgdnJhbV90eXBlID0gMDsKKwlpbnQgciA9IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1f
aW5mbyhhZGV2LCAmdnJhbV93aWR0aCwgJnZyYW1fdHlwZSk7CisJaWYgKHIpCisJCXJldHVybiAw
OworCisJcmV0dXJuIHZyYW1fd2lkdGg7Cit9CisKKy8qCisgKiBSZXR1cm4gdnJhbSB0eXBlIGZy
b20gZWl0aGVyIGludGVncmF0ZWQgc3lzdGVtIGluZm8gdGFibGUKKyAqIG9yIHVtYyBpbmZvIHRh
YmxlLCBpZiBhdmFpbGFibGUsIG9yIDAgKFRZUEVfVU5LTk9XTikgaWYgbm90CisgKi8KK2ludCBh
bWRncHVfYXRvbWZpcm13YXJlX2dldF92cmFtX3R5cGUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYpCit7CisJaW50IHZyYW1fd2lkdGggPSAwLCB2cmFtX3R5cGUgPSAwOworCWludCByID0gYW1k
Z3B1X2F0b21maXJtd2FyZV9nZXRfdnJhbV9pbmZvKGFkZXYsICZ2cmFtX3dpZHRoLCAmdnJhbV90
eXBlKTsKKwlpZiAocikKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4gdnJhbV90eXBlOworfQorCiAv
KgogICogUmV0dXJuIHRydWUgaWYgdmJpb3MgZW5hYmxlZCBlY2MgYnkgZGVmYXVsdCwgaWYgdW1j
IGluZm8gdGFibGUgaXMgYXZhaWxhYmxlCiAgKiBvciBmYWxzZSBpZiBlY2MgaXMgbm90IGVuYWJs
ZWQgb3IgdW1jIGluZm8gdGFibGUgaXMgbm90IGF2YWlsYWJsZQotLSAKMi4yMC4xCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwphbWQtZ2Z4IG1haWxpbmcg
bGlzdAphbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2FtZC1nZng=
