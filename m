Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E133B268C3
	for <lists+amd-gfx@lfdr.de>; Wed, 22 May 2019 18:59:30 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D362E89C55;
	Wed, 22 May 2019 16:59:28 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-lj1-x243.google.com (mail-lj1-x243.google.com
 [IPv6:2a00:1450:4864:20::243])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AD61B89C55
 for <amd-gfx@lists.freedesktop.org>; Wed, 22 May 2019 16:58:35 +0000 (UTC)
Received: by mail-lj1-x243.google.com with SMTP id e13so2748705ljl.11
 for <amd-gfx@lists.freedesktop.org>; Wed, 22 May 2019 09:58:35 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=iEj6Ff/H6E4VLiXQm6DO5BqKseElb7ler1ySMSlsz4I=;
 b=cpJIeexLK2WYjaNdZspXeA4NLZxyrqNO4z1mMcUftq1h0Yf0zWV/fSWFRjTZVdC82P
 mEt8SitNVa2eV6puHgQMT6j/LTniOQ1LvOaqwCqSF+h+RZyeqUj5WgCRMzs7RTFbCG3n
 wBSZaUfRXMwl5xIMB8bSdDa6TEe25DM/fk9VHvjIG/PCXTdkS1trMncZXcs0fyTxkcUn
 GNq8jiVyD5rNjqfHFUWplzz0Z+OgwfNJ5JwZA8iVtJwdGmOSAfwLSwTamKcHkl6tQ6FI
 7L/dCCxHDSCoa1c6Q/o1WKOtfBDPk3yxQqd25eI7fb0g9uFI996+p82mc25x4yi0cTCo
 fViQ==
X-Gm-Message-State: APjAAAWHHmWnjzckC+bjDvbMmMqF2jgr+adDDyRcK8nbM5q6MBVSqDeF
 +olawSQFBZ60N1cuIGu/ihZWN0oUoA8VHrFIWuI6Uw==
X-Google-Smtp-Source: APXvYqy5hQuwmu5sUHU1LdrMDZRl8vRMt+7oXELCei2Hw7KHmtQdp6HFikhxSbWr2LIYnAvYIHTeEegng6kT70Dc8d0=
X-Received: by 2002:a2e:8614:: with SMTP id a20mr7690480lji.20.1558544313559; 
 Wed, 22 May 2019 09:58:33 -0700 (PDT)
MIME-Version: 1.0
References: <cover.1557160186.git.andreyknvl@google.com>
 <20190517144931.GA56186@arrakis.emea.arm.com>
 <CAFKCwrj6JEtp4BzhqO178LFJepmepoMx=G+YdC8sqZ3bcBp3EQ@mail.gmail.com>
 <20190521182932.sm4vxweuwo5ermyd@mbp> <201905211633.6C0BF0C2@keescook>
 <20190522101110.m2stmpaj7seezveq@mbp>
 <CAJgzZoosKBwqXRyA6fb8QQSZXFqfHqe9qO9je5TogHhzuoGXJQ@mail.gmail.com>
 <20190522163527.rnnc6t4tll7tk5zw@mbp>
In-Reply-To: <20190522163527.rnnc6t4tll7tk5zw@mbp>
From: enh <enh@google.com>
Date: Wed, 22 May 2019 09:58:22 -0700
Message-ID: <CAJgzZooc+wXBBXenm62n2zR8TVrv-y1pXMmHSdxeaNYhFLSzBA@mail.gmail.com>
Subject: Re: [PATCH v15 00/17] arm64: untag user pointers passed to the kernel
To: Catalin Marinas <catalin.marinas@arm.com>
X-Mailman-Approved-At: Wed, 22 May 2019 16:59:26 +0000
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20161025;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc;
 bh=iEj6Ff/H6E4VLiXQm6DO5BqKseElb7ler1ySMSlsz4I=;
 b=wK+Ags5fi2Zh9VWkgyeKWGUKDczOLAxo6NEBDIkT47LLbY+0uPXQ20Ef3md4Je4YM7
 yTt+Dnj+qvCgrr4bQbXebiU250PfvvmpvwxcaxOqBf5zn5CMszutRFHD1jRI8Y5V/CPs
 jt+pv/yu85FknwLJ8Zo9R8XECA2KhoyXo2Diq4THdh7+NYacc5mTvAPuk8TOUmLqFwYn
 AgFwdp2R8ztxIowcvgrh5IyXMpDzu2HT0gF+HDg31nzr0Ecz3Q04rvVhTpk7W+XmTJ5D
 H6CtsOUOTi8rz1vPfB8hysSXAunrOlBx79JX28IwO3FUWoOi2wwQCUxMiiDLS3NePwQF
 DnQw==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, kvm@vger.kernel.org,
 Szabolcs Nagy <Szabolcs.Nagy@arm.com>, Will Deacon <will.deacon@arm.com>,
 dri-devel@lists.freedesktop.org,
 Linux Memory Management List <linux-mm@kvack.org>,
 Khalid Aziz <khalid.aziz@oracle.com>,
 "open list:KERNEL SELFTEST FRAMEWORK" <linux-kselftest@vger.kernel.org>,
 Vincenzo Frascino <vincenzo.frascino@arm.com>,
 Jacob Bramley <Jacob.Bramley@arm.com>, Leon Romanovsky <leon@kernel.org>,
 linux-rdma@vger.kernel.org, amd-gfx@lists.freedesktop.org,
 Dmitry Vyukov <dvyukov@google.com>, Dave Martin <Dave.Martin@arm.com>,
 Evgenii Stepanov <eugenis@google.com>, linux-media@vger.kernel.org,
 Kevin Brodsky <kevin.brodsky@arm.com>, Kees Cook <keescook@chromium.org>,
 Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
 Andrey Konovalov <andreyknvl@google.com>,
 Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
 Alex Williamson <alex.williamson@redhat.com>,
 Yishai Hadas <yishaih@mellanox.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>,
 Linux ARM <linux-arm-kernel@lists.infradead.org>,
 Kostya Serebryany <kcc@google.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Felix Kuehling <Felix.Kuehling@amd.com>, LKML <linux-kernel@vger.kernel.org>,
 Jens Wiklander <jens.wiklander@linaro.org>, Lee Smith <Lee.Smith@arm.com>,
 Alexander Deucher <Alexander.Deucher@amd.com>,
 Andrew Morton <akpm@linux-foundation.org>, Robin Murphy <robin.murphy@arm.com>,
 Christian Koenig <Christian.Koenig@amd.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

T24gV2VkLCBNYXkgMjIsIDIwMTkgYXQgOTozNSBBTSBDYXRhbGluIE1hcmluYXMgPGNhdGFsaW4u
bWFyaW5hc0Bhcm0uY29tPiB3cm90ZToKPgo+IE9uIFdlZCwgTWF5IDIyLCAyMDE5IGF0IDA4OjMw
OjIxQU0gLTA3MDAsIGVuaCB3cm90ZToKPiA+IE9uIFdlZCwgTWF5IDIyLCAyMDE5IGF0IDM6MTEg
QU0gQ2F0YWxpbiBNYXJpbmFzIDxjYXRhbGluLm1hcmluYXNAYXJtLmNvbT4gd3JvdGU6Cj4gPiA+
IE9uIFR1ZSwgTWF5IDIxLCAyMDE5IGF0IDA1OjA0OjM5UE0gLTA3MDAsIEtlZXMgQ29vayB3cm90
ZToKPiA+ID4gPiBJIGp1c3Qgd2FudCB0byBtYWtlIHN1cmUgSSBmdWxseSB1bmRlcnN0YW5kIHlv
dXIgY29uY2VybiBhYm91dCB0aGlzCj4gPiA+ID4gYmVpbmcgYW4gQUJJIGJyZWFrLCBhbmQgSSB3
b3JrIGJlc3Qgd2l0aCBleGFtcGxlcy4gVGhlIGNsb3Nlc3Qgc2l0dWF0aW9uCj4gPiA+ID4gSSBj
YW4gc2VlIHdvdWxkIGJlOgo+ID4gPiA+Cj4gPiA+ID4gLSBzb21lIHByb2dyYW0gaGFzIG5vIGlk
ZWEgYWJvdXQgTVRFCj4gPiA+Cj4gPiA+IEFwYXJ0IGZyb20gc29tZSBsaWJyYXJpZXMgbGlrZSBs
aWJjIChhbmQgbWF5YmUgdGhvc2UgdGhhdCBoYW5kbGUKPiA+ID4gc3BlY2lmaWMgZGV2aWNlIGlv
Y3RscyksIEkgdGhpbmsgbW9zdCBwcm9ncmFtcyBzaG91bGQgaGF2ZSBubyBpZGVhIGFib3V0Cj4g
PiA+IE1URS4gSSB3b3VsZG4ndCBleHBlY3QgcHJvZ3JhbW1lcnMgdG8gaGF2ZSB0byBjaGFuZ2Ug
dGhlaXIgYXBwIGp1c3QKPiA+ID4gYmVjYXVzZSB3ZSBoYXZlIGEgbmV3IGZlYXR1cmUgdGhhdCBj
b2xvdXJzIGhlYXAgYWxsb2NhdGlvbnMuCj4gPgo+ID4gb2J2aW91c2x5IGknbSBiaWFzZWQgYXMg
YSBsaWJjIG1haW50YWluZXIsIGJ1dC4uLgo+ID4KPiA+IGkgZG9uJ3QgdGhpbmsgaXQgaGVscHMg
dG8gbW92ZSB0aGlzIHRvIGxpYmMgLS0tIG5vdyB5b3UganVzdCBoYXZlIGFuCj4gPiBleHRyYSBk
ZXBlbmRlbmN5IHdoZXJlIHRvIGhhdmUgYSBndWFyYW50ZWVkIHdvcmtpbmcgc3lzdGVtIHlvdSBu
ZWVkIHRvCj4gPiB1cGRhdGUgeW91ciBrZXJuZWwgYW5kIGxpYmMgdG9nZXRoZXIuIChvciBhdCBs
ZWFzdCB1cGRhdGUgeW91ciBsaWJjIHRvCj4gPiB1bmRlcnN0YW5kIG5ldyBpb2N0bHMgZXRjIF9i
ZWZvcmVfIHlvdSBjYW4gdXBkYXRlIHlvdXIga2VybmVsLikKPgo+IFRoYXQncyBub3Qgd2hhdCBJ
IG1lYW50IChvciBJIG1pc3VuZGVyc3Rvb2QgeW91KS4gSWYgd2UgaGF2ZSBhIHJlbGF4ZWQKPiBB
QkkgaW4gdGhlIGtlcm5lbCBhbmQgYSBsaWJjIHRoYXQgcmV0dXJucyB0YWdnZWQgcG9pbnRlcnMg
b24gbWFsbG9jKCkgSQo+IHdvdWxkbid0IGV4cGVjdCB0aGUgcHJvZ3JhbW1lciB0byBkbyBhbnl0
aGluZyBkaWZmZXJlbnQgaW4gdGhlCj4gYXBwbGljYXRpb24gY29kZSBsaWtlIGV4cGxpY2l0IHVu
dGFnZ2luZy4gQmFzaWNhbGx5IHRoZSBwcm9ncmFtIHdvdWxkCj4gY29udGludWUgdG8gcnVuIHVu
bW9kaWZpZWQgaXJyZXNwZWN0aXZlIG9mIHdoZXRoZXIgeW91IHVzZSBhbiBvbGQgbGliYwo+IHdp
dGhvdXQgdGFnZ2VkIHBvaW50ZXJzIG9yIGEgbmV3IG9uZSB3aGljaCB0YWdzIGhlYXAgYWxsb2Nh
dGlvbnMuCj4KPiBXaGF0IEkgZG8gZXhwZWN0IGlzIHRoYXQgdGhlIGxpYmMgY2hlY2tzIGZvciB0
aGUgcHJlc2VuY2Ugb2YgdGhlIHJlbGF4ZWQKPiBBQkksIGN1cnJlbnRseSBwcm9wb3NlZCBhcyBh
biBBVF9GTEFHUyBiaXQgKGZvciBNVEUgd2UnZCBoYXZlIGEKPiBIV0NBUF9NVEUpLCBhbmQgb25s
eSB0YWcgdGhlIG1hbGxvYygpIHBvaW50ZXJzIGlmIHRoZSBrZXJuZWwgc3VwcG9ydHMKPiB0aGUg
cmVsYXhlZCBBQkkuIEFzIHlvdSBzYWlkLCB5b3Ugc2hvdWxkbid0IGV4cGVjdCB0aGF0IHRoZSBD
IGxpYnJhcnkKPiBhbmQga2VybmVsIGFyZSB1cGdyYWRlZCB0b2dldGhlciwgc28gdGhleSBzaG91
bGQgYmUgYWJsZSB0byB3b3JrIGluIGFueQo+IG5ldy9vbGQgdmVyc2lvbiBjb21iaW5hdGlvbi4K
CnllcywgdGhhdCBwYXJ0IG1ha2VzIHNlbnNlLiBpIGRvIHRoaW5rIHdlJ2QgdXNlIHRoZSBBVF9G
TEFHUyBiaXQsIGZvcgpleGFjdGx5IHRoaXMuCgppIHdhcyBxdWVzdGlvbmluZyB0aGUgYXJndW1l
bnQgYWJvdXQgdGhlIGlvY3RsIGlzc3VlcywgYW5kIHNheWluZyB0aGF0CmZyb20gbXkgcGVyc3Bl
Y3RpdmUsIHVudGFnZ2luZyBidWdzIGFyZSBub3QgcmVhbGx5IGFueSBkaWZmZXJlbnQgdGhhbgph
bnkgb3RoZXIga2luZCBvZiBrZXJuZWwgYnVnLgoKPiA+ID4gPiBUaGUgdHJvdWJsZSBJIHNlZSB3
aXRoIHRoaXMgaXMgdGhhdCBpdCBpcyBsYXJnZWx5IHRoZW9yZXRpY2FsIGFuZAo+ID4gPiA+IHJl
cXVpcmVzIHBhcnQgb2YgdXNlcnNwYWNlIHRvIGNvbGx1ZGUgdG8gc3RhcnQgdXNpbmcgYSBuZXcg
Q1BVIGZlYXR1cmUKPiA+ID4gPiB0aGF0IHRpY2tsZXMgYSBidWcgaW4gdGhlIGtlcm5lbC4gQXMg
SSB1bmRlcnN0YW5kIHRoZSBnb2xkZW4gcnVsZSwKPiA+ID4gPiB0aGlzIGlzIGEgYnVnIGluIHRo
ZSBrZXJuZWwgKGEgbWlzc2VkIGlvY3RsKCkgb3Igc3VjaCkgdG8gYmUgZml4ZWQsCj4gPiA+ID4g
bm90IGEgZ2xvYmFsIGJyZWFraW5nIG9mIHNvbWUgdXNlcnNwYWNlIGJlaGF2aW9yLgo+ID4gPgo+
ID4gPiBZZXMsIHdlIHNob3VsZCBmb2xsb3cgdGhlIHJ1bGUgdGhhdCBpdCdzIGEga2VybmVsIGJ1
ZyBidXQgaXQgZG9lc24ndAo+ID4gPiBoZWxwIHRoZSB1c2VyIHRoYXQgYSBuZXdseSBpbnN0YWxs
ZWQga2VybmVsIGNhdXNlcyB1c2VyIHNwYWNlIHRvIG5vCj4gPiA+IGxvbmdlciByZWFjaCBhIHBy
b21wdC4gSGVuY2UgdGhlIHByb3Bvc2FsIG9mIGFuIG9wdC1pbiB2aWEgcGVyc29uYWxpdHkKPiA+
ID4gKGZvciBNVEUgd2Ugd291bGQgbmVlZCBhbiBleHBsaWNpdCBvcHQtaW4gYnkgdGhlIHVzZXIg
YW55d2F5IHNpbmNlIHRoZQo+ID4gPiB0b3AgYnl0ZSBpcyBubyBsb25nZXIgaWdub3JlZCBidXQg
Y2hlY2tlZCBhZ2FpbnN0IHRoZSBhbGxvY2F0aW9uIHRhZykuCj4gPgo+ID4gYnV0IHJlYWxpc3Rp
Y2FsbHkgd291bGQgdGhpcyBhY3R1YWxseSBnZXQgdXNlZCBpbiB0aGlzIHdheT8gb3Igd291bGQK
PiA+IGFueSBnaXZlbiBzeXN0ZW0gZWl0aGVyIGJlIE1URSBvciBub24tTVRFLiBpbiB3aGljaCBj
YXNlIGEga2VybmVsCj4gPiBjb25maWd1cmF0aW9uIG9wdGlvbiB3b3VsZCBzZWVtIHRvIG1ha2Ug
bW9yZSBzZW5zZS4gKGJlY2F1c2UgZWl0aGVyCj4gPiB3YXksIHRoZSBoeXBvdGhldGljYWwgdXNl
ciBiYXNpY2FsbHkgbmVlZHMgdG8gcmVjb21waWxlIHRoZSBrZXJuZWwgdG8KPiA+IGdldCBiYWNr
IG9uIHRoZWlyIGZlZXQuIG9yIGFsbCBvZiB1c2Vyc3BhY2UuKQo+Cj4gVGhlIHR3byBoYXJkIHJl
cXVpcmVtZW50cyBJIGhhdmUgZm9yIHN1cHBvcnRpbmcgYW55IG5ldyBoYXJkd2FyZSBmZWF0dXJl
Cj4gaW4gTGludXggYXJlICgxKSBhIHNpbmdsZSBrZXJuZWwgaW1hZ2UgYmluYXJ5IGNvbnRpbnVl
cyB0byBydW4gb24gb2xkCj4gaGFyZHdhcmUgd2hpbGUgbWFraW5nIHVzZSBvZiB0aGUgbmV3IGZl
YXR1cmUgaWYgYXZhaWxhYmxlIGFuZCAoMikgb2xkCj4gdXNlciBzcGFjZSBjb250aW51ZXMgdG8g
cnVuIG9uIG5ldyBoYXJkd2FyZSB3aGlsZSBuZXcgdXNlciBzcGFjZSBjYW4KPiB0YWtlIGFkdmFu
dGFnZSBvZiB0aGUgbmV3IGZlYXR1cmUuCj4KPiBUaGUgZGlzdHJvIHVzZXIgc3BhY2UgdXN1YWxs
eSBoYXMgYSBoYXJkIHJlcXVpcmVtZW50IHRoYXQgaXQgY29udGludWVzCj4gdG8gcnVuIG9uIChj
ZXJ0YWluKSBvbGQgaGFyZHdhcmUuIFdlIGNhbid0IGVuZm9yY2UgdGhpcyBpbiB0aGUga2VybmVs
Cj4gYnV0IHdlIG9mZmVyIHRoZSBvcHRpb24gdG8gdXNlciBzcGFjZSBkZXZlbG9wZXJzIG9mIGNo
ZWNraW5nIGZlYXR1cmUKPiBhdmFpbGFiaWxpdHkgdGhyb3VnaCBIV0NBUCBiaXRzLgo+Cj4gVGhl
IEFuZHJvaWQgc3RvcnkgbWF5IGJlIGRpZmZlcmVudCBhcyB5b3UgaGF2ZSBtb3JlIGNvbnRyb2wg
YWJvdXQgd2hpY2gKPiBrZXJuZWwgY29uZmlndXJhdGlvbnMgYXJlIGRlcGxveWVkIG9uIHNwZWNp
ZmljIFNvQ3MuIEknbSBsb29raW5nIG1vcmUKPiBmcm9tIGEgTGludXggZGlzdHJvIGFuZ2xlIHdo
ZXJlIHlvdSBqdXN0IGdldCBhbiBvZmYtdGhlLXNoZWxmIE9TIGltYWdlCj4gYW5kIGluc3RhbGwg
aXQgb24geW91ciBoYXJkd2FyZSwgZWl0aGVyIHRha2luZyBhZHZhbnRhZ2Ugb2YgbmV3IGZlYXR1
cmVzCj4gb3IganVzdCBub3QgdXNpbmcgdGhlbSBpZiB0aGUgc29mdHdhcmUgd2FzIG5vdCB1cGRh
dGVkLiBPciwgaWYgdXBkYXRlZAo+IHNvZnR3YXJlIGlzIGluc3RhbGxlZCBvbiBvbGQgaGFyZHdh
cmUsIGl0IHdvdWxkIGp1c3QgcnVuLgo+Cj4gRm9yIE1URSwgd2UganVzdCBjYW4ndCBlbmFibGUg
aXQgYnkgZGVmYXVsdCBzaW5jZSB0aGVyZSBhcmUgYXBwbGljYXRpb25zCj4gd2hvIHVzZSB0aGUg
dG9wIGJ5dGUgb2YgYSBwb2ludGVyIGFuZCBleHBlY3QgaXQgdG8gYmUgaWdub3JlZCByYXRoZXIK
PiB0aGFuIGZhaWxpbmcgd2l0aCBhIG1pc21hdGNoZWQgdGFnLiBKdXN0IHRoaW5rIG9mIGEgaHdh
c2FuIGNvbXBpbGVkCj4gYmluYXJ5IHdoZXJlIFRCSSBpcyBleHBlY3RlZCB0byB3b3JrIGFuZCB5
b3UgdHJ5IHRvIHJ1biBpdCB3aXRoIE1URQo+IHR1cm5lZCBvbi4KPgo+IEkgd291bGQgYWxzbyBl
eHBlY3QgdGhlIEMgbGlicmFyeSBvciBkeW5hbWljIGxvYWRlciB0byBjaGVjayBmb3IgdGhlCj4g
cHJlc2VuY2Ugb2YgYSBIV0NBUF9NVEUgYml0IGJlZm9yZSBzdGFydGluZyB0byB0YWcgbWVtb3J5
IGFsbG9jYXRpb25zLAo+IG90aGVyd2lzZSBpdCB3b3VsZCBnZXQgU0lHSUxMIG9uIHRoZSBmaXJz
dCBNVEUgaW5zdHJ1Y3Rpb24gaXQgdHJpZXMgdG8KPiBleGVjdXRlLgoKKGEgYml0IG9mZi10b3Bp
YywgYnV0IGkgdGhvdWdodCB0aGUgTVRFIGluc3RydWN0aW9ucyB3ZXJlIGVuY29kZWQgaW4KdGhl
IG5vLW9wIHNwYWNlLCB0byBhdm9pZCB0aGlzPykKCj4gPiBpJ20gbm90IHN1cmUgaSBzZWUgdGhp
cyBuZXcgd2F5IGZvciBhIGtlcm5lbCB1cGRhdGUgdG8gYnJlYWsgbXkgc3lzdGVtCj4gPiBhbmQg
bmVlZCB0byBiZSBmaXhlZCBmb3J3YXJkL3JvbGxlZCBiYWNrIGFzIGFueSBkaWZmZXJlbnQgZnJv
bSBhbnkgb2YKPiA+IHRoZSBleGlzdGluZyB3YXlzIGluIHdoaWNoIHRoaXMgY2FuIGhhcHBlbiA6
LSkgYXMgYW4gZW5kLXVzZXIgaSBoYXZlCj4gPiB0byByZWx5IG9uIHdob2V2ZXIncyBzZW5kaW5n
IG1lIHNvZnR3YXJlIHVwZGF0ZXMgdG8gdGVzdCBhZGVxdWF0ZWx5Cj4gPiBlbm91Z2ggdGhhdCB0
aGV5IGZpbmQgdGhlIHByb2JsZW1zLiBhcyBhbiBlbmQgdXNlciwgdGhlcmUgaXNuJ3QgYW55Cj4g
PiBkaWZmZXJlbmNlIGJldHdlZW4gIm15IHBob25lIHJlYm9vdGVkIHdoZW4gaSB0cmllZCB0byB0
YWtlIGEgcGhvdG8KPiA+IGJlY2F1c2Ugb2YgYSBrZXJuZWwvZHJpdmVyIGxlYWsiLCBzYXksIGFu
ZCAibXkgcGhvbmUgcmVib290ZWQgd2hlbiBpCj4gPiB0cmllZCB0byB0YWtlIGEgcGhvdG8gYmVj
YXVzZSBvZiBtaXNzaW5nIHVudGFnZ2luZyBvZiBhIHBvaW50ZXIgcGFzc2VkCj4gPiB2aWEgaW9j
dGwiLgo+ID4KPiA+IGkgc3VzcGVjdCB5b3UgYW5kIGkgaGF2ZSB2ZXJ5IGRpZmZlcmVudCBwZW9w
bGUgaW4gbWluZCB3aGVuIHdlIHNheSAidXNlciIgOi0pCj4KPiBJbmRlZWQsIEkgdGhpbmsgd2Ug
aGF2ZSBkaWZmZXJlbnQgdXNlcnMgaW4gbWluZC4gSSBkaWRuJ3QgbWVhbiB0aGUgZW5kCj4gdXNl
ciB3aG8gZG9lc24ndCByZWFsbHkgY2FyZSB3aGljaCBDIGxpYnJhcnkgdmVyc2lvbiBpdCdzIHJ1
bm5pbmcgb24KPiB0aGVpciBwaG9uZSBidXQgcmF0aGVyIGFkdmFuY2VkIHVzZXJzIChub3QgbmVj
ZXNzYXJpbHkga2VybmVsCj4gZGV2ZWxvcGVycykgdGhhdCBwcmVmZXIgdG8gYnVpbGQgdGhlaXIg
b3duIGtlcm5lbHMgd2l0aCBldmVyeSByZWxlYXNlLgo+IFdlIGNvdWxkIGV4dGVuZCB0aGlzIHRv
IGtlcm5lbCBkZXZlbG9wZXJzIHdobyBkb24ndCBoYXZlIHRpbWUgdG8gdHJhY2sKPiBkb3duIHdo
eSBhIG5ldyBrZXJuZWwgdHJpZ2dlcnMgbG90cyBvZiBTSUdTRUdWcyBkdXJpbmcgYm9vdC4KCmkg
c3RpbGwgZG9uJ3Qgc2VlIGhvdyB0aGlzIGlzbid0IGp1c3QgYSByZWd1bGFyIHRlc3RpbmcvQ0kg
aXNzdWUsIHRoZQpzYW1lIGFzIGFueSBvdGhlciBraW5kIG9mIGtlcm5lbCBidWcuIGl0J3MgYWxy
ZWFkeSB0aGUgY2FzZSB0aGF0IGkgY2FuCmdldCBhIGJhZCBrZXJuZWwuLi4KCj4gLS0KPiBDYXRh
bGluCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1n
ZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlz
dHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
