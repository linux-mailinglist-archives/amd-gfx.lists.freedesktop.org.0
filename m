Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AF48A1390EB
	for <lists+amd-gfx@lfdr.de>; Mon, 13 Jan 2020 13:15:46 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 31A3F6E083;
	Mon, 13 Jan 2020 12:15:45 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-wr1-x441.google.com (mail-wr1-x441.google.com
 [IPv6:2a00:1450:4864:20::441])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 080146E083
 for <amd-gfx@lists.freedesktop.org>; Mon, 13 Jan 2020 12:15:44 +0000 (UTC)
Received: by mail-wr1-x441.google.com with SMTP id b6so8340439wrq.0
 for <amd-gfx@lists.freedesktop.org>; Mon, 13 Jan 2020 04:15:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=reply-to:subject:to:references:from:message-id:date:user-agent
 :mime-version:in-reply-to:content-transfer-encoding:content-language;
 bh=49gt50yNDvFf93DDRPm1o6zNw39VebbW6lSU95OsRYE=;
 b=NYsTtynTBv5GZfraoVSdKpJNQAdS+lzliAM7Hkj/TtIBpR9q+slyJGTUXfI6Mn9c4s
 dGeYlXU3PNw3KkOun5t/V7S3E5nZkuNo9gpJGprOEEUv63yRjrKYE+GRMJQVlbptYEWe
 pggn6VY3NuY2GI8WAvVwLRSNJwoNo6iEnhq1gf8WGkoaKd0dCLCj82lFiLA5Nk5N8Nv3
 7Wjt0dxInF1hk9RJZl977aRpBNVZx8ezjppvgh4x0AufXaEaRSDpZ99vOpNKXHfchJnB
 vMXfTp89B4SbpSio9mX/hgfEUaGLiMR+90reyX9YULPOo0NRmxArmp7rTLRarKUM51+K
 VZag==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:reply-to:subject:to:references:from:message-id
 :date:user-agent:mime-version:in-reply-to:content-transfer-encoding
 :content-language;
 bh=49gt50yNDvFf93DDRPm1o6zNw39VebbW6lSU95OsRYE=;
 b=R6MbUttgMDzxEAshJ8Qw+PVsHxaRgVAzPkC+bTUeXmTrq2oKz3PKiJXSht7o3VJ32i
 Gd0JQ799UJdXrWFlZqX7SDgRpsOsxkqK4pMIaNxNb5TN8qLxiWleQB3w4X/mdl6TPpR+
 rl0eJ1gmvLPWg8qB9prel84OcewF394NDlm75leBycwJBKH9tqKaiTRkIXl+7/Zrqr4N
 xV+BxFE1cr4vYM9pdhxybpG1FYbZJVPwkVZeKcmqn0g9pqTFqU/Sj5i8tBlgWkniNUbK
 YFmVcpsFDBFYsW9fFjvhXQhRW7WymqEPgOa1SAfdf1SROQIBpOup5a7LSbRKogjziir7
 rb6A==
X-Gm-Message-State: APjAAAVJxXPjHWkUZ2nBjS3ejCyannQ8QYxOXplFSRs5lXVFabpZT9Ra
 XuHr/MiZZKlaXcuDJd7DIlmw9QQ8
X-Google-Smtp-Source: APXvYqwyZ1a7bUxs241HNN/cBvpROLpPct5pYrMKYg+te9iqnW4aXK3M3IMrdO1XiWcWjCv4TraiyA==
X-Received: by 2002:adf:b64b:: with SMTP id i11mr16996116wre.58.1578917742309; 
 Mon, 13 Jan 2020 04:15:42 -0800 (PST)
Received: from ?IPv6:2a02:908:1252:fb60:be8a:bd56:1f94:86e7?
 ([2a02:908:1252:fb60:be8a:bd56:1f94:86e7])
 by smtp.gmail.com with ESMTPSA id p7sm13654759wmp.31.2020.01.13.04.15.41
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Mon, 13 Jan 2020 04:15:41 -0800 (PST)
Subject: Re: [PATCH 5/7] drm/amdgpu: export function to flush TLB via pasid
To: Alex Sierra <alex.sierra@amd.com>, amd-gfx@lists.freedesktop.org
References: <20200111183938.126310-1-alex.sierra@amd.com>
 <20200111183938.126310-5-alex.sierra@amd.com>
From: =?UTF-8?Q?Christian_K=c3=b6nig?= <ckoenig.leichtzumerken@gmail.com>
Message-ID: <ac7753b6-5d06-df92-161e-807ac054de0c@gmail.com>
Date: Mon, 13 Jan 2020 13:15:40 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.9.0
MIME-Version: 1.0
In-Reply-To: <20200111183938.126310-5-alex.sierra@amd.com>
Content-Language: en-US
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Reply-To: christian.koenig@amd.com
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

QW0gMTEuMDEuMjAgdW0gMTk6Mzkgc2NocmllYiBBbGV4IFNpZXJyYToKPiBUaGlzIGNhbiBiZSB1
c2VkIGRpcmVjdGx5IGZyb20gYW1kZ3B1IGFuZCBhbWRrZmQgdG8gaW52YWxpZGF0ZQo+IFRMQiB0
aHJvdWdoIHBhc2lkLgo+IEl0IHN1cHBvcnRzIGdtYyB2NywgdjgsIHY5IGFuZCB2MTAuCj4KPiBD
aGFuZ2UtSWQ6IEk2NTYzYThlYmEyZTQyZDFhNjdmYTI1NDcxNTZjMjBkYTQxZDFlNDkwCj4gU2ln
bmVkLW9mZi1ieTogQWxleCBTaWVycmEgPGFsZXguc2llcnJhQGFtZC5jb20+CgpGbHVzaGluZyBi
eSBwYXNpZCBpcyBpbiBwcmluY2lwbGUgcmFjeSwgYnV0IEkgZG9uJ3Qgc2VlIGEgd2F5IHRvIGF2
b2lkIHRoYXQuCgpUaGUgd29yc3QgdGhpbmcgdGhhdCBjb3VsZCBoYXBwZW4gaXMgdGhhdCB3ZSBm
bHVzaCBhIFZNSUQgd2hpbGUgd2UgCndvdWxkbid0IGhhdmUgdG8uCgpSZXZpZXdlZC1ieTogQ2hy
aXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgoKPiAtLS0KPiAgIGRyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nbWMuaCB8ICA2ICsrKwo+ICAgZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvZ21jX3YxMF8wLmMgIHwgNTkgKysrKysrKysrKysrKysrKysrKysr
KysrCj4gICBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjdfMC5jICAgfCAzMyArKysr
KysrKysrKysrCj4gICBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjhfMC5jICAgfCAz
NCArKysrKysrKysrKysrKwo+ICAgZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAu
YyAgIHwgNjEgKysrKysrKysrKysrKysrKysrKysrKysrKwo+ICAgNSBmaWxlcyBjaGFuZ2VkLCAx
OTMgaW5zZXJ0aW9ucygrKQo+Cj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9nbWMuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nbWMu
aAo+IGluZGV4IGM5MWRkNjAyZDVmMS4uZDNjMjdhM2M0M2Y2IDEwMDY0NAo+IC0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nbWMuaAo+ICsrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9nbWMuaAo+IEBAIC05Miw2ICs5Miw5IEBAIHN0cnVjdCBhbWRn
cHVfZ21jX2Z1bmNzIHsKPiAgIAkvKiBmbHVzaCB0aGUgdm0gdGxiIHZpYSBtbWlvICovCj4gICAJ
dm9pZCAoKmZsdXNoX2dwdV90bGIpKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1aW50MzJf
dCB2bWlkLAo+ICAgCQkJCXVpbnQzMl90IHZtaHViLCB1aW50MzJfdCBmbHVzaF90eXBlKTsKPiAr
CS8qIGZsdXNoIHRoZSB2bSB0bGIgdmlhIHBhc2lkICovCj4gKwlpbnQgKCpmbHVzaF9ncHVfdGxi
X3Bhc2lkKShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdWludDE2X3QgcGFzaWQsCj4gKwkJ
CQkJdWludDMyX3QgZmx1c2hfdHlwZSwgYm9vbCBhbGxfaHViKTsKPiAgIAkvKiBmbHVzaCB0aGUg
dm0gdGxiIHZpYSByaW5nICovCj4gICAJdWludDY0X3QgKCplbWl0X2ZsdXNoX2dwdV90bGIpKHN0
cnVjdCBhbWRncHVfcmluZyAqcmluZywgdW5zaWduZWQgdm1pZCwKPiAgIAkJCQkgICAgICAgdWlu
dDY0X3QgcGRfYWRkcik7Cj4gQEAgLTIxNiw2ICsyMTksOSBAQCBzdHJ1Y3QgYW1kZ3B1X2dtYyB7
Cj4gICB9Owo+ICAgCj4gICAjZGVmaW5lIGFtZGdwdV9nbWNfZmx1c2hfZ3B1X3RsYihhZGV2LCB2
bWlkLCB2bWh1YiwgdHlwZSkgKChhZGV2KS0+Z21jLmdtY19mdW5jcy0+Zmx1c2hfZ3B1X3RsYigo
YWRldiksICh2bWlkKSwgKHZtaHViKSwgKHR5cGUpKSkKPiArI2RlZmluZSBhbWRncHVfZ21jX2Zs
dXNoX2dwdV90bGJfcGFzaWQoYWRldiwgcGFzaWQsIHR5cGUsIGFsbGh1YikgXAo+ICsJKChhZGV2
KS0+Z21jLmdtY19mdW5jcy0+Zmx1c2hfZ3B1X3RsYl9wYXNpZCBcCj4gKwkoKGFkZXYpLCAocGFz
aWQpLCAodHlwZSksIChhbGxodWIpKSkKPiAgICNkZWZpbmUgYW1kZ3B1X2dtY19lbWl0X2ZsdXNo
X2dwdV90bGIociwgdm1pZCwgYWRkcikgKHIpLT5hZGV2LT5nbWMuZ21jX2Z1bmNzLT5lbWl0X2Zs
dXNoX2dwdV90bGIoKHIpLCAodm1pZCksIChhZGRyKSkKPiAgICNkZWZpbmUgYW1kZ3B1X2dtY19l
bWl0X3Bhc2lkX21hcHBpbmcociwgdm1pZCwgcGFzaWQpIChyKS0+YWRldi0+Z21jLmdtY19mdW5j
cy0+ZW1pdF9wYXNpZF9tYXBwaW5nKChyKSwgKHZtaWQpLCAocGFzaWQpKQo+ICAgI2RlZmluZSBh
bWRncHVfZ21jX21hcF9tdHlwZShhZGV2LCBmbGFncykgKGFkZXYpLT5nbWMuZ21jX2Z1bmNzLT5t
YXBfbXR5cGUoKGFkZXYpLChmbGFncykpCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dtY192MTBfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Yx
MF8wLmMKPiBpbmRleCA1YWQ4OWJiNmYzYmEuLjA5NDA4YjhiMzkwZiAxMDA2NDQKPiAtLS0gYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjEwXzAuYwo+ICsrKyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jCj4gQEAgLTMwLDYgKzMwLDggQEAKPiAgICNpbmNs
dWRlICJoZHAvaGRwXzVfMF8wX3NoX21hc2suaCIKPiAgICNpbmNsdWRlICJnYy9nY18xMF8xXzBf
c2hfbWFzay5oIgo+ICAgI2luY2x1ZGUgIm1taHViL21taHViXzJfMF8wX3NoX21hc2suaCIKPiAr
I2luY2x1ZGUgImF0aHViL2F0aHViXzJfMF8wX3NoX21hc2suaCIKPiArI2luY2x1ZGUgImF0aHVi
L2F0aHViXzJfMF8wX29mZnNldC5oIgo+ICAgI2luY2x1ZGUgImRjbi9kY25fMl8wXzBfb2Zmc2V0
LmgiCj4gICAjaW5jbHVkZSAiZGNuL2Rjbl8yXzBfMF9zaF9tYXNrLmgiCj4gICAjaW5jbHVkZSAi
b3NzL29zc3N5c181XzBfMF9vZmZzZXQuaCIKPiBAQCAtMzcsNiArMzksNyBAQAo+ICAgI2luY2x1
ZGUgIm5hdmkxMF9lbnVtLmgiCj4gICAKPiAgICNpbmNsdWRlICJzb2MxNS5oIgo+ICsjaW5jbHVk
ZSAic29jMTVkLmgiCj4gICAjaW5jbHVkZSAic29jMTVfY29tbW9uLmgiCj4gICAKPiAgICNpbmNs
dWRlICJuYmlvX3YyXzMuaCIKPiBAQCAtMjM0LDYgKzIzNywxOSBAQCBzdGF0aWMgYm9vbCBnbWNf
djEwXzBfdXNlX2ludmFsaWRhdGVfc2VtYXBob3JlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
LAo+ICAgCQkoIWFtZGdwdV9zcmlvdl92ZihhZGV2KSkpOwo+ICAgfQo+ICAgCj4gK3N0YXRpYyBi
b29sIGdtY192MTBfMF9nZXRfYXRjX3ZtaWRfcGFzaWRfbWFwcGluZ19pbmZvKAo+ICsJCQkJCXN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAo+ICsJCQkJCXVpbnQ4X3Qgdm1pZCwgdWludDE2X3Qg
KnBfcGFzaWQpCj4gK3sKPiArCXVpbnQzMl90IHZhbHVlOwo+ICsKPiArCXZhbHVlID0gUlJFRzMy
KFNPQzE1X1JFR19PRkZTRVQoQVRIVUIsIDAsIG1tQVRDX1ZNSUQwX1BBU0lEX01BUFBJTkcpCj4g
KwkJICAgICArIHZtaWQpOwo+ICsJKnBfcGFzaWQgPSB2YWx1ZSAmIEFUQ19WTUlEMF9QQVNJRF9N
QVBQSU5HX19QQVNJRF9NQVNLOwo+ICsKPiArCXJldHVybiAhISh2YWx1ZSAmIEFUQ19WTUlEMF9Q
QVNJRF9NQVBQSU5HX19WQUxJRF9NQVNLKTsKPiArfQo+ICsKPiAgIC8qCj4gICAgKiBHQVJUCj4g
ICAgKiBWTUlEIDAgaXMgdGhlIHBoeXNpY2FsIEdQVSBhZGRyZXNzZXMgYXMgdXNlZCBieSB0aGUg
a2VybmVsLgo+IEBAIC0zODAsNiArMzk2LDQ4IEBAIHN0YXRpYyB2b2lkIGdtY192MTBfMF9mbHVz
aF9ncHVfdGxiKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1aW50MzJfdCB2bWlkLAo+ICAg
CURSTV9FUlJPUigiRXJyb3IgZmx1c2hpbmcgR1BVIFRMQiB1c2luZyB0aGUgU0RNQSAoJWQpIVxu
Iiwgcik7Cj4gICB9Cj4gICAKPiArLyoqCj4gKyAqIGdtY192MTBfMF9mbHVzaF9ncHVfdGxiX3Bh
c2lkIC0gdGxiIGZsdXNoIHZpYSBwYXNpZAo+ICsgKgo+ICsgKiBAYWRldjogYW1kZ3B1X2Rldmlj
ZSBwb2ludGVyCj4gKyAqIEBwYXNpZDogcGFzaWQgdG8gYmUgZmx1c2gKPiArICoKPiArICogRmx1
c2ggdGhlIFRMQiBmb3IgdGhlIHJlcXVlc3RlZCBwYXNpZC4KPiArICovCj4gK3N0YXRpYyBpbnQg
Z21jX3YxMF8wX2ZsdXNoX2dwdV90bGJfcGFzaWQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYs
Cj4gKwkJCQkJdWludDE2X3QgcGFzaWQsIHVpbnQzMl90IGZsdXNoX3R5cGUsCj4gKwkJCQkJYm9v
bCBhbGxfaHViKQo+ICt7Cj4gKwlpbnQgdm1pZCwgaTsKPiArCXVpbnQxNl90IHF1ZXJpZWRfcGFz
aWQ7Cj4gKwlib29sIHJldDsKPiArCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZyA9ICZhZGV2LT5n
Zngua2lxLnJpbmc7Cj4gKwlzdHJ1Y3QgYW1kZ3B1X2tpcSAqa2lxID0gJmFkZXYtPmdmeC5raXE7
Cj4gKwo+ICsJaWYgKGFtZGdwdV9lbXVfbW9kZSA9PSAwICYmIHJpbmctPnNjaGVkLnJlYWR5KQo+
ICsJCXJldHVybiBraXEtPnBtZi0+a2lxX2ludmFsaWRhdGVfdGxicyhyaW5nLAo+ICsJCQkJCQlw
YXNpZCwgZmx1c2hfdHlwZSwgYWxsX2h1Yik7Cj4gKwo+ICsJZm9yICh2bWlkID0gMTsgdm1pZCA8
IDE2OyB2bWlkKyspIHsKPiArCj4gKwkJcmV0ID0gZ21jX3YxMF8wX2dldF9hdGNfdm1pZF9wYXNp
ZF9tYXBwaW5nX2luZm8oYWRldiwgdm1pZCwKPiArCQkJCSZxdWVyaWVkX3Bhc2lkKTsKPiArCQlp
ZiAocmV0CSYmIHF1ZXJpZWRfcGFzaWQgPT0gcGFzaWQpIHsKPiArCQkJaWYgKGFsbF9odWIpIHsK
PiArCQkJCWZvciAoaSA9IDA7IGkgPCBhZGV2LT5udW1fdm1odWJzOyBpKyspCj4gKwkJCQkJZ21j
X3YxMF8wX2ZsdXNoX2dwdV90bGIoYWRldiwgdm1pZCwKPiArCQkJCQkJCWksIDApOwo+ICsJCQl9
IGVsc2Ugewo+ICsJCQkJZ21jX3YxMF8wX2ZsdXNoX2dwdV90bGIoYWRldiwgdm1pZCwKPiArCQkJ
CQkJQU1ER1BVX0dGWEhVQl8wLCAwKTsKPiArCQkJfQo+ICsJCQlicmVhazsKPiArCQl9Cj4gKwl9
Cj4gKwo+ICsJcmV0dXJuIDA7Cj4gK30KPiArCj4gICBzdGF0aWMgdWludDY0X3QgZ21jX3YxMF8w
X2VtaXRfZmx1c2hfZ3B1X3RsYihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcsCj4gICAJCQkJCSAg
ICAgdW5zaWduZWQgdm1pZCwgdWludDY0X3QgcGRfYWRkcikKPiAgIHsKPiBAQCAtNTMxLDYgKzU4
OSw3IEBAIHN0YXRpYyB2b2lkIGdtY192MTBfMF9nZXRfdm1fcHRlKHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2LAo+ICAgCj4gICBzdGF0aWMgY29uc3Qgc3RydWN0IGFtZGdwdV9nbWNfZnVuY3Mg
Z21jX3YxMF8wX2dtY19mdW5jcyA9IHsKPiAgIAkuZmx1c2hfZ3B1X3RsYiA9IGdtY192MTBfMF9m
bHVzaF9ncHVfdGxiLAo+ICsJLmZsdXNoX2dwdV90bGJfcGFzaWQgPSBnbWNfdjEwXzBfZmx1c2hf
Z3B1X3RsYl9wYXNpZCwKPiAgIAkuZW1pdF9mbHVzaF9ncHVfdGxiID0gZ21jX3YxMF8wX2VtaXRf
Zmx1c2hfZ3B1X3RsYiwKPiAgIAkuZW1pdF9wYXNpZF9tYXBwaW5nID0gZ21jX3YxMF8wX2VtaXRf
cGFzaWRfbWFwcGluZywKPiAgIAkubWFwX210eXBlID0gZ21jX3YxMF8wX21hcF9tdHlwZSwKPiBk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y3XzAuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192N18wLmMKPiBpbmRleCBmMDhlNTMzMDY0MmQuLjE5
ZDViMTMzZTFkNyAxMDA2NDQKPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNf
djdfMC5jCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y3XzAuYwo+IEBA
IC00MTgsNiArNDE4LDM4IEBAIHN0YXRpYyBpbnQgZ21jX3Y3XzBfbWNfaW5pdChzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldikKPiAgIAlyZXR1cm4gMDsKPiAgIH0KPiAgIAo+ICsvKioKPiArICog
Z21jX3Y3XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZCAtIHRsYiBmbHVzaCB2aWEgcGFzaWQKPiArICoK
PiArICogQGFkZXY6IGFtZGdwdV9kZXZpY2UgcG9pbnRlcgo+ICsgKiBAcGFzaWQ6IHBhc2lkIHRv
IGJlIGZsdXNoCj4gKyAqCj4gKyAqIEZsdXNoIHRoZSBUTEIgZm9yIHRoZSByZXF1ZXN0ZWQgcGFz
aWQuCj4gKyAqLwo+ICtzdGF0aWMgaW50IGdtY192N18wX2ZsdXNoX2dwdV90bGJfcGFzaWQoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCj4gKwkJCQkJdWludDE2X3QgcGFzaWQsIHVpbnQzMl90
IGZsdXNoX3R5cGUsCj4gKwkJCQkJYm9vbCBhbGxfaHViKQo+ICt7Cj4gKwlpbnQgdm1pZDsKPiAr
CXVuc2lnbmVkIGludCB0bXA7Cj4gKwo+ICsJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKPiArCQly
ZXR1cm4gLUVJTzsKPiArCj4gKwlmb3IgKHZtaWQgPSAxOyB2bWlkIDwgMTY7IHZtaWQrKykgewo+
ICsKPiArCQl0bXAgPSBSUkVHMzIobW1BVENfVk1JRDBfUEFTSURfTUFQUElORyArIHZtaWQpOwo+
ICsJCWlmICgodG1wICYgQVRDX1ZNSUQwX1BBU0lEX01BUFBJTkdfX1ZBTElEX01BU0spICYmCj4g
KwkJCSh0bXAgJiBBVENfVk1JRDBfUEFTSURfTUFQUElOR19fUEFTSURfTUFTSykgPT0gcGFzaWQp
IHsKPiArCQkJV1JFRzMyKG1tVk1fSU5WQUxJREFURV9SRVFVRVNULCAxIDw8IHZtaWQpOwo+ICsJ
CQlSUkVHMzIobW1WTV9JTlZBTElEQVRFX1JFU1BPTlNFKTsKPiArCQkJYnJlYWs7Cj4gKwkJfQo+
ICsJfQo+ICsKPiArCXJldHVybiAwOwo+ICt9Cj4gKwo+ICAgLyoKPiAgICAqIEdBUlQKPiAgICAq
IFZNSUQgMCBpcyB0aGUgcGh5c2ljYWwgR1BVIGFkZHJlc3NlcyBhcyB1c2VkIGJ5IHRoZSBrZXJu
ZWwuCj4gQEAgLTEzMzMsNiArMTM2NSw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgYW1kX2lwX2Z1
bmNzIGdtY192N18wX2lwX2Z1bmNzID0gewo+ICAgCj4gICBzdGF0aWMgY29uc3Qgc3RydWN0IGFt
ZGdwdV9nbWNfZnVuY3MgZ21jX3Y3XzBfZ21jX2Z1bmNzID0gewo+ICAgCS5mbHVzaF9ncHVfdGxi
ID0gZ21jX3Y3XzBfZmx1c2hfZ3B1X3RsYiwKPiArCS5mbHVzaF9ncHVfdGxiX3Bhc2lkID0gZ21j
X3Y3XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZCwKPiAgIAkuZW1pdF9mbHVzaF9ncHVfdGxiID0gZ21j
X3Y3XzBfZW1pdF9mbHVzaF9ncHVfdGxiLAo+ICAgCS5lbWl0X3Bhc2lkX21hcHBpbmcgPSBnbWNf
djdfMF9lbWl0X3Bhc2lkX21hcHBpbmcsCj4gICAJLnNldF9wcnQgPSBnbWNfdjdfMF9zZXRfcHJ0
LAo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjhfMC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y4XzAuYwo+IGluZGV4IDZkOTZkNDBmYmNi
OC4uMjdkODMyMDRmYTJiIDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2dtY192OF8wLmMKPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjhfMC5j
Cj4gQEAgLTYyMCw2ICs2MjAsMzkgQEAgc3RhdGljIGludCBnbWNfdjhfMF9tY19pbml0KHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KQo+ICAgCXJldHVybiAwOwo+ICAgfQo+ICAgCj4gKy8qKgo+
ICsgKiBnbWNfdjhfMF9mbHVzaF9ncHVfdGxiX3Bhc2lkIC0gdGxiIGZsdXNoIHZpYSBwYXNpZAo+
ICsgKgo+ICsgKiBAYWRldjogYW1kZ3B1X2RldmljZSBwb2ludGVyCj4gKyAqIEBwYXNpZDogcGFz
aWQgdG8gYmUgZmx1c2gKPiArICoKPiArICogRmx1c2ggdGhlIFRMQiBmb3IgdGhlIHJlcXVlc3Rl
ZCBwYXNpZC4KPiArICovCj4gK3N0YXRpYyBpbnQgZ21jX3Y4XzBfZmx1c2hfZ3B1X3RsYl9wYXNp
ZChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKPiArCQkJCQl1aW50MTZfdCBwYXNpZCwgdWlu
dDMyX3QgZmx1c2hfdHlwZSwKPiArCQkJCQlib29sIGFsbF9odWIpCj4gK3sKPiArCWludCB2bWlk
Owo+ICsJdW5zaWduZWQgaW50IHRtcDsKPiArCj4gKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQo+
ICsJCXJldHVybiAtRUlPOwo+ICsKPiArCWZvciAodm1pZCA9IDE7IHZtaWQgPCAxNjsgdm1pZCsr
KSB7Cj4gKwo+ICsJCXRtcCA9IFJSRUczMihtbUFUQ19WTUlEMF9QQVNJRF9NQVBQSU5HICsgdm1p
ZCk7Cj4gKwkJaWYgKCh0bXAgJiBBVENfVk1JRDBfUEFTSURfTUFQUElOR19fVkFMSURfTUFTSykg
JiYKPiArCQkJKHRtcCAmIEFUQ19WTUlEMF9QQVNJRF9NQVBQSU5HX19QQVNJRF9NQVNLKSA9PSBw
YXNpZCkgewo+ICsJCQlXUkVHMzIobW1WTV9JTlZBTElEQVRFX1JFUVVFU1QsIDEgPDwgdm1pZCk7
Cj4gKwkJCVJSRUczMihtbVZNX0lOVkFMSURBVEVfUkVTUE9OU0UpOwo+ICsJCQlicmVhazsKPiAr
CQl9Cj4gKwl9Cj4gKwo+ICsJcmV0dXJuIDA7Cj4gKwo+ICt9Cj4gKwo+ICAgLyoKPiAgICAqIEdB
UlQKPiAgICAqIFZNSUQgMCBpcyB0aGUgcGh5c2ljYWwgR1BVIGFkZHJlc3NlcyBhcyB1c2VkIGJ5
IHRoZSBrZXJuZWwuCj4gQEAgLTE3MDAsNiArMTczMyw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qg
YW1kX2lwX2Z1bmNzIGdtY192OF8wX2lwX2Z1bmNzID0gewo+ICAgCj4gICBzdGF0aWMgY29uc3Qg
c3RydWN0IGFtZGdwdV9nbWNfZnVuY3MgZ21jX3Y4XzBfZ21jX2Z1bmNzID0gewo+ICAgCS5mbHVz
aF9ncHVfdGxiID0gZ21jX3Y4XzBfZmx1c2hfZ3B1X3RsYiwKPiArCS5mbHVzaF9ncHVfdGxiX3Bh
c2lkID0gZ21jX3Y4XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZCwKPiAgIAkuZW1pdF9mbHVzaF9ncHVf
dGxiID0gZ21jX3Y4XzBfZW1pdF9mbHVzaF9ncHVfdGxiLAo+ICAgCS5lbWl0X3Bhc2lkX21hcHBp
bmcgPSBnbWNfdjhfMF9lbWl0X3Bhc2lkX21hcHBpbmcsCj4gICAJLnNldF9wcnQgPSBnbWNfdjhf
MF9zZXRfcHJ0LAo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNf
djlfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYwo+IGluZGV4IGI4
M2M4ZDc0NWY0Mi4uOTVjY2U1NDk5OWI3IDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dtY192OV8wLmMKPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9n
bWNfdjlfMC5jCj4gQEAgLTM4LDEwICszOCwxMiBAQAo+ICAgI2luY2x1ZGUgImRjZS9kY2VfMTJf
MF9zaF9tYXNrLmgiCj4gICAjaW5jbHVkZSAidmVnYTEwX2VudW0uaCIKPiAgICNpbmNsdWRlICJt
bWh1Yi9tbWh1Yl8xXzBfb2Zmc2V0LmgiCj4gKyNpbmNsdWRlICJhdGh1Yi9hdGh1Yl8xXzBfc2hf
bWFzay5oIgo+ICAgI2luY2x1ZGUgImF0aHViL2F0aHViXzFfMF9vZmZzZXQuaCIKPiAgICNpbmNs
dWRlICJvc3Mvb3Nzc3lzXzRfMF9vZmZzZXQuaCIKPiAgIAo+ICAgI2luY2x1ZGUgInNvYzE1Lmgi
Cj4gKyNpbmNsdWRlICJzb2MxNWQuaCIKPiAgICNpbmNsdWRlICJzb2MxNV9jb21tb24uaCIKPiAg
ICNpbmNsdWRlICJ1bWMvdW1jXzZfMF9zaF9tYXNrLmgiCj4gICAKPiBAQCAtNDQxLDYgKzQ0Mywx
OCBAQCBzdGF0aWMgYm9vbCBnbWNfdjlfMF91c2VfaW52YWxpZGF0ZV9zZW1hcGhvcmUoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYsCj4gICAJCSAgIGFkZXYtPnBkZXYtPmRldmljZSA9PSAweDE1
ZDgpKSk7Cj4gICB9Cj4gICAKPiArc3RhdGljIGJvb2wgZ21jX3Y5XzBfZ2V0X2F0Y192bWlkX3Bh
c2lkX21hcHBpbmdfaW5mbyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKPiArCQkJCQl1aW50
OF90IHZtaWQsIHVpbnQxNl90ICpwX3Bhc2lkKQo+ICt7Cj4gKwl1aW50MzJfdCB2YWx1ZTsKPiAr
Cj4gKwl2YWx1ZSA9IFJSRUczMihTT0MxNV9SRUdfT0ZGU0VUKEFUSFVCLCAwLCBtbUFUQ19WTUlE
MF9QQVNJRF9NQVBQSU5HKQo+ICsJCSAgICAgKyB2bWlkKTsKPiArCSpwX3Bhc2lkID0gdmFsdWUg
JiBBVENfVk1JRDBfUEFTSURfTUFQUElOR19fUEFTSURfTUFTSzsKPiArCj4gKwlyZXR1cm4gISEo
dmFsdWUgJiBBVENfVk1JRDBfUEFTSURfTUFQUElOR19fVkFMSURfTUFTSyk7Cj4gK30KPiArCj4g
ICAvKgo+ICAgICogR0FSVAo+ICAgICogVk1JRCAwIGlzIHRoZSBwaHlzaWNhbCBHUFUgYWRkcmVz
c2VzIGFzIHVzZWQgYnkgdGhlIGtlcm5lbC4KPiBAQCAtNTM5LDYgKzU1Myw1MiBAQCBzdGF0aWMg
dm9pZCBnbWNfdjlfMF9mbHVzaF9ncHVfdGxiKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1
aW50MzJfdCB2bWlkLAo+ICAgCURSTV9FUlJPUigiVGltZW91dCB3YWl0aW5nIGZvciBWTSBmbHVz
aCBBQ0shXG4iKTsKPiAgIH0KPiAgIAo+ICsvKioKPiArICogZ21jX3Y5XzBfZmx1c2hfZ3B1X3Rs
Yl9wYXNpZCAtIHRsYiBmbHVzaCB2aWEgcGFzaWQKPiArICoKPiArICogQGFkZXY6IGFtZGdwdV9k
ZXZpY2UgcG9pbnRlcgo+ICsgKiBAcGFzaWQ6IHBhc2lkIHRvIGJlIGZsdXNoCj4gKyAqCj4gKyAq
IEZsdXNoIHRoZSBUTEIgZm9yIHRoZSByZXF1ZXN0ZWQgcGFzaWQuCj4gKyAqLwo+ICtzdGF0aWMg
aW50IGdtY192OV8wX2ZsdXNoX2dwdV90bGJfcGFzaWQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYsCj4gKwkJCQkJdWludDE2X3QgcGFzaWQsIHVpbnQzMl90IGZsdXNoX3R5cGUsCj4gKwkJCQkJ
Ym9vbCBhbGxfaHViKQo+ICt7Cj4gKwlpbnQgdm1pZCwgaTsKPiArCXVpbnQxNl90IHF1ZXJpZWRf
cGFzaWQ7Cj4gKwlib29sIHJldDsKPiArCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZyA9ICZhZGV2
LT5nZngua2lxLnJpbmc7Cj4gKwlzdHJ1Y3QgYW1kZ3B1X2tpcSAqa2lxID0gJmFkZXYtPmdmeC5r
aXE7Cj4gKwo+ICsJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKPiArCQlyZXR1cm4gLUVJTzsKPiAr
Cj4gKwlpZiAocmluZy0+c2NoZWQucmVhZHkpCj4gKwkJcmV0dXJuIGtpcS0+cG1mLT5raXFfaW52
YWxpZGF0ZV90bGJzKHJpbmcsCj4gKwkJCQkJCXBhc2lkLCBmbHVzaF90eXBlLCBhbGxfaHViKTsK
PiArCj4gKwlmb3IgKHZtaWQgPSAxOyB2bWlkIDwgMTY7IHZtaWQrKykgewo+ICsKPiArCQlyZXQg
PSBnbWNfdjlfMF9nZXRfYXRjX3ZtaWRfcGFzaWRfbWFwcGluZ19pbmZvKGFkZXYsIHZtaWQsCj4g
KwkJCQkmcXVlcmllZF9wYXNpZCk7Cj4gKwkJaWYgKHJldCAmJiBxdWVyaWVkX3Bhc2lkID09IHBh
c2lkKSB7Cj4gKwkJCWlmIChhbGxfaHViKSB7Cj4gKwkJCQlmb3IgKGkgPSAwOyBpIDwgYWRldi0+
bnVtX3ZtaHViczsgaSsrKQo+ICsJCQkJCWdtY192OV8wX2ZsdXNoX2dwdV90bGIoYWRldiwgdm1p
ZCwKPiArCQkJCQkJCWksIDApOwo+ICsJCQl9IGVsc2Ugewo+ICsJCQkJZ21jX3Y5XzBfZmx1c2hf
Z3B1X3RsYihhZGV2LCB2bWlkLAo+ICsJCQkJCQlBTURHUFVfR0ZYSFVCXzAsIDApOwo+ICsJCQl9
Cj4gKwkJCWJyZWFrOwo+ICsJCX0KPiArCX0KPiArCj4gKwlyZXR1cm4gMDsKPiArCj4gK30KPiAr
Cj4gICBzdGF0aWMgdWludDY0X3QgZ21jX3Y5XzBfZW1pdF9mbHVzaF9ncHVfdGxiKHN0cnVjdCBh
bWRncHVfcmluZyAqcmluZywKPiAgIAkJCQkJICAgIHVuc2lnbmVkIHZtaWQsIHVpbnQ2NF90IHBk
X2FkZHIpCj4gICB7Cj4gQEAgLTcwMCw2ICs3NjAsNyBAQCBzdGF0aWMgdm9pZCBnbWNfdjlfMF9n
ZXRfdm1fcHRlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAo+ICAgCj4gICBzdGF0aWMgY29u
c3Qgc3RydWN0IGFtZGdwdV9nbWNfZnVuY3MgZ21jX3Y5XzBfZ21jX2Z1bmNzID0gewo+ICAgCS5m
bHVzaF9ncHVfdGxiID0gZ21jX3Y5XzBfZmx1c2hfZ3B1X3RsYiwKPiArCS5mbHVzaF9ncHVfdGxi
X3Bhc2lkID0gZ21jX3Y5XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZCwKPiAgIAkuZW1pdF9mbHVzaF9n
cHVfdGxiID0gZ21jX3Y5XzBfZW1pdF9mbHVzaF9ncHVfdGxiLAo+ICAgCS5lbWl0X3Bhc2lkX21h
cHBpbmcgPSBnbWNfdjlfMF9lbWl0X3Bhc2lkX21hcHBpbmcsCj4gICAJLm1hcF9tdHlwZSA9IGdt
Y192OV8wX21hcF9tdHlwZSwKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Au
b3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdm
eAo=
