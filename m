Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 0D6052656F
	for <lists+amd-gfx@lfdr.de>; Wed, 22 May 2019 16:12:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CC7F789A91;
	Wed, 22 May 2019 14:12:06 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from foss.arm.com (foss.arm.com [217.140.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTP id 66E84898CE;
 Wed, 22 May 2019 10:11:20 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 2B39E341;
 Wed, 22 May 2019 03:11:20 -0700 (PDT)
Received: from mbp (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 12BA73F575;
 Wed, 22 May 2019 03:11:13 -0700 (PDT)
Date: Wed, 22 May 2019 11:11:11 +0100
From: Catalin Marinas <catalin.marinas@arm.com>
To: Kees Cook <keescook@chromium.org>
Subject: Re: [PATCH v15 00/17] arm64: untag user pointers passed to the kernel
Message-ID: <20190522101110.m2stmpaj7seezveq@mbp>
References: <cover.1557160186.git.andreyknvl@google.com>
 <20190517144931.GA56186@arrakis.emea.arm.com>
 <CAFKCwrj6JEtp4BzhqO178LFJepmepoMx=G+YdC8sqZ3bcBp3EQ@mail.gmail.com>
 <20190521182932.sm4vxweuwo5ermyd@mbp>
 <201905211633.6C0BF0C2@keescook>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <201905211633.6C0BF0C2@keescook>
User-Agent: NeoMutt/20170113 (1.7.2)
X-Mailman-Approved-At: Wed, 22 May 2019 14:12:05 +0000
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, kvm@vger.kernel.org,
 Szabolcs Nagy <Szabolcs.Nagy@arm.com>, Will Deacon <will.deacon@arm.com>,
 dri-devel@lists.freedesktop.org,
 Linux Memory Management List <linux-mm@kvack.org>,
 Khalid Aziz <khalid.aziz@oracle.com>,
 "open list:KERNEL SELFTEST FRAMEWORK" <linux-kselftest@vger.kernel.org>,
 Vincenzo Frascino <vincenzo.frascino@arm.com>,
 Jacob Bramley <Jacob.Bramley@arm.com>, Leon Romanovsky <leon@kernel.org>,
 linux-rdma@vger.kernel.org, amd-gfx@lists.freedesktop.org,
 Dmitry Vyukov <dvyukov@google.com>, Dave Martin <Dave.Martin@arm.com>,
 Evgenii Stepanov <eugenis@google.com>, linux-media@vger.kernel.org,
 Kevin Brodsky <kevin.brodsky@arm.com>,
 Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
 Andrey Konovalov <andreyknvl@google.com>,
 Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
 Alex Williamson <alex.williamson@redhat.com>,
 Yishai Hadas <yishaih@mellanox.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>,
 Linux ARM <linux-arm-kernel@lists.infradead.org>,
 Kostya Serebryany <kcc@google.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Felix Kuehling <Felix.Kuehling@amd.com>, LKML <linux-kernel@vger.kernel.org>,
 Jens Wiklander <jens.wiklander@linaro.org>, Lee Smith <Lee.Smith@arm.com>,
 Alexander Deucher <Alexander.Deucher@amd.com>,
 Andrew Morton <akpm@linux-foundation.org>, Elliott Hughes <enh@google.com>,
 Robin Murphy <robin.murphy@arm.com>,
 Christian Koenig <Christian.Koenig@amd.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

SGkgS2VlcywKClRoYW5rcyBmb3Igam9pbmluZyB0aGUgdGhyZWFkIDspLgoKT24gVHVlLCBNYXkg
MjEsIDIwMTkgYXQgMDU6MDQ6MzlQTSAtMDcwMCwgS2VlcyBDb29rIHdyb3RlOgo+IE9uIFR1ZSwg
TWF5IDIxLCAyMDE5IGF0IDA3OjI5OjMzUE0gKzAxMDAsIENhdGFsaW4gTWFyaW5hcyB3cm90ZToK
PiA+IE9uIE1vbiwgTWF5IDIwLCAyMDE5IGF0IDA0OjUzOjA3UE0gLTA3MDAsIEV2Z2VuaWkgU3Rl
cGFub3Ygd3JvdGU6Cj4gPiA+IE9uIEZyaSwgTWF5IDE3LCAyMDE5IGF0IDc6NDkgQU0gQ2F0YWxp
biBNYXJpbmFzIDxjYXRhbGluLm1hcmluYXNAYXJtLmNvbT4gd3JvdGU6Cj4gPiA+ID4gSU1PIChS
RkMgZm9yIG5vdyksIEkgc2VlIHR3byB3YXlzIGZvcndhcmQ6Cj4gPiA+ID4gWy4uLl0KPiA+ID4g
PiAyLiBTaW1pbGFyIHNoaW0gdG8gdGhlIGFib3ZlIGxpYmMgd3JhcHBlciBidXQgaW5zaWRlIHRo
ZSBrZXJuZWwKPiA+ID4gPiAgICAoYXJjaC9hcm02NCBvbmx5OyBtb3N0IHBvaW50ZXIgYXJndW1l
bnRzIGNvdWxkIGJlIGNvdmVyZWQgd2l0aCBhbgo+ID4gPiA+ICAgIF9fU0NfQ0FTVCBzaW1pbGFy
IHRvIHRoZSBzMzkwIG9uZSkuIFRoZXJlIGFyZSB0d28gZGlmZmVyZW5jZXMgZnJvbQo+ID4gPiA+
ICAgIHdoYXQgd2UndmUgZGlzY3Vzc2VkIGluIHRoZSBwYXN0Ogo+ID4gPiA+Cj4gPiA+ID4gICAg
YSkgdGhpcyBpcyBhbiBvcHQtaW4gYnkgdGhlIHVzZXIgd2hpY2ggd291bGQgaGF2ZSB0byBleHBs
aWNpdGx5IGNhbGwKPiA+ID4gPiAgICAgICBwcmN0bCgpLiBJZiBpdCByZXR1cm5zIC1FTk9UU1VQ
UCBldGMuLCB0aGUgdXNlciB3b24ndCBiZSBhbGxvd2VkCj4gPiA+ID4gICAgICAgdG8gcGFzcyB0
YWdnZWQgcG9pbnRlcnMgdG8gdGhlIGtlcm5lbC4gVGhpcyB3b3VsZCBwcm9iYWJseSBiZSB0aGUK
PiA+ID4gPiAgICAgICByZXNwb25zaWJpbGl0eSBvZiB0aGUgQyBsaWIgdG8gbWFrZSBzdXJlIGl0
IGRvZXNuJ3QgdGFnIGhlYXAKPiA+ID4gPiAgICAgICBhbGxvY2F0aW9ucy4gSWYgdGhlIHVzZXIg
ZGlkIG5vdCBvcHQtaW4sIHRoZSBzeXNjYWxscyBhcmUgcm91dGVkCj4gPiA+ID4gICAgICAgdGhy
b3VnaCB0aGUgbm9ybWFsIHBhdGggKG5vIHVudGFnZ2luZyBhZGRyZXNzIHNoaW0pLgo+ID4gPiA+
Cj4gPiA+ID4gICAgYikgaW9jdGwoKSBhbmQgb3RoZXIgYmxhY2tsaXN0ZWQgc3lzY2FsbHMgKHBy
Y3RsKSB3aWxsIG5vdCBhY2NlcHQKPiA+ID4gPiAgICAgICB0YWdnZWQgcG9pbnRlcnMgKHRvIGJl
IGRvY3VtZW50ZWQgaW4gVmljZW56bydzIEFCSSBwYXRjaGVzKS4KPiA+ID4KPiA+ID4gVGhlIHdh
eSBJIHNlZSBpdCwgYSBwYXRjaCB0aGF0IGJyZWFrcyBoYW5kbGluZyBvZiB0YWdnZWQgcG9pbnRl
cnMgaXMKPiA+ID4gbm90IHRoYXQgZGlmZmVyZW50IGZyb20sIHNheSwgYSBwYXRjaCB0aGF0IGFk
ZHMgYSB3aWxkIHBvaW50ZXIKPiA+ID4gZGVyZWZlcmVuY2UuIEJvdGggYXJlIGJ1Z3M7IHRoZSBk
aWZmZXJlbmNlIGlzIHRoYXQgKGEpIHRoZSBmb3JtZXIKPiA+ID4gYnJlYWtzIGEgcmVsYXRpdmVs
eSB1bmNvbW1vbiB0YXJnZXQgYW5kIChiKSBpdCdzIGFyZ3VhYmx5IGFuIGVhc2llcgo+ID4gPiBt
aXN0YWtlIHRvIG1ha2UuIElmIE1URSBhZG9wdGlvbiBnb2VzIHdlbGwsIChhKSB3aWxsIG5vdCBi
ZSB0aGUgY2FzZQo+ID4gPiBmb3IgbG9uZy4KPiA+IAo+ID4gSXQncyBhbHNvIHRoZSBmYWN0IHN1
Y2ggcGF0Y2ggd291bGQgZ28gdW5ub3RpY2VkIGZvciBhIGxvbmcgdGltZSB1bnRpbAo+ID4gc29t
ZW9uZSBleGVyY2lzZXMgdGhhdCBjb2RlIHBhdGguIEFuZCB3aGVuIHRoZXkgZG8sIHRoZSB1c2Vy
IHdvdWxkIGJlCj4gPiBwcmV0dHkgbXVjaCBpbiB0aGUgZGFyayB0cnlpbmcgdG8gZmlndXJlIHdo
YXQgd2hhdCB3ZW50IHdyb25nLCB3aHkgYQo+ID4gU0lHU0VHViBvciAtRUZBVUxUIGhhcHBlbmVk
LiBXaGF0J3Mgd29yc2UsIHdlIGNhbid0IGV2ZW4gc2F5IHdlIGZpeGVkCj4gPiBhbGwgdGhlIHBs
YWNlcyB3aGVyZSBpdCBtYXR0ZXJzIGluIHRoZSBjdXJyZW50IGtlcm5lbCBjb2RlYmFzZSAoaWdu
b3JpbmcKPiA+IGZ1dHVyZSBwYXRjaGVzKS4KPiAKPiBTbywgbG9va2luZyBmb3J3YXJkIGEgYml0
LCB0aGlzIGlzbid0IGdvaW5nIHRvIGJlIGFuIEFSTS1zcGVjaWZpYyBpc3N1ZQo+IGZvciBsb25n
LgoKSSBkbyBob3BlIHNvLgoKPiBJbiBmYWN0LCBJIHRoaW5rIHdlIHNob3VsZG4ndCBoYXZlIGFy
bS1zcGVjaWZpYyBzeXNjYWxsIHdyYXBwZXJzCj4gaW4gdGhpcyBzZXJpZXM6IEkgdGhpbmsgdW50
YWdnZWRfYWRkcigpIHNob3VsZCBsaWtlbHkgYmUgYWRkZWQgYXQgdGhlCj4gdG9wLWxldmVsIGFu
ZCBoYXZlIGl0IGJlIGEgbm8tb3AgZm9yIG90aGVyIGFyY2hpdGVjdHVyZXMuCgpUaGF0J3Mgd2hh
dCB0aGUgY3VycmVudCBwYXRjaHNldCBkb2VzLCBzbyB3ZSBoYXZlIHRoaXMgYXMgYSBzdGFydGlu
Zwpwb2ludC4gS29zdHlhIHJhaXNlZCBhbm90aGVyIHBvdGVudGlhbCBpc3N1ZSB3aXRoIHRoZSBz
eXNjYWxsIHdyYXBwZXJzOgp3aXRoIE1URSB0aGUga2VybmVsIHdpbGwgYmUgZm9yY2VkIHRvIGVu
YWJsZSB0aGUgbWF0Y2gtYWxsICh3aWxkY2FyZCkKcG9pbnRlcnMgZm9yIHVzZXIgc3BhY2UgYWNj
ZXNzZXMgc2luY2UgY29weV9mcm9tX3VzZXIoKSB3b3VsZCBvbmx5IGdldCBhCjAgdGFnLiBTbyBp
dCBoYXMgd2lkZXIgaW1wbGljYXRpb25zIHRoYW4ganVzdCB1YWNjZXNzIHJvdXRpbmVzIG5vdApj
aGVja2luZyB0aGUgY29sb3VyLgoKPiBTbyBnaXZlbiB0aGlzIGJlY29taW5nIGEga2VybmVsLXdp
ZGUgbXVsdGktYXJjaGl0ZWN0dXJlIGlzc3VlICh1bmRlcgo+IHRoZSBhc3N1bXB0aW9uIHRoYXQg
eDg2LCBSSVNDLVYsIGFuZCBvdGhlcnMgd2lsbCBnYWluIHNpbWlsYXIgVEJJIG9yCj4gTVRFIHRo
aW5ncyksIHdlIHNob3VsZCBzb2x2ZSBpdCBpbiBhIHdheSB0aGF0IHdlIGNhbiByZS11c2UuCgpD
YW4gd2UgZG8gYW55IGJldHRlciB0byBhaWQgdGhlIHVudGFnZ2VkX2FkZHIoKSBwbGFjZW1lbnQg
KGUuZy4gYmV0dGVyCnR5cGUgYW5ub3RhdGlvbnMsIGJldHRlciBzdGF0aWMgYW5hbHlzaXMpPyBX
ZSBoYXZlIHRvIGRpc3Rpbmd1aXNoCmJldHdlZW4gdXNlciBwb2ludGVycyB0aGF0IG1heSBiZSBk
ZXJlZmVyZW5jZWQgYnkgdGhlIGtlcm5lbCAoSSB0aGluawphbG1vc3QgZnVsbHkgY292ZXJlZCB3
aXRoIHRoaXMgcGF0Y2hzZXQpIGFuZCB1c2VyIGFkZHJlc3NlcyByZXByZXNlbnRlZAphcyB1bG9u
ZyB0aGF0IG1heToKCmEpIGJlIGNvbnZlcnRlZCB0byBhIHVzZXIgcG9pbnRlciBhbmQgZGVyZWZl
cmVuY2VkOyBJIHRoaW5rIHRoYXQncyB0aGUKICAgY2FzZSBmb3IgbWFueSBvdmVybG9hZGVkIHVs
b25nL3U2NCBhcmd1bWVudHMKCmIpIHVzZWQgZm9yIGFkZHJlc3Mgc3BhY2UgbWFuYWdlbWVudCwg
cmJ0cmVlIGxvb2stdXBzIGV0Yy4gd2hlcmUgdGhlIHRhZwogICBpcyBubyBsb25nZXIgcmVsZXZh
bnQgYW5kIGl0IGV2ZW4gZ2V0cyBpbiB0aGUgd2F5CgpXZSB0cmllZCBsYXN0IHllYXIgdG8gaWRl
bnRpZnkgdm9pZCBfX3VzZXIgKiBjYXN0cyB0byB1bnNpZ25lZCBsb25nCnVzaW5nIHNwYXJzZSBv
biB0aGUgYXNzdW1wdGlvbiB0aGF0IHBvaW50ZXJzIGNhbiBiZSB0YWdnZWQgd2hpbGUgdWxvbmcK
aXMgYWJvdXQgYWRkcmVzcyBzcGFjZSBtYW5hZ2VtZW50IGFuZCBuZWVkcyB0byBsb3NlIHN1Y2gg
dGFnLiBJIHRoaW5rIHdlCmNvdWxkIGhhdmUgcHVzaGVkIHRoaXMgZnVydGhlci4gRm9yIGV4YW1w
bGUsIGdldF91c2VyX3BhZ2VzKCkgdGFrZXMgYW4KdW5zaWduZWQgbG9uZyBidXQgaXQgaXMgcGVy
ZmVjdGx5IGNhcGFibGUgb2YgdW50YWdnaW5nIHRoZSBhZGRyZXNzCml0c2VsZi4gU2hhbGwgd2Ug
Y2hhbmdlIGl0cyBmaXJzdCBhcmd1bWVudCB0byB2b2lkIF9fdXNlciAqICh0b2dldGhlcgp3aXRo
IGFsbCBpdHMgY2FsbGVycyk/CgpmaW5kX3ZtYSgpLCBPVE9ILCBjb3VsZCB1bnRhZyB0aGUgYWRk
cmVzcyBidXQgaXQgZG9lc24ndCBoZWxwIHNpbmNlCnZtX3N0YXJ0L2VuZCBkb24ndCBoYXZlIHN1
Y2ggaW5mb3JtYXRpb24gKHRoYXQncyBtb3JlIGFib3V0IHRoZSBjb250ZW50Cm9yIHR5cGUgdGhh
dCB0aGUgdXNlciBkZWNpZGVkKSBhbmQgdGhlIGNhbGxlcnMgY2hlY2sgYWdhaW5zdCBpdC4KCkFy
ZSB0aGVyZSBhbnkgb3RoZXIgcGxhY2VzIHdoZXJlIHRoaXMgbWF0dGVycz8gVGhlc2UgcGF0Y2hl
cyB0cmFja2VkCmRvd24gZmluZF92bWEoKSBhcyBzb21lIGhldXJpc3RpY3MgYnV0IHdlIG1heSBu
ZWVkIGJldHRlciBzdGF0aWMKYW5hbHlzaXMgdG8gaWRlbnRpZnkgb3RoZXIgY2FzZXMuCgo+IFdl
IG5lZWQgc29tZXRoaW5nIHRoYXQgaXMgZ29pbmcgdG8gd29yayBldmVyeXdoZXJlLiBBbmQgaXQg
bmVlZHMgdG8gYmUKPiBzdXBwb3J0ZWQgYnkgdGhlIGtlcm5lbCBmb3IgdGhlIHNpbXBsZSByZWFz
b24gdGhhdCB0aGUga2VybmVsIG5lZWRzIHRvCj4gZG8gTVRFIGNoZWNrcyBkdXJpbmcgY29weV9m
cm9tX3VzZXIoKTogaGF2aW5nIHRoYXQgaW5mb3JtYXRpb24gc3RyaXBwZWQKPiBtZWFucyB3ZSBs
b3NlIGFueSB1c2Vyc3BhY2UtYXNzaWduZWQgTVRFIHByb3RlY3Rpb25zIGlmIHRoZXkgZ2V0IGhh
bmRsZWQKPiBieSB0aGUga2VybmVsLCB3aGljaCBpcyBhIHRvdGFsIG5vbi1zdGFydGVyLCBJTU8u
CgpTdWNoIGZlZWRiYWNrIGlzIHdlbGNvbWVkIDspLgoKPiBBcyBhbiBhc2lkZTogSSB0aGluayBT
cGFyYyBBREkgc3VwcG9ydCBpbiBMaW51eCBhY3R1YWxseSBzaWRlLXN0ZXBwZWQKPiB0aGlzWzFd
IChpLmUuIGNob3NlICJzb2x1dGlvbiAxIik6ICJBbGwgYWRkcmVzc2VzIHBhc3NlZCB0byBrZXJu
ZWwgbXVzdAo+IGJlIG5vbi1BREkgdGFnZ2VkIGFkZHJlc3Nlcy4iIChBbmQgc2FkbHksICJLZXJu
ZWwgZG9lcyBub3QgZW5hYmxlIEFESQo+IGZvciBrZXJuZWwgY29kZS4iKSBJIHRoaW5rIHRoaXMg
d2FzIGEgbWlzdGFrZSB3ZSBzaG91bGQgbm90IHJlcGVhdCBmb3IKPiBhcm02NCAod2UgZG8gc2Vl
bSB0byBiZSBhdCBsZWFzdCBpbiBhZ3JlZW1lbnQgYWJvdXQgdGhpcywgSSB0aGluaykuCj4gCj4g
WzFdIGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL3BhdGNod29yay9wYXRjaC82NTQ0ODEvCgpJIHRy
aWVkIHRvIGRyYWcgdGhlIFNQQVJDIGd1eXMgaW50byB0aGlzIGRpc2N1c3Npb24gYnV0IHdpdGhv
dXQgbXVjaApzdWNjZXNzLgoKPiA+ID4gVGhpcyBpcyBhIGJpdCBvZiBhIGNoaWNrZW4tYW5kLWVn
ZyBwcm9ibGVtLiBJbiBhIHdvcmxkIHdoZXJlIG1lbW9yeQo+ID4gPiBhbGxvY2F0b3JzIG9uIG9u
ZSBvciBzZXZlcmFsIHBvcHVsYXIgcGxhdGZvcm1zIGdlbmVyYXRlIHBvaW50ZXJzIHdpdGgKPiA+
ID4gbm9uLXplcm8gdGFncywgYW55IHN1Y2ggYnJlYWthZ2Ugd2lsbCBiZSBjYXVnaHQgaW4gdGVz
dGluZy4KPiA+ID4gVW5mb3J0dW5hdGVseSB0byByZWFjaCB0aGF0IHN0YXRlIHdlIG5lZWQgdGhl
IGtlcm5lbCB0byBzdGFydAo+ID4gPiBhY2NlcHRpbmcgdGFnZ2VkIHBvaW50ZXJzIGZpcnN0LCBh
bmQgdGhlbiBob2xkIG9uIGZvciBhIGNvdXBsZSBvZgo+ID4gPiB5ZWFycyB1bnRpbCB1c2Vyc3Bh
Y2UgY2F0Y2hlcyB1cC4KPiA+IAo+ID4gV291bGQgdGhlIGtlcm5lbCBhbHNvIGNhdGNoIHVwIHdp
dGggcHJvdmlkaW5nIGEgc3RhYmxlIEFCST8gQmVjYXVzZSB3ZQo+ID4gaGF2ZSB0d28gbW92aW5n
IHRhcmdldHMuCj4gPiAKPiA+IE9uIG9uZSBoYW5kLCB5b3UgaGF2ZSBBbmRyb2lkIG9yIHNvbWUg
TGludXggZGlzdHJvIHRoYXQgc3RpY2sgdG8gYQo+ID4gc3RhYmxlIGtlcm5lbCB2ZXJzaW9uIGZv
ciBzb21lIHRpbWUsIHNvIHRoZXkgaGF2ZSBiZXR0ZXIgY2hhbmNlIG9mCj4gPiBjbGVhcmluZyBt
b3N0IG9mIHRoZSBwcm9ibGVtcy4gT24gdGhlIG90aGVyIGhhbmQsIHdlIGhhdmUgbWFpbmxpbmUK
PiA+IGtlcm5lbCB0aGF0IGdldHMgb3ZlciA1MDBLIGxpbmVzIGV2ZXJ5IHJlbGVhc2UuIEFzIG1h
aW50YWluZXIsIEkgY2FuJ3QKPiA+IHJlbHkgb24gbXkgdGVzdGluZyBhbG9uZSBhcyB0aGlzIGlz
IG9uIGEgbGltaXRlZCBudW1iZXIgb2YgcGxhdGZvcm1zLiBTbwo+ID4gbXkgY29uY2VybiBpcyB0
aGF0IGV2ZXJ5IGtlcm5lbCByZWxlYXNlIGhhcyBhIHNpZ25pZmljYW50IGNoYW5jZSBvZgo+ID4g
YnJlYWtpbmcgdGhlIEFCSSwgdW5sZXNzIHdlIGhhdmUgYSBiZXR0ZXIgd2F5IG9mIGlkZW50aWZ5
aW5nIHBvdGVudGlhbAo+ID4gaXNzdWVzLgo+IAo+IEkganVzdCB3YW50IHRvIG1ha2Ugc3VyZSBJ
IGZ1bGx5IHVuZGVyc3RhbmQgeW91ciBjb25jZXJuIGFib3V0IHRoaXMKPiBiZWluZyBhbiBBQkkg
YnJlYWssIGFuZCBJIHdvcmsgYmVzdCB3aXRoIGV4YW1wbGVzLiBUaGUgY2xvc2VzdCBzaXR1YXRp
b24KPiBJIGNhbiBzZWUgd291bGQgYmU6Cj4gCj4gLSBzb21lIHByb2dyYW0gaGFzIG5vIGlkZWEg
YWJvdXQgTVRFCgpBcGFydCBmcm9tIHNvbWUgbGlicmFyaWVzIGxpa2UgbGliYyAoYW5kIG1heWJl
IHRob3NlIHRoYXQgaGFuZGxlCnNwZWNpZmljIGRldmljZSBpb2N0bHMpLCBJIHRoaW5rIG1vc3Qg
cHJvZ3JhbXMgc2hvdWxkIGhhdmUgbm8gaWRlYSBhYm91dApNVEUuIEkgd291bGRuJ3QgZXhwZWN0
IHByb2dyYW1tZXJzIHRvIGhhdmUgdG8gY2hhbmdlIHRoZWlyIGFwcCBqdXN0CmJlY2F1c2Ugd2Ug
aGF2ZSBhIG5ldyBmZWF0dXJlIHRoYXQgY29sb3VycyBoZWFwIGFsbG9jYXRpb25zLgoKPiAtIG1h
bGxvYygpIHN0YXJ0cyByZXR1cm5pbmcgTVRFLXRhZ2dlZCBhZGRyZXNzZXMKPiAtIHByb2dyYW0g
ZG9lc24ndCBicmVhayBmcm9tIHRoYXQgY2hhbmdlCj4gLSBwcm9ncmFtIHVzZXMgc29tZSBzeXNj
YWxsIHRoYXQgaXMgbWlzc2luZyB1bnRhZ2dlZF9hZGRyKCkgYW5kIGZhaWxzCj4gLSBrZXJuZWwg
aGFzIG5vdyBicm9rZW4gdXNlcnNwYWNlIHRoYXQgdXNlZCB0byB3b3JrCgpUaGF0J3Mgb25lIGFz
cGVjdCB0aG91Z2ggcHJvYmFibHkgbW9yZSBvZiBhIGNhc2Ugb2YgcGx1Z2dpbmcgaW4gYSBuZXcK
ZGV2aWNlIChncmFwaGljcyBjYXJkLCBuZXR3b3JrIGV0Yy4pIGFuZCB0aGUgaW9jdGwgdG8gdGhl
IG5ldyBkZXZpY2UKZG9lc24ndCB3b3JrLgoKVGhlIG90aGVyIGlzIHRoYXQsIGFzc3VtaW5nIHdl
IHJlYWNoIGEgcG9pbnQgd2hlcmUgdGhlIGtlcm5lbCBlbnRpcmVseQpzdXBwb3J0cyB0aGlzIHJl
bGF4ZWQgQUJJLCBjYW4gd2UgZ3VhcmFudGVlIHRoYXQgaXQgd29uJ3QgYnJlYWsgaW4gdGhlCmZ1
dHVyZS4gTGV0J3Mgc2F5IHNvbWUgc3Vic2VxdWVudCBrZXJuZWwgY2hhbmdlIChzb21lIHJlZmFj
dG9yaW5nKQptaXNzZXMgb3V0IGFuIHVudGFnZ2VkX2FkZHIoKS4gVGhpcyByZW5kZXJzIGEgcHJl
dmlvdXNseSBUQkkvTVRFLWNhcGFibGUKc3lzY2FsbCB1bnVzYWJsZS4gQ2FuIHdlIHJlbHkgb25s
eSBvbiB0ZXN0aW5nPwoKPiBUaGUgdHJvdWJsZSBJIHNlZSB3aXRoIHRoaXMgaXMgdGhhdCBpdCBp
cyBsYXJnZWx5IHRoZW9yZXRpY2FsIGFuZAo+IHJlcXVpcmVzIHBhcnQgb2YgdXNlcnNwYWNlIHRv
IGNvbGx1ZGUgdG8gc3RhcnQgdXNpbmcgYSBuZXcgQ1BVIGZlYXR1cmUKPiB0aGF0IHRpY2tsZXMg
YSBidWcgaW4gdGhlIGtlcm5lbC4gQXMgSSB1bmRlcnN0YW5kIHRoZSBnb2xkZW4gcnVsZSwKPiB0
aGlzIGlzIGEgYnVnIGluIHRoZSBrZXJuZWwgKGEgbWlzc2VkIGlvY3RsKCkgb3Igc3VjaCkgdG8g
YmUgZml4ZWQsCj4gbm90IGEgZ2xvYmFsIGJyZWFraW5nIG9mIHNvbWUgdXNlcnNwYWNlIGJlaGF2
aW9yLgoKWWVzLCB3ZSBzaG91bGQgZm9sbG93IHRoZSBydWxlIHRoYXQgaXQncyBhIGtlcm5lbCBi
dWcgYnV0IGl0IGRvZXNuJ3QKaGVscCB0aGUgdXNlciB0aGF0IGEgbmV3bHkgaW5zdGFsbGVkIGtl
cm5lbCBjYXVzZXMgdXNlciBzcGFjZSB0byBubwpsb25nZXIgcmVhY2ggYSBwcm9tcHQuIEhlbmNl
IHRoZSBwcm9wb3NhbCBvZiBhbiBvcHQtaW4gdmlhIHBlcnNvbmFsaXR5Cihmb3IgTVRFIHdlIHdv
dWxkIG5lZWQgYW4gZXhwbGljaXQgb3B0LWluIGJ5IHRoZSB1c2VyIGFueXdheSBzaW5jZSB0aGUK
dG9wIGJ5dGUgaXMgbm8gbG9uZ2VyIGlnbm9yZWQgYnV0IGNoZWNrZWQgYWdhaW5zdCB0aGUgYWxs
b2NhdGlvbiB0YWcpLgoKPiBJIGZlZWwgbGlrZSBJJ20gbWlzc2luZyBzb21ldGhpbmcgYWJvdXQg
dGhpcyBiZWluZyBzZWVuIGFzIGFuIEFCSQo+IGJyZWFrLiBUaGUga2VybmVsIGFscmVhZHkgZmFp
bHMgb24gdXNlcnNwYWNlIGFkZHJlc3NlcyB0aGF0IGhhdmUgaGlnaAo+IGJpdHMgc2V0IC0tIGFy
ZSB0aGVyZSB0aGluZ3MgdGhhdCBfZGVwZW5kXyBvbiB0aGlzIGZhaWx1cmUgdG8gb3BlcmF0ZT8K
Ckl0J3MgYWJvdXQgcHJvdmlkaW5nIGEgcmVsYXhlZCBBQkkgd2hpY2ggYWxsb3dzIG5vbi16ZXJv
IHRvcCBieXRlIGFuZApicmVha2luZyBpdCBsYXRlciBpbmFkdmVydGVudGx5IHdpdGhvdXQgaGF2
aW5nIHNvbWV0aGluZyBiZXR0ZXIgaW4gcGxhY2UKdG8gYW5hbHlzZSB0aGUga2VybmVsIGNoYW5n
ZXMuCgpUaGFua3MuCgotLSAKQ2F0YWxpbgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwphbWQtZ2Z4IG1haWxpbmcgbGlzdAphbWQtZ2Z4QGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZv
L2FtZC1nZng=
