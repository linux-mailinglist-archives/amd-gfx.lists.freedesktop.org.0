Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 28EAE25799
	for <lists+amd-gfx@lfdr.de>; Tue, 21 May 2019 20:31:41 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AB4018953E;
	Tue, 21 May 2019 18:31:39 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from foss.arm.com (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTP id 0920689518;
 Tue, 21 May 2019 18:29:42 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 4EE4F80D;
 Tue, 21 May 2019 11:29:42 -0700 (PDT)
Received: from mbp (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 294B83F5AF;
 Tue, 21 May 2019 11:29:36 -0700 (PDT)
Date: Tue, 21 May 2019 19:29:33 +0100
From: Catalin Marinas <catalin.marinas@arm.com>
To: Evgenii Stepanov <eugenis@google.com>
Subject: Re: [PATCH v15 00/17] arm64: untag user pointers passed to the kernel
Message-ID: <20190521182932.sm4vxweuwo5ermyd@mbp>
References: <cover.1557160186.git.andreyknvl@google.com>
 <20190517144931.GA56186@arrakis.emea.arm.com>
 <CAFKCwrj6JEtp4BzhqO178LFJepmepoMx=G+YdC8sqZ3bcBp3EQ@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <CAFKCwrj6JEtp4BzhqO178LFJepmepoMx=G+YdC8sqZ3bcBp3EQ@mail.gmail.com>
User-Agent: NeoMutt/20170113 (1.7.2)
X-Mailman-Approved-At: Tue, 21 May 2019 18:31:38 +0000
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, kvm@vger.kernel.org,
 Szabolcs Nagy <Szabolcs.Nagy@arm.com>, Will Deacon <will.deacon@arm.com>,
 dri-devel@lists.freedesktop.org,
 Linux Memory Management List <linux-mm@kvack.org>,
 "open list:KERNEL SELFTEST FRAMEWORK" <linux-kselftest@vger.kernel.org>,
 Felix Kuehling <Felix.Kuehling@amd.com>,
 Vincenzo Frascino <vincenzo.frascino@arm.com>,
 Jacob Bramley <Jacob.Bramley@arm.com>, Leon Romanovsky <leon@kernel.org>,
 linux-rdma@vger.kernel.org, amd-gfx@lists.freedesktop.org,
 Dmitry Vyukov <dvyukov@google.com>, Dave Martin <Dave.Martin@arm.com>,
 linux-media@vger.kernel.org, Kevin Brodsky <kevin.brodsky@arm.com>,
 Kees Cook <keescook@chromium.org>, Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
 Andrey Konovalov <andreyknvl@google.com>,
 Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
 Alex Williamson <alex.williamson@redhat.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>,
 Linux ARM <linux-arm-kernel@lists.infradead.org>,
 Kostya Serebryany <kcc@google.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Yishai Hadas <yishaih@mellanox.com>, LKML <linux-kernel@vger.kernel.org>,
 Jens Wiklander <jens.wiklander@linaro.org>, Lee Smith <Lee.Smith@arm.com>,
 Alexander Deucher <Alexander.Deucher@amd.com>,
 Andrew Morton <akpm@linux-foundation.org>, Elliott Hughes <enh@google.com>,
 Robin Murphy <robin.murphy@arm.com>,
 Christian Koenig <Christian.Koenig@amd.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

T24gTW9uLCBNYXkgMjAsIDIwMTkgYXQgMDQ6NTM6MDdQTSAtMDcwMCwgRXZnZW5paSBTdGVwYW5v
diB3cm90ZToKPiBPbiBGcmksIE1heSAxNywgMjAxOSBhdCA3OjQ5IEFNIENhdGFsaW4gTWFyaW5h
cyA8Y2F0YWxpbi5tYXJpbmFzQGFybS5jb20+IHdyb3RlOgo+ID4gSU1PIChSRkMgZm9yIG5vdyks
IEkgc2VlIHR3byB3YXlzIGZvcndhcmQ6Cj4gPgo+ID4gMS4gTWFrZSB0aGlzIGEgdXNlciBzcGFj
ZSBwcm9ibGVtIGFuZCBkbyBub3QgYWxsb3cgdGFnZ2VkIHBvaW50ZXJzIGludG8KPiA+ICAgIHRo
ZSBzeXNjYWxsIEFCSS4gQSBsaWJjIHdyYXBwZXIgd291bGQgaGF2ZSB0byBjb252ZXJ0IHN0cnVj
dHVyZXMsCj4gPiAgICBwYXJhbWV0ZXJzIGJlZm9yZSBwYXNzaW5nIHRoZW0gaW50byB0aGUga2Vy
bmVsLiBOb3RlIHRoYXQgd2UgY2FuCj4gPiAgICBzdGlsbCBzdXBwb3J0IHRoZSBoYXJkd2FyZSBN
VEUgaW4gdGhlIGtlcm5lbCBieSBlbmFibGluZyB0YWdnZWQKPiA+ICAgIG1lbW9yeSByYW5nZXMs
IHNhdmluZy9yZXN0b3JpbmcgdGFncyBldGMuIGJ1dCBub3QgYWxsb3dpbmcgdGFnZ2VkCj4gPiAg
ICBhZGRyZXNzZXMgYXQgdGhlIHN5c2NhbGwgYm91bmRhcnkuCj4gPgo+ID4gMi4gU2ltaWxhciBz
aGltIHRvIHRoZSBhYm92ZSBsaWJjIHdyYXBwZXIgYnV0IGluc2lkZSB0aGUga2VybmVsCj4gPiAg
ICAoYXJjaC9hcm02NCBvbmx5OyBtb3N0IHBvaW50ZXIgYXJndW1lbnRzIGNvdWxkIGJlIGNvdmVy
ZWQgd2l0aCBhbgo+ID4gICAgX19TQ19DQVNUIHNpbWlsYXIgdG8gdGhlIHMzOTAgb25lKS4gVGhl
cmUgYXJlIHR3byBkaWZmZXJlbmNlcyBmcm9tCj4gPiAgICB3aGF0IHdlJ3ZlIGRpc2N1c3NlZCBp
biB0aGUgcGFzdDoKPiA+Cj4gPiAgICBhKSB0aGlzIGlzIGFuIG9wdC1pbiBieSB0aGUgdXNlciB3
aGljaCB3b3VsZCBoYXZlIHRvIGV4cGxpY2l0bHkgY2FsbAo+ID4gICAgICAgcHJjdGwoKS4gSWYg
aXQgcmV0dXJucyAtRU5PVFNVUFAgZXRjLiwgdGhlIHVzZXIgd29uJ3QgYmUgYWxsb3dlZAo+ID4g
ICAgICAgdG8gcGFzcyB0YWdnZWQgcG9pbnRlcnMgdG8gdGhlIGtlcm5lbC4gVGhpcyB3b3VsZCBw
cm9iYWJseSBiZSB0aGUKPiA+ICAgICAgIHJlc3BvbnNpYmlsaXR5IG9mIHRoZSBDIGxpYiB0byBt
YWtlIHN1cmUgaXQgZG9lc24ndCB0YWcgaGVhcAo+ID4gICAgICAgYWxsb2NhdGlvbnMuIElmIHRo
ZSB1c2VyIGRpZCBub3Qgb3B0LWluLCB0aGUgc3lzY2FsbHMgYXJlIHJvdXRlZAo+ID4gICAgICAg
dGhyb3VnaCB0aGUgbm9ybWFsIHBhdGggKG5vIHVudGFnZ2luZyBhZGRyZXNzIHNoaW0pLgo+ID4K
PiA+ICAgIGIpIGlvY3RsKCkgYW5kIG90aGVyIGJsYWNrbGlzdGVkIHN5c2NhbGxzIChwcmN0bCkg
d2lsbCBub3QgYWNjZXB0Cj4gPiAgICAgICB0YWdnZWQgcG9pbnRlcnMgKHRvIGJlIGRvY3VtZW50
ZWQgaW4gVmljZW56bydzIEFCSSBwYXRjaGVzKS4KWy4uLl0KPiBBbnkgdXNlcnNwYWNlIHNoaW0g
YXBwcm9hY2ggaXMgcHJvYmxlbWF0aWMgZm9yIEFuZHJvaWQgYmVjYXVzZSBvZiB0aGUKPiBhcHBz
IHRoYXQgdXNlIHJhdyBzeXN0ZW0gY2FsbHMuIEFGQUlLLCBhbGwgYXBwcyB3cml0dGVuIGluIEdv
IGFyZSBpbgo+IHRoYXQgY2FtcCAtIEknbSBub3Qgc3VyZSBob3cgY29tbW9uIHRoZXkgYXJlLCBi
dXQgZ2V0dGluZyB0aGVtIGFsbAo+IHJlY29tcGlsZWQgaXMgcHJvYmFibHkgbm90IHJlYWxpc3Rp
Yy4KClRoYXQncyBhIGZhaXIgcG9pbnQgKEkgd2Fzbid0IGV4cGVjdGluZyBpdCB3b3VsZCBnZXQg
bXVjaCB0cmFjdGlvbgphbnl3YXkgOykpLiBPVE9ILCBpdCBhbGxvd3MgdXBzdHJlYW1pbmcgb2Yg
dGhlIE1URSBwYXRjaGVzIHdoaWxlIHdlCmNvbnRpbnVlIHRoZSBkaXNjdXNzaW9ucyBhcm91bmQg
VEJJLgoKPiBUaGUgd2F5IEkgc2VlIGl0LCBhIHBhdGNoIHRoYXQgYnJlYWtzIGhhbmRsaW5nIG9m
IHRhZ2dlZCBwb2ludGVycyBpcwo+IG5vdCB0aGF0IGRpZmZlcmVudCBmcm9tLCBzYXksIGEgcGF0
Y2ggdGhhdCBhZGRzIGEgd2lsZCBwb2ludGVyCj4gZGVyZWZlcmVuY2UuIEJvdGggYXJlIGJ1Z3M7
IHRoZSBkaWZmZXJlbmNlIGlzIHRoYXQgKGEpIHRoZSBmb3JtZXIKPiBicmVha3MgYSByZWxhdGl2
ZWx5IHVuY29tbW9uIHRhcmdldCBhbmQgKGIpIGl0J3MgYXJndWFibHkgYW4gZWFzaWVyCj4gbWlz
dGFrZSB0byBtYWtlLiBJZiBNVEUgYWRvcHRpb24gZ29lcyB3ZWxsLCAoYSkgd2lsbCBub3QgYmUg
dGhlIGNhc2UKPiBmb3IgbG9uZy4KCkl0J3MgYWxzbyB0aGUgZmFjdCBzdWNoIHBhdGNoIHdvdWxk
IGdvIHVubm90aWNlZCBmb3IgYSBsb25nIHRpbWUgdW50aWwKc29tZW9uZSBleGVyY2lzZXMgdGhh
dCBjb2RlIHBhdGguIEFuZCB3aGVuIHRoZXkgZG8sIHRoZSB1c2VyIHdvdWxkIGJlCnByZXR0eSBt
dWNoIGluIHRoZSBkYXJrIHRyeWluZyB0byBmaWd1cmUgd2hhdCB3aGF0IHdlbnQgd3JvbmcsIHdo
eSBhClNJR1NFR1Ygb3IgLUVGQVVMVCBoYXBwZW5lZC4gV2hhdCdzIHdvcnNlLCB3ZSBjYW4ndCBl
dmVuIHNheSB3ZSBmaXhlZAphbGwgdGhlIHBsYWNlcyB3aGVyZSBpdCBtYXR0ZXJzIGluIHRoZSBj
dXJyZW50IGtlcm5lbCBjb2RlYmFzZSAoaWdub3JpbmcKZnV0dXJlIHBhdGNoZXMpLgoKSSB0aGlu
ayB3ZSBzaG91bGQgcmV2aXNpdCB0aGUgc3RhdGljIGNoZWNraW5nIGRpc2N1c3Npb25zIHdlIGhh
ZCBsYXN0CnllYXIuIFJ1bi10aW1lIGNoZWNraW5nIChldmVuIHdpdGggY29tcGlsZXIgaW5zdHJ1
bWVudGF0aW9uIGFuZApzeXprYWxsZXIgZnV6emluZykgd291bGQgb25seSBjb3ZlciB0aGUgY29k
ZSBwYXRocyBzcGVjaWZpYyB0byBhIExpbnV4Cm9yIEFuZHJvaWQgaW5zdGFsbGF0aW9uLgoKPiBU
aGlzIGlzIGEgYml0IG9mIGEgY2hpY2tlbi1hbmQtZWdnIHByb2JsZW0uIEluIGEgd29ybGQgd2hl
cmUgbWVtb3J5Cj4gYWxsb2NhdG9ycyBvbiBvbmUgb3Igc2V2ZXJhbCBwb3B1bGFyIHBsYXRmb3Jt
cyBnZW5lcmF0ZSBwb2ludGVycyB3aXRoCj4gbm9uLXplcm8gdGFncywgYW55IHN1Y2ggYnJlYWth
Z2Ugd2lsbCBiZSBjYXVnaHQgaW4gdGVzdGluZy4KPiBVbmZvcnR1bmF0ZWx5IHRvIHJlYWNoIHRo
YXQgc3RhdGUgd2UgbmVlZCB0aGUga2VybmVsIHRvIHN0YXJ0Cj4gYWNjZXB0aW5nIHRhZ2dlZCBw
b2ludGVycyBmaXJzdCwgYW5kIHRoZW4gaG9sZCBvbiBmb3IgYSBjb3VwbGUgb2YKPiB5ZWFycyB1
bnRpbCB1c2Vyc3BhY2UgY2F0Y2hlcyB1cC4KCldvdWxkIHRoZSBrZXJuZWwgYWxzbyBjYXRjaCB1
cCB3aXRoIHByb3ZpZGluZyBhIHN0YWJsZSBBQkk/IEJlY2F1c2Ugd2UKaGF2ZSB0d28gbW92aW5n
IHRhcmdldHMuCgpPbiBvbmUgaGFuZCwgeW91IGhhdmUgQW5kcm9pZCBvciBzb21lIExpbnV4IGRp
c3RybyB0aGF0IHN0aWNrIHRvIGEKc3RhYmxlIGtlcm5lbCB2ZXJzaW9uIGZvciBzb21lIHRpbWUs
IHNvIHRoZXkgaGF2ZSBiZXR0ZXIgY2hhbmNlIG9mCmNsZWFyaW5nIG1vc3Qgb2YgdGhlIHByb2Js
ZW1zLiBPbiB0aGUgb3RoZXIgaGFuZCwgd2UgaGF2ZSBtYWlubGluZQprZXJuZWwgdGhhdCBnZXRz
IG92ZXIgNTAwSyBsaW5lcyBldmVyeSByZWxlYXNlLiBBcyBtYWludGFpbmVyLCBJIGNhbid0CnJl
bHkgb24gbXkgdGVzdGluZyBhbG9uZSBhcyB0aGlzIGlzIG9uIGEgbGltaXRlZCBudW1iZXIgb2Yg
cGxhdGZvcm1zLiBTbwpteSBjb25jZXJuIGlzIHRoYXQgZXZlcnkga2VybmVsIHJlbGVhc2UgaGFz
IGEgc2lnbmlmaWNhbnQgY2hhbmNlIG9mCmJyZWFraW5nIHRoZSBBQkksIHVubGVzcyB3ZSBoYXZl
IGEgYmV0dGVyIHdheSBvZiBpZGVudGlmeWluZyBwb3RlbnRpYWwKaXNzdWVzLgoKPiBQZXJoYXBz
IHdlIGNhbiBzdGFydCBieSB3aGl0ZWxpc3RpbmcgaW9jdGxzIGJ5IGRyaXZlcj8KClRoaXMgd2Fz
IGFsc28gcmFpc2VkIGJ5IFJ1YmVuIGluIHByaXZhdGUgYnV0IHdpdGhvdXQgYSAoc3RhdGljKSB0
b29sIHRvCnRvIGNoZWNrLCBtYW51YWxseSBnb2luZyB0aHJvdWdoIGFsbCB0aGUgZHJpdmVycyBk
b2Vzbid0IHNjYWxlLiBJdCdzCnZlcnkgbGlrZWx5IHRoYXQgbW9zdCBkcml2ZXJzIGRvbid0IGNh
cmUsIGp1c3QgYSBnZXRfdXNlci9wdXRfdXNlciBpcwphbHJlYWR5IGhhbmRsZWQgYnkgdGhlc2Ug
cGF0Y2hlcy4gU2VhcmNoaW5nIGZvciBmaW5kX3ZtYSgpIHdhcwppZGVudGlmeWluZyBvbmUgc3Vj
aCB1c2UtY2FzZSBidXQgaXMgdGhpcyBzdWZmaWNpZW50PyBBcmUgdGhlcmUgb3RoZXIKY2FzZXMg
d2UgbmVlZCB0byBleHBsaWNpdGx5IHVudGFnIGEgcG9pbnRlcj8KCgpUaGUgb3RoZXIgcG9pbnQg
SSdkIGxpa2UgZmVlZGJhY2sgb24gaXMgMi5hIGFib3ZlLiBJIHNlZSBfc29tZV8gdmFsdWUKaW50
byBoYXZpbmcgdGhlIHVzZXIgb3B0LWluIHRvIHRoaXMgcmVsYXhlZCBBQkkgcmF0aGVyIHRoYW4g
YmxpbmRpbmcKZXhwb3NpbmcgaXQgdG8gYWxsIGFwcGxpY2F0aW9ucy4gRGF2ZSBzdWdnZXN0ZWQg
KGluIHByaXZhdGUpIGEgbmV3CnBlcnNvbmFsaXR5IChlLmcuIFBFUl9MSU5VWF9UQkkpIGluaGVy
aXRlZCBieSBjaGlsZHJlbi4gSXQgd291bGQgYmUgdGhlCnJlc3BvbnNpYmlsaXR5IG9mIHRoZSBD
IGxpYnJhcnkgdG8gY2hlY2sgdGhlIGN1cnJlbnQgcGVyc29uYWxpdHkgYml0cwphbmQgb25seSB0
YWcgcG9pbnRlcnMgb24gYWxsb2NhdGlvbiAqaWYqIHRoZSBrZXJuZWwgYWxsb3dlZCBpdC4gVGhl
Cmtlcm5lbCBjb3VsZCBwcm92aWRlIHRoZSBBVF9GTEFHUyBiaXQgYXMgaW4gVmluY2Vuem8ncyBw
YXRjaGVzIGlmIHRoZQpwZXJzb25hbGl0eSB3YXMgc2V0IGJ1dCBjYW4ndCBzZXQgaXQgcmV0cm9z
cGVjdGl2ZWx5IGlmIHRoZSB1c2VyIGNhbGxlZApzeXNfcGVyc29uYWxpdHkuIEJ5IGRlZmF1bHQs
IC9zYmluL2luaXQgd291bGQgbm90IGhhdmUgdGhpcyBwZXJzb25hbGl0eQphbmQgbGliYyB3b3Vs
ZCBub3QgdGFnIHBvaW50ZXJzLCBzbyB3ZSBjYW4gZ3VhcmFudGVlIHRoYXQgeW91ciBkaXN0cm8K
Ym9vdHMgbm9ybWFsbHkgd2l0aCBhIG5ldyBrZXJuZWwgdmVyc2lvbi4gV2UgY291bGQgaGF2ZSBh
biBlbnZwIHRoYXQKZ2V0cyBjYXVnaHQgYnkgL3NiaW4vaW5pdCBzbyB5b3UgY2FuIHBhc3MgaXQg
b24gdGhlIGtlcm5lbCBjb21tYW5kIGxpbmUKKG9yIGEgZHluYW1pYyBsb2FkZXIgYXQgcnVuLXRp
bWUpLiBCdXQgdGhlIGRlZmF1bHQgc2hvdWxkIGJlIHRoZSBjdXJyZW50CkFCSSBiZWhhdmlvdXIu
CgpXZSBjYW4gZW5mb3JjZSB0aGUgY3VycmVudCBiZWhhdmlvdXIgYnkgaGF2aW5nIGFjY2Vzc19v
aygpIGNoZWNrIHRoZQpwZXJzb25hbGl0eSBvciBhIFRJRiBmbGFnIGJ1dCB3ZSBtYXkgcmVsYXgg
dGhpcyBlbmZvcmNlbWVudCBhdCBzb21lCnBvaW50IGluIHRoZSBmdXR1cmUgYXMgd2UgbGVhcm4g
bW9yZSBhYm91dCB0aGUgaW1wbGljYXRpb25zIG9mIFRCSS4KClRoYW5rcy4KCi0tIApDYXRhbGlu
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZngg
bWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
