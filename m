Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id B8DD6BACF5
	for <lists+amd-gfx@lfdr.de>; Mon, 23 Sep 2019 05:56:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 00B686E0DA;
	Mon, 23 Sep 2019 03:56:52 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM01-BY2-obe.outbound.protection.outlook.com
 (mail-eopbgr810058.outbound.protection.outlook.com [40.107.81.58])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 401C26E060
 for <amd-gfx@lists.freedesktop.org>; Mon, 23 Sep 2019 03:56:52 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=M+0yFrsCvHvuSWOQUifcTPOpURkCHBDQ8J9tilhXD/LQL66OIRLCMVZgcRVgsatxAfAcF35f9bIub/QYhtFXCCneSIZZa2hjyxOsEkb/i0+nIBqPmKt5S4+7kb2tsH/wMJGGbDXDN1CT77PRErRcQjOmD22mdpYSu9E2Yev3rQ2pls5MV2huLJJpYd2bxCcuGV5GG9UWH5d6Xxqaxr65tgGkKutLSI+4+OKig3Db6WKC0KvQrYO9KcRvdlH5Up2klgdsZCSrISa4HNsiG4yfKXOy5+VLTlI1TuLKK4D8UkkPR6yVOyH8Z6xMzpnp+ZprMRXswogGeSn4g+YD8k7EUg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=KIriRXLId+V8nca21gWJaiay1+JErvhY2UIrVlZ2EyA=;
 b=HpJ9/ypFrVctM3ErCOY5uZYxoDe+qT+xnCLsstA7sjHTnbEbGZhz3JcDCAAABajaXJ6O9ZC+IwOLGRCtIT6YufD8q2Xrf/rvJJBZp67SuM8tZqdwPx+vZ9fPGMQ1KYmxPn0MLO7UBCOMDkE7WLGIbgh+74UBhFfAuGvLoGZx+xbC266k/Q+aHmHIPMPodfnIrxiY5WJXAKfbTRmo77FCZxlOWAjTRZHuYQ68Q+owmfUxak1tvkrSVgQh3UW8p5QVdpUaHkFykbu1zNeKfXtECFnsjpAObkaG0DZtLvn1QSDcM9eGrR5gkRc3SP0rqKHTiOS+W+UJBcFztaGOvFjiDA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from DM6PR12MB2778.namprd12.prod.outlook.com (20.176.114.145) by
 DM6PR12MB3497.namprd12.prod.outlook.com (20.178.199.20) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2284.26; Mon, 23 Sep 2019 03:56:50 +0000
Received: from DM6PR12MB2778.namprd12.prod.outlook.com
 ([fe80::81aa:9739:a2c2:12fa]) by DM6PR12MB2778.namprd12.prod.outlook.com
 ([fe80::81aa:9739:a2c2:12fa%4]) with mapi id 15.20.2284.023; Mon, 23 Sep 2019
 03:56:50 +0000
From: "Zhao, Yong" <Yong.Zhao@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 2/2] drm/amdkfd: Use better name for sdma queue non HWS path
Thread-Topic: [PATCH 2/2] drm/amdkfd: Use better name for sdma queue non HWS
 path
Thread-Index: AQHVccLtYqJBLcshdkCYKZnl28mdXA==
Date: Mon, 23 Sep 2019 03:56:50 +0000
Message-ID: <20190923035634.13152-2-Yong.Zhao@amd.com>
References: <20190923035634.13152-1-Yong.Zhao@amd.com>
In-Reply-To: <20190923035634.13152-1-Yong.Zhao@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: YTBPR01CA0020.CANPRD01.PROD.OUTLOOK.COM
 (2603:10b6:b01:14::33) To DM6PR12MB2778.namprd12.prod.outlook.com
 (2603:10b6:5:50::17)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.17.1
x-originating-ip: [165.204.55.251]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 3048a002-9fbe-45ae-1b7c-08d73fda1042
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0; PCL:0;
 RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600167)(711020)(4605104)(1401327)(4618075)(2017052603328)(7193020);
 SRVR:DM6PR12MB3497; 
x-ms-traffictypediagnostic: DM6PR12MB3497:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <DM6PR12MB34970B74CF8595FE04AFD3FCF0850@DM6PR12MB3497.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:1443;
x-forefront-prvs: 0169092318
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(136003)(376002)(366004)(346002)(396003)(39860400002)(199004)(189003)(99286004)(8936002)(66556008)(478600001)(66476007)(3846002)(6116002)(2501003)(50226002)(256004)(14444005)(86362001)(14454004)(66446008)(8676002)(36756003)(30864003)(66946007)(2906002)(25786009)(5660300002)(71190400001)(71200400001)(64756008)(316002)(102836004)(6436002)(186003)(4326008)(52116002)(305945005)(6486002)(7736002)(66066001)(81156014)(1076003)(76176011)(81166006)(6506007)(386003)(6512007)(5640700003)(26005)(2616005)(476003)(486006)(6916009)(446003)(2351001)(11346002)(21314003)(579004)(559001);
 DIR:OUT; SFP:1101; SCL:1; SRVR:DM6PR12MB3497;
 H:DM6PR12MB2778.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; A:1; MX:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam-message-info: OQ8znn+MFd7vkWmbZVTZ9koj101V2aX4abCu3Eo1neq4yKYuVUugd2bCpvWRYJ2tVzTpyHTsWSVSpPJgv6PVHs5M6AEOnQ7Plzg/rxxQioU5+YofciU8kFlSrcqaXEbk1O1vIARiNZIylxN2Jw6KZha8zHdiZv+6eqxADcH79ABRI+GkPTmu62r2F5Hy3+ZWH48V/14+xHgKm/p1WU0P4avc/fUVgFpPtIwOgL9xZKOSPnZgQRd9qOsnYACJg8PaYsB9oaYZ0Rx+xv9M88I59+Yhbu3UIjlZbBe7z/lcykQ1TZpIwVIQ5THPL9XycrbM+ZBBQDiP0xayfC67mt1iWNQdWvbTIBZOBPw0jDZ4HUrVvQV03GIqDy5rXBf7tP0xQjha4uQ7PXVQFSPUE18W1jPNtyu5ay8fH5TETGWUFP8=
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 3048a002-9fbe-45ae-1b7c-08d73fda1042
X-MS-Exchange-CrossTenant-originalarrivaltime: 23 Sep 2019 03:56:50.5951 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: wS4zCOGdl6TpQEWvpZqs5y0bBHVK1cDW+paU6NJFF9wIdUjJUaWa8b+LiUGuG0id
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB3497
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=KIriRXLId+V8nca21gWJaiay1+JErvhY2UIrVlZ2EyA=;
 b=UrWzLmGTYuaPoNoXty/RoaSByOvuOnurTdOskiM/89GxPzj/ltFaNdvh6dtvBP0pea+ZjFwYU24glUrth1fOlMfniBdQcTKukLMsS4PlYfo8YZP/jXcDPxPaDni9pNb3RDEoDNW4elL/3CiNis1f4HJzXmYQq/C6mHNEoD0kLz0=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Yong.Zhao@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Zhao, Yong" <Yong.Zhao@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VGhlIG9sZCBuYW1lIGlzIHByb25lIHRvIGNvbmZ1c2lvbi4gVGhlIHJlZ2lzdGVyIG9mZnNldCBp
cyBmb3IgYSBSTEMgcXVldWUKcmF0aGVyIHRoYW4gYSBTRE1BIGVuZ2luZS4gVGhlIHZhbHVlIGlz
IG5vdCBhIGJhc2UgYWRkcmVzcywgYnV0IGEKcmVnaXN0ZXIgb2Zmc2V0LgoKQ2hhbmdlLUlkOiBJ
NTVmYjgzNWYyMTA1MzkyMzQ0YjFjMTczMjNiYjU1YzAzZjkyNzgzNgpTaWduZWQtb2ZmLWJ5OiBZ
b25nIFpoYW8gPFlvbmcuWmhhb0BhbWQuY29tPgotLS0KIC4uLi9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2FyY3R1cnVzLmMgICB8IDg1ICsrKysrKysrKy0tLS0tLS0tLQogLi4uL2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3YxMC5jICAgIHwgOTAgKysrKysrKysrLS0tLS0t
LS0tLQogLi4uL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92Ny5jIHwgMTAg
Ky0tCiAuLi4vZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMgfCAxMCAr
LS0KIC4uLi9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjkuYyB8IDg2ICsr
KysrKysrKy0tLS0tLS0tLQogNSBmaWxlcyBjaGFuZ2VkLCAxMzcgaW5zZXJ0aW9ucygrKSwgMTQ0
IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Ft
ZGdwdV9hbWRrZmRfYXJjdHVydXMuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hbWRrZmRfYXJjdHVydXMuYwppbmRleCBjOWNlMTUxNjk1NmUuLmQyYzA2NjZjMjc5OCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9hcmN0dXJ1
cy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfYXJjdHVy
dXMuYwpAQCAtNzAsMTEgKzcwLDExIEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHY5X3NkbWFfbXFk
ICpnZXRfc2RtYV9tcWQodm9pZCAqbXFkKQogCXJldHVybiAoc3RydWN0IHY5X3NkbWFfbXFkICop
bXFkOwogfQogCi1zdGF0aWMgdWludDMyX3QgZ2V0X3NkbWFfYmFzZV9hZGRyKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LAorc3RhdGljIHVpbnQzMl90IGdldF9ybGNfcmVnX29mZnNldChzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJCQl1bnNpZ25lZCBpbnQgZW5naW5lX2lkLAogCQkJ
CXVuc2lnbmVkIGludCBxdWV1ZV9pZCkKIHsKLQl1aW50MzJfdCBiYXNlWzhdID0geworCXVpbnQz
Ml90IHNkbWFfZW5naW5lX3JlZ19iYXNlWzhdID0gewogCQlTT0MxNV9SRUdfT0ZGU0VUKFNETUEw
LCAwLAogCQkJCSBtbVNETUEwX1JMQzBfUkJfQ05UTCkgLSBtbVNETUEwX1JMQzBfUkJfQ05UTCwK
IAkJU09DMTVfUkVHX09GRlNFVChTRE1BMSwgMCwKQEAgLTkyLDEyICs5MiwxMSBAQCBzdGF0aWMg
dWludDMyX3QgZ2V0X3NkbWFfYmFzZV9hZGRyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAog
CQlTT0MxNV9SRUdfT0ZGU0VUKFNETUE3LCAwLAogCQkJCSBtbVNETUE3X1JMQzBfUkJfQ05UTCkg
LSBtbVNETUE3X1JMQzBfUkJfQ05UTAogCX07Ci0JdWludDMyX3QgcmV0dmFsOwogCi0JcmV0dmFs
ID0gYmFzZVtlbmdpbmVfaWRdICsgcXVldWVfaWQgKiAobW1TRE1BMF9STEMxX1JCX0NOVEwgLQot
CQkJCQkgICAgICAgbW1TRE1BMF9STEMwX1JCX0NOVEwpOworCXVpbnQzMl90IHJldHZhbCA9IHNk
bWFfZW5naW5lX3JlZ19iYXNlW2VuZ2luZV9pZF0KKwkJKyBxdWV1ZV9pZCAqIChtbVNETUEwX1JM
QzFfUkJfQ05UTCAtIG1tU0RNQTBfUkxDMF9SQl9DTlRMKTsKIAotCXByX2RlYnVnKCJzZG1hIGJh
c2UgYWRkcmVzczogMHgleFxuIiwgcmV0dmFsKTsKKwlwcl9kZWJ1ZygiUkxDIHJlZ2lzdGVyIG9m
ZnNldDogMHgleFxuIiwgcmV0dmFsKTsKIAogCXJldHVybiByZXR2YWw7CiB9CkBAIC0xMDcsMjIg
KzEwNiwyMiBAQCBzdGF0aWMgaW50IGtnZF9ocWRfc2RtYV9sb2FkKHN0cnVjdCBrZ2RfZGV2ICpr
Z2QsIHZvaWQgKm1xZCwKIHsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGdldF9hbWRn
cHVfZGV2aWNlKGtnZCk7CiAJc3RydWN0IHY5X3NkbWFfbXFkICptOwotCXVpbnQzMl90IHNkbWFf
YmFzZV9hZGRyOworCXVpbnQzMl90IHJsY19yZWdfb2Zmc2V0OwogCXVuc2lnbmVkIGxvbmcgZW5k
X2ppZmZpZXM7CiAJdWludDMyX3QgZGF0YTsKIAl1aW50NjRfdCBkYXRhNjQ7CiAJdWludDY0X3Qg
X191c2VyICp3cHRyNjQgPSAodWludDY0X3QgX191c2VyICopd3B0cjsKIAogCW0gPSBnZXRfc2Rt
YV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9zZG1hX2Jhc2VfYWRkcihhZGV2LCBt
LT5zZG1hX2VuZ2luZV9pZCwKKwlybGNfcmVnX29mZnNldCA9IGdldF9ybGNfcmVnX29mZnNldChh
ZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKIAkJCQkJICAgIG0tPnNkbWFfcXVldWVfaWQpOwogCi0J
V1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsCisJV1JFRzMyKHJs
Y19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsCiAJCW0tPnNkbWF4X3JsY3hfcmJf
Y250bCAmICh+U0RNQTBfUkxDMF9SQl9DTlRMX19SQl9FTkFCTEVfTUFTSykpOwogCiAJZW5kX2pp
ZmZpZXMgPSBtc2Vjc190b19qaWZmaWVzKDIwMDApICsgamlmZmllczsKIAl3aGlsZSAodHJ1ZSkg
ewotCQlkYXRhID0gUlJFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX0NPTlRFWFRf
U1RBVFVTKTsKKwkJZGF0YSA9IFJSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9D
T05URVhUX1NUQVRVUyk7CiAJCWlmIChkYXRhICYgU0RNQTBfUkxDMF9DT05URVhUX1NUQVRVU19f
SURMRV9NQVNLKQogCQkJYnJlYWs7CiAJCWlmICh0aW1lX2FmdGVyKGppZmZpZXMsIGVuZF9qaWZm
aWVzKSkKQEAgLTEzMCw0MSArMTI5LDQxIEBAIHN0YXRpYyBpbnQga2dkX2hxZF9zZG1hX2xvYWQo
c3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbXFkLAogCQl1c2xlZXBfcmFuZ2UoNTAwLCAxMDAw
KTsKIAl9CiAKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfRE9PUkJFTExf
T0ZGU0VULAorCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9ET09SQkVMTF9P
RkZTRVQsCiAJICAgICAgIG0tPnNkbWF4X3JsY3hfZG9vcmJlbGxfb2Zmc2V0KTsKIAogCWRhdGEg
PSBSRUdfU0VUX0ZJRUxEKG0tPnNkbWF4X3JsY3hfZG9vcmJlbGwsIFNETUEwX1JMQzBfRE9PUkJF
TEwsCiAJCQkgICAgIEVOQUJMRSwgMSk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1B
MF9STEMwX0RPT1JCRUxMLCBkYXRhKTsKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEw
X1JMQzBfUkJfUlBUUiwgbS0+c2RtYXhfcmxjeF9yYl9ycHRyKTsKLQlXUkVHMzIoc2RtYV9iYXNl
X2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9ISSwKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQg
KyBtbVNETUEwX1JMQzBfRE9PUkJFTEwsIGRhdGEpOworCVdSRUczMihybGNfcmVnX29mZnNldCAr
IG1tU0RNQTBfUkxDMF9SQl9SUFRSLCBtLT5zZG1heF9ybGN4X3JiX3JwdHIpOworCVdSRUczMihy
bGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0hJLAogCQkJCW0tPnNkbWF4X3Js
Y3hfcmJfcnB0cl9oaSk7CiAKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBf
TUlOT1JfUFRSX1VQREFURSwgMSk7CisJV1JFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9S
TEMwX01JTk9SX1BUUl9VUERBVEUsIDEpOwogCWlmIChyZWFkX3VzZXJfd3B0cihtbSwgd3B0cjY0
LCBkYXRhNjQpKSB7Ci0JCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9X
UFRSLAorCQlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfV1BUUiwKIAkJ
ICAgICAgIGxvd2VyXzMyX2JpdHMoZGF0YTY0KSk7Ci0JCVdSRUczMihzZG1hX2Jhc2VfYWRkciAr
IG1tU0RNQTBfUkxDMF9SQl9XUFRSX0hJLAorCQlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNE
TUEwX1JMQzBfUkJfV1BUUl9ISSwKIAkJICAgICAgIHVwcGVyXzMyX2JpdHMoZGF0YTY0KSk7CiAJ
fSBlbHNlIHsKLQkJV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX1dQVFIs
CisJCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9XUFRSLAogCQkgICAg
ICAgbS0+c2RtYXhfcmxjeF9yYl9ycHRyKTsKLQkJV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1T
RE1BMF9STEMwX1JCX1dQVFJfSEksCisJCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBf
UkxDMF9SQl9XUFRSX0hJLAogCQkgICAgICAgbS0+c2RtYXhfcmxjeF9yYl9ycHRyX2hpKTsKIAl9
Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX01JTk9SX1BUUl9VUERBVEUs
IDApOworCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9NSU5PUl9QVFJfVVBE
QVRFLCAwKTsKIAotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9CQVNF
LCBtLT5zZG1heF9ybGN4X3JiX2Jhc2UpOwotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RN
QTBfUkxDMF9SQl9CQVNFX0hJLAorCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxD
MF9SQl9CQVNFLCBtLT5zZG1heF9ybGN4X3JiX2Jhc2UpOworCVdSRUczMihybGNfcmVnX29mZnNl
dCArIG1tU0RNQTBfUkxDMF9SQl9CQVNFX0hJLAogCQkJbS0+c2RtYXhfcmxjeF9yYl9iYXNlX2hp
KTsKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9BRERSX0xP
LAorCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0FERFJfTE8s
CiAJCQltLT5zZG1heF9ybGN4X3JiX3JwdHJfYWRkcl9sbyk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9h
ZGRyICsgbW1TRE1BMF9STEMwX1JCX1JQVFJfQUREUl9ISSwKKwlXUkVHMzIocmxjX3JlZ19vZmZz
ZXQgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9BRERSX0hJLAogCQkJbS0+c2RtYXhfcmxjeF9yYl9y
cHRyX2FkZHJfaGkpOwogCiAJZGF0YSA9IFJFR19TRVRfRklFTEQobS0+c2RtYXhfcmxjeF9yYl9j
bnRsLCBTRE1BMF9STEMwX1JCX0NOVEwsCiAJCQkgICAgIFJCX0VOQUJMRSwgMSk7Ci0JV1JFRzMy
KHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsIGRhdGEpOworCVdSRUczMihy
bGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLCBkYXRhKTsKIAogCXJldHVybiAw
OwogfQpAQCAtMTc0LDcgKzE3Myw3IEBAIHN0YXRpYyBpbnQga2dkX2hxZF9zZG1hX2R1bXAoc3Ry
dWN0IGtnZF9kZXYgKmtnZCwKIAkJCSAgICAgdWludDMyX3QgKCoqZHVtcClbMl0sIHVpbnQzMl90
ICpuX3JlZ3MpCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRfYW1kZ3B1X2Rl
dmljZShrZ2QpOwotCXVpbnQzMl90IHNkbWFfYmFzZV9hZGRyID0gZ2V0X3NkbWFfYmFzZV9hZGRy
KGFkZXYsIGVuZ2luZV9pZCwgcXVldWVfaWQpOworCXVpbnQzMl90IHJsY19yZWdfb2Zmc2V0ID0g
Z2V0X3JsY19yZWdfb2Zmc2V0KGFkZXYsIGVuZ2luZV9pZCwgcXVldWVfaWQpOwogCXVpbnQzMl90
IGkgPSAwLCByZWc7CiAjdW5kZWYgSFFEX05fUkVHUwogI2RlZmluZSBIUURfTl9SRUdTICgxOSs2
KzcrMTApCkBAIC0xODQsMTUgKzE4MywxNSBAQCBzdGF0aWMgaW50IGtnZF9ocWRfc2RtYV9kdW1w
KHN0cnVjdCBrZ2RfZGV2ICprZ2QsCiAJCXJldHVybiAtRU5PTUVNOwogCiAJZm9yIChyZWcgPSBt
bVNETUEwX1JMQzBfUkJfQ05UTDsgcmVnIDw9IG1tU0RNQTBfUkxDMF9ET09SQkVMTDsgcmVnKysp
Ci0JCURVTVBfUkVHKHNkbWFfYmFzZV9hZGRyICsgcmVnKTsKKwkJRFVNUF9SRUcocmxjX3JlZ19v
ZmZzZXQgKyByZWcpOwogCWZvciAocmVnID0gbW1TRE1BMF9STEMwX1NUQVRVUzsgcmVnIDw9IG1t
U0RNQTBfUkxDMF9DU0FfQUREUl9ISTsgcmVnKyspCi0JCURVTVBfUkVHKHNkbWFfYmFzZV9hZGRy
ICsgcmVnKTsKKwkJRFVNUF9SRUcocmxjX3JlZ19vZmZzZXQgKyByZWcpOwogCWZvciAocmVnID0g
bW1TRE1BMF9STEMwX0lCX1NVQl9SRU1BSU47CiAJICAgICByZWcgPD0gbW1TRE1BMF9STEMwX01J
Tk9SX1BUUl9VUERBVEU7IHJlZysrKQotCQlEVU1QX1JFRyhzZG1hX2Jhc2VfYWRkciArIHJlZyk7
CisJCURVTVBfUkVHKHJsY19yZWdfb2Zmc2V0ICsgcmVnKTsKIAlmb3IgKHJlZyA9IG1tU0RNQTBf
UkxDMF9NSURDTURfREFUQTA7CiAJICAgICByZWcgPD0gbW1TRE1BMF9STEMwX01JRENNRF9DTlRM
OyByZWcrKykKLQkJRFVNUF9SRUcoc2RtYV9iYXNlX2FkZHIgKyByZWcpOworCQlEVU1QX1JFRyhy
bGNfcmVnX29mZnNldCArIHJlZyk7CiAKIAlXQVJOX09OX09OQ0UoaSAhPSBIUURfTl9SRUdTKTsK
IAkqbl9yZWdzID0gaTsKQEAgLTIwNCwxNCArMjAzLDE0IEBAIHN0YXRpYyBib29sIGtnZF9ocWRf
c2RtYV9pc19vY2N1cGllZChzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQpCiB7CiAJc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRfYW1kZ3B1X2RldmljZShrZ2QpOwogCXN0cnVj
dCB2OV9zZG1hX21xZCAqbTsKLQl1aW50MzJfdCBzZG1hX2Jhc2VfYWRkcjsKKwl1aW50MzJfdCBy
bGNfcmVnX29mZnNldDsKIAl1aW50MzJfdCBzZG1hX3JsY19yYl9jbnRsOwogCiAJbSA9IGdldF9z
ZG1hX21xZChtcWQpOwotCXNkbWFfYmFzZV9hZGRyID0gZ2V0X3NkbWFfYmFzZV9hZGRyKGFkZXYs
IG0tPnNkbWFfZW5naW5lX2lkLAorCXJsY19yZWdfb2Zmc2V0ID0gZ2V0X3JsY19yZWdfb2Zmc2V0
KGFkZXYsIG0tPnNkbWFfZW5naW5lX2lkLAogCQkJCQkgICAgbS0+c2RtYV9xdWV1ZV9pZCk7CiAK
LQlzZG1hX3JsY19yYl9jbnRsID0gUlJFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMw
X1JCX0NOVEwpOworCXNkbWFfcmxjX3JiX2NudGwgPSBSUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBt
bVNETUEwX1JMQzBfUkJfQ05UTCk7CiAKIAlpZiAoc2RtYV9ybGNfcmJfY250bCAmIFNETUEwX1JM
QzBfUkJfQ05UTF9fUkJfRU5BQkxFX01BU0spCiAJCXJldHVybiB0cnVlOwpAQCAtMjI0LDIwICsy
MjMsMjAgQEAgc3RhdGljIGludCBrZ2RfaHFkX3NkbWFfZGVzdHJveShzdHJ1Y3Qga2dkX2RldiAq
a2dkLCB2b2lkICptcWQsCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRfYW1k
Z3B1X2RldmljZShrZ2QpOwogCXN0cnVjdCB2OV9zZG1hX21xZCAqbTsKLQl1aW50MzJfdCBzZG1h
X2Jhc2VfYWRkcjsKKwl1aW50MzJfdCBybGNfcmVnX29mZnNldDsKIAl1aW50MzJfdCB0ZW1wOwog
CXVuc2lnbmVkIGxvbmcgZW5kX2ppZmZpZXMgPSAodXRpbWVvdXQgKiBIWiAvIDEwMDApICsgamlm
ZmllczsKIAogCW0gPSBnZXRfc2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9z
ZG1hX2Jhc2VfYWRkcihhZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKKwlybGNfcmVnX29mZnNldCA9
IGdldF9ybGNfcmVnX29mZnNldChhZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKIAkJCQkJICAgIG0t
PnNkbWFfcXVldWVfaWQpOwogCi0JdGVtcCA9IFJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RN
QTBfUkxDMF9SQl9DTlRMKTsKKwl0ZW1wID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1B
MF9STEMwX1JCX0NOVEwpOwogCXRlbXAgPSB0ZW1wICYgflNETUEwX1JMQzBfUkJfQ05UTF9fUkJf
RU5BQkxFX01BU0s7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NO
VEwsIHRlbXApOworCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9DTlRM
LCB0ZW1wKTsKIAogCXdoaWxlICh0cnVlKSB7Ci0JCXRlbXAgPSBSUkVHMzIoc2RtYV9iYXNlX2Fk
ZHIgKyBtbVNETUEwX1JMQzBfQ09OVEVYVF9TVEFUVVMpOworCQl0ZW1wID0gUlJFRzMyKHJsY19y
ZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX0NPTlRFWFRfU1RBVFVTKTsKIAkJaWYgKHRlbXAgJiBT
RE1BMF9STEMwX0NPTlRFWFRfU1RBVFVTX19JRExFX01BU0spCiAJCQlicmVhazsKIAkJaWYgKHRp
bWVfYWZ0ZXIoamlmZmllcywgZW5kX2ppZmZpZXMpKQpAQCAtMjQ1LDE0ICsyNDQsMTQgQEAgc3Rh
dGljIGludCBrZ2RfaHFkX3NkbWFfZGVzdHJveShzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICpt
cWQsCiAJCXVzbGVlcF9yYW5nZSg1MDAsIDEwMDApOwogCX0KIAotCVdSRUczMihzZG1hX2Jhc2Vf
YWRkciArIG1tU0RNQTBfUkxDMF9ET09SQkVMTCwgMCk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRy
ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsCi0JCVJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RN
QTBfUkxDMF9SQl9DTlRMKSB8CisJV1JFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMw
X0RPT1JCRUxMLCAwKTsKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJf
Q05UTCwKKwkJUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwpIHwK
IAkJU0RNQTBfUkxDMF9SQl9DTlRMX19SQl9FTkFCTEVfTUFTSyk7CiAKLQltLT5zZG1heF9ybGN4
X3JiX3JwdHIgPSBSUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBUUik7
CisJbS0+c2RtYXhfcmxjeF9yYl9ycHRyID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1B
MF9STEMwX1JCX1JQVFIpOwogCW0tPnNkbWF4X3JsY3hfcmJfcnB0cl9oaSA9Ci0JCVJSRUczMihz
ZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0hJKTsKKwkJUlJFRzMyKHJsY19y
ZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX1JQVFJfSEkpOwogCiAJcmV0dXJuIDA7CiB9CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92
MTAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3YxMC5j
CmluZGV4IGE0MzI1ZGI4ZDA5My4uZWU1MjBhZDkwNzE3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYwpAQCAtMzA3LDExICszMDcs
MTEgQEAgc3RhdGljIGludCBrZ2RfaW5pdF9pbnRlcnJ1cHRzKHN0cnVjdCBrZ2RfZGV2ICprZ2Qs
IHVpbnQzMl90IHBpcGVfaWQpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyB1aW50MzJfdCBnZXRf
c2RtYV9iYXNlX2FkZHIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCitzdGF0aWMgdWludDMy
X3QgZ2V0X3JsY19yZWdfb2Zmc2V0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCQkJCXVu
c2lnbmVkIGludCBlbmdpbmVfaWQsCiAJCQkJdW5zaWduZWQgaW50IHF1ZXVlX2lkKQogewotCXVp
bnQzMl90IGJhc2VbMl0gPSB7CisJdWludDMyX3Qgc2RtYV9lbmdpbmVfcmVnX2Jhc2VbMl0gPSB7
CiAJCVNPQzE1X1JFR19PRkZTRVQoU0RNQTAsIDAsCiAJCQkJIG1tU0RNQTBfUkxDMF9SQl9DTlRM
KSAtIG1tU0RNQTBfUkxDMF9SQl9DTlRMLAogCQkvKiBPbiBnZngxMCwgbW1TRE1BMV94eHggcmVn
aXN0ZXJzIGFyZSBkZWZpbmVkIE5PVCBiYXNlZApAQCAtMzIzLDEyICszMjMsMTEgQEAgc3RhdGlj
IHVpbnQzMl90IGdldF9zZG1hX2Jhc2VfYWRkcihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwK
IAkJU09DMTVfUkVHX09GRlNFVChTRE1BMSwgMCwKIAkJCQkgbW1TRE1BMV9STEMwX1JCX0NOVEwp
IC0gbW1TRE1BMF9STEMwX1JCX0NOVEwKIAl9OwotCXVpbnQzMl90IHJldHZhbDsKIAotCXJldHZh
bCA9IGJhc2VbZW5naW5lX2lkXSArIHF1ZXVlX2lkICogKG1tU0RNQTBfUkxDMV9SQl9DTlRMIC0K
LQkJCQkJICAgICAgIG1tU0RNQTBfUkxDMF9SQl9DTlRMKTsKKwl1aW50MzJfdCByZXR2YWwgPSBz
ZG1hX2VuZ2luZV9yZWdfYmFzZVtlbmdpbmVfaWRdCisJCSsgcXVldWVfaWQgKiAobW1TRE1BMF9S
TEMxX1JCX0NOVEwgLSBtbVNETUEwX1JMQzBfUkJfQ05UTCk7CiAKLQlwcl9kZWJ1Zygic2RtYSBi
YXNlIGFkZHJlc3M6IDB4JXhcbiIsIHJldHZhbCk7CisJcHJfZGVidWcoIlJMQyByZWdpc3RlciBv
ZmZzZXQ6IDB4JXhcbiIsIHJldHZhbCk7CiAKIAlyZXR1cm4gcmV0dmFsOwogfQpAQCAtNDg5LDIz
ICs0ODgsMjMgQEAgc3RhdGljIGludCBrZ2RfaHFkX3NkbWFfbG9hZChzdHJ1Y3Qga2dkX2RldiAq
a2dkLCB2b2lkICptcWQsCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRfYW1k
Z3B1X2RldmljZShrZ2QpOwogCXN0cnVjdCB2MTBfc2RtYV9tcWQgKm07Ci0JdWludDMyX3Qgc2Rt
YV9iYXNlX2FkZHI7CisJdWludDMyX3QgcmxjX3JlZ19vZmZzZXQ7CiAJdW5zaWduZWQgbG9uZyBl
bmRfamlmZmllczsKIAl1aW50MzJfdCBkYXRhOwogCXVpbnQ2NF90IGRhdGE2NDsKIAl1aW50NjRf
dCBfX3VzZXIgKndwdHI2NCA9ICh1aW50NjRfdCBfX3VzZXIgKil3cHRyOwogCiAJbSA9IGdldF9z
ZG1hX21xZChtcWQpOwotCXNkbWFfYmFzZV9hZGRyID0gZ2V0X3NkbWFfYmFzZV9hZGRyKGFkZXYs
IG0tPnNkbWFfZW5naW5lX2lkLAorCXJsY19yZWdfb2Zmc2V0ID0gZ2V0X3JsY19yZWdfb2Zmc2V0
KGFkZXYsIG0tPnNkbWFfZW5naW5lX2lkLAogCQkJCQkgICAgbS0+c2RtYV9xdWV1ZV9pZCk7Ci0J
cHJfZGVidWcoInNkbWEgbG9hZCBiYXNlIGFkZHIgJXggZm9yIGVuZ2luZSAlZCwgcXVldWUgJWRc
biIsIHNkbWFfYmFzZV9hZGRyLCBtLT5zZG1hX2VuZ2luZV9pZCwgbS0+c2RtYV9xdWV1ZV9pZCk7
CisJcHJfZGVidWcoInNkbWEgbG9hZCBiYXNlIGFkZHIgMHgleCBmb3IgZW5naW5lICVkLCBxdWV1
ZSAlZFxuIiwgcmxjX3JlZ19vZmZzZXQsIG0tPnNkbWFfZW5naW5lX2lkLCBtLT5zZG1hX3F1ZXVl
X2lkKTsKIAotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLAor
CVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLAogCQltLT5zZG1h
eF9ybGN4X3JiX2NudGwgJiAoflNETUEwX1JMQzBfUkJfQ05UTF9fUkJfRU5BQkxFX01BU0spKTsK
IAogCWVuZF9qaWZmaWVzID0gbXNlY3NfdG9famlmZmllcygyMDAwKSArIGppZmZpZXM7CiAJd2hp
bGUgKHRydWUpIHsKLQkJZGF0YSA9IFJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxD
MF9DT05URVhUX1NUQVRVUyk7CisJCWRhdGEgPSBSUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNE
TUEwX1JMQzBfQ09OVEVYVF9TVEFUVVMpOwogCQlpZiAoZGF0YSAmIFNETUEwX1JMQzBfQ09OVEVY
VF9TVEFUVVNfX0lETEVfTUFTSykKIAkJCWJyZWFrOwogCQlpZiAodGltZV9hZnRlcihqaWZmaWVz
LCBlbmRfamlmZmllcykpCkBAIC01MTMsNDEgKzUxMiw0MSBAQCBzdGF0aWMgaW50IGtnZF9ocWRf
c2RtYV9sb2FkKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCwKIAkJdXNsZWVwX3Jhbmdl
KDUwMCwgMTAwMCk7CiAJfQogCi0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMw
X0RPT1JCRUxMX09GRlNFVCwKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBf
RE9PUkJFTExfT0ZGU0VULAogCSAgICAgICBtLT5zZG1heF9ybGN4X2Rvb3JiZWxsX29mZnNldCk7
CiAKIAlkYXRhID0gUkVHX1NFVF9GSUVMRChtLT5zZG1heF9ybGN4X2Rvb3JiZWxsLCBTRE1BMF9S
TEMwX0RPT1JCRUxMLAogCQkJICAgICBFTkFCTEUsIDEpOwotCVdSRUczMihzZG1hX2Jhc2VfYWRk
ciArIG1tU0RNQTBfUkxDMF9ET09SQkVMTCwgZGF0YSk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRy
ICsgbW1TRE1BMF9STEMwX1JCX1JQVFIsIG0tPnNkbWF4X3JsY3hfcmJfcnB0cik7Ci0JV1JFRzMy
KHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX1JQVFJfSEksCisJV1JFRzMyKHJsY19y
ZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX0RPT1JCRUxMLCBkYXRhKTsKKwlXUkVHMzIocmxjX3Jl
Z19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfUlBUUiwgbS0+c2RtYXhfcmxjeF9yYl9ycHRyKTsK
KwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9ISSwKIAkJCQlt
LT5zZG1heF9ybGN4X3JiX3JwdHJfaGkpOwogCi0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1T
RE1BMF9STEMwX01JTk9SX1BUUl9VUERBVEUsIDEpOworCVdSRUczMihybGNfcmVnX29mZnNldCAr
IG1tU0RNQTBfUkxDMF9NSU5PUl9QVFJfVVBEQVRFLCAxKTsKIAlpZiAocmVhZF91c2VyX3dwdHIo
bW0sIHdwdHI2NCwgZGF0YTY0KSkgewotCQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEw
X1JMQzBfUkJfV1BUUiwKKwkJV1JFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JC
X1dQVFIsCiAJCSAgICAgICBsb3dlcl8zMl9iaXRzKGRhdGE2NCkpOwotCQlXUkVHMzIoc2RtYV9i
YXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfV1BUUl9ISSwKKwkJV1JFRzMyKHJsY19yZWdfb2Zm
c2V0ICsgbW1TRE1BMF9STEMwX1JCX1dQVFJfSEksCiAJCSAgICAgICB1cHBlcl8zMl9iaXRzKGRh
dGE2NCkpOwogCX0gZWxzZSB7Ci0JCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxD
MF9SQl9XUFRSLAorCQlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfV1BU
UiwKIAkJICAgICAgIG0tPnNkbWF4X3JsY3hfcmJfcnB0cik7Ci0JCVdSRUczMihzZG1hX2Jhc2Vf
YWRkciArIG1tU0RNQTBfUkxDMF9SQl9XUFRSX0hJLAorCQlXUkVHMzIocmxjX3JlZ19vZmZzZXQg
KyBtbVNETUEwX1JMQzBfUkJfV1BUUl9ISSwKIAkJICAgICAgIG0tPnNkbWF4X3JsY3hfcmJfcnB0
cl9oaSk7CiAJfQotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9NSU5PUl9Q
VFJfVVBEQVRFLCAwKTsKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfTUlO
T1JfUFRSX1VQREFURSwgMCk7CiAKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JM
QzBfUkJfQkFTRSwgbS0+c2RtYXhfcmxjeF9yYl9iYXNlKTsKLQlXUkVHMzIoc2RtYV9iYXNlX2Fk
ZHIgKyBtbVNETUEwX1JMQzBfUkJfQkFTRV9ISSwKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBt
bVNETUEwX1JMQzBfUkJfQkFTRSwgbS0+c2RtYXhfcmxjeF9yYl9iYXNlKTsKKwlXUkVHMzIocmxj
X3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfQkFTRV9ISSwKIAkJCW0tPnNkbWF4X3JsY3hf
cmJfYmFzZV9oaSk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX1JQ
VFJfQUREUl9MTywKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfUlBU
Ul9BRERSX0xPLAogCQkJbS0+c2RtYXhfcmxjeF9yYl9ycHRyX2FkZHJfbG8pOwotCVdSRUczMihz
ZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0FERFJfSEksCisJV1JFRzMyKHJs
Y19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX1JQVFJfQUREUl9ISSwKIAkJCW0tPnNkbWF4
X3JsY3hfcmJfcnB0cl9hZGRyX2hpKTsKIAogCWRhdGEgPSBSRUdfU0VUX0ZJRUxEKG0tPnNkbWF4
X3JsY3hfcmJfY250bCwgU0RNQTBfUkxDMF9SQl9DTlRMLAogCQkJICAgICBSQl9FTkFCTEUsIDEp
OwotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLCBkYXRhKTsK
KwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfQ05UTCwgZGF0YSk7CiAK
IAlyZXR1cm4gMDsKIH0KQEAgLTU1NywyOCArNTU2LDI1IEBAIHN0YXRpYyBpbnQga2dkX2hxZF9z
ZG1hX2R1bXAoc3RydWN0IGtnZF9kZXYgKmtnZCwKIAkJCSAgICAgdWludDMyX3QgKCoqZHVtcClb
Ml0sIHVpbnQzMl90ICpuX3JlZ3MpCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBn
ZXRfYW1kZ3B1X2RldmljZShrZ2QpOwotCXVpbnQzMl90IHNkbWFfYmFzZV9hZGRyID0gZ2V0X3Nk
bWFfYmFzZV9hZGRyKGFkZXYsIGVuZ2luZV9pZCwgcXVldWVfaWQpOworCXVpbnQzMl90IHJsY19y
ZWdfb2Zmc2V0ID0gZ2V0X3JsY19yZWdfb2Zmc2V0KGFkZXYsIGVuZ2luZV9pZCwgcXVldWVfaWQp
OwogCXVpbnQzMl90IGkgPSAwLCByZWc7CiAjdW5kZWYgSFFEX05fUkVHUwogI2RlZmluZSBIUURf
Tl9SRUdTICgxOSs2KzcrMTApCiAKLQlwcl9kZWJ1Zygic2RtYSBkdW1wIGVuZ2luZSBpZCAlZCBx
dWV1ZV9pZCAlZFxuIiwgZW5naW5lX2lkLCBxdWV1ZV9pZCk7Ci0JcHJfZGVidWcoInNkbWEgYmFz
ZSBhZGRyICV4XG4iLCBzZG1hX2Jhc2VfYWRkcik7Ci0KIAkqZHVtcCA9IGttYWxsb2MoSFFEX05f
UkVHUyoyKnNpemVvZih1aW50MzJfdCksIEdGUF9LRVJORUwpOwogCWlmICgqZHVtcCA9PSBOVUxM
KQogCQlyZXR1cm4gLUVOT01FTTsKIAogCWZvciAocmVnID0gbW1TRE1BMF9STEMwX1JCX0NOVEw7
IHJlZyA8PSBtbVNETUEwX1JMQzBfRE9PUkJFTEw7IHJlZysrKQotCQlEVU1QX1JFRyhzZG1hX2Jh
c2VfYWRkciArIHJlZyk7CisJCURVTVBfUkVHKHJsY19yZWdfb2Zmc2V0ICsgcmVnKTsKIAlmb3Ig
KHJlZyA9IG1tU0RNQTBfUkxDMF9TVEFUVVM7IHJlZyA8PSBtbVNETUEwX1JMQzBfQ1NBX0FERFJf
SEk7IHJlZysrKQotCQlEVU1QX1JFRyhzZG1hX2Jhc2VfYWRkciArIHJlZyk7CisJCURVTVBfUkVH
KHJsY19yZWdfb2Zmc2V0ICsgcmVnKTsKIAlmb3IgKHJlZyA9IG1tU0RNQTBfUkxDMF9JQl9TVUJf
UkVNQUlOOwogCSAgICAgcmVnIDw9IG1tU0RNQTBfUkxDMF9NSU5PUl9QVFJfVVBEQVRFOyByZWcr
KykKLQkJRFVNUF9SRUcoc2RtYV9iYXNlX2FkZHIgKyByZWcpOworCQlEVU1QX1JFRyhybGNfcmVn
X29mZnNldCArIHJlZyk7CiAJZm9yIChyZWcgPSBtbVNETUEwX1JMQzBfTUlEQ01EX0RBVEEwOwog
CSAgICAgcmVnIDw9IG1tU0RNQTBfUkxDMF9NSURDTURfQ05UTDsgcmVnKyspCi0JCURVTVBfUkVH
KHNkbWFfYmFzZV9hZGRyICsgcmVnKTsKKwkJRFVNUF9SRUcocmxjX3JlZ19vZmZzZXQgKyByZWcp
OwogCiAJV0FSTl9PTl9PTkNFKGkgIT0gSFFEX05fUkVHUyk7CiAJKm5fcmVncyA9IGk7CkBAIC02
MTIsMTQgKzYwOCwxNCBAQCBzdGF0aWMgYm9vbCBrZ2RfaHFkX3NkbWFfaXNfb2NjdXBpZWQoc3Ry
dWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbXFkKQogewogCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gZ2V0X2FtZGdwdV9kZXZpY2Uoa2dkKTsKIAlzdHJ1Y3QgdjEwX3NkbWFfbXFkICptOwot
CXVpbnQzMl90IHNkbWFfYmFzZV9hZGRyOworCXVpbnQzMl90IHJsY19yZWdfb2Zmc2V0OwogCXVp
bnQzMl90IHNkbWFfcmxjX3JiX2NudGw7CiAKIAltID0gZ2V0X3NkbWFfbXFkKG1xZCk7Ci0Jc2Rt
YV9iYXNlX2FkZHIgPSBnZXRfc2RtYV9iYXNlX2FkZHIoYWRldiwgbS0+c2RtYV9lbmdpbmVfaWQs
CisJcmxjX3JlZ19vZmZzZXQgPSBnZXRfcmxjX3JlZ19vZmZzZXQoYWRldiwgbS0+c2RtYV9lbmdp
bmVfaWQsCiAJCQkJCSAgICBtLT5zZG1hX3F1ZXVlX2lkKTsKIAotCXNkbWFfcmxjX3JiX2NudGwg
PSBSUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfQ05UTCk7CisJc2RtYV9y
bGNfcmJfY250bCA9IFJSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9DTlRM
KTsKIAogCWlmIChzZG1hX3JsY19yYl9jbnRsICYgU0RNQTBfUkxDMF9SQl9DTlRMX19SQl9FTkFC
TEVfTUFTSykKIAkJcmV0dXJuIHRydWU7CkBAIC03NDAsMjAgKzczNiwyMCBAQCBzdGF0aWMgaW50
IGtnZF9ocWRfc2RtYV9kZXN0cm95KHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCwKIHsK
IAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGdldF9hbWRncHVfZGV2aWNlKGtnZCk7CiAJ
c3RydWN0IHYxMF9zZG1hX21xZCAqbTsKLQl1aW50MzJfdCBzZG1hX2Jhc2VfYWRkcjsKKwl1aW50
MzJfdCBybGNfcmVnX29mZnNldDsKIAl1aW50MzJfdCB0ZW1wOwogCXVuc2lnbmVkIGxvbmcgZW5k
X2ppZmZpZXMgPSAodXRpbWVvdXQgKiBIWiAvIDEwMDApICsgamlmZmllczsKIAogCW0gPSBnZXRf
c2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9zZG1hX2Jhc2VfYWRkcihhZGV2
LCBtLT5zZG1hX2VuZ2luZV9pZCwKKwlybGNfcmVnX29mZnNldCA9IGdldF9ybGNfcmVnX29mZnNl
dChhZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKIAkJCQkJICAgIG0tPnNkbWFfcXVldWVfaWQpOwog
Ci0JdGVtcCA9IFJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9DTlRMKTsK
Kwl0ZW1wID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwpOwog
CXRlbXAgPSB0ZW1wICYgflNETUEwX1JMQzBfUkJfQ05UTF9fUkJfRU5BQkxFX01BU0s7Ci0JV1JF
RzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsIHRlbXApOworCVdSRUcz
MihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLCB0ZW1wKTsKIAogCXdoaWxl
ICh0cnVlKSB7Ci0JCXRlbXAgPSBSUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBf
Q09OVEVYVF9TVEFUVVMpOworCQl0ZW1wID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1B
MF9STEMwX0NPTlRFWFRfU1RBVFVTKTsKIAkJaWYgKHRlbXAgJiBTRE1BMF9STEMwX0NPTlRFWFRf
U1RBVFVTX19JRExFX01BU0spCiAJCQlicmVhazsKIAkJaWYgKHRpbWVfYWZ0ZXIoamlmZmllcywg
ZW5kX2ppZmZpZXMpKQpAQCAtNzYxLDE0ICs3NTcsMTQgQEAgc3RhdGljIGludCBrZ2RfaHFkX3Nk
bWFfZGVzdHJveShzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJCXVzbGVlcF9yYW5n
ZSg1MDAsIDEwMDApOwogCX0KIAotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxD
MF9ET09SQkVMTCwgMCk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JC
X0NOVEwsCi0JCVJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9DTlRMKSB8
CisJV1JFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX0RPT1JCRUxMLCAwKTsKKwlX
UkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfQ05UTCwKKwkJUlJFRzMyKHJs
Y19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwpIHwKIAkJU0RNQTBfUkxDMF9SQl9D
TlRMX19SQl9FTkFCTEVfTUFTSyk7CiAKLQltLT5zZG1heF9ybGN4X3JiX3JwdHIgPSBSUkVHMzIo
c2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBUUik7CisJbS0+c2RtYXhfcmxjeF9y
Yl9ycHRyID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX1JQVFIpOwog
CW0tPnNkbWF4X3JsY3hfcmJfcnB0cl9oaSA9Ci0JCVJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1t
U0RNQTBfUkxDMF9SQl9SUFRSX0hJKTsKKwkJUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1B
MF9STEMwX1JCX1JQVFJfSEkpOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92Ny5jIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjcuYwppbmRleCBjNmFiY2Y3MmU4MjIu
LmQwNTE3YjdhZTA4OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X2FtZGtmZF9nZnhfdjcuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2dmeF92Ny5jCkBAIC0zMDMsMTQgKzMwMywxNCBAQCBzdGF0aWMgaW50IGtnZF9p
bml0X2ludGVycnVwdHMoc3RydWN0IGtnZF9kZXYgKmtnZCwgdWludDMyX3QgcGlwZV9pZCkKIAly
ZXR1cm4gMDsKIH0KIAotc3RhdGljIGlubGluZSB1aW50MzJfdCBnZXRfc2RtYV9iYXNlX2FkZHIo
c3RydWN0IGNpa19zZG1hX3JsY19yZWdpc3RlcnMgKm0pCitzdGF0aWMgaW5saW5lIHVpbnQzMl90
IGdldF9ybGNfcmVnX29mZnNldChzdHJ1Y3QgY2lrX3NkbWFfcmxjX3JlZ2lzdGVycyAqbSkKIHsK
IAl1aW50MzJfdCByZXR2YWw7CiAKIAlyZXR2YWwgPSBtLT5zZG1hX2VuZ2luZV9pZCAqIFNETUEx
X1JFR0lTVEVSX09GRlNFVCArCiAJCQltLT5zZG1hX3F1ZXVlX2lkICogS0ZEX0NJS19TRE1BX1FV
RVVFX09GRlNFVDsKIAotCXByX2RlYnVnKCJzZG1hIGJhc2UgYWRkcmVzczogMHgleFxuIiwgcmV0
dmFsKTsKKwlwcl9kZWJ1ZygiUkxDIHJlZ2lzdGVyIG9mZnNldDogMHgleFxuIiwgcmV0dmFsKTsK
IAogCXJldHVybiByZXR2YWw7CiB9CkBAIC00MTcsNyArNDE3LDcgQEAgc3RhdGljIGludCBrZ2Rf
aHFkX3NkbWFfbG9hZChzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJdWludDMyX3Qg
ZGF0YTsKIAogCW0gPSBnZXRfc2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9z
ZG1hX2Jhc2VfYWRkcihtKTsKKwlzZG1hX2Jhc2VfYWRkciA9IGdldF9ybGNfcmVnX29mZnNldCht
KTsKIAogCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLAogCQlt
LT5zZG1hX3JsY19yYl9jbnRsICYgKH5TRE1BMF9STEMwX1JCX0NOVExfX1JCX0VOQUJMRV9NQVNL
KSk7CkBAIC01MjgsNyArNTI4LDcgQEAgc3RhdGljIGJvb2wga2dkX2hxZF9zZG1hX2lzX29jY3Vw
aWVkKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCkKIAl1aW50MzJfdCBzZG1hX3JsY19y
Yl9jbnRsOwogCiAJbSA9IGdldF9zZG1hX21xZChtcWQpOwotCXNkbWFfYmFzZV9hZGRyID0gZ2V0
X3NkbWFfYmFzZV9hZGRyKG0pOworCXNkbWFfYmFzZV9hZGRyID0gZ2V0X3JsY19yZWdfb2Zmc2V0
KG0pOwogCiAJc2RtYV9ybGNfcmJfY250bCA9IFJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RN
QTBfUkxDMF9SQl9DTlRMKTsKIApAQCAtNjUwLDcgKzY1MCw3IEBAIHN0YXRpYyBpbnQga2dkX2hx
ZF9zZG1hX2Rlc3Ryb3koc3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbXFkLAogCXVuc2lnbmVk
IGxvbmcgZW5kX2ppZmZpZXMgPSAodXRpbWVvdXQgKiBIWiAvIDEwMDApICsgamlmZmllczsKIAog
CW0gPSBnZXRfc2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9zZG1hX2Jhc2Vf
YWRkcihtKTsKKwlzZG1hX2Jhc2VfYWRkciA9IGdldF9ybGNfcmVnX29mZnNldChtKTsKIAogCXRl
bXAgPSBSUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfQ05UTCk7CiAJdGVt
cCA9IHRlbXAgJiB+U0RNQTBfUkxDMF9SQl9DTlRMX19SQl9FTkFCTEVfTUFTSzsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OC5jCmluZGV4IDRl
OGI0ZTk0OTkyNi4uMzczNTAxYWJkYjZiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMKQEAgLTI2MCwxMyArMjYwLDEzIEBAIHN0YXRp
YyBpbnQga2dkX2luaXRfaW50ZXJydXB0cyhzdHJ1Y3Qga2dkX2RldiAqa2dkLCB1aW50MzJfdCBw
aXBlX2lkKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW5saW5lIHVpbnQzMl90IGdldF9zZG1h
X2Jhc2VfYWRkcihzdHJ1Y3Qgdmlfc2RtYV9tcWQgKm0pCitzdGF0aWMgaW5saW5lIHVpbnQzMl90
IGdldF9ybGNfcmVnX29mZnNldChzdHJ1Y3Qgdmlfc2RtYV9tcWQgKm0pCiB7CiAJdWludDMyX3Qg
cmV0dmFsOwogCiAJcmV0dmFsID0gbS0+c2RtYV9lbmdpbmVfaWQgKiBTRE1BMV9SRUdJU1RFUl9P
RkZTRVQgKwogCQltLT5zZG1hX3F1ZXVlX2lkICogS0ZEX1ZJX1NETUFfUVVFVUVfT0ZGU0VUOwot
CXByX2RlYnVnKCJzZG1hIGJhc2UgYWRkcmVzczogMHgleFxuIiwgcmV0dmFsKTsKKwlwcl9kZWJ1
ZygiUkxDIHJlZ2lzdGVyIG9mZnNldDogMHgleFxuIiwgcmV0dmFsKTsKIAogCXJldHVybiByZXR2
YWw7CiB9CkBAIC00MDIsNyArNDAyLDcgQEAgc3RhdGljIGludCBrZ2RfaHFkX3NkbWFfbG9hZChz
dHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJdWludDMyX3QgZGF0YTsKIAogCW0gPSBn
ZXRfc2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9zZG1hX2Jhc2VfYWRkciht
KTsKKwlzZG1hX2Jhc2VfYWRkciA9IGdldF9ybGNfcmVnX29mZnNldChtKTsKIAlXUkVHMzIoc2Rt
YV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfQ05UTCwKIAkJbS0+c2RtYXhfcmxjeF9yYl9j
bnRsICYgKH5TRE1BMF9STEMwX1JCX0NOVExfX1JCX0VOQUJMRV9NQVNLKSk7CiAKQEAgLTUyMSw3
ICs1MjEsNyBAQCBzdGF0aWMgYm9vbCBrZ2RfaHFkX3NkbWFfaXNfb2NjdXBpZWQoc3RydWN0IGtn
ZF9kZXYgKmtnZCwgdm9pZCAqbXFkKQogCXVpbnQzMl90IHNkbWFfcmxjX3JiX2NudGw7CiAKIAlt
ID0gZ2V0X3NkbWFfbXFkKG1xZCk7Ci0Jc2RtYV9iYXNlX2FkZHIgPSBnZXRfc2RtYV9iYXNlX2Fk
ZHIobSk7CisJc2RtYV9iYXNlX2FkZHIgPSBnZXRfcmxjX3JlZ19vZmZzZXQobSk7CiAKIAlzZG1h
X3JsY19yYl9jbnRsID0gUlJFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NO
VEwpOwogCkBAIC02NDYsNyArNjQ2LDcgQEAgc3RhdGljIGludCBrZ2RfaHFkX3NkbWFfZGVzdHJv
eShzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJdW5zaWduZWQgbG9uZyBlbmRfamlm
ZmllcyA9ICh1dGltZW91dCAqIEhaIC8gMTAwMCkgKyBqaWZmaWVzOwogCiAJbSA9IGdldF9zZG1h
X21xZChtcWQpOwotCXNkbWFfYmFzZV9hZGRyID0gZ2V0X3NkbWFfYmFzZV9hZGRyKG0pOworCXNk
bWFfYmFzZV9hZGRyID0gZ2V0X3JsY19yZWdfb2Zmc2V0KG0pOwogCiAJdGVtcCA9IFJSRUczMihz
ZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9DTlRMKTsKIAl0ZW1wID0gdGVtcCAmIH5T
RE1BMF9STEMwX1JCX0NOVExfX1JCX0VOQUJMRV9NQVNLOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjkuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y5LmMKaW5kZXggNTU0MzdmMTYwYTcyLi4y
ZGQ1YmM2NzYwMjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hbWRrZmRfZ2Z4X3Y5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2FtZGtmZF9nZnhfdjkuYwpAQCAtMjI2LDIyICsyMjYsMjAgQEAgaW50IGtnZF9nZnhfdjlfaW5p
dF9pbnRlcnJ1cHRzKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHVpbnQzMl90IHBpcGVfaWQpCiAJcmV0
dXJuIDA7CiB9CiAKLXN0YXRpYyB1aW50MzJfdCBnZXRfc2RtYV9iYXNlX2FkZHIoc3RydWN0IGFt
ZGdwdV9kZXZpY2UgKmFkZXYsCitzdGF0aWMgdWludDMyX3QgZ2V0X3JsY19yZWdfb2Zmc2V0KHN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCQkJCXVuc2lnbmVkIGludCBlbmdpbmVfaWQsCiAJ
CQkJdW5zaWduZWQgaW50IHF1ZXVlX2lkKQogewotCXVpbnQzMl90IGJhc2VbMl0gPSB7CisJdWlu
dDMyX3Qgc2RtYV9lbmdpbmVfcmVnX2Jhc2VbMl0gPSB7CiAJCVNPQzE1X1JFR19PRkZTRVQoU0RN
QTAsIDAsCiAJCQkJIG1tU0RNQTBfUkxDMF9SQl9DTlRMKSAtIG1tU0RNQTBfUkxDMF9SQl9DTlRM
LAogCQlTT0MxNV9SRUdfT0ZGU0VUKFNETUExLCAwLAogCQkJCSBtbVNETUExX1JMQzBfUkJfQ05U
TCkgLSBtbVNETUExX1JMQzBfUkJfQ05UTAogCX07Ci0JdWludDMyX3QgcmV0dmFsOworCXVpbnQz
Ml90IHJldHZhbCA9IHNkbWFfZW5naW5lX3JlZ19iYXNlW2VuZ2luZV9pZF0KKwkJKyBxdWV1ZV9p
ZCAqIChtbVNETUEwX1JMQzFfUkJfQ05UTCAtIG1tU0RNQTBfUkxDMF9SQl9DTlRMKTsKIAotCXJl
dHZhbCA9IGJhc2VbZW5naW5lX2lkXSArIHF1ZXVlX2lkICogKG1tU0RNQTBfUkxDMV9SQl9DTlRM
IC0KLQkJCQkJICAgICAgIG1tU0RNQTBfUkxDMF9SQl9DTlRMKTsKLQotCXByX2RlYnVnKCJzZG1h
IGJhc2UgYWRkcmVzczogMHgleFxuIiwgcmV0dmFsKTsKKwlwcl9kZWJ1ZygiUkxDIHJlZ2lzdGVy
IG9mZnNldDogMHgleFxuIiwgcmV0dmFsKTsKIAogCXJldHVybiByZXR2YWw7CiB9CkBAIC0zODgs
MjIgKzM4NiwyMiBAQCBzdGF0aWMgaW50IGtnZF9ocWRfc2RtYV9sb2FkKHN0cnVjdCBrZ2RfZGV2
ICprZ2QsIHZvaWQgKm1xZCwKIHsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGdldF9h
bWRncHVfZGV2aWNlKGtnZCk7CiAJc3RydWN0IHY5X3NkbWFfbXFkICptOwotCXVpbnQzMl90IHNk
bWFfYmFzZV9hZGRyOworCXVpbnQzMl90IHJsY19yZWdfb2Zmc2V0OwogCXVuc2lnbmVkIGxvbmcg
ZW5kX2ppZmZpZXM7CiAJdWludDMyX3QgZGF0YTsKIAl1aW50NjRfdCBkYXRhNjQ7CiAJdWludDY0
X3QgX191c2VyICp3cHRyNjQgPSAodWludDY0X3QgX191c2VyICopd3B0cjsKIAogCW0gPSBnZXRf
c2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdldF9zZG1hX2Jhc2VfYWRkcihhZGV2
LCBtLT5zZG1hX2VuZ2luZV9pZCwKKwlybGNfcmVnX29mZnNldCA9IGdldF9ybGNfcmVnX29mZnNl
dChhZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKIAkJCQkJICAgIG0tPnNkbWFfcXVldWVfaWQpOwog
Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsCisJV1JFRzMy
KHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsCiAJCW0tPnNkbWF4X3JsY3hf
cmJfY250bCAmICh+U0RNQTBfUkxDMF9SQl9DTlRMX19SQl9FTkFCTEVfTUFTSykpOwogCiAJZW5k
X2ppZmZpZXMgPSBtc2Vjc190b19qaWZmaWVzKDIwMDApICsgamlmZmllczsKIAl3aGlsZSAodHJ1
ZSkgewotCQlkYXRhID0gUlJFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX0NPTlRF
WFRfU1RBVFVTKTsKKwkJZGF0YSA9IFJSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxD
MF9DT05URVhUX1NUQVRVUyk7CiAJCWlmIChkYXRhICYgU0RNQTBfUkxDMF9DT05URVhUX1NUQVRV
U19fSURMRV9NQVNLKQogCQkJYnJlYWs7CiAJCWlmICh0aW1lX2FmdGVyKGppZmZpZXMsIGVuZF9q
aWZmaWVzKSkKQEAgLTQxMSw0MSArNDA5LDQxIEBAIHN0YXRpYyBpbnQga2dkX2hxZF9zZG1hX2xv
YWQoc3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbXFkLAogCQl1c2xlZXBfcmFuZ2UoNTAwLCAx
MDAwKTsKIAl9CiAKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfRE9PUkJF
TExfT0ZGU0VULAorCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9ET09SQkVM
TF9PRkZTRVQsCiAJICAgICAgIG0tPnNkbWF4X3JsY3hfZG9vcmJlbGxfb2Zmc2V0KTsKIAogCWRh
dGEgPSBSRUdfU0VUX0ZJRUxEKG0tPnNkbWF4X3JsY3hfZG9vcmJlbGwsIFNETUEwX1JMQzBfRE9P
UkJFTEwsCiAJCQkgICAgIEVOQUJMRSwgMSk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1T
RE1BMF9STEMwX0RPT1JCRUxMLCBkYXRhKTsKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNE
TUEwX1JMQzBfUkJfUlBUUiwgbS0+c2RtYXhfcmxjeF9yYl9ycHRyKTsKLQlXUkVHMzIoc2RtYV9i
YXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9ISSwKKwlXUkVHMzIocmxjX3JlZ19vZmZz
ZXQgKyBtbVNETUEwX1JMQzBfRE9PUkJFTEwsIGRhdGEpOworCVdSRUczMihybGNfcmVnX29mZnNl
dCArIG1tU0RNQTBfUkxDMF9SQl9SUFRSLCBtLT5zZG1heF9ybGN4X3JiX3JwdHIpOworCVdSRUcz
MihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0hJLAogCQkJCW0tPnNkbWF4
X3JsY3hfcmJfcnB0cl9oaSk7CiAKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JM
QzBfTUlOT1JfUFRSX1VQREFURSwgMSk7CisJV1JFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1B
MF9STEMwX01JTk9SX1BUUl9VUERBVEUsIDEpOwogCWlmIChyZWFkX3VzZXJfd3B0cihtbSwgd3B0
cjY0LCBkYXRhNjQpKSB7Ci0JCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9S
Ql9XUFRSLAorCQlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfV1BUUiwK
IAkJICAgICAgIGxvd2VyXzMyX2JpdHMoZGF0YTY0KSk7Ci0JCVdSRUczMihzZG1hX2Jhc2VfYWRk
ciArIG1tU0RNQTBfUkxDMF9SQl9XUFRSX0hJLAorCQlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBt
bVNETUEwX1JMQzBfUkJfV1BUUl9ISSwKIAkJICAgICAgIHVwcGVyXzMyX2JpdHMoZGF0YTY0KSk7
CiAJfSBlbHNlIHsKLQkJV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX1dQ
VFIsCisJCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9XUFRSLAogCQkg
ICAgICAgbS0+c2RtYXhfcmxjeF9yYl9ycHRyKTsKLQkJV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsg
bW1TRE1BMF9STEMwX1JCX1dQVFJfSEksCisJCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RN
QTBfUkxDMF9SQl9XUFRSX0hJLAogCQkgICAgICAgbS0+c2RtYXhfcmxjeF9yYl9ycHRyX2hpKTsK
IAl9Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX01JTk9SX1BUUl9VUERB
VEUsIDApOworCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9NSU5PUl9QVFJf
VVBEQVRFLCAwKTsKIAotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9C
QVNFLCBtLT5zZG1heF9ybGN4X3JiX2Jhc2UpOwotCVdSRUczMihzZG1hX2Jhc2VfYWRkciArIG1t
U0RNQTBfUkxDMF9SQl9CQVNFX0hJLAorCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBf
UkxDMF9SQl9CQVNFLCBtLT5zZG1heF9ybGN4X3JiX2Jhc2UpOworCVdSRUczMihybGNfcmVnX29m
ZnNldCArIG1tU0RNQTBfUkxDMF9SQl9CQVNFX0hJLAogCQkJbS0+c2RtYXhfcmxjeF9yYl9iYXNl
X2hpKTsKLQlXUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9BRERS
X0xPLAorCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0FERFJf
TE8sCiAJCQltLT5zZG1heF9ybGN4X3JiX3JwdHJfYWRkcl9sbyk7Ci0JV1JFRzMyKHNkbWFfYmFz
ZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX1JQVFJfQUREUl9ISSwKKwlXUkVHMzIocmxjX3JlZ19v
ZmZzZXQgKyBtbVNETUEwX1JMQzBfUkJfUlBUUl9BRERSX0hJLAogCQkJbS0+c2RtYXhfcmxjeF9y
Yl9ycHRyX2FkZHJfaGkpOwogCiAJZGF0YSA9IFJFR19TRVRfRklFTEQobS0+c2RtYXhfcmxjeF9y
Yl9jbnRsLCBTRE1BMF9STEMwX1JCX0NOVEwsCiAJCQkgICAgIFJCX0VOQUJMRSwgMSk7Ci0JV1JF
RzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsIGRhdGEpOworCVdSRUcz
MihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9DTlRMLCBkYXRhKTsKIAogCXJldHVy
biAwOwogfQpAQCAtNDU1LDcgKzQ1Myw3IEBAIHN0YXRpYyBpbnQga2dkX2hxZF9zZG1hX2R1bXAo
c3RydWN0IGtnZF9kZXYgKmtnZCwKIAkJCSAgICAgdWludDMyX3QgKCoqZHVtcClbMl0sIHVpbnQz
Ml90ICpuX3JlZ3MpCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRfYW1kZ3B1
X2RldmljZShrZ2QpOwotCXVpbnQzMl90IHNkbWFfYmFzZV9hZGRyID0gZ2V0X3NkbWFfYmFzZV9h
ZGRyKGFkZXYsIGVuZ2luZV9pZCwgcXVldWVfaWQpOworCXVpbnQzMl90IHJsY19yZWdfb2Zmc2V0
ID0gZ2V0X3JsY19yZWdfb2Zmc2V0KGFkZXYsIGVuZ2luZV9pZCwgcXVldWVfaWQpOwogCXVpbnQz
Ml90IGkgPSAwLCByZWc7CiAjdW5kZWYgSFFEX05fUkVHUwogI2RlZmluZSBIUURfTl9SRUdTICgx
OSs2KzcrMTApCkBAIC00NjUsMTUgKzQ2MywxNSBAQCBzdGF0aWMgaW50IGtnZF9ocWRfc2RtYV9k
dW1wKHN0cnVjdCBrZ2RfZGV2ICprZ2QsCiAJCXJldHVybiAtRU5PTUVNOwogCiAJZm9yIChyZWcg
PSBtbVNETUEwX1JMQzBfUkJfQ05UTDsgcmVnIDw9IG1tU0RNQTBfUkxDMF9ET09SQkVMTDsgcmVn
KyspCi0JCURVTVBfUkVHKHNkbWFfYmFzZV9hZGRyICsgcmVnKTsKKwkJRFVNUF9SRUcocmxjX3Jl
Z19vZmZzZXQgKyByZWcpOwogCWZvciAocmVnID0gbW1TRE1BMF9STEMwX1NUQVRVUzsgcmVnIDw9
IG1tU0RNQTBfUkxDMF9DU0FfQUREUl9ISTsgcmVnKyspCi0JCURVTVBfUkVHKHNkbWFfYmFzZV9h
ZGRyICsgcmVnKTsKKwkJRFVNUF9SRUcocmxjX3JlZ19vZmZzZXQgKyByZWcpOwogCWZvciAocmVn
ID0gbW1TRE1BMF9STEMwX0lCX1NVQl9SRU1BSU47CiAJICAgICByZWcgPD0gbW1TRE1BMF9STEMw
X01JTk9SX1BUUl9VUERBVEU7IHJlZysrKQotCQlEVU1QX1JFRyhzZG1hX2Jhc2VfYWRkciArIHJl
Zyk7CisJCURVTVBfUkVHKHJsY19yZWdfb2Zmc2V0ICsgcmVnKTsKIAlmb3IgKHJlZyA9IG1tU0RN
QTBfUkxDMF9NSURDTURfREFUQTA7CiAJICAgICByZWcgPD0gbW1TRE1BMF9STEMwX01JRENNRF9D
TlRMOyByZWcrKykKLQkJRFVNUF9SRUcoc2RtYV9iYXNlX2FkZHIgKyByZWcpOworCQlEVU1QX1JF
RyhybGNfcmVnX29mZnNldCArIHJlZyk7CiAKIAlXQVJOX09OX09OQ0UoaSAhPSBIUURfTl9SRUdT
KTsKIAkqbl9yZWdzID0gaTsKQEAgLTUwNywxNCArNTA1LDE0IEBAIHN0YXRpYyBib29sIGtnZF9o
cWRfc2RtYV9pc19vY2N1cGllZChzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQpCiB7CiAJ
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRfYW1kZ3B1X2RldmljZShrZ2QpOwogCXN0
cnVjdCB2OV9zZG1hX21xZCAqbTsKLQl1aW50MzJfdCBzZG1hX2Jhc2VfYWRkcjsKKwl1aW50MzJf
dCBybGNfcmVnX29mZnNldDsKIAl1aW50MzJfdCBzZG1hX3JsY19yYl9jbnRsOwogCiAJbSA9IGdl
dF9zZG1hX21xZChtcWQpOwotCXNkbWFfYmFzZV9hZGRyID0gZ2V0X3NkbWFfYmFzZV9hZGRyKGFk
ZXYsIG0tPnNkbWFfZW5naW5lX2lkLAorCXJsY19yZWdfb2Zmc2V0ID0gZ2V0X3JsY19yZWdfb2Zm
c2V0KGFkZXYsIG0tPnNkbWFfZW5naW5lX2lkLAogCQkJCQkgICAgbS0+c2RtYV9xdWV1ZV9pZCk7
CiAKLQlzZG1hX3JsY19yYl9jbnRsID0gUlJFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9S
TEMwX1JCX0NOVEwpOworCXNkbWFfcmxjX3JiX2NudGwgPSBSUkVHMzIocmxjX3JlZ19vZmZzZXQg
KyBtbVNETUEwX1JMQzBfUkJfQ05UTCk7CiAKIAlpZiAoc2RtYV9ybGNfcmJfY250bCAmIFNETUEw
X1JMQzBfUkJfQ05UTF9fUkJfRU5BQkxFX01BU0spCiAJCXJldHVybiB0cnVlOwpAQCAtNTc3LDIw
ICs1NzUsMjAgQEAgc3RhdGljIGludCBrZ2RfaHFkX3NkbWFfZGVzdHJveShzdHJ1Y3Qga2dkX2Rl
diAqa2dkLCB2b2lkICptcWQsCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBnZXRf
YW1kZ3B1X2RldmljZShrZ2QpOwogCXN0cnVjdCB2OV9zZG1hX21xZCAqbTsKLQl1aW50MzJfdCBz
ZG1hX2Jhc2VfYWRkcjsKKwl1aW50MzJfdCBybGNfcmVnX29mZnNldDsKIAl1aW50MzJfdCB0ZW1w
OwogCXVuc2lnbmVkIGxvbmcgZW5kX2ppZmZpZXMgPSAodXRpbWVvdXQgKiBIWiAvIDEwMDApICsg
amlmZmllczsKIAogCW0gPSBnZXRfc2RtYV9tcWQobXFkKTsKLQlzZG1hX2Jhc2VfYWRkciA9IGdl
dF9zZG1hX2Jhc2VfYWRkcihhZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKKwlybGNfcmVnX29mZnNl
dCA9IGdldF9ybGNfcmVnX29mZnNldChhZGV2LCBtLT5zZG1hX2VuZ2luZV9pZCwKIAkJCQkJICAg
IG0tPnNkbWFfcXVldWVfaWQpOwogCi0JdGVtcCA9IFJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1t
U0RNQTBfUkxDMF9SQl9DTlRMKTsKKwl0ZW1wID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1T
RE1BMF9STEMwX1JCX0NOVEwpOwogCXRlbXAgPSB0ZW1wICYgflNETUEwX1JMQzBfUkJfQ05UTF9f
UkJfRU5BQkxFX01BU0s7Ci0JV1JFRzMyKHNkbWFfYmFzZV9hZGRyICsgbW1TRE1BMF9STEMwX1JC
X0NOVEwsIHRlbXApOworCVdSRUczMihybGNfcmVnX29mZnNldCArIG1tU0RNQTBfUkxDMF9SQl9D
TlRMLCB0ZW1wKTsKIAogCXdoaWxlICh0cnVlKSB7Ci0JCXRlbXAgPSBSUkVHMzIoc2RtYV9iYXNl
X2FkZHIgKyBtbVNETUEwX1JMQzBfQ09OVEVYVF9TVEFUVVMpOworCQl0ZW1wID0gUlJFRzMyKHJs
Y19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX0NPTlRFWFRfU1RBVFVTKTsKIAkJaWYgKHRlbXAg
JiBTRE1BMF9STEMwX0NPTlRFWFRfU1RBVFVTX19JRExFX01BU0spCiAJCQlicmVhazsKIAkJaWYg
KHRpbWVfYWZ0ZXIoamlmZmllcywgZW5kX2ppZmZpZXMpKQpAQCAtNTk4LDE0ICs1OTYsMTQgQEAg
c3RhdGljIGludCBrZ2RfaHFkX3NkbWFfZGVzdHJveShzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lk
ICptcWQsCiAJCXVzbGVlcF9yYW5nZSg1MDAsIDEwMDApOwogCX0KIAotCVdSRUczMihzZG1hX2Jh
c2VfYWRkciArIG1tU0RNQTBfUkxDMF9ET09SQkVMTCwgMCk7Ci0JV1JFRzMyKHNkbWFfYmFzZV9h
ZGRyICsgbW1TRE1BMF9STEMwX1JCX0NOVEwsCi0JCVJSRUczMihzZG1hX2Jhc2VfYWRkciArIG1t
U0RNQTBfUkxDMF9SQl9DTlRMKSB8CisJV1JFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9S
TEMwX0RPT1JCRUxMLCAwKTsKKwlXUkVHMzIocmxjX3JlZ19vZmZzZXQgKyBtbVNETUEwX1JMQzBf
UkJfQ05UTCwKKwkJUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX0NOVEwp
IHwKIAkJU0RNQTBfUkxDMF9SQl9DTlRMX19SQl9FTkFCTEVfTUFTSyk7CiAKLQltLT5zZG1heF9y
bGN4X3JiX3JwdHIgPSBSUkVHMzIoc2RtYV9iYXNlX2FkZHIgKyBtbVNETUEwX1JMQzBfUkJfUlBU
Uik7CisJbS0+c2RtYXhfcmxjeF9yYl9ycHRyID0gUlJFRzMyKHJsY19yZWdfb2Zmc2V0ICsgbW1T
RE1BMF9STEMwX1JCX1JQVFIpOwogCW0tPnNkbWF4X3JsY3hfcmJfcnB0cl9oaSA9Ci0JCVJSRUcz
MihzZG1hX2Jhc2VfYWRkciArIG1tU0RNQTBfUkxDMF9SQl9SUFRSX0hJKTsKKwkJUlJFRzMyKHJs
Y19yZWdfb2Zmc2V0ICsgbW1TRE1BMF9STEMwX1JCX1JQVFJfSEkpOwogCiAJcmV0dXJuIDA7CiB9
Ci0tIAoyLjE3LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
