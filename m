Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C886937F0C
	for <lists+amd-gfx@lfdr.de>; Thu,  6 Jun 2019 22:55:25 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4573A898C2;
	Thu,  6 Jun 2019 20:55:24 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM01-SN1-obe.outbound.protection.outlook.com
 (mail-eopbgr820075.outbound.protection.outlook.com [40.107.82.75])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9955F8989E
 for <amd-gfx@lists.freedesktop.org>; Thu,  6 Jun 2019 20:55:22 +0000 (UTC)
Received: from CY4PR12CA0033.namprd12.prod.outlook.com (2603:10b6:903:129::19)
 by MWHPR12MB1279.namprd12.prod.outlook.com (2603:10b6:300:d::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.1965.12; Thu, 6 Jun
 2019 20:55:20 +0000
Received: from DM3NAM03FT053.eop-NAM03.prod.protection.outlook.com
 (2a01:111:f400:7e49::201) by CY4PR12CA0033.outlook.office365.com
 (2603:10b6:903:129::19) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.20.1965.12 via Frontend
 Transport; Thu, 6 Jun 2019 20:55:20 +0000
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXCHOV02.amd.com (165.204.84.17) by
 DM3NAM03FT053.mail.protection.outlook.com (10.152.83.181) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.20.1965.12 via Frontend Transport; Thu, 6 Jun 2019 20:55:19 +0000
Received: from blakha.amd.com (10.180.168.240) by SATLEXCHOV02.amd.com
 (10.181.40.72) with Microsoft SMTP Server id 14.3.389.1; Thu, 6 Jun 2019
 15:55:07 -0500
From: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
To: <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 10/24] drm/amd/display: Rework CRTC color management
Date: Thu, 6 Jun 2019 16:54:47 -0400
Message-ID: <20190606205501.16505-11-Bhawanpreet.Lakha@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190606205501.16505-1-Bhawanpreet.Lakha@amd.com>
References: <20190606205501.16505-1-Bhawanpreet.Lakha@amd.com>
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; IPV:NLI; CTRY:US; EFV:NLI;
 SFV:NSPM;
 SFS:(10009020)(136003)(39860400002)(376002)(396003)(346002)(2980300002)(428003)(189003)(199004)(2351001)(68736007)(478600001)(16586007)(11346002)(476003)(2616005)(70586007)(72206003)(126002)(316002)(53416004)(305945005)(486006)(70206006)(446003)(26005)(186003)(36756003)(6916009)(47776003)(77096007)(336012)(48376002)(76176011)(7696005)(51416003)(4326008)(81156014)(53936002)(8676002)(426003)(8936002)(2906002)(81166006)(50226002)(86362001)(1076003)(30864003)(14444005)(50466002)(356004)(6666004)(5660300002);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MWHPR12MB1279; H:SATLEXCHOV02.amd.com; FPR:;
 SPF:None; LANG:en; PTR:InfoDomainNonexistent; MX:1; A:1; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 20d9d64e-3eea-4d41-49b7-08d6eac14969
X-Microsoft-Antispam: BCL:0; PCL:0;
 RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600148)(711020)(4605104)(1401327)(2017052603328);
 SRVR:MWHPR12MB1279; 
X-MS-TrafficTypeDiagnostic: MWHPR12MB1279:
X-Microsoft-Antispam-PRVS: <MWHPR12MB12791C3C3A25A5BDB2ED5851F9170@MWHPR12MB1279.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:10000;
X-Forefront-PRVS: 00603B7EEF
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam-Message-Info: iTcetmOM5j4e/CwZ9ROYEQ6ZG76OuRlH+TQB5esjNLI+8nWs2P4LLvjgx0a5ztSR2oZPtzbWd8B+lu1j6vEd7eksXEWRaEzuYGF2z6rxZ2F4yjJA5K41yGsbq2MvzBb2ZXQ1xvERD1YpKybgTBml2+AplY9MI5HN68ao7LtWPSMiAV0yrzyrkgPdprVpKiidZaQdydx8zAFroumkdZLJxjtLfvvVjq7cAsVgCIoN0ZjNWFazLXKesCCS4IIy1o94cWInZgcD62MlKwoAS7tQNH50PwmgCf/lrOtXaZGbNOii9Jx93IbbddlGidUB74HcIbP8+cLr/OgLcvsxsB+3u1PbXfvtuOXvzPKkvFfN5oQfhYPlp+1X4lrLPxXPxWzQdHA19CuTOEJnpkZkDQ+tUFoel6PagRIpUXf92nSu5SQ=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 06 Jun 2019 20:55:19.9409 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 20d9d64e-3eea-4d41-49b7-08d6eac14969
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXCHOV02.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR12MB1279
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=hnOpLUak0H7aqjIMALYs9jrMbPDacl/bit3GBCvfoig=;
 b=lLR7bYmbL8SLYryZQUJ6zgirApE6Vpr/iqJKk2P8rKTo8jAQ1enxtLVSoMxY+GCbDAZe9fdD69LQqE1rEIptpJvXvWnqk2jlrsT2uiDx1uzKSYpkXAWaMzeMK7t65C5gr5Wgb526EWEsqL9vAI705tCDC4Q2Kl4RGoG2dU0r2oU=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is
 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RnJvbTogTmljaG9sYXMgS2F6bGF1c2thcyA8bmljaG9sYXMua2F6bGF1c2thc0BhbWQuY29tPgoK
W1doeV0KVG8gcHJlcGFyZSBmb3IgdGhlIHVwY29taW5nIERSTSBwbGFuZSBjb2xvciBtYW5hZ2Vt
ZW50IHByb3BlcnRpZXMKd2UgbmVlZCB0byBjb3JyZWN0IGEgbG90IG9mIHdyb25nIGJlaGF2aW9y
IGFuZCBhc3N1bXB0aW9ucyBtYWRlIGZvcgpDUlRDIGNvbG9yIG1hbmFnZW1lbnQuCgpUaGUgZG9j
dW1lbnRhdGlvbiBhZGRlZCBieSB0aGlzIGNvbW1pdCBpbiBhbWRncHVfZG1fY29sb3IgZXhwbGFp
bnMKaG93IHRoZSBIVyBjb2xvciBwaXBlbGluZSB3b3JrcyBhbmQgaXRzIGxpbWl0YXRpb25zIHdp
dGggdGhlIERSTQppbnRlcmZhY2UuCgpUaGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiBkb2VzIHRo
ZSBmb2xsb3dpbmcgd3Jvbmc6Ci0gSW1wbGljaXQgc1JHQiBER00gd2hlbiBubyBDUlRDIERHTSBp
cyBzZXQKLSBJbXBsaWNpdCBzUkdCIFJHTSB3aGVuIG5vIENSVEMgUkdNIGlzIHNldAotIE5vIHdh
eSB0byBzcGVjaWZ5IGEgbm9uLWxpbmVhciBER00gbWF0cml4IHRoYXQgcHJvZHVjZXMgY29ycmVj
dCBvdXRwdXQKLSBObyB3YXkgdG8gc3BlY2lmeSBhIGNvcnJlY3QgUkdNIHdoZW4gYSBsaW5lYXIg
REdNIGlzIHVzZWQKCldlIGhhZCB3b3JrYXJvdW5kcyBmb3IgcGFzc2luZyBrbXNfY29sb3IgdGVz
dHMgYnV0IG5vdCBhbGwgb2YgdGhlCmJlaGF2aW9yIHdlIGhhZCB3cm9uZyB3YXMgY292ZXJlZCBi
eSB0aGVzZSB0ZXN0cyAoZXNwZWNpYWxseSB3aGVuCml0IGNvbWVzIHRvIG5vbi1saW5lYXIgREdN
KS4gVGVzdGluZyBib3RoIERHTSBhbmQgUkdNIGF0IHRoZSBzYW1lIHRpbWUKaXNuJ3Qgc29tZXRo
aW5nIGttc19jb2xvciB0ZXN0cyB3ZWxsIGVpdGhlci4KCltIb3ddClRoZSBzcGVjaWZpY3MgZm9y
IGhvdyBjb2xvciBtYW5hZ2VtZW50IHdvcmtzIGluIEFNREdQVSBhbmQgdGhlIG5ldwpiZWhhdmlv
ciBjYW4gYmUgZm91bmQgYnkgcmVhZGluZyB0aGUgZG9jdW1lbnRhdGlvbiBhZGRlZCB0bwphbWRn
cHVfZG1fY29sb3IuYyBmcm9tIHRoaXMgcGF0Y2guCgpBbGwgb2YgdGhlIGluY29ycmVjdCBjYXNl
cyBmcm9tIHRoZSBvbGQgaW1wbGVtZW50YXRpb24gaGF2ZSBiZWVuCmFkZHJlc3NlZCBmb3IgdGhl
IGF0b21pYyBpbnRlcmZhY2UsIGJ1dCB0aGVyZSBzdGlsbCBhIGZldyBUT0RPcyBmb3IKdGhlIGxl
Z2FjeSBvbmUuCgpOb3RlOiB0aGlzIGRvZXMgY2F1c2UgcmVncmVzc2lvbnMgZm9yIGttc19jb2xv
ckBwaXBlLWEtY3RtLSogb3ZlciBIRE1JLgoKVGhlIHJlc3VsdCBsb29rcyBjb3JyZWN0IGZyb20g
dmlzdWFsIGluc3BlY3Rpb24gYnV0IHRoZSBDUkMgbm8gbG9uZ2VyCm1hdGNoZXMuIEZvciByZWZl
cmVuY2UsIHRoZSB0ZXN0IHdhcyBwcmV2aW91c2x5IGRvaW5nIHRoZSBmb2xsb3dpbmc6CgpsaW5l
YXIgZGVnYW1tYSAtPiBDVE0gLT4gc1JHQiByZWdhbW1hIC0+IFJHQiB0byBZVVYgKDcwOSkgLT4g
Li4uCgpOb3cgdGhlIHRlc3QgaXMgZG9pbmc6CgpsaW5lYXIgZGVnYW1tYSAtPiBDVE0gLT4gbGlu
ZWFyIHJlZ2FtbWEgLT4gUkdCIHRvIFlVViAoNzA5KSAtPiAuLi4KClNpZ25lZC1vZmYtYnk6IE5p
Y2hvbGFzIEthemxhdXNrYXMgPG5pY2hvbGFzLmthemxhdXNrYXNAYW1kLmNvbT4KUmV2aWV3ZWQt
Ynk6IFN1biBwZW5nIExpIDxTdW5wZW5nLkxpQGFtZC5jb20+CkFja2VkLWJ5OiBCaGF3YW5wcmVl
dCBMYWtoYSA8Qmhhd2FucHJlZXQuTGFraGFAYW1kLmNvbT4KLS0tCiAuLi4vZ3B1L2RybS9hbWQv
ZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMgfCAgMzIgKy0KIC4uLi9ncHUvZHJtL2FtZC9k
aXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uaCB8ICAxMCArLQogLi4uL2FtZC9kaXNwbGF5L2Ft
ZGdwdV9kbS9hbWRncHVfZG1fY29sb3IuYyAgIHwgNDczICsrKysrKysrKysrKy0tLS0tLQogMyBm
aWxlcyBjaGFuZ2VkLCAzNTYgaW5zZXJ0aW9ucygrKSwgMTU5IGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2FtZGdwdV9kbS5jCmluZGV4
IDM2ZWU4ZmU1MmYzOC4uZDI2N2E5Y2M4NDBmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2FtZGdwdV9kbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMKQEAgLTI5MzAsNiArMjkzMCw3IEBAIHN0
YXRpYyBpbnQgZmlsbF9kY19wbGFuZV9hdHRyaWJ1dGVzKHN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2LAogCQkJCSAgICBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKIAkJCQkg
ICAgc3RydWN0IGRybV9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogeworCXN0cnVjdCBkbV9jcnRj
X3N0YXRlICpkbV9jcnRjX3N0YXRlID0gdG9fZG1fY3J0Y19zdGF0ZShjcnRjX3N0YXRlKTsKIAlj
b25zdCBzdHJ1Y3QgYW1kZ3B1X2ZyYW1lYnVmZmVyICphbWRncHVfZmIgPQogCQl0b19hbWRncHVf
ZnJhbWVidWZmZXIocGxhbmVfc3RhdGUtPmZiKTsKIAlzdHJ1Y3QgZGNfc2NhbGluZ19pbmZvIHNj
YWxpbmdfaW5mbzsKQEAgLTI5NzQsMTMgKzI5NzUsMTEgQEAgc3RhdGljIGludCBmaWxsX2RjX3Bs
YW5lX2F0dHJpYnV0ZXMoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJICogQWx3YXlzIHNl
dCBpbnB1dCB0cmFuc2ZlciBmdW5jdGlvbiwgc2luY2UgcGxhbmUgc3RhdGUgaXMgcmVmcmVzaGVk
CiAJICogZXZlcnkgdGltZS4KIAkgKi8KLQlyZXQgPSBhbWRncHVfZG1fc2V0X2RlZ2FtbWFfbHV0
KGNydGNfc3RhdGUsIGRjX3BsYW5lX3N0YXRlKTsKLQlpZiAocmV0KSB7Ci0JCWRjX3RyYW5zZmVy
X2Z1bmNfcmVsZWFzZShkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNmZXJfZnVuYyk7Ci0JCWRjX3Bs
YW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jID0gTlVMTDsKLQl9CisJcmV0ID0gYW1kZ3B1X2Rt
X3VwZGF0ZV9wbGFuZV9jb2xvcl9tZ210KGRtX2NydGNfc3RhdGUsIGRjX3BsYW5lX3N0YXRlKTsK
KwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OwogCi0JcmV0dXJuIHJldDsKKwlyZXR1cm4gMDsKIH0K
IAogc3RhdGljIHZvaWQgdXBkYXRlX3N0cmVhbV9zY2FsaW5nX3NldHRpbmdzKGNvbnN0IHN0cnVj
dCBkcm1fZGlzcGxheV9tb2RlICptb2RlLApAQCAtMzU1Miw2ICszNTUxLDggQEAgZG1fY3J0Y19k
dXBsaWNhdGVfc3RhdGUoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCXN0YXRlLT52cnJfc3VwcG9y
dGVkID0gY3VyLT52cnJfc3VwcG9ydGVkOwogCXN0YXRlLT5mcmVlc3luY19jb25maWcgPSBjdXIt
PmZyZWVzeW5jX2NvbmZpZzsKIAlzdGF0ZS0+Y3JjX2VuYWJsZWQgPSBjdXItPmNyY19lbmFibGVk
OworCXN0YXRlLT5jbV9oYXNfZGVnYW1tYSA9IGN1ci0+Y21faGFzX2RlZ2FtbWE7CisJc3RhdGUt
PmNtX2lzX2RlZ2FtbWFfc3JnYiA9IGN1ci0+Y21faXNfZGVnYW1tYV9zcmdiOwogCiAJLyogVE9E
TyBEdXBsaWNhdGUgZGNfc3RyZWFtIGFmdGVyIG9iamVjdHMgYXJlIHN0cmVhbSBvYmplY3QgaXMg
ZmxhdHRlbmVkICovCiAKQEAgLTU1OTUsOCArNTU5NiwxOCBAQCBzdGF0aWMgdm9pZCBhbWRncHVf
ZG1fY29tbWl0X3BsYW5lcyhzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJCQlidW5k
bGUtPnN0cmVhbV91cGRhdGUuZHN0ID0gYWNydGNfc3RhdGUtPnN0cmVhbS0+ZHN0OwogCQl9CiAK
LQkJaWYgKG5ld19wY3J0Y19zdGF0ZS0+Y29sb3JfbWdtdF9jaGFuZ2VkKQotCQkJYnVuZGxlLT5z
dHJlYW1fdXBkYXRlLm91dF90cmFuc2Zlcl9mdW5jID0gYWNydGNfc3RhdGUtPnN0cmVhbS0+b3V0
X3RyYW5zZmVyX2Z1bmM7CisJCWlmIChuZXdfcGNydGNfc3RhdGUtPmNvbG9yX21nbXRfY2hhbmdl
ZCkgeworCQkJLyoKKwkJCSAqIFRPRE86IFRoaXMgaXNuJ3QgZnVsbHkgY29ycmVjdCBzaW5jZSB3
ZSd2ZSBhY3R1YWxseQorCQkJICogYWxyZWFkeSBtb2RpZmllZCB0aGUgc3RyZWFtIGluIHBsYWNl
LgorCQkJICovCisJCQlidW5kbGUtPnN0cmVhbV91cGRhdGUuZ2FtdXRfcmVtYXAgPQorCQkJCSZh
Y3J0Y19zdGF0ZS0+c3RyZWFtLT5nYW11dF9yZW1hcF9tYXRyaXg7CisJCQlidW5kbGUtPnN0cmVh
bV91cGRhdGUub3V0cHV0X2NzY190cmFuc2Zvcm0gPQorCQkJCSZhY3J0Y19zdGF0ZS0+c3RyZWFt
LT5jc2NfY29sb3JfbWF0cml4OworCQkJYnVuZGxlLT5zdHJlYW1fdXBkYXRlLm91dF90cmFuc2Zl
cl9mdW5jID0KKwkJCQlhY3J0Y19zdGF0ZS0+c3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYzsKKwkJ
fQogCiAJCWFjcnRjX3N0YXRlLT5zdHJlYW0tPmFibV9sZXZlbCA9IGFjcnRjX3N0YXRlLT5hYm1f
bGV2ZWw7CiAJCWlmIChhY3J0Y19zdGF0ZS0+YWJtX2xldmVsICE9IGRtX29sZF9jcnRjX3N0YXRl
LT5hYm1fbGV2ZWwpCkBAIC02NDI2LDEwICs2NDM3LDkgQEAgc3RhdGljIGludCBkbV91cGRhdGVf
Y3J0Y19zdGF0ZShzdHJ1Y3QgYW1kZ3B1X2Rpc3BsYXlfbWFuYWdlciAqZG0sCiAJICovCiAJaWYg
KGRtX25ld19jcnRjX3N0YXRlLT5iYXNlLmNvbG9yX21nbXRfY2hhbmdlZCB8fAogCSAgICBkcm1f
YXRvbWljX2NydGNfbmVlZHNfbW9kZXNldChuZXdfY3J0Y19zdGF0ZSkpIHsKLQkJcmV0ID0gYW1k
Z3B1X2RtX3NldF9yZWdhbW1hX2x1dChkbV9uZXdfY3J0Y19zdGF0ZSk7CisJCXJldCA9IGFtZGdw
dV9kbV91cGRhdGVfY3J0Y19jb2xvcl9tZ210KGRtX25ld19jcnRjX3N0YXRlKTsKIAkJaWYgKHJl
dCkKIAkJCWdvdG8gZmFpbDsKLQkJYW1kZ3B1X2RtX3NldF9jdG0oZG1fbmV3X2NydGNfc3RhdGUp
OwogCX0KIAogCS8qIFVwZGF0ZSBGcmVlc3luYyBzZXR0aW5ncy4gKi8KQEAgLTY3MzIsNiArNjc0
Miw4IEBAIGRtX2RldGVybWluZV91cGRhdGVfdHlwZV9mb3JfY29tbWl0KHN0cnVjdCBhbWRncHVf
ZGlzcGxheV9tYW5hZ2VyICpkbSwKIAkJCQkJCW5ld19kbV9wbGFuZV9zdGF0ZS0+ZGNfc3RhdGUt
PmluX3RyYW5zZmVyX2Z1bmM7CiAJCQkJc3RyZWFtX3VwZGF0ZS5nYW11dF9yZW1hcCA9CiAJCQkJ
CQkmbmV3X2RtX2NydGNfc3RhdGUtPnN0cmVhbS0+Z2FtdXRfcmVtYXBfbWF0cml4OworCQkJCXN0
cmVhbV91cGRhdGUub3V0cHV0X2NzY190cmFuc2Zvcm0gPQorCQkJCQkJJm5ld19kbV9jcnRjX3N0
YXRlLT5zdHJlYW0tPmNzY19jb2xvcl9tYXRyaXg7CiAJCQkJc3RyZWFtX3VwZGF0ZS5vdXRfdHJh
bnNmZXJfZnVuYyA9CiAJCQkJCQluZXdfZG1fY3J0Y19zdGF0ZS0+c3RyZWFtLT5vdXRfdHJhbnNm
ZXJfZnVuYzsKIAkJCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9h
bWRncHVfZG0vYW1kZ3B1X2RtLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1
X2RtL2FtZGdwdV9kbS5oCmluZGV4IDMzOTVmMmU0ZDU2NC4uNWEwNzE5NDE4MzUzIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2FtZGdwdV9kbS5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmgKQEAg
LTI3MSw2ICsyNzEsOSBAQCBzdHJ1Y3QgZG1fY3J0Y19zdGF0ZSB7CiAJc3RydWN0IGRybV9jcnRj
X3N0YXRlIGJhc2U7CiAJc3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3RyZWFtOwogCisJYm9vbCBj
bV9oYXNfZGVnYW1tYTsKKwlib29sIGNtX2lzX2RlZ2FtbWFfc3JnYjsKKwogCWludCBhY3RpdmVf
cGxhbmVzOwogCWJvb2wgaW50ZXJydXB0c19lbmFibGVkOwogCkBAIC0zNjEsMTAgKzM2NCw5IEBA
IHZvaWQgYW1kZ3B1X2RtX2NydGNfaGFuZGxlX2NyY19pcnEoc3RydWN0IGRybV9jcnRjICpjcnRj
KTsKICNkZWZpbmUgTUFYX0NPTE9SX0xFR0FDWV9MVVRfRU5UUklFUyAyNTYKIAogdm9pZCBhbWRn
cHVfZG1faW5pdF9jb2xvcl9tb2Qodm9pZCk7Ci1pbnQgYW1kZ3B1X2RtX3NldF9kZWdhbW1hX2x1
dChzdHJ1Y3QgZHJtX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCi0JCQkgICAgICBzdHJ1Y3QgZGNf
cGxhbmVfc3RhdGUgKmRjX3BsYW5lX3N0YXRlKTsKLXZvaWQgYW1kZ3B1X2RtX3NldF9jdG0oc3Ry
dWN0IGRtX2NydGNfc3RhdGUgKmNydGMpOwotaW50IGFtZGdwdV9kbV9zZXRfcmVnYW1tYV9sdXQo
c3RydWN0IGRtX2NydGNfc3RhdGUgKmNydGMpOworaW50IGFtZGdwdV9kbV91cGRhdGVfY3J0Y19j
b2xvcl9tZ210KHN0cnVjdCBkbV9jcnRjX3N0YXRlICpjcnRjKTsKK2ludCBhbWRncHVfZG1fdXBk
YXRlX3BsYW5lX2NvbG9yX21nbXQoc3RydWN0IGRtX2NydGNfc3RhdGUgKmNydGMsCisJCQkJICAg
ICAgc3RydWN0IGRjX3BsYW5lX3N0YXRlICpkY19wbGFuZV9zdGF0ZSk7CiAKIGV4dGVybiBjb25z
dCBzdHJ1Y3QgZHJtX2VuY29kZXJfaGVscGVyX2Z1bmNzIGFtZGdwdV9kbV9lbmNvZGVyX2hlbHBl
cl9mdW5jczsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdw
dV9kbS9hbWRncHVfZG1fY29sb3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRn
cHVfZG0vYW1kZ3B1X2RtX2NvbG9yLmMKaW5kZXggNzI1OGM5OTJhMmJmLi5iNDNiYjdmOTBlNGUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1
X2RtX2NvbG9yLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9h
bWRncHVfZG1fY29sb3IuYwpAQCAtMjcsNiArMjcsNDcgQEAKICNpbmNsdWRlICJhbWRncHVfZG0u
aCIKICNpbmNsdWRlICJkYy5oIgogI2luY2x1ZGUgIm1vZHVsZXMvY29sb3IvY29sb3JfZ2FtbWEu
aCIKKyNpbmNsdWRlICJiYXNpY3MvY29udmVyc2lvbi5oIgorCisvKgorICogVGhlIERDIGludGVy
ZmFjZSB0byBIVyBnaXZlcyB1cyB0aGUgZm9sbG93aW5nIGNvbG9yIG1hbmFnZW1lbnQgYmxvY2tz
CisgKiBwZXIgcGlwZSAoc3VyZmFjZSk6CisgKgorICogLSBJbnB1dCBnYW1tYSBMVVQgKGRlLW5v
cm1hbGl6ZWQpCisgKiAtIElucHV0IENTQyAobm9ybWFsaXplZCkKKyAqIC0gU3VyZmFjZSBkZWdh
bW1hIExVVCAobm9ybWFsaXplZCkKKyAqIC0gU3VyZmFjZSBDU0MgKG5vcm1hbGl6ZWQpCisgKiAt
IFN1cmZhY2UgcmVnYW1tYSBMVVQgKG5vcm1hbGl6ZWQpCisgKiAtIE91dHB1dCBDU0MgKG5vcm1h
bGl6ZWQpCisgKgorICogQnV0IHRoZXNlIGFyZW4ndCBhIGRpcmVjdCBtYXBwaW5nIHRvIERSTSBj
b2xvciBwcm9wZXJ0aWVzLiBUaGUgY3VycmVudCBEUk0KKyAqIGludGVyZmFjZSBleHBvc2VzIENS
VEMgZGVnYW1tYSwgQ1JUQyBDVE0gYW5kIENSVEMgcmVnYW1tYSB3aGlsZSBvdXIgaGFyZHdhcmUK
KyAqIGlzIGVzc2VudGlhbGx5IGdpdmluZzoKKyAqCisgKiBQbGFuZSBDVE0gLT4gUGxhbmUgZGVn
YW1tYSAtPiBQbGFuZSBDVE0gLT4gUGxhbmUgcmVnYW1tYSAtPiBQbGFuZSBDVE0KKyAqCisgKiBU
aGUgaW5wdXQgZ2FtbWEgTFVUIGJsb2NrIGlzbid0IHJlYWxseSBhcHBsaWNhYmxlIGhlcmUgc2lu
Y2UgaXQgb3BlcmF0ZXMKKyAqIG9uIHRoZSBhY3R1YWwgaW5wdXQgZGF0YSBpdHNlbGYgcmF0aGVy
IHRoYW4gdGhlIEhXIGZwIHJlcHJlc2VudGF0aW9uLiBUaGUKKyAqIGlucHV0IGFuZCBvdXRwdXQg
Q1NDIGJsb2NrcyBhcmUgdGVjaG5pY2FsbHkgYXZhaWxhYmxlIHRvIHVzZSBhcyBwYXJ0IG9mCisg
KiB0aGUgREMgaW50ZXJmYWNlIGJ1dCBhcmUgdHlwaWNhbGx5IHVzZWQgaW50ZXJuYWxseSBieSBE
QyBmb3IgY29udmVyc2lvbnMKKyAqIGJldHdlZW4gY29sb3Igc3BhY2VzLiBUaGVzZSBjb3VsZCBi
ZSBibGVuZGVkIHRvZ2V0aGVyIHdpdGggdXNlcgorICogYWRqdXN0bWVudHMgaW4gdGhlIGZ1dHVy
ZSBidXQgZm9yIG5vdyB0aGVzZSBzaG91bGQgcmVtYWluIHVudG91Y2hlZC4KKyAqCisgKiBUaGUg
cGlwZSBibGVuZGluZyBhbHNvIGhhcHBlbnMgYWZ0ZXIgdGhlc2UgYmxvY2tzIHNvIHdlIGRvbid0
IGFjdHVhbGx5CisgKiBzdXBwb3J0IGFueSBDUlRDIHByb3BzIHdpdGggY29ycmVjdCBibGVuZGlu
ZyB3aXRoIG11bHRpcGxlIHBsYW5lcyAtIGJ1dCB3ZQorICogY2FuIHN0aWxsIHN1cHBvcnQgQ1JU
QyBjb2xvciBtYW5hZ2VtZW50IHByb3BlcnRpZXMgaW4gRE0gaW4gbW9zdCBzaW5nbGUKKyAqIHBs
YW5lIGNhc2VzIGNvcnJlY3RseSB3aXRoIGNsZXZlciBtYW5hZ2VtZW50IG9mIHRoZSBEQyBpbnRl
cmZhY2UgaW4gRE0uCisgKgorICogQXMgcGVyIERSTSBkb2N1bWVudGF0aW9uLCBibG9ja3Mgc2hv
dWxkIGJlIGluIGhhcmR3YXJlIGJ5cGFzcyB3aGVuIHRoZWlyCisgKiByZXNwZWN0aXZlIHByb3Bl
cnR5IGlzIHNldCB0byBOVUxMLiBBIGxpbmVhciBER00vUkdNIExVVCBzaG91bGQgYWxzbworICog
Y29uc2lkZXJlZCBhcyBwdXR0aW5nIHRoZSByZXNwZWN0aXZlIGJsb2NrIGludG8gYnlwYXNzIG1v
ZGUuCisgKgorICogVGhpcyBtZWFucyB0aGF0IHRoZSBmb2xsb3dpbmcKKyAqIGNvbmZpZ3VyYXRp
b24gaXMgYXNzdW1lZCB0byBiZSB0aGUgZGVmYXVsdDoKKyAqCisgKiBQbGFuZSBER00gQnlwYXNz
IC0+IFBsYW5lIENUTSBCeXBhc3MgLT4gUGxhbmUgUkdNIEJ5cGFzcyAtPiAuLi4KKyAqIENSVEMg
REdNIEJ5cGFzcyAtPiBDUlRDIENUTSBCeXBhc3MgLT4gQ1JUQyBSR00gQnlwYXNzCisgKi8KIAog
I2RlZmluZSBNQVhfRFJNX0xVVF9WQUxVRSAweEZGRkYKIApAQCAtNDEsNiArODIsMTMgQEAgdm9p
ZCBhbWRncHVfZG1faW5pdF9jb2xvcl9tb2Qodm9pZCkKIAlzZXR1cF94X3BvaW50c19kaXN0cmli
dXRpb24oKTsKIH0KIAorLyogRXh0cmFjdHMgdGhlIERSTSBsdXQgYW5kIGx1dCBzaXplIGZyb20g
YSBibG9iLiAqLworc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1fY29sb3JfbHV0ICoKK19fZXh0cmFj
dF9ibG9iX2x1dChjb25zdCBzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmJsb2IsIHVpbnQzMl90
ICpzaXplKQoreworCSpzaXplID0gYmxvYiA/IGRybV9jb2xvcl9sdXRfc2l6ZShibG9iKSA6IDA7
CisJcmV0dXJuIGJsb2IgPyAoc3RydWN0IGRybV9jb2xvcl9sdXQgKilibG9iLT5kYXRhIDogTlVM
TDsKK30KIAogLyoKICAqIFJldHVybiB0cnVlIGlmIHRoZSBnaXZlbiBsdXQgaXMgYSBsaW5lYXIg
bWFwcGluZyBvZiB2YWx1ZXMsIGkuZS4gaXQgYWN0cwpAQCAtNTAsNyArOTgsNyBAQCB2b2lkIGFt
ZGdwdV9kbV9pbml0X2NvbG9yX21vZCh2b2lkKQogICogZihhKSA9ICgweEZGMDAvTUFYX0NPTE9S
X0xVVF9FTlRSSUVTLTEpYTsgZm9yIGludGVnZXIgYSBpbgogICogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgWzAsIE1BWF9DT0xPUl9MVVRfRU5UUklFUykKICAqLwot
c3RhdGljIGJvb2wgX19pc19sdXRfbGluZWFyKHN0cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQsIHVp
bnQzMl90IHNpemUpCitzdGF0aWMgYm9vbCBfX2lzX2x1dF9saW5lYXIoY29uc3Qgc3RydWN0IGRy
bV9jb2xvcl9sdXQgKmx1dCwgdWludDMyX3Qgc2l6ZSkKIHsKIAlpbnQgaTsKIAl1aW50MzJfdCBl
eHBlY3RlZDsKQEAgLTc1LDkgKzEyMyw4IEBAIHN0YXRpYyBib29sIF9faXNfbHV0X2xpbmVhcihz
dHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0LCB1aW50MzJfdCBzaXplKQogICogQ29udmVydCB0aGUg
ZHJtX2NvbG9yX2x1dCB0byBkY19nYW1tYS4gVGhlIGNvbnZlcnNpb24gZGVwZW5kcyBvbiB0aGUg
c2l6ZQogICogb2YgdGhlIGx1dCAtIHdoZXRoZXIgb3Igbm90IGl0J3MgbGVnYWN5LgogICovCi1z
dGF0aWMgdm9pZCBfX2RybV9sdXRfdG9fZGNfZ2FtbWEoc3RydWN0IGRybV9jb2xvcl9sdXQgKmx1
dCwKLQkJCQkgIHN0cnVjdCBkY19nYW1tYSAqZ2FtbWEsCi0JCQkJICBib29sIGlzX2xlZ2FjeSkK
K3N0YXRpYyB2b2lkIF9fZHJtX2x1dF90b19kY19nYW1tYShjb25zdCBzdHJ1Y3QgZHJtX2NvbG9y
X2x1dCAqbHV0LAorCQkJCSAgc3RydWN0IGRjX2dhbW1hICpnYW1tYSwgYm9vbCBpc19sZWdhY3kp
CiB7CiAJdWludDMyX3QgciwgZywgYjsKIAlpbnQgaTsKQEAgLTEwNywxMDMgKzE1NCwxNiBAQCBz
dGF0aWMgdm9pZCBfX2RybV9sdXRfdG9fZGNfZ2FtbWEoc3RydWN0IGRybV9jb2xvcl9sdXQgKmx1
dCwKIAl9CiB9CiAKLS8qKgotICogYW1kZ3B1X2RtX3NldF9yZWdhbW1hX2x1dDogU2V0IHJlZ2Ft
bWEgbHV0IGZvciB0aGUgZ2l2ZW4gQ1JUQy4KLSAqIEBjcnRjOiBhbWRncHVfZG0gY3J0YyBzdGF0
ZQotICoKLSAqIFVwZGF0ZSB0aGUgdW5kZXJseWluZyBkY19zdHJlYW1fc3RhdGUncyBvdXRwdXQg
dHJhbnNmZXIgZnVuY3Rpb24gKE9URikgaW4KLSAqIHByZXBhcmF0aW9uIGZvciBoYXJkd2FyZSBj
b21taXQuIElmIG5vIGx1dCBpcyBzcGVjaWZpZWQgYnkgdXNlciwgd2UgZGVmYXVsdAotICogdG8g
U1JHQi4KLSAqCi0gKiBSRVRVUk5TOgotICogMCBvbiBzdWNjZXNzLCAtRU5PTUVNIGlmIG1lbW9y
eSBjYW5ub3QgYmUgYWxsb2NhdGVkIHRvIGNhbGN1bGF0ZSB0aGUgT1RGLgotICovCi1pbnQgYW1k
Z3B1X2RtX3NldF9yZWdhbW1hX2x1dChzdHJ1Y3QgZG1fY3J0Y19zdGF0ZSAqY3J0YykKLXsKLQlz
dHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmJsb2IgPSBjcnRjLT5iYXNlLmdhbW1hX2x1dDsKLQlz
dHJ1Y3QgZGNfc3RyZWFtX3N0YXRlICpzdHJlYW0gPSBjcnRjLT5zdHJlYW07Ci0Jc3RydWN0IGFt
ZGdwdV9kZXZpY2UgKmFkZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKikKLQkJY3J0Yy0+YmFz
ZS5zdGF0ZS0+ZGV2LT5kZXZfcHJpdmF0ZTsKLQlzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0Owot
CXVpbnQzMl90IGx1dF9zaXplOwotCXN0cnVjdCBkY19nYW1tYSAqZ2FtbWEgPSBOVUxMOwotCWVu
dW0gZGNfdHJhbnNmZXJfZnVuY190eXBlIG9sZF90eXBlID0gc3RyZWFtLT5vdXRfdHJhbnNmZXJf
ZnVuYy0+dHlwZTsKLQotCWJvb2wgcmV0OwotCi0JaWYgKCFibG9iICYmIGFkZXYtPmFzaWNfdHlw
ZSA8PSBDSElQX1JBVkVOKSB7Ci0JCS8qIEJ5IGRlZmF1bHQsIHVzZSB0aGUgU1JHQiBwcmVkZWZp
bmVkIGN1cnZlLiovCi0JCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBF
X1BSRURFRklORUQ7Ci0JCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1bmMtPnRmID0gVFJBTlNGRVJf
RlVOQ1RJT05fU1JHQjsKLQkJcmV0dXJuIDA7Ci0JfQotCi0JaWYgKGJsb2IpIHsKLQkJbHV0ID0g
KHN0cnVjdCBkcm1fY29sb3JfbHV0ICopYmxvYi0+ZGF0YTsKLQkJbHV0X3NpemUgPSBibG9iLT5s
ZW5ndGggLyBzaXplb2Yoc3RydWN0IGRybV9jb2xvcl9sdXQpOwotCi0JCWdhbW1hID0gZGNfY3Jl
YXRlX2dhbW1hKCk7Ci0JCWlmICghZ2FtbWEpCi0JCQlyZXR1cm4gLUVOT01FTTsKLQotCQlnYW1t
YS0+bnVtX2VudHJpZXMgPSBsdXRfc2l6ZTsKLQkJaWYgKGdhbW1hLT5udW1fZW50cmllcyA9PSBN
QVhfQ09MT1JfTEVHQUNZX0xVVF9FTlRSSUVTKQotCQkJZ2FtbWEtPnR5cGUgPSBHQU1NQV9SR0Jf
MjU2OwotCQllbHNlIGlmIChnYW1tYS0+bnVtX2VudHJpZXMgPT0gTUFYX0NPTE9SX0xVVF9FTlRS
SUVTKQotCQkJZ2FtbWEtPnR5cGUgPSBHQU1NQV9DU19URk1fMUQ7Ci0JCWVsc2UgewotCQkJLyog
SW52YWxpZCBsdXQgc2l6ZSAqLwotCQkJZGNfZ2FtbWFfcmVsZWFzZSgmZ2FtbWEpOwotCQkJcmV0
dXJuIC1FSU5WQUw7Ci0JCX0KLQotCQkvKiBDb252ZXJ0IGRybV9sdXQgaW50byBkY19nYW1tYSAq
LwotCQlfX2RybV9sdXRfdG9fZGNfZ2FtbWEobHV0LCBnYW1tYSwgZ2FtbWEtPnR5cGUgPT0gR0FN
TUFfUkdCXzI1Nik7Ci0JfQotCi0JLyogcHJlZGVmaW5lZCBnYW1tYSBST00gb25seSBleGlzdCBm
b3IgUkFWRU4gYW5kIHByZS1SQVZFTiBBU0lDLAotCSAqIHNldCBjYW5Sb21CZVVzZWQgYWNjb3Jk
aW5nbHkKLQkgKi8KLQlzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jLT50eXBlID0gVEZfVFlQRV9E
SVNUUklCVVRFRF9QT0lOVFM7Ci0JcmV0ID0gbW9kX2NvbG9yX2NhbGN1bGF0ZV9yZWdhbW1hX3Bh
cmFtcyhzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jLAotCQkJZ2FtbWEsIHRydWUsIGFkZXYtPmFz
aWNfdHlwZSA8PSBDSElQX1JBVkVOLCBOVUxMKTsKLQotCWlmIChnYW1tYSkKLQkJZGNfZ2FtbWFf
cmVsZWFzZSgmZ2FtbWEpOwotCi0JaWYgKCFyZXQpIHsKLQkJc3RyZWFtLT5vdXRfdHJhbnNmZXJf
ZnVuYy0+dHlwZSA9IG9sZF90eXBlOwotCQlEUk1fRVJST1IoIk91dCBvZiBtZW1vcnkgd2hlbiBj
YWxjdWxhdGluZyByZWdhbW1hIHBhcmFtc1xuIik7Ci0JCXJldHVybiAtRU5PTUVNOwotCX0KLQot
CXJldHVybiAwOwotfQotCi0vKioKLSAqIGFtZGdwdV9kbV9zZXRfY3RtOiBTZXQgdGhlIGNvbG9y
IHRyYW5zZm9ybSBtYXRyaXggZm9yIHRoZSBnaXZlbiBDUlRDLgotICogQGNydGM6IGFtZGdwdV9k
bSBjcnRjIHN0YXRlCi0gKgotICogVXBkYXRlIHRoZSB1bmRlcmx5aW5nIGRjX3N0cmVhbV9zdGF0
ZSdzIGdhbXV0IHJlbWFwIG1hdHJpeCBpbiBwcmVwYXJhdGlvbgotICogZm9yIGhhcmR3YXJlIGNv
bW1pdC4gSWYgbm8gbWF0cml4IGlzIHNwZWNpZmllZCBieSB1c2VyLCBnYW11dCByZW1hcCB3aWxs
IGJlCi0gKiBkaXNhYmxlZC4KKy8qCisgKiBDb252ZXJ0cyBhIERSTSBDVE0gdG8gYSBEQyBDU0Mg
ZmxvYXQgbWF0cml4LgorICogVGhlIG1hdHJpeCBuZWVkcyB0byBiZSBhIDN4NCAoMTIgZW50cnkp
IG1hdHJpeC4KICAqLwotdm9pZCBhbWRncHVfZG1fc2V0X2N0bShzdHJ1Y3QgZG1fY3J0Y19zdGF0
ZSAqY3J0YykKK3N0YXRpYyB2b2lkIF9fZHJtX2N0bV90b19kY19tYXRyaXgoY29uc3Qgc3RydWN0
IGRybV9jb2xvcl9jdG0gKmN0bSwKKwkJCQkgICBzdHJ1Y3QgZml4ZWQzMV8zMiAqbWF0cml4KQog
ewotCi0Jc3RydWN0IGRybV9wcm9wZXJ0eV9ibG9iICpibG9iID0gY3J0Yy0+YmFzZS5jdG07Ci0J
c3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3RyZWFtID0gY3J0Yy0+c3RyZWFtOwotCXN0cnVjdCBk
cm1fY29sb3JfY3RtICpjdG07CiAJaW50NjRfdCB2YWw7CiAJaW50IGk7CiAKLQlpZiAoIWJsb2Ip
IHsKLQkJc3RyZWFtLT5nYW11dF9yZW1hcF9tYXRyaXguZW5hYmxlX3JlbWFwID0gZmFsc2U7Ci0J
CXJldHVybjsKLQl9Ci0KLQlzdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeC5lbmFibGVfcmVtYXAg
PSB0cnVlOwotCWN0bSA9IChzdHJ1Y3QgZHJtX2NvbG9yX2N0bSAqKWJsb2ItPmRhdGE7CiAJLyoK
IAkgKiBEUk0gZ2l2ZXMgYSAzeDMgbWF0cml4LCBidXQgREMgd2FudHMgM3g0LiBBc3N1bWluZyB3
ZSdyZSBvcGVyYXRpbmcKIAkgKiB3aXRoIGhvbW9nZW5lb3VzIGNvb3JkaW5hdGVzLCBhdWdtZW50
IHRoZSBtYXRyaXggd2l0aCAwJ3MuCkBAIC0yMTUsODMgKzE3NSwzMDYgQEAgdm9pZCBhbWRncHVf
ZG1fc2V0X2N0bShzdHJ1Y3QgZG1fY3J0Y19zdGF0ZSAqY3J0YykKIAlmb3IgKGkgPSAwOyBpIDwg
MTI7IGkrKykgewogCQkvKiBTa2lwIDR0aCBlbGVtZW50ICovCiAJCWlmIChpICUgNCA9PSAzKSB7
Ci0JCQlzdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeC5tYXRyaXhbaV0gPSBkY19maXhwdF96ZXJv
OworCQkJbWF0cml4W2ldID0gZGNfZml4cHRfemVybzsKIAkJCWNvbnRpbnVlOwogCQl9CiAKIAkJ
LyogZ2FtdXRfcmVtYXBfbWF0cml4W2ldID0gY3RtW2kgLSBmbG9vcihpLzQpXSAqLwotCQl2YWwg
PSBjdG0tPm1hdHJpeFtpIC0gKGkvNCldOworCQl2YWwgPSBjdG0tPm1hdHJpeFtpIC0gKGkgLyA0
KV07CiAJCS8qIElmIG5lZ2F0aXZlLCBjb252ZXJ0IHRvIDIncyBjb21wbGVtZW50LiAqLwogCQlp
ZiAodmFsICYgKDFVTEwgPDwgNjMpKQogCQkJdmFsID0gLSh2YWwgJiB+KDFVTEwgPDwgNjMpKTsK
IAotCQlzdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeC5tYXRyaXhbaV0udmFsdWUgPSB2YWw7CisJ
CW1hdHJpeFtpXS52YWx1ZSA9IHZhbDsKIAl9CiB9CiAKKy8qIENhbGN1bGF0ZXMgdGhlIGxlZ2Fj
eSB0cmFuc2ZlciBmdW5jdGlvbiAtIG9ubHkgZm9yIHNSR0IgaW5wdXQgc3BhY2UuICovCitzdGF0
aWMgaW50IF9fc2V0X2xlZ2FjeV90ZihzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqZnVuYywKKwkJ
CSAgIGNvbnN0IHN0cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQsIHVpbnQzMl90IGx1dF9zaXplLAor
CQkJICAgYm9vbCBoYXNfcm9tKQoreworCXN0cnVjdCBkY19nYW1tYSAqZ2FtbWEgPSBOVUxMOwor
CWJvb2wgcmVzOwogCi0vKioKLSAqIGFtZGdwdV9kbV9zZXRfZGVnYW1tYV9sdXQ6IFNldCBkZWdh
bW1hIGx1dCBmb3IgdGhlIGdpdmVuIENSVEMuCi0gKiBAY3J0YzogYW1kZ3B1X2RtIGNydGMgc3Rh
dGUKLSAqCi0gKiBVcGRhdGUgdGhlIHVuZGVybHlpbmcgZGNfc3RyZWFtX3N0YXRlJ3MgaW5wdXQg
dHJhbnNmZXIgZnVuY3Rpb24gKElURikgaW4KLSAqIHByZXBhcmF0aW9uIGZvciBoYXJkd2FyZSBj
b21taXQuIElmIG5vIGx1dCBpcyBzcGVjaWZpZWQgYnkgdXNlciwgd2UgZGVmYXVsdAotICogdG8g
U1JHQiBkZWdhbW1hLgotICoKLSAqIFdlIHN1cHBvcnQgZGVnYW1tYSBieXBhc3MsIHByZWRlZmlu
ZWQgU1JHQiwgYW5kIGN1c3RvbSBkZWdhbW1hCi0gKgotICogUkVUVVJOUzoKLSAqIDAgb24gc3Vj
Y2VzcwotICogLUVJTlZBTCBpZiBjcnRjX3N0YXRlIGhhcyBhIGRlZ2FtbWFfbHV0IG9mIGludmFs
aWQgc2l6ZQotICogLUVOT01FTSBpZiBnYW1tYSBhbGxvY2F0aW9uIGZhaWxzCi0gKi8KLWludCBh
bWRncHVfZG1fc2V0X2RlZ2FtbWFfbHV0KHN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKLQkJCSAgICAgIHN0cnVjdCBkY19wbGFuZV9zdGF0ZSAqZGNfcGxhbmVfc3RhdGUpCisJQVNT
RVJUKGx1dCAmJiBsdXRfc2l6ZSA9PSBNQVhfQ09MT1JfTEVHQUNZX0xVVF9FTlRSSUVTKTsKKwor
CWdhbW1hID0gZGNfY3JlYXRlX2dhbW1hKCk7CisJaWYgKCFnYW1tYSkKKwkJcmV0dXJuIC1FTk9N
RU07CisKKwlnYW1tYS0+dHlwZSA9IEdBTU1BX1JHQl8yNTY7CisJZ2FtbWEtPm51bV9lbnRyaWVz
ID0gbHV0X3NpemU7CisJX19kcm1fbHV0X3RvX2RjX2dhbW1hKGx1dCwgZ2FtbWEsIHRydWUpOwor
CisJcmVzID0gbW9kX2NvbG9yX2NhbGN1bGF0ZV9yZWdhbW1hX3BhcmFtcyhmdW5jLCBnYW1tYSwg
dHJ1ZSwgaGFzX3JvbSwKKwkJCQkJCSBOVUxMKTsKKworCXJldHVybiByZXMgPyAwIDogLUVOT01F
TTsKK30KKworLyogQ2FsY3VsYXRlcyB0aGUgb3V0cHV0IHRyYW5zZmVyIGZ1bmN0aW9uIGJhc2Vk
IG9uIGV4cGVjdGVkIGlucHV0IHNwYWNlLiAqLworc3RhdGljIGludCBfX3NldF9vdXRwdXRfdGYo
c3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKmZ1bmMsCisJCQkgICBjb25zdCBzdHJ1Y3QgZHJtX2Nv
bG9yX2x1dCAqbHV0LCB1aW50MzJfdCBsdXRfc2l6ZSwKKwkJCSAgIGJvb2wgaGFzX3JvbSkKIHsK
LQlzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmJsb2IgPSBjcnRjX3N0YXRlLT5kZWdhbW1hX2x1
dDsKLQlzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0OwotCXVpbnQzMl90IGx1dF9zaXplOwotCXN0
cnVjdCBkY19nYW1tYSAqZ2FtbWE7Ci0JYm9vbCByZXQ7Ci0KLQlpZiAoIWJsb2IpIHsKLQkJLyog
RGVmYXVsdCB0byBTUkdCICovCi0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50
eXBlID0gVEZfVFlQRV9QUkVERUZJTkVEOwotCQlkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNmZXJf
ZnVuYy0+dGYgPSBUUkFOU0ZFUl9GVU5DVElPTl9TUkdCOwotCQlyZXR1cm4gMDsKLQl9CisJc3Ry
dWN0IGRjX2dhbW1hICpnYW1tYSA9IE5VTEw7CisJYm9vbCByZXM7CiAKLQlsdXQgPSAoc3RydWN0
IGRybV9jb2xvcl9sdXQgKilibG9iLT5kYXRhOwotCWlmIChfX2lzX2x1dF9saW5lYXIobHV0LCBN
QVhfQ09MT1JfTFVUX0VOVFJJRVMpKSB7Ci0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9m
dW5jLT50eXBlID0gVEZfVFlQRV9CWVBBU1M7Ci0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zl
cl9mdW5jLT50ZiA9IFRSQU5TRkVSX0ZVTkNUSU9OX0xJTkVBUjsKLQkJcmV0dXJuIDA7Ci0JfQor
CUFTU0VSVChsdXQgJiYgbHV0X3NpemUgPT0gTUFYX0NPTE9SX0xVVF9FTlRSSUVTKTsKIAogCWdh
bW1hID0gZGNfY3JlYXRlX2dhbW1hKCk7CiAJaWYgKCFnYW1tYSkKIAkJcmV0dXJuIC1FTk9NRU07
CiAKLQlsdXRfc2l6ZSA9IGJsb2ItPmxlbmd0aCAvIHNpemVvZihzdHJ1Y3QgZHJtX2NvbG9yX2x1
dCk7CiAJZ2FtbWEtPm51bV9lbnRyaWVzID0gbHV0X3NpemU7Ci0JaWYgKGdhbW1hLT5udW1fZW50
cmllcyA9PSBNQVhfQ09MT1JfTFVUX0VOVFJJRVMpCisJX19kcm1fbHV0X3RvX2RjX2dhbW1hKGx1
dCwgZ2FtbWEsIGZhbHNlKTsKKworCWlmIChmdW5jLT50ZiA9PSBUUkFOU0ZFUl9GVU5DVElPTl9M
SU5FQVIpIHsKKwkJLyoKKwkJICogQ29sb3IgbW9kdWxlIGRvZXNuJ3QgbGlrZSBjYWxjdWxhdGlu
ZyByZWdhbW1hIHBhcmFtcworCQkgKiBvbiB0b3Agb2YgYSBsaW5lYXIgaW5wdXQuIEJ1dCBkZWdh
bW1hIHBhcmFtcyBjYW4gYmUgdXNlZAorCQkgKiBpbnN0ZWFkIHRvIHNpbXVsYXRlIHRoaXMuCisJ
CSAqLwogCQlnYW1tYS0+dHlwZSA9IEdBTU1BX0NVU1RPTTsKLQllbHNlIHsKLQkJZGNfZ2FtbWFf
cmVsZWFzZSgmZ2FtbWEpOwotCQlyZXR1cm4gLUVJTlZBTDsKKwkJcmVzID0gbW9kX2NvbG9yX2Nh
bGN1bGF0ZV9kZWdhbW1hX3BhcmFtcyhmdW5jLCBnYW1tYSwgdHJ1ZSk7CisJfSBlbHNlIHsKKwkJ
LyoKKwkJICogQXNzdW1lIHNSR0IuIFRoZSBhY3R1YWwgbWFwcGluZyB3aWxsIGRlcGVuZCBvbiB3
aGV0aGVyIHRoZQorCQkgKiBpbnB1dCB3YXMgbGVnYWN5IG9yIG5vdC4KKwkJICovCisJCWdhbW1h
LT50eXBlID0gR0FNTUFfQ1NfVEZNXzFEOworCQlyZXMgPSBtb2RfY29sb3JfY2FsY3VsYXRlX3Jl
Z2FtbWFfcGFyYW1zKGZ1bmMsIGdhbW1hLCBmYWxzZSwKKwkJCQkJCQkgaGFzX3JvbSwgTlVMTCk7
CiAJfQogCisJZGNfZ2FtbWFfcmVsZWFzZSgmZ2FtbWEpOworCisJcmV0dXJuIHJlcyA/IDAgOiAt
RU5PTUVNOworfQorCisvKiBDYWN1bGF0ZXMgdGhlIGlucHV0IHRyYW5zZmVyIGZ1bmN0aW9uIGJh
c2VkIG9uIGV4cGVjdGVkIGlucHV0IHNwYWNlLiAqLworc3RhdGljIGludCBfX3NldF9pbnB1dF90
ZihzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqZnVuYywKKwkJCSAgY29uc3Qgc3RydWN0IGRybV9j
b2xvcl9sdXQgKmx1dCwgdWludDMyX3QgbHV0X3NpemUpCit7CisJc3RydWN0IGRjX2dhbW1hICpn
YW1tYSA9IE5VTEw7CisJYm9vbCByZXM7CisKKwlnYW1tYSA9IGRjX2NyZWF0ZV9nYW1tYSgpOwor
CWlmICghZ2FtbWEpCisJCXJldHVybiAtRU5PTUVNOworCisJZ2FtbWEtPnR5cGUgPSBHQU1NQV9D
VVNUT007CisJZ2FtbWEtPm51bV9lbnRyaWVzID0gbHV0X3NpemU7CisKIAlfX2RybV9sdXRfdG9f
ZGNfZ2FtbWEobHV0LCBnYW1tYSwgZmFsc2UpOwogCi0JZGNfcGxhbmVfc3RhdGUtPmluX3RyYW5z
ZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBFX0RJU1RSSUJVVEVEX1BPSU5UUzsKLQlyZXQgPSBtb2Rf
Y29sb3JfY2FsY3VsYXRlX2RlZ2FtbWFfcGFyYW1zKGRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zl
cl9mdW5jLCBnYW1tYSwgdHJ1ZSk7CisJcmVzID0gbW9kX2NvbG9yX2NhbGN1bGF0ZV9kZWdhbW1h
X3BhcmFtcyhmdW5jLCBnYW1tYSwgdHJ1ZSk7CiAJZGNfZ2FtbWFfcmVsZWFzZSgmZ2FtbWEpOwot
CWlmICghcmV0KSB7Ci0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50eXBlID0g
VEZfVFlQRV9CWVBBU1M7Ci0JCURSTV9FUlJPUigiT3V0IG9mIG1lbW9yeSB3aGVuIGNhbGN1bGF0
aW5nIGRlZ2FtbWEgcGFyYW1zXG4iKTsKLQkJcmV0dXJuIC1FTk9NRU07CisKKwlyZXR1cm4gcmVz
ID8gMCA6IC1FTk9NRU07Cit9CisKKy8qKgorICogYW1kZ3B1X2RtX3VwZGF0ZV9jcnRjX2NvbG9y
X21nbXQ6IE1hcHMgRFJNIGNvbG9yIG1hbmFnZW1lbnQgdG8gREMgc3RyZWFtLgorICogQGNydGM6
IGFtZGdwdV9kbSBjcnRjIHN0YXRlCisgKgorICogV2l0aCBubyBwbGFuZSBsZXZlbCBjb2xvciBt
YW5hZ2VtZW50IHByb3BlcnRpZXMgd2UncmUgZnJlZSB0byB1c2UgYW55CisgKiBvZiB0aGUgSFcg
YmxvY2tzIGFzIGxvbmcgYXMgdGhlIENSVEMgQ1RNIGFsd2F5cyBjb21lcyBiZWZvcmUgdGhlCisg
KiBDUlRDIFJHTSBhbmQgYWZ0ZXIgdGhlIENSVEMgREdNLgorICoKKyAqIFRoZSBDUlRDIFJHTSBi
bG9jayB3aWxsIGJlIHBsYWNlZCBpbiB0aGUgUkdNIExVVCBibG9jayBpZiBpdCBpcyBub24tbGlu
ZWFyLgorICogVGhlIENSVEMgREdNIGJsb2NrIHdpbGwgYmUgcGxhY2VkIGluIHRoZSBER00gTFVU
IGJsb2NrIGlmIGl0IGlzIG5vbi1saW5lYXIuCisgKiBUaGUgQ1JUQyBDVE0gd2lsbCBiZSBwbGFj
ZWQgaW4gdGhlIGdhbXV0IHJlbWFwIGJsb2NrIGlmIGl0IGlzIG5vbi1saW5lYXIuCisgKgorICog
VGhlIFJHTSBibG9jayBpcyB0eXBpY2FsbHkgbW9yZSBmdWxseSBmZWF0dXJlZCBhbmQgYWNjdXJh
dGUgYWNyb3NzCisgKiBhbGwgQVNJQ3MgLSBEQ0UgY2FuJ3Qgc3VwcG9ydCBhIGN1c3RvbSBub24t
bGluZWFyIENSVEMgREdNLgorICoKKyAqIEZvciBzdXBwb3J0aW5nIGJvdGggcGxhbmUgbGV2ZWwg
Y29sb3IgbWFuYWdlbWVudCBhbmQgQ1JUQyBsZXZlbCBjb2xvcgorICogbWFuYWdlbWVudCBhdCBv
bmNlIHdlIGhhdmUgdG8gZWl0aGVyIHJlc3RyaWN0IHRoZSB1c2FnZSBvZiBDUlRDIHByb3BlcnRp
ZXMKKyAqIG9yIGJsZW5kIGFkanVzdG1lbnRzIHRvZ2V0aGVyLgorICoKKyAqIFJldHVybnMgMCBv
biBzdWNjZXNzLgorICovCitpbnQgYW1kZ3B1X2RtX3VwZGF0ZV9jcnRjX2NvbG9yX21nbXQoc3Ry
dWN0IGRtX2NydGNfc3RhdGUgKmNydGMpCit7CisJc3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3Ry
ZWFtID0gY3J0Yy0+c3RyZWFtOworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0KKwkJKHN0
cnVjdCBhbWRncHVfZGV2aWNlICopY3J0Yy0+YmFzZS5zdGF0ZS0+ZGV2LT5kZXZfcHJpdmF0ZTsK
Kwlib29sIGhhc19yb20gPSBhZGV2LT5hc2ljX3R5cGUgPD0gQ0hJUF9SQVZFTjsKKwlzdHJ1Y3Qg
ZHJtX2NvbG9yX2N0bSAqY3RtID0gTlVMTDsKKwljb25zdCBzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAq
ZGVnYW1tYV9sdXQsICpyZWdhbW1hX2x1dDsKKwl1aW50MzJfdCBkZWdhbW1hX3NpemUsIHJlZ2Ft
bWFfc2l6ZTsKKwlib29sIGhhc19yZWdhbW1hLCBoYXNfZGVnYW1tYTsKKwlib29sIGlzX2xlZ2Fj
eTsKKwlpbnQgcjsKKworCWRlZ2FtbWFfbHV0ID0gX19leHRyYWN0X2Jsb2JfbHV0KGNydGMtPmJh
c2UuZGVnYW1tYV9sdXQsICZkZWdhbW1hX3NpemUpOworCWlmIChkZWdhbW1hX2x1dCAmJiBkZWdh
bW1hX3NpemUgIT0gTUFYX0NPTE9SX0xVVF9FTlRSSUVTKQorCQlyZXR1cm4gLUVJTlZBTDsKKwor
CXJlZ2FtbWFfbHV0ID0gX19leHRyYWN0X2Jsb2JfbHV0KGNydGMtPmJhc2UuZ2FtbWFfbHV0LCAm
cmVnYW1tYV9zaXplKTsKKwlpZiAocmVnYW1tYV9sdXQgJiYgcmVnYW1tYV9zaXplICE9IE1BWF9D
T0xPUl9MVVRfRU5UUklFUyAmJgorCSAgICByZWdhbW1hX3NpemUgIT0gTUFYX0NPTE9SX0xFR0FD
WV9MVVRfRU5UUklFUykKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwloYXNfZGVnYW1tYSA9CisJCWRl
Z2FtbWFfbHV0ICYmICFfX2lzX2x1dF9saW5lYXIoZGVnYW1tYV9sdXQsIGRlZ2FtbWFfc2l6ZSk7
CisKKwloYXNfcmVnYW1tYSA9CisJCXJlZ2FtbWFfbHV0ICYmICFfX2lzX2x1dF9saW5lYXIocmVn
YW1tYV9sdXQsIHJlZ2FtbWFfc2l6ZSk7CisKKwlpc19sZWdhY3kgPSByZWdhbW1hX3NpemUgPT0g
TUFYX0NPTE9SX0xFR0FDWV9MVVRfRU5UUklFUzsKKworCS8qIFJlc2V0IGFsbCBhZGp1c3RtZW50
cy4gKi8KKwljcnRjLT5jbV9oYXNfZGVnYW1tYSA9IGZhbHNlOworCWNydGMtPmNtX2lzX2RlZ2Ft
bWFfc3JnYiA9IGZhbHNlOworCisJLyogU2V0dXAgcmVnYW1tYSBhbmQgZGVnYW1tYS4gKi8KKwlp
ZiAoaXNfbGVnYWN5KSB7CisJCS8qCisJCSAqIExlZ2FjeSByZWdhbW1hIGZvcmNlcyB1cyB0byB1
c2UgdGhlIHNSR0IgUkdNIGFzIGEgYmFzZS4KKwkJICogVGhpcyBhbHNvIG1lYW5zIHdlIGNhbid0
IHVzZSBsaW5lYXIgREdNIHNpbmNlIERHTSBuZWVkcworCQkgKiB0byB1c2Ugc1JHQiBhcyBhIGJh
c2UgYXMgd2VsbCwgcmVzdWx0aW5nIGluIGluY29ycmVjdCBDUlRDCisJCSAqIERHTSBhbmQgQ1JU
QyBDVE0uCisJCSAqCisJCSAqIFRPRE86IEp1c3QgbWFwIHRoaXMgdG8gdGhlIHN0YW5kYXJkIHJl
Z2FtbWEgaW50ZXJmYWNlCisJCSAqIGluc3RlYWQgc2luY2UgdGhpcyBpc24ndCByZWFsbHkgcmln
aHQuIE9uZSBvZiB0aGUgY2FzZXMKKwkJICogd2hlcmUgdGhpcyBzZXR1cCBjdXJyZW50bHkgZmFp
bHMgaXMgdHJ5aW5nIHRvIGRvIGFuCisJCSAqIGludmVyc2UgY29sb3IgcmFtcCBpbiBsZWdhY3kg
dXNlcnNwYWNlLgorCQkgKi8KKwkJY3J0Yy0+Y21faXNfZGVnYW1tYV9zcmdiID0gdHJ1ZTsKKwkJ
c3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYy0+dHlwZSA9IFRGX1RZUEVfRElTVFJJQlVURURfUE9J
TlRTOworCQlzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jLT50ZiA9IFRSQU5TRkVSX0ZVTkNUSU9O
X1NSR0I7CisKKwkJciA9IF9fc2V0X2xlZ2FjeV90ZihzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5j
LCByZWdhbW1hX2x1dCwKKwkJCQkgICAgcmVnYW1tYV9zaXplLCBoYXNfcm9tKTsKKwkJaWYgKHIp
CisJCQlyZXR1cm4gcjsKKwl9IGVsc2UgaWYgKGhhc19yZWdhbW1hKSB7CisJCS8qIENSVEMgUkdN
IGdvZXMgaW50byBSR00gTFVULiAqLworCQlzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jLT50eXBl
ID0gVEZfVFlQRV9ESVNUUklCVVRFRF9QT0lOVFM7CisJCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1
bmMtPnRmID0gVFJBTlNGRVJfRlVOQ1RJT05fTElORUFSOworCisJCXIgPSBfX3NldF9vdXRwdXRf
dGYoc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYywgcmVnYW1tYV9sdXQsCisJCQkJICAgIHJlZ2Ft
bWFfc2l6ZSwgaGFzX3JvbSk7CisJCWlmIChyKQorCQkJcmV0dXJuIHI7CisJfSBlbHNlIHsKKwkJ
LyoKKwkJICogTm8gQ1JUQyBSR00gbWVhbnMgd2UgY2FuIGp1c3QgcHV0IHRoZSBibG9jayBpbnRv
IGJ5cGFzcworCQkgKiBzaW5jZSB3ZSBkb24ndCBoYXZlIGFueSBwbGFuZSBsZXZlbCBhZGp1c3Rt
ZW50cyB1c2luZyBpdC4KKwkJICovCisJCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1bmMtPnR5cGUg
PSBURl9UWVBFX0JZUEFTUzsKKwkJc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYy0+dGYgPSBUUkFO
U0ZFUl9GVU5DVElPTl9MSU5FQVI7CisJfQorCisJLyoKKwkgKiBDUlRDIERHTSBnb2VzIGludG8g
REdNIExVVC4gSXQgd291bGQgYmUgbmljZSB0byBwbGFjZSBpdAorCSAqIGludG8gdGhlIFJHTSBz
aW5jZSBpdCdzIGEgbW9yZSBmZWF0dXJlZCBibG9jayBidXQgd2UnZAorCSAqIGhhdmUgdG8gcGxh
Y2UgdGhlIENUTSBpbiB0aGUgT0NTQyBpbiB0aGF0IGNhc2UuCisJICovCisJY3J0Yy0+Y21faGFz
X2RlZ2FtbWEgPSBoYXNfZGVnYW1tYTsKKworCS8qIFNldHVwIENSVEMgQ1RNLiAqLworCWlmIChj
cnRjLT5iYXNlLmN0bSkgeworCQljdG0gPSAoc3RydWN0IGRybV9jb2xvcl9jdG0gKiljcnRjLT5i
YXNlLmN0bS0+ZGF0YTsKKworCQkvKgorCQkgKiBHYW11dCByZW1hcHBpbmcgbXVzdCBiZSB1c2Vk
IGZvciBnYW1tYSBjb3JyZWN0aW9uCisJCSAqIHNpbmNlIGl0IGNvbWVzIGJlZm9yZSB0aGUgcmVn
YW1tYSBjb3JyZWN0aW9uLgorCQkgKgorCQkgKiBPQ1NDIGNvdWxkIGJlIHVzZWQgZm9yIGdhbW1h
IGNvcnJlY3Rpb24sIGJ1dCB3ZSdkIG5lZWQgdG8KKwkJICogYmxlbmQgdGhlIGFkanVzdG1lbnRz
IHRvZ2V0aGVyIHdpdGggdGhlIHJlcXVpcmVkIG91dHB1dAorCQkgKiBjb252ZXJzaW9uIG1hdHJp
eCAtIHNvIGp1c3QgdXNlIHRoZSBnYW11dCByZW1hcCBibG9jaworCQkgKiBmb3Igbm93LgorCQkg
Ki8KKwkJX19kcm1fY3RtX3RvX2RjX21hdHJpeChjdG0sIHN0cmVhbS0+Z2FtdXRfcmVtYXBfbWF0
cml4Lm1hdHJpeCk7CisKKwkJc3RyZWFtLT5nYW11dF9yZW1hcF9tYXRyaXguZW5hYmxlX3JlbWFw
ID0gdHJ1ZTsKKwkJc3RyZWFtLT5jc2NfY29sb3JfbWF0cml4LmVuYWJsZV9hZGp1c3RtZW50ID0g
ZmFsc2U7CisJfSBlbHNlIHsKKwkJLyogQnlwYXNzIENUTS4gKi8KKwkJc3RyZWFtLT5nYW11dF9y
ZW1hcF9tYXRyaXguZW5hYmxlX3JlbWFwID0gZmFsc2U7CisJCXN0cmVhbS0+Y3NjX2NvbG9yX21h
dHJpeC5lbmFibGVfYWRqdXN0bWVudCA9IGZhbHNlOwogCX0KIAogCXJldHVybiAwOwogfQogCisv
KioKKyAqIGFtZGdwdV9kbV91cGRhdGVfcGxhbmVfY29sb3JfbWdtdDogTWFwcyBEUk0gY29sb3Ig
bWFuYWdlbWVudCB0byBEQyBwbGFuZS4KKyAqIEBjcnRjOiBhbWRncHVfZG0gY3J0YyBzdGF0ZQor
ICogQCBkY19wbGFuZV9zdGF0ZTogdGFyZ2V0IERDIHN1cmZhY2UKKyAqCisgKiBVcGRhdGUgdGhl
IHVuZGVybHlpbmcgZGNfc3RyZWFtX3N0YXRlJ3MgaW5wdXQgdHJhbnNmZXIgZnVuY3Rpb24gKElU
RikgaW4KKyAqIHByZXBhcmF0aW9uIGZvciBoYXJkd2FyZSBjb21taXQuIFRoZSB0cmFuc2ZlciBm
dW5jdGlvbiB1c2VkIGRlcGVuZHMgb24KKyAqIHRoZSBwcmVwYXJ0aW9uIGRvbmUgb24gdGhlIHN0
cmVhbSBmb3IgY29sb3IgbWFuYWdlbWVudC4KKyAqCisgKiBSZXR1cm5zIDAgb24gc3VjY2Vzcy4K
KyAqLworaW50IGFtZGdwdV9kbV91cGRhdGVfcGxhbmVfY29sb3JfbWdtdChzdHJ1Y3QgZG1fY3J0
Y19zdGF0ZSAqY3J0YywKKwkJCQkgICAgICBzdHJ1Y3QgZGNfcGxhbmVfc3RhdGUgKmRjX3BsYW5l
X3N0YXRlKQoreworCWNvbnN0IHN0cnVjdCBkcm1fY29sb3JfbHV0ICpkZWdhbW1hX2x1dDsKKwl1
aW50MzJfdCBkZWdhbW1hX3NpemU7CisJaW50IHI7CisKKwlpZiAoY3J0Yy0+Y21faGFzX2RlZ2Ft
bWEpIHsKKwkJZGVnYW1tYV9sdXQgPSBfX2V4dHJhY3RfYmxvYl9sdXQoY3J0Yy0+YmFzZS5kZWdh
bW1hX2x1dCwKKwkJCQkJCSAmZGVnYW1tYV9zaXplKTsKKwkJQVNTRVJUKGRlZ2FtbWFfc2l6ZSA9
PSBNQVhfQ09MT1JfTFVUX0VOVFJJRVMpOworCisJCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zl
cl9mdW5jLT50eXBlID0KKwkJCVRGX1RZUEVfRElTVFJJQlVURURfUE9JTlRTOworCisJCS8qCisJ
CSAqIFRoaXMgY2FzZSBpc24ndCBmdWxseSBjb3JyZWN0LCBidXQgYWxzbyBmYWlybHkKKwkJICog
dW5jb21tb24uIFRoaXMgaXMgdXNlcnNwYWNlIHRyeWluZyB0byB1c2UgYQorCQkgKiBsZWdhY3kg
Z2FtbWEgTFVUICsgYXRvbWljIGRlZ2FtbWEgTFVUCisJCSAqIGF0IHRoZSBzYW1lIHRpbWUuCisJ
CSAqCisJCSAqIExlZ2FjeSBnYW1tYSByZXF1aXJlcyB0aGUgaW5wdXQgdG8gYmUgaW4gbGluZWFy
CisJCSAqIHNwYWNlLCBzbyB0aGF0IG1lYW5zIHdlIG5lZWQgdG8gYXBwbHkgYW4gc1JHQgorCQkg
KiBkZWdhbW1hLiBCdXQgY29sb3IgbW9kdWxlIGFsc28gZG9lc24ndCBzdXBwb3J0CisJCSAqIGEg
dXNlciByYW1wIGluIHRoaXMgY2FzZSBzbyB0aGUgZGVnYW1tYSB3aWxsCisJCSAqIGJlIGxvc3Qu
CisJCSAqCisJCSAqIEV2ZW4gaWYgd2UgZGlkIHN1cHBvcnQgaXQsIGl0J3Mgc3RpbGwgbm90IHJp
Z2h0OgorCQkgKgorCQkgKiBJbnB1dCAtPiBDUlRDIERHTSAtPiBzUkdCIERHTSAtPiBDUlRDIENU
TSAtPgorCQkgKiBzUkdCIFJHTSAtPiBDUlRDIFJHTSAtPiBPdXRwdXQKKwkJICoKKwkJICogVGhl
IENTQyB3aWxsIGJlIGRvbmUgaW4gdGhlIHdyb25nIHNwYWNlIHNpbmNlCisJCSAqIHdlJ3JlIGFw
cGx5aW5nIGFuIHNSR0IgREdNIG9uIHRvcCBvZiB0aGUgQ1JUQworCQkgKiBER00uCisJCSAqCisJ
CSAqIFRPRE86IERvbid0IHVzZSB0aGUgbGVnYWN5IGdhbW1hIGludGVyZmFjZSBhbmQganVzdAor
CQkgKiBtYXAgdGhlc2UgdG8gdGhlIGF0b21pYyBvbmUgaW5zdGVhZC4KKwkJICovCisJCWlmIChj
cnRjLT5jbV9pc19kZWdhbW1hX3NyZ2IpCisJCQlkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNmZXJf
ZnVuYy0+dGYgPQorCQkJCVRSQU5TRkVSX0ZVTkNUSU9OX1NSR0I7CisJCWVsc2UKKwkJCWRjX3Bs
YW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50ZiA9CisJCQkJVFJBTlNGRVJfRlVOQ1RJT05f
TElORUFSOworCisJCXIgPSBfX3NldF9pbnB1dF90ZihkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNm
ZXJfZnVuYywKKwkJCQkgICBkZWdhbW1hX2x1dCwgZGVnYW1tYV9zaXplKTsKKwkJaWYgKHIpCisJ
CQlyZXR1cm4gcjsKKwl9IGVsc2UgaWYgKGNydGMtPmNtX2lzX2RlZ2FtbWFfc3JnYikgeworCQkv
KgorCQkgKiBGb3IgbGVnYWN5IGdhbW1hIHN1cHBvcnQgd2UgbmVlZCB0aGUgcmVnYW1tYSBpbnB1
dAorCQkgKiBpbiBsaW5lYXIgc3BhY2UuIEFzc3VtZSB0aGF0IHRoZSBpbnB1dCBpcyBzUkdCLgor
CQkgKi8KKwkJZGNfcGxhbmVfc3RhdGUtPmluX3RyYW5zZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBF
X1BSRURFRklORUQ7CisJCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50ZiA9IFRS
QU5TRkVSX0ZVTkNUSU9OX1NSR0I7CisJfSBlbHNlIHsKKwkJLyogLi4uT3RoZXJ3aXNlIHdlIGNh
biBqdXN0IGJ5cGFzcyB0aGUgREdNIGJsb2NrLiAqLworCQlkY19wbGFuZV9zdGF0ZS0+aW5fdHJh
bnNmZXJfZnVuYy0+dHlwZSA9IFRGX1RZUEVfQllQQVNTOworCQlkY19wbGFuZV9zdGF0ZS0+aW5f
dHJhbnNmZXJfZnVuYy0+dGYgPSBUUkFOU0ZFUl9GVU5DVElPTl9MSU5FQVI7CisJfQorCisJcmV0
dXJuIDA7Cit9Ci0tIAoyLjE3LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0
b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1k
LWdmeA==
