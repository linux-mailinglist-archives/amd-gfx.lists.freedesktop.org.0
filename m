Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3C0BD268C1
	for <lists+amd-gfx@lfdr.de>; Wed, 22 May 2019 18:59:28 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8CA0889C52;
	Wed, 22 May 2019 16:59:26 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from foss.arm.com (foss.arm.com [217.140.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTP id C0D178990D;
 Wed, 22 May 2019 16:35:36 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 39D60341;
 Wed, 22 May 2019 09:35:36 -0700 (PDT)
Received: from mbp (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 1CE693F5AF;
 Wed, 22 May 2019 09:35:29 -0700 (PDT)
Date: Wed, 22 May 2019 17:35:27 +0100
From: Catalin Marinas <catalin.marinas@arm.com>
To: enh <enh@google.com>
Subject: Re: [PATCH v15 00/17] arm64: untag user pointers passed to the kernel
Message-ID: <20190522163527.rnnc6t4tll7tk5zw@mbp>
References: <cover.1557160186.git.andreyknvl@google.com>
 <20190517144931.GA56186@arrakis.emea.arm.com>
 <CAFKCwrj6JEtp4BzhqO178LFJepmepoMx=G+YdC8sqZ3bcBp3EQ@mail.gmail.com>
 <20190521182932.sm4vxweuwo5ermyd@mbp>
 <201905211633.6C0BF0C2@keescook>
 <20190522101110.m2stmpaj7seezveq@mbp>
 <CAJgzZoosKBwqXRyA6fb8QQSZXFqfHqe9qO9je5TogHhzuoGXJQ@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <CAJgzZoosKBwqXRyA6fb8QQSZXFqfHqe9qO9je5TogHhzuoGXJQ@mail.gmail.com>
User-Agent: NeoMutt/20170113 (1.7.2)
X-Mailman-Approved-At: Wed, 22 May 2019 16:59:26 +0000
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, kvm@vger.kernel.org,
 Szabolcs Nagy <Szabolcs.Nagy@arm.com>, Will Deacon <will.deacon@arm.com>,
 dri-devel@lists.freedesktop.org,
 Linux Memory Management List <linux-mm@kvack.org>,
 Khalid Aziz <khalid.aziz@oracle.com>,
 "open list:KERNEL SELFTEST FRAMEWORK" <linux-kselftest@vger.kernel.org>,
 Vincenzo Frascino <vincenzo.frascino@arm.com>,
 Jacob Bramley <Jacob.Bramley@arm.com>, Leon Romanovsky <leon@kernel.org>,
 linux-rdma@vger.kernel.org, amd-gfx@lists.freedesktop.org,
 Dmitry Vyukov <dvyukov@google.com>, Dave Martin <Dave.Martin@arm.com>,
 Evgenii Stepanov <eugenis@google.com>, linux-media@vger.kernel.org,
 Kevin Brodsky <kevin.brodsky@arm.com>, Kees Cook <keescook@chromium.org>,
 Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
 Andrey Konovalov <andreyknvl@google.com>,
 Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
 Alex Williamson <alex.williamson@redhat.com>,
 Yishai Hadas <yishaih@mellanox.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>,
 Linux ARM <linux-arm-kernel@lists.infradead.org>,
 Kostya Serebryany <kcc@google.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Felix Kuehling <Felix.Kuehling@amd.com>, LKML <linux-kernel@vger.kernel.org>,
 Jens Wiklander <jens.wiklander@linaro.org>, Lee Smith <Lee.Smith@arm.com>,
 Alexander Deucher <Alexander.Deucher@amd.com>,
 Andrew Morton <akpm@linux-foundation.org>, Robin Murphy <robin.murphy@arm.com>,
 Christian Koenig <Christian.Koenig@amd.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

T24gV2VkLCBNYXkgMjIsIDIwMTkgYXQgMDg6MzA6MjFBTSAtMDcwMCwgZW5oIHdyb3RlOgo+IE9u
IFdlZCwgTWF5IDIyLCAyMDE5IGF0IDM6MTEgQU0gQ2F0YWxpbiBNYXJpbmFzIDxjYXRhbGluLm1h
cmluYXNAYXJtLmNvbT4gd3JvdGU6Cj4gPiBPbiBUdWUsIE1heSAyMSwgMjAxOSBhdCAwNTowNDoz
OVBNIC0wNzAwLCBLZWVzIENvb2sgd3JvdGU6Cj4gPiA+IEkganVzdCB3YW50IHRvIG1ha2Ugc3Vy
ZSBJIGZ1bGx5IHVuZGVyc3RhbmQgeW91ciBjb25jZXJuIGFib3V0IHRoaXMKPiA+ID4gYmVpbmcg
YW4gQUJJIGJyZWFrLCBhbmQgSSB3b3JrIGJlc3Qgd2l0aCBleGFtcGxlcy4gVGhlIGNsb3Nlc3Qg
c2l0dWF0aW9uCj4gPiA+IEkgY2FuIHNlZSB3b3VsZCBiZToKPiA+ID4KPiA+ID4gLSBzb21lIHBy
b2dyYW0gaGFzIG5vIGlkZWEgYWJvdXQgTVRFCj4gPgo+ID4gQXBhcnQgZnJvbSBzb21lIGxpYnJh
cmllcyBsaWtlIGxpYmMgKGFuZCBtYXliZSB0aG9zZSB0aGF0IGhhbmRsZQo+ID4gc3BlY2lmaWMg
ZGV2aWNlIGlvY3RscyksIEkgdGhpbmsgbW9zdCBwcm9ncmFtcyBzaG91bGQgaGF2ZSBubyBpZGVh
IGFib3V0Cj4gPiBNVEUuIEkgd291bGRuJ3QgZXhwZWN0IHByb2dyYW1tZXJzIHRvIGhhdmUgdG8g
Y2hhbmdlIHRoZWlyIGFwcCBqdXN0Cj4gPiBiZWNhdXNlIHdlIGhhdmUgYSBuZXcgZmVhdHVyZSB0
aGF0IGNvbG91cnMgaGVhcCBhbGxvY2F0aW9ucy4KPiAKPiBvYnZpb3VzbHkgaSdtIGJpYXNlZCBh
cyBhIGxpYmMgbWFpbnRhaW5lciwgYnV0Li4uCj4gCj4gaSBkb24ndCB0aGluayBpdCBoZWxwcyB0
byBtb3ZlIHRoaXMgdG8gbGliYyAtLS0gbm93IHlvdSBqdXN0IGhhdmUgYW4KPiBleHRyYSBkZXBl
bmRlbmN5IHdoZXJlIHRvIGhhdmUgYSBndWFyYW50ZWVkIHdvcmtpbmcgc3lzdGVtIHlvdSBuZWVk
IHRvCj4gdXBkYXRlIHlvdXIga2VybmVsIGFuZCBsaWJjIHRvZ2V0aGVyLiAob3IgYXQgbGVhc3Qg
dXBkYXRlIHlvdXIgbGliYyB0bwo+IHVuZGVyc3RhbmQgbmV3IGlvY3RscyBldGMgX2JlZm9yZV8g
eW91IGNhbiB1cGRhdGUgeW91ciBrZXJuZWwuKQoKVGhhdCdzIG5vdCB3aGF0IEkgbWVhbnQgKG9y
IEkgbWlzdW5kZXJzdG9vZCB5b3UpLiBJZiB3ZSBoYXZlIGEgcmVsYXhlZApBQkkgaW4gdGhlIGtl
cm5lbCBhbmQgYSBsaWJjIHRoYXQgcmV0dXJucyB0YWdnZWQgcG9pbnRlcnMgb24gbWFsbG9jKCkg
SQp3b3VsZG4ndCBleHBlY3QgdGhlIHByb2dyYW1tZXIgdG8gZG8gYW55dGhpbmcgZGlmZmVyZW50
IGluIHRoZQphcHBsaWNhdGlvbiBjb2RlIGxpa2UgZXhwbGljaXQgdW50YWdnaW5nLiBCYXNpY2Fs
bHkgdGhlIHByb2dyYW0gd291bGQKY29udGludWUgdG8gcnVuIHVubW9kaWZpZWQgaXJyZXNwZWN0
aXZlIG9mIHdoZXRoZXIgeW91IHVzZSBhbiBvbGQgbGliYwp3aXRob3V0IHRhZ2dlZCBwb2ludGVy
cyBvciBhIG5ldyBvbmUgd2hpY2ggdGFncyBoZWFwIGFsbG9jYXRpb25zLgoKV2hhdCBJIGRvIGV4
cGVjdCBpcyB0aGF0IHRoZSBsaWJjIGNoZWNrcyBmb3IgdGhlIHByZXNlbmNlIG9mIHRoZSByZWxh
eGVkCkFCSSwgY3VycmVudGx5IHByb3Bvc2VkIGFzIGFuIEFUX0ZMQUdTIGJpdCAoZm9yIE1URSB3
ZSdkIGhhdmUgYQpIV0NBUF9NVEUpLCBhbmQgb25seSB0YWcgdGhlIG1hbGxvYygpIHBvaW50ZXJz
IGlmIHRoZSBrZXJuZWwgc3VwcG9ydHMKdGhlIHJlbGF4ZWQgQUJJLiBBcyB5b3Ugc2FpZCwgeW91
IHNob3VsZG4ndCBleHBlY3QgdGhhdCB0aGUgQyBsaWJyYXJ5CmFuZCBrZXJuZWwgYXJlIHVwZ3Jh
ZGVkIHRvZ2V0aGVyLCBzbyB0aGV5IHNob3VsZCBiZSBhYmxlIHRvIHdvcmsgaW4gYW55Cm5ldy9v
bGQgdmVyc2lvbiBjb21iaW5hdGlvbi4KCj4gPiA+IFRoZSB0cm91YmxlIEkgc2VlIHdpdGggdGhp
cyBpcyB0aGF0IGl0IGlzIGxhcmdlbHkgdGhlb3JldGljYWwgYW5kCj4gPiA+IHJlcXVpcmVzIHBh
cnQgb2YgdXNlcnNwYWNlIHRvIGNvbGx1ZGUgdG8gc3RhcnQgdXNpbmcgYSBuZXcgQ1BVIGZlYXR1
cmUKPiA+ID4gdGhhdCB0aWNrbGVzIGEgYnVnIGluIHRoZSBrZXJuZWwuIEFzIEkgdW5kZXJzdGFu
ZCB0aGUgZ29sZGVuIHJ1bGUsCj4gPiA+IHRoaXMgaXMgYSBidWcgaW4gdGhlIGtlcm5lbCAoYSBt
aXNzZWQgaW9jdGwoKSBvciBzdWNoKSB0byBiZSBmaXhlZCwKPiA+ID4gbm90IGEgZ2xvYmFsIGJy
ZWFraW5nIG9mIHNvbWUgdXNlcnNwYWNlIGJlaGF2aW9yLgo+ID4KPiA+IFllcywgd2Ugc2hvdWxk
IGZvbGxvdyB0aGUgcnVsZSB0aGF0IGl0J3MgYSBrZXJuZWwgYnVnIGJ1dCBpdCBkb2Vzbid0Cj4g
PiBoZWxwIHRoZSB1c2VyIHRoYXQgYSBuZXdseSBpbnN0YWxsZWQga2VybmVsIGNhdXNlcyB1c2Vy
IHNwYWNlIHRvIG5vCj4gPiBsb25nZXIgcmVhY2ggYSBwcm9tcHQuIEhlbmNlIHRoZSBwcm9wb3Nh
bCBvZiBhbiBvcHQtaW4gdmlhIHBlcnNvbmFsaXR5Cj4gPiAoZm9yIE1URSB3ZSB3b3VsZCBuZWVk
IGFuIGV4cGxpY2l0IG9wdC1pbiBieSB0aGUgdXNlciBhbnl3YXkgc2luY2UgdGhlCj4gPiB0b3Ag
Ynl0ZSBpcyBubyBsb25nZXIgaWdub3JlZCBidXQgY2hlY2tlZCBhZ2FpbnN0IHRoZSBhbGxvY2F0
aW9uIHRhZykuCj4gCj4gYnV0IHJlYWxpc3RpY2FsbHkgd291bGQgdGhpcyBhY3R1YWxseSBnZXQg
dXNlZCBpbiB0aGlzIHdheT8gb3Igd291bGQKPiBhbnkgZ2l2ZW4gc3lzdGVtIGVpdGhlciBiZSBN
VEUgb3Igbm9uLU1URS4gaW4gd2hpY2ggY2FzZSBhIGtlcm5lbAo+IGNvbmZpZ3VyYXRpb24gb3B0
aW9uIHdvdWxkIHNlZW0gdG8gbWFrZSBtb3JlIHNlbnNlLiAoYmVjYXVzZSBlaXRoZXIKPiB3YXks
IHRoZSBoeXBvdGhldGljYWwgdXNlciBiYXNpY2FsbHkgbmVlZHMgdG8gcmVjb21waWxlIHRoZSBr
ZXJuZWwgdG8KPiBnZXQgYmFjayBvbiB0aGVpciBmZWV0LiBvciBhbGwgb2YgdXNlcnNwYWNlLikK
ClRoZSB0d28gaGFyZCByZXF1aXJlbWVudHMgSSBoYXZlIGZvciBzdXBwb3J0aW5nIGFueSBuZXcg
aGFyZHdhcmUgZmVhdHVyZQppbiBMaW51eCBhcmUgKDEpIGEgc2luZ2xlIGtlcm5lbCBpbWFnZSBi
aW5hcnkgY29udGludWVzIHRvIHJ1biBvbiBvbGQKaGFyZHdhcmUgd2hpbGUgbWFraW5nIHVzZSBv
ZiB0aGUgbmV3IGZlYXR1cmUgaWYgYXZhaWxhYmxlIGFuZCAoMikgb2xkCnVzZXIgc3BhY2UgY29u
dGludWVzIHRvIHJ1biBvbiBuZXcgaGFyZHdhcmUgd2hpbGUgbmV3IHVzZXIgc3BhY2UgY2FuCnRh
a2UgYWR2YW50YWdlIG9mIHRoZSBuZXcgZmVhdHVyZS4KClRoZSBkaXN0cm8gdXNlciBzcGFjZSB1
c3VhbGx5IGhhcyBhIGhhcmQgcmVxdWlyZW1lbnQgdGhhdCBpdCBjb250aW51ZXMKdG8gcnVuIG9u
IChjZXJ0YWluKSBvbGQgaGFyZHdhcmUuIFdlIGNhbid0IGVuZm9yY2UgdGhpcyBpbiB0aGUga2Vy
bmVsCmJ1dCB3ZSBvZmZlciB0aGUgb3B0aW9uIHRvIHVzZXIgc3BhY2UgZGV2ZWxvcGVycyBvZiBj
aGVja2luZyBmZWF0dXJlCmF2YWlsYWJpbGl0eSB0aHJvdWdoIEhXQ0FQIGJpdHMuCgpUaGUgQW5k
cm9pZCBzdG9yeSBtYXkgYmUgZGlmZmVyZW50IGFzIHlvdSBoYXZlIG1vcmUgY29udHJvbCBhYm91
dCB3aGljaAprZXJuZWwgY29uZmlndXJhdGlvbnMgYXJlIGRlcGxveWVkIG9uIHNwZWNpZmljIFNv
Q3MuIEknbSBsb29raW5nIG1vcmUKZnJvbSBhIExpbnV4IGRpc3RybyBhbmdsZSB3aGVyZSB5b3Ug
anVzdCBnZXQgYW4gb2ZmLXRoZS1zaGVsZiBPUyBpbWFnZQphbmQgaW5zdGFsbCBpdCBvbiB5b3Vy
IGhhcmR3YXJlLCBlaXRoZXIgdGFraW5nIGFkdmFudGFnZSBvZiBuZXcgZmVhdHVyZXMKb3IganVz
dCBub3QgdXNpbmcgdGhlbSBpZiB0aGUgc29mdHdhcmUgd2FzIG5vdCB1cGRhdGVkLiBPciwgaWYg
dXBkYXRlZApzb2Z0d2FyZSBpcyBpbnN0YWxsZWQgb24gb2xkIGhhcmR3YXJlLCBpdCB3b3VsZCBq
dXN0IHJ1bi4KCkZvciBNVEUsIHdlIGp1c3QgY2FuJ3QgZW5hYmxlIGl0IGJ5IGRlZmF1bHQgc2lu
Y2UgdGhlcmUgYXJlIGFwcGxpY2F0aW9ucwp3aG8gdXNlIHRoZSB0b3AgYnl0ZSBvZiBhIHBvaW50
ZXIgYW5kIGV4cGVjdCBpdCB0byBiZSBpZ25vcmVkIHJhdGhlcgp0aGFuIGZhaWxpbmcgd2l0aCBh
IG1pc21hdGNoZWQgdGFnLiBKdXN0IHRoaW5rIG9mIGEgaHdhc2FuIGNvbXBpbGVkCmJpbmFyeSB3
aGVyZSBUQkkgaXMgZXhwZWN0ZWQgdG8gd29yayBhbmQgeW91IHRyeSB0byBydW4gaXQgd2l0aCBN
VEUKdHVybmVkIG9uLgoKSSB3b3VsZCBhbHNvIGV4cGVjdCB0aGUgQyBsaWJyYXJ5IG9yIGR5bmFt
aWMgbG9hZGVyIHRvIGNoZWNrIGZvciB0aGUKcHJlc2VuY2Ugb2YgYSBIV0NBUF9NVEUgYml0IGJl
Zm9yZSBzdGFydGluZyB0byB0YWcgbWVtb3J5IGFsbG9jYXRpb25zLApvdGhlcndpc2UgaXQgd291
bGQgZ2V0IFNJR0lMTCBvbiB0aGUgZmlyc3QgTVRFIGluc3RydWN0aW9uIGl0IHRyaWVzIHRvCmV4
ZWN1dGUuCgo+IGknbSBub3Qgc3VyZSBpIHNlZSB0aGlzIG5ldyB3YXkgZm9yIGEga2VybmVsIHVw
ZGF0ZSB0byBicmVhayBteSBzeXN0ZW0KPiBhbmQgbmVlZCB0byBiZSBmaXhlZCBmb3J3YXJkL3Jv
bGxlZCBiYWNrIGFzIGFueSBkaWZmZXJlbnQgZnJvbSBhbnkgb2YKPiB0aGUgZXhpc3Rpbmcgd2F5
cyBpbiB3aGljaCB0aGlzIGNhbiBoYXBwZW4gOi0pIGFzIGFuIGVuZC11c2VyIGkgaGF2ZQo+IHRv
IHJlbHkgb24gd2hvZXZlcidzIHNlbmRpbmcgbWUgc29mdHdhcmUgdXBkYXRlcyB0byB0ZXN0IGFk
ZXF1YXRlbHkKPiBlbm91Z2ggdGhhdCB0aGV5IGZpbmQgdGhlIHByb2JsZW1zLiBhcyBhbiBlbmQg
dXNlciwgdGhlcmUgaXNuJ3QgYW55Cj4gZGlmZmVyZW5jZSBiZXR3ZWVuICJteSBwaG9uZSByZWJv
b3RlZCB3aGVuIGkgdHJpZWQgdG8gdGFrZSBhIHBob3RvCj4gYmVjYXVzZSBvZiBhIGtlcm5lbC9k
cml2ZXIgbGVhayIsIHNheSwgYW5kICJteSBwaG9uZSByZWJvb3RlZCB3aGVuIGkKPiB0cmllZCB0
byB0YWtlIGEgcGhvdG8gYmVjYXVzZSBvZiBtaXNzaW5nIHVudGFnZ2luZyBvZiBhIHBvaW50ZXIg
cGFzc2VkCj4gdmlhIGlvY3RsIi4KPiAKPiBpIHN1c3BlY3QgeW91IGFuZCBpIGhhdmUgdmVyeSBk
aWZmZXJlbnQgcGVvcGxlIGluIG1pbmQgd2hlbiB3ZSBzYXkgInVzZXIiIDotKQoKSW5kZWVkLCBJ
IHRoaW5rIHdlIGhhdmUgZGlmZmVyZW50IHVzZXJzIGluIG1pbmQuIEkgZGlkbid0IG1lYW4gdGhl
IGVuZAp1c2VyIHdobyBkb2Vzbid0IHJlYWxseSBjYXJlIHdoaWNoIEMgbGlicmFyeSB2ZXJzaW9u
IGl0J3MgcnVubmluZyBvbgp0aGVpciBwaG9uZSBidXQgcmF0aGVyIGFkdmFuY2VkIHVzZXJzIChu
b3QgbmVjZXNzYXJpbHkga2VybmVsCmRldmVsb3BlcnMpIHRoYXQgcHJlZmVyIHRvIGJ1aWxkIHRo
ZWlyIG93biBrZXJuZWxzIHdpdGggZXZlcnkgcmVsZWFzZS4KV2UgY291bGQgZXh0ZW5kIHRoaXMg
dG8ga2VybmVsIGRldmVsb3BlcnMgd2hvIGRvbid0IGhhdmUgdGltZSB0byB0cmFjawpkb3duIHdo
eSBhIG5ldyBrZXJuZWwgdHJpZ2dlcnMgbG90cyBvZiBTSUdTRUdWcyBkdXJpbmcgYm9vdC4KCi0t
IApDYXRhbGluCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBz
Oi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
