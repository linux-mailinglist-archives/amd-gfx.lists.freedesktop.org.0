Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 0AF4FF10F5
	for <lists+amd-gfx@lfdr.de>; Wed,  6 Nov 2019 09:21:20 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8C9126EC3B;
	Wed,  6 Nov 2019 08:21:18 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM03-DM3-obe.outbound.protection.outlook.com
 (mail-dm3nam03on0614.outbound.protection.outlook.com
 [IPv6:2a01:111:f400:fe49::614])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 262656EC3B
 for <amd-gfx@lists.freedesktop.org>; Wed,  6 Nov 2019 08:21:17 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=alaV+k0/RRrWRoUH0smAlpDoIDSsjro6l+r4m01tiWyzHyI20DpW1ru5QY4TaMzG8Ld/F0Dw7n3qQhB3NVz4aG4V8CTj7vPrqhEToo/dnJjAXYfScesQa6L9WRw3Y65iM/nzVcIfIGt+BsVOi+IOUw5cp/xnlF4d+YZqcZePVIXe3ZBI5OwihFYZpBxBi2lyTVyTvdWDKtqPY4BYJo831avu6JXNL00PP7ksrh1mEHpLYq6LQ2n3vwTcj8LNf1n3WOTEl2PMv+uLC+iZBspwUeFAoforsfOne33OXboR51IiFRH531RXY4Z3+d5RirYROk8A/q3mSQ2vcJFVeszJBQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xBMO5bdYBgkNIPeauRAJEe0REmJNY8swoe8Z30JwWtU=;
 b=m53ThxEDWfa1xq7JLU5pm4xF741ctVga80sONc7u+k89ZKWQlOVLUXtf1+wWIiz5a1UAqNtZ02+yclb9U8JJ2YcgyzL4y07E1LIQBF03pOD+S2b3oLJPryXzID5AZS8A8WlaIMvdPbNFfpCEdwtdDo/dHfNO8solQ/lJwq8H+9uJyBhMhLDRpBqFvUHqeZ2yefOCekHJMZMFPxIKq7R5TZaKwxSLNEXy95b/6kDIcDUJNti+qUJRyg6BkqADhfcLtk2k9H1+UPNZAes2hnL6eXR9zEVClQM5vru5g64d70qnJi0vQKoeEjoIHzgqunQ4i46iMRN9+8eTPWS5IbO9sg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from MN2PR12MB2896.namprd12.prod.outlook.com (20.179.80.214) by
 MN2PR12MB3533.namprd12.prod.outlook.com (20.179.83.225) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2408.24; Wed, 6 Nov 2019 08:21:15 +0000
Received: from MN2PR12MB2896.namprd12.prod.outlook.com
 ([fe80::9973:de2e:58b4:282a]) by MN2PR12MB2896.namprd12.prod.outlook.com
 ([fe80::9973:de2e:58b4:282a%7]) with mapi id 15.20.2408.024; Wed, 6 Nov 2019
 08:21:15 +0000
From: "Zhu, Changfeng" <Changfeng.Zhu@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>, "Koenig, 
 Christian" <Christian.Koenig@amd.com>, "Tuikov, Luben"
 <Luben.Tuikov@amd.com>, "Huang, Ray" <Ray.Huang@amd.com>, "Huang, Shimmer"
 <Xinmei.Huang@amd.com>
Subject: [PATCH 1/2] drm/amdgpu: add dummy read by engines for some GCVM
 status registers in gfx10
Thread-Topic: [PATCH 1/2] drm/amdgpu: add dummy read by engines for some GCVM
 status registers in gfx10
Thread-Index: AQHVlHsoJV8zReYcnEClEhAlzSXcLg==
Date: Wed, 6 Nov 2019 08:21:15 +0000
Message-ID: <20191106082051.10338-1-changfeng.zhu@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: HK0P153CA0002.APCP153.PROD.OUTLOOK.COM
 (2603:1096:203:18::14) To MN2PR12MB2896.namprd12.prod.outlook.com
 (2603:10b6:208:ab::22)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.17.1
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-ht: Tenant
x-ms-office365-filtering-correlation-id: 2401294c-79c5-4c1b-0252-08d762924a79
x-ms-traffictypediagnostic: MN2PR12MB3533:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <MN2PR12MB353335416566385344EBA0B3FD790@MN2PR12MB3533.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:6108;
x-forefront-prvs: 02135EB356
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(366004)(39860400002)(346002)(396003)(136003)(376002)(199004)(189003)(66066001)(26005)(8936002)(6506007)(8676002)(1076003)(99286004)(52116002)(7736002)(2501003)(2616005)(305945005)(86362001)(486006)(81166006)(5660300002)(81156014)(386003)(6636002)(14454004)(110136005)(476003)(186003)(50226002)(102836004)(25786009)(6486002)(6512007)(36756003)(3846002)(6116002)(66476007)(66946007)(71190400001)(256004)(71200400001)(14444005)(478600001)(66556008)(64756008)(6436002)(316002)(66446008)(4326008)(2906002);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB3533;
 H:MN2PR12MB2896.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; A:1; MX:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: Dk6Kg4FM7OWxT72b8mmFAT+lsVYezT4VD0DUi2hJojl4RT7xAMoTjNZ4tZsuh32Z82kJakw6+sRJSANTx/w/HkiCy6+mVcC8MeQ7wvzSBGL6YjkZhCRY0R/UEI/KXf7dF7nkftIxj04Z7bO4QcAm0yJ0KLaH4mwDwcu53xKVcOu0is0ecqjRRsaLlNN/q2PNx9z1kLosH2iUc7INVsqQwSuII+Hj4U6mbajzYjhnX5GYQZqwDWVYrcUmjXSS70Gb2lvfs8U1RMSKSKprdx/W7gIl60q0Cqm0aNlfzVlizP0wigX7gZRD0s0xlEiIBDjoqRIQcmajrKDWAOt4QdgqMPBpYlq2B39lI9+URHwb+F3PBzIqemwFpM8+rdwQ4Q1ng70l3XjHJAzbVLd7G6VXnworrAYq1o1sp7OklrULisjoORz0RDMofiX8xbgebjst
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 2401294c-79c5-4c1b-0252-08d762924a79
X-MS-Exchange-CrossTenant-originalarrivaltime: 06 Nov 2019 08:21:15.2644 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: VQ4XTRVgPmjYZNobMwLPXNb4zWDmc6/tVt4kapLTaslMpFhpyJfQL8ZB9o4+A1DK0m+zn5y+ZkydsIfatXbDXg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3533
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xBMO5bdYBgkNIPeauRAJEe0REmJNY8swoe8Z30JwWtU=;
 b=e/nEzvApqIXCJMKvcIcpsAdSEesj2V4tV4+wwFPdckRK3uD0G58WODrFaV+NTIq2zayfV+gcY4ro7L07TxcRpx9ftd5OdEQz3U9YaMIuWRm5kJTzXP7zrLQNCDPTRH7Pb7zgkVVKFPav8laLUbHwJ5zT8bjcoQuGGgqoek00vHE=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Changfeng.Zhu@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Zhu, Changfeng" <Changfeng.Zhu@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RnJvbTogY2hhbmd6aHUgPENoYW5nZmVuZy5aaHVAYW1kLmNvbT4KClRoZSBHUkJNIHJlZ2lzdGVy
IGludGVyZmFjZSBpcyBub3cgY2FwYWJsZSBvZiBidXJzdGluZyAxIGN5Y2xlIHBlcgpyZWdpc3Rl
ciB3ci0+d3IsIHdyLT5yZCBtdWNoIGZhc3RlciB0aGFuIHByZXZpb3VzIG11dGljeWNsZSBwZXIK
dHJhbnNhY3Rpb24gZG9uZSBpbnRlcmZhY2UuICBUaGlzIGhhcyBjYXVzZWQgYSBwcm9ibGVtIHdo
ZXJlCnN0YXR1cyByZWdpc3RlcnMgcmVxdWlyaW5nIEhXIHRvIHVwZGF0ZSBoYXZlIGEgMSBjeWNs
ZSBkZWxheSwgZHVlCnRvIHRoZSByZWdpc3RlciB1cGRhdGUgaGF2aW5nIHRvIGdvIHRocm91Z2gg
R1JCTS4KCkZvciBjcCB1Y29kZSwgaXQgaGFzIHJlYWxpemVkIGR1bW15IHJlYWQgaW4gY3AgZmly
bXdhcmUuSXQgY292ZXJzCnRoZSB1c2Ugb2YgV0FJVF9SRUdfTUVNIG9wZXJhdGlvbiAxIGNhc2Ug
b25seS5TbyBpdCBuZWVkcyB0byBjYWxsCmdmeF92MTBfMF93YWl0X3JlZ19tZW0gaW4gZ2Z4MTAu
IEJlc2lkZXMgaXQgYWxzbyBuZWVkcyB0byBhZGQgd2FybmluZyB0bwp1cGRhdGUgZmlybXdhcmUg
aW4gY2FzZSBmaXJtd2FyZSBpcyB0b28gb2xkIHRvIGhhdmUgZnVuY3Rpb24gdG8gcmVhbGl6ZQpk
dW1teSByZWFkIGluIGNwIGZpcm13YXJlLgoKRm9yIHNkbWEgdWNvZGUsIGl0IGhhc24ndCByZWFs
aXplZCBkdW1teSByZWFkIGluIHNkbWEgZmlybXdhcmUuIHNkbWEgaXMKbW92ZWQgdG8gZ2Z4aHVi
IGluIGdmeDEwLiBTbyBpdCBuZWVkcyB0byBhZGQgZHVtbXkgcmVhZCBpbiBkcml2ZXIKYmV0d2Vl
biBhbWRncHVfcmluZ19lbWl0X3dyZWcgYW5kIGFtZGdwdV9yaW5nX2VtaXRfcmVnX3dhaXQgZm9y
IHNkbWFfdjVfMC4KCkNoYW5nZS1JZDogSWUwMjhmMzdlYjc4OTk2NmQ0NTkzOTg0YmQ2NjFiMjQ4
ZWJlYjFhYzMKU2lnbmVkLW9mZi1ieTogY2hhbmd6aHUgPENoYW5nZmVuZy5aaHVAYW1kLmNvbT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZ2Z4LmggfCAgMSArCiBkcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAuYyAgfCA0OCArKysrKysrKysrKysrKysr
KysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjEwXzAuYyAgfCAgOCAr
Ky0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92NV8wLmMgIHwgMTMgKysrKysr
LQogNCBmaWxlcyBjaGFuZ2VkLCA2NCBpbnNlcnRpb25zKCspLCA2IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguaCBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguaAppbmRleCA0NTlhYTkwNTk1NDIuLmE3
NGVjZDQ0OTc3NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2dmeC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguaApAQCAt
MjY3LDYgKzI2Nyw3IEBAIHN0cnVjdCBhbWRncHVfZ2Z4IHsKIAl1aW50MzJfdAkJCW1lYzJfZmVh
dHVyZV92ZXJzaW9uOwogCWJvb2wJCQkJbWVjX2Z3X3dyaXRlX3dhaXQ7CiAJYm9vbAkJCQltZV9m
d193cml0ZV93YWl0OworCWJvb2wJCQkJY3BfZndfd3JpdGVfd2FpdDsKIAlzdHJ1Y3QgYW1kZ3B1
X3JpbmcJCWdmeF9yaW5nW0FNREdQVV9NQVhfR0ZYX1JJTkdTXTsKIAl1bnNpZ25lZAkJCW51bV9n
ZnhfcmluZ3M7CiAJc3RydWN0IGFtZGdwdV9yaW5nCQljb21wdXRlX3JpbmdbQU1ER1BVX01BWF9D
T01QVVRFX1JJTkdTXTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92MTBfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3YxMF8wLmMKaW5kZXgg
MTdhNWNiZmQwMDI0Li5hY2RiMGU0ZGY5YjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dmeF92MTBfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92MTBfMC5jCkBAIC01NjEsNiArNTYxLDMyIEBAIHN0YXRpYyB2b2lkIGdmeF92MTBfMF9mcmVl
X21pY3JvY29kZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAlrZnJlZShhZGV2LT5nZngu
cmxjLnJlZ2lzdGVyX2xpc3RfZm9ybWF0KTsKIH0KIAorc3RhdGljIHZvaWQgZ2Z4X3YxMF8wX2No
ZWNrX2Z3X3dyaXRlX3dhaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCit7CisJYWRldi0+
Z2Z4LmNwX2Z3X3dyaXRlX3dhaXQgPSBmYWxzZTsKKworCXN3aXRjaCAoYWRldi0+YXNpY190eXBl
KSB7CisJY2FzZSBDSElQX05BVkkxMDoKKwljYXNlIENISVBfTkFWSTEyOgorCWNhc2UgQ0hJUF9O
QVZJMTQ6CisJCWlmICgoYWRldi0+Z2Z4Lm1lX2Z3X3ZlcnNpb24gPj0gMHgwMDAwMDA0NikgJiYK
KwkJICAgIChhZGV2LT5nZngubWVfZmVhdHVyZV92ZXJzaW9uID49IDI3KSAmJgorCQkgICAgKGFk
ZXYtPmdmeC5wZnBfZndfdmVyc2lvbiA+PSAweDAwMDAwMDY4KSAmJgorCQkgICAgKGFkZXYtPmdm
eC5wZnBfZmVhdHVyZV92ZXJzaW9uID49IDI3KSAmJgorCQkgICAgKGFkZXYtPmdmeC5tZWNfZndf
dmVyc2lvbiA+PSAweDAwMDAwMDViKSAmJgorCQkgICAgKGFkZXYtPmdmeC5tZWNfZmVhdHVyZV92
ZXJzaW9uID49IDI3KSkKKwkJCWFkZXYtPmdmeC5jcF9md193cml0ZV93YWl0ID0gdHJ1ZTsKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJYnJlYWs7CisJfQorCisJaWYgKGFkZXYtPmdmeC5jcF9md193
cml0ZV93YWl0ID09IGZhbHNlKQorCQlEUk1fV0FSTl9PTkNFKCJXYXJuaW5nOiBjaGVjayBjcF9m
d192ZXJzaW9uIGFuZCB1cGRhdGUgaXQgdG8gcmVhbGl6ZSBcCisJCQkJICBHUkJNIHJlcXVpcmVz
IDEtY3ljbGUgZGVsYXkgaW4gY3AgZmlybXdhcmVcbiIpOworfQorCisKIHN0YXRpYyB2b2lkIGdm
eF92MTBfMF9pbml0X3JsY19leHRfbWljcm9jb2RlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
KQogewogCWNvbnN0IHN0cnVjdCBybGNfZmlybXdhcmVfaGVhZGVyX3YyXzEgKnJsY19oZHI7CkBA
IC00NzY4LDYgKzQ3OTQsMjUgQEAgc3RhdGljIHZvaWQgZ2Z4X3YxMF8wX3JpbmdfZW1pdF9yZWdf
d2FpdChzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcsIHVpbnQzMl90IHJlZywKIAlnZnhfdjEwXzBf
d2FpdF9yZWdfbWVtKHJpbmcsIDAsIDAsIDAsIHJlZywgMCwgdmFsLCBtYXNrLCAweDIwKTsKIH0K
IAorc3RhdGljIHZvaWQgZ2Z4X3YxMF8wX3JpbmdfZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXQoc3Ry
dWN0IGFtZGdwdV9yaW5nICpyaW5nLAorCQkJCQkJICB1aW50MzJfdCByZWcwLCB1aW50MzJfdCBy
ZWcxLAorCQkJCQkJICB1aW50MzJfdCByZWYsIHVpbnQzMl90IG1hc2spCit7CisJaW50IHVzZXBm
cCA9IChyaW5nLT5mdW5jcy0+dHlwZSA9PSBBTURHUFVfUklOR19UWVBFX0dGWCk7CisJc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OworCWJvb2wgZndfdmVyc2lvbl9vayA9
IGZhbHNlOworCisJZ2Z4X3YxMF8wX2NoZWNrX2Z3X3dyaXRlX3dhaXQoYWRldik7CisJZndfdmVy
c2lvbl9vayA9IGFkZXYtPmdmeC5jcF9md193cml0ZV93YWl0OworCisJaWYgKGZ3X3ZlcnNpb25f
b2spCisJCWdmeF92MTBfMF93YWl0X3JlZ19tZW0ocmluZywgdXNlcGZwLCAwLCAxLCByZWcwLCBy
ZWcxLAorCQkJCSAgICAgIHJlZiwgbWFzaywgMHgyMCk7CisJZWxzZQorCQlhbWRncHVfcmluZ19l
bWl0X3JlZ193cml0ZV9yZWdfd2FpdF9oZWxwZXIocmluZywgcmVnMCwgcmVnMSwKKwkJCQkJCQkg
ICByZWYsIG1hc2spOworfQorCiBzdGF0aWMgdm9pZAogZ2Z4X3YxMF8wX3NldF9nZnhfZW9wX2lu
dGVycnVwdF9zdGF0ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJCQkgICAgICB1aW50
MzJfdCBtZSwgdWludDMyX3QgcGlwZSwKQEAgLTUxNTgsNiArNTIwMyw3IEBAIHN0YXRpYyBjb25z
dCBzdHJ1Y3QgYW1kZ3B1X3JpbmdfZnVuY3MgZ2Z4X3YxMF8wX3JpbmdfZnVuY3NfZ2Z4ID0gewog
CS5lbWl0X3RteiA9IGdmeF92MTBfMF9yaW5nX2VtaXRfdG16LAogCS5lbWl0X3dyZWcgPSBnZnhf
djEwXzBfcmluZ19lbWl0X3dyZWcsCiAJLmVtaXRfcmVnX3dhaXQgPSBnZnhfdjEwXzBfcmluZ19l
bWl0X3JlZ193YWl0LAorCS5lbWl0X3JlZ193cml0ZV9yZWdfd2FpdCA9IGdmeF92MTBfMF9yaW5n
X2VtaXRfcmVnX3dyaXRlX3JlZ193YWl0LAogfTsKIAogc3RhdGljIGNvbnN0IHN0cnVjdCBhbWRn
cHVfcmluZ19mdW5jcyBnZnhfdjEwXzBfcmluZ19mdW5jc19jb21wdXRlID0gewpAQCAtNTE5MSw2
ICs1MjM3LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBhbWRncHVfcmluZ19mdW5jcyBnZnhfdjEw
XzBfcmluZ19mdW5jc19jb21wdXRlID0gewogCS5wYWRfaWIgPSBhbWRncHVfcmluZ19nZW5lcmlj
X3BhZF9pYiwKIAkuZW1pdF93cmVnID0gZ2Z4X3YxMF8wX3JpbmdfZW1pdF93cmVnLAogCS5lbWl0
X3JlZ193YWl0ID0gZ2Z4X3YxMF8wX3JpbmdfZW1pdF9yZWdfd2FpdCwKKwkuZW1pdF9yZWdfd3Jp
dGVfcmVnX3dhaXQgPSBnZnhfdjEwXzBfcmluZ19lbWl0X3JlZ193cml0ZV9yZWdfd2FpdCwKIH07
CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgYW1kZ3B1X3JpbmdfZnVuY3MgZ2Z4X3YxMF8wX3Jpbmdf
ZnVuY3Nfa2lxID0gewpAQCAtNTIyMSw2ICs1MjY4LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBh
bWRncHVfcmluZ19mdW5jcyBnZnhfdjEwXzBfcmluZ19mdW5jc19raXEgPSB7CiAJLmVtaXRfcnJl
ZyA9IGdmeF92MTBfMF9yaW5nX2VtaXRfcnJlZywKIAkuZW1pdF93cmVnID0gZ2Z4X3YxMF8wX3Jp
bmdfZW1pdF93cmVnLAogCS5lbWl0X3JlZ193YWl0ID0gZ2Z4X3YxMF8wX3JpbmdfZW1pdF9yZWdf
d2FpdCwKKwkuZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXQgPSBnZnhfdjEwXzBfcmluZ19lbWl0X3Jl
Z193cml0ZV9yZWdfd2FpdCwKIH07CiAKIHN0YXRpYyB2b2lkIGdmeF92MTBfMF9zZXRfcmluZ19m
dW5jcyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
Z21jX3YxMF8wLmMKaW5kZXggM2IwMGJjZTE0Y2ZiLi4yMmM4MDczMDlhMjIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jCkBAIC0zNDQsMTEgKzM0NCw5IEBAIHN0YXRpYyB1
aW50NjRfdCBnbWNfdjEwXzBfZW1pdF9mbHVzaF9ncHVfdGxiKHN0cnVjdCBhbWRncHVfcmluZyAq
cmluZywKIAlhbWRncHVfcmluZ19lbWl0X3dyZWcocmluZywgaHViLT5jdHgwX3B0Yl9hZGRyX2hp
MzIgKyAoMiAqIHZtaWQpLAogCQkJICAgICAgdXBwZXJfMzJfYml0cyhwZF9hZGRyKSk7CiAKLQlh
bWRncHVfcmluZ19lbWl0X3dyZWcocmluZywgaHViLT52bV9pbnZfZW5nMF9yZXEgKyBlbmcsIHJl
cSk7Ci0KLQkvKiB3YWl0IGZvciB0aGUgaW52YWxpZGF0ZSB0byBjb21wbGV0ZSAqLwotCWFtZGdw
dV9yaW5nX2VtaXRfcmVnX3dhaXQocmluZywgaHViLT52bV9pbnZfZW5nMF9hY2sgKyBlbmcsCi0J
CQkJICAxIDw8IHZtaWQsIDEgPDwgdm1pZCk7CisJYW1kZ3B1X3JpbmdfZW1pdF9yZWdfd3JpdGVf
cmVnX3dhaXQocmluZywgaHViLT52bV9pbnZfZW5nMF9yZXEgKyBlbmcsCisJCQkJCQlodWItPnZt
X2ludl9lbmcwX2FjayArIGVuZywKKwkJCQkJCXJlcSwgMSA8PCB2bWlkKTsKIAogCXJldHVybiBw
ZF9hZGRyOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92
NV8wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zZG1hX3Y1XzAuYwppbmRleCAzNDYw
YzAwZjNlYWEuLjdiMTVkZGM3MzllNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvc2RtYV92NV8wLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92
NV8wLmMKQEAgLTExNzAsNiArMTE3MCwxNiBAQCBzdGF0aWMgdm9pZCBzZG1hX3Y1XzBfcmluZ19l
bWl0X3JlZ193YWl0KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywgdWludDMyX3QgcmVnLAogCQkJ
ICBTRE1BX1BLVF9QT0xMX1JFR01FTV9EVzVfSU5URVJWQUwoMTApKTsKIH0KIAorc3RhdGljIHZv
aWQgc2RtYV92NV8wX3JpbmdfZW1pdF9yZWdfd3JpdGVfcmVnX3dhaXQoc3RydWN0IGFtZGdwdV9y
aW5nICpyaW5nLAorCQkJCQkJCQkJCQkJIHVpbnQzMl90IHJlZzAsIHVpbnQzMl90IHJlZzEsCisJ
CQkJCQkJCQkJCQkgdWludDMyX3QgcmVmLCB1aW50MzJfdCBtYXNrKQoreworCWFtZGdwdV9yaW5n
X2VtaXRfd3JlZyhyaW5nLCByZWcwLCByZWYpOworCS8qIHdhaXQgZm9yIGEgY3ljbGUgdG8gcmVz
ZXQgdm1faW52X2VuZypfYWNrICovCisJYW1kZ3B1X3JpbmdfZW1pdF9yZWdfd2FpdChyaW5nLCBy
ZWcwLCAwLCAwKTsKKwlhbWRncHVfcmluZ19lbWl0X3JlZ193YWl0KHJpbmcsIHJlZzEsIG1hc2ss
IG1hc2spOworfQorCiBzdGF0aWMgaW50IHNkbWFfdjVfMF9lYXJseV9pbml0KHZvaWQgKmhhbmRs
ZSkKIHsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IChzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqKWhhbmRsZTsKQEAgLTE1ODUsNyArMTU5NSw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgYW1k
Z3B1X3JpbmdfZnVuY3Mgc2RtYV92NV8wX3JpbmdfZnVuY3MgPSB7CiAJCTYgKyAvKiBzZG1hX3Y1
XzBfcmluZ19lbWl0X3BpcGVsaW5lX3N5bmMgKi8KIAkJLyogc2RtYV92NV8wX3JpbmdfZW1pdF92
bV9mbHVzaCAqLwogCQlTT0MxNV9GTFVTSF9HUFVfVExCX05VTV9XUkVHICogMyArCi0JCVNPQzE1
X0ZMVVNIX0dQVV9UTEJfTlVNX1JFR19XQUlUICogNiArCisJCVNPQzE1X0ZMVVNIX0dQVV9UTEJf
TlVNX1JFR19XQUlUICogNiAqIDIgKwogCQkxMCArIDEwICsgMTAsIC8qIHNkbWFfdjVfMF9yaW5n
X2VtaXRfZmVuY2UgeDMgZm9yIHVzZXIgZmVuY2UsIHZtIGZlbmNlICovCiAJLmVtaXRfaWJfc2l6
ZSA9IDcgKyA2LCAvKiBzZG1hX3Y1XzBfcmluZ19lbWl0X2liICovCiAJLmVtaXRfaWIgPSBzZG1h
X3Y1XzBfcmluZ19lbWl0X2liLApAQCAtMTU5OSw2ICsxNjA5LDcgQEAgc3RhdGljIGNvbnN0IHN0
cnVjdCBhbWRncHVfcmluZ19mdW5jcyBzZG1hX3Y1XzBfcmluZ19mdW5jcyA9IHsKIAkucGFkX2li
ID0gc2RtYV92NV8wX3JpbmdfcGFkX2liLAogCS5lbWl0X3dyZWcgPSBzZG1hX3Y1XzBfcmluZ19l
bWl0X3dyZWcsCiAJLmVtaXRfcmVnX3dhaXQgPSBzZG1hX3Y1XzBfcmluZ19lbWl0X3JlZ193YWl0
LAorCS5lbWl0X3JlZ193cml0ZV9yZWdfd2FpdCA9IHNkbWFfdjVfMF9yaW5nX2VtaXRfcmVnX3dy
aXRlX3JlZ193YWl0LAogCS5pbml0X2NvbmRfZXhlYyA9IHNkbWFfdjVfMF9yaW5nX2luaXRfY29u
ZF9leGVjLAogCS5wYXRjaF9jb25kX2V4ZWMgPSBzZG1hX3Y1XzBfcmluZ19wYXRjaF9jb25kX2V4
ZWMsCiAJLnByZWVtcHRfaWIgPSBzZG1hX3Y1XzBfcmluZ19wcmVlbXB0X2liLAotLSAKMi4xNy4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwphbWQtZ2Z4
IG1haWxpbmcgbGlzdAphbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2FtZC1nZng=
