Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C8163DE86
	for <lists+amd-gfx@lfdr.de>; Mon, 29 Apr 2019 10:58:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 585F3890B1;
	Mon, 29 Apr 2019 08:57:59 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM04-SN1-obe.outbound.protection.outlook.com
 (mail-eopbgr700058.outbound.protection.outlook.com [40.107.70.58])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 820DE89211
 for <amd-gfx@lists.freedesktop.org>; Mon, 29 Apr 2019 08:57:57 +0000 (UTC)
Received: from MWHPR12CA0026.namprd12.prod.outlook.com (2603:10b6:301:2::12)
 by BY2PR12MB0647.namprd12.prod.outlook.com (2a01:111:e400:52e0::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.1835.13; Mon, 29 Apr
 2019 08:57:55 +0000
Received: from BY2NAM03FT046.eop-NAM03.prod.protection.outlook.com
 (2a01:111:f400:7e4a::200) by MWHPR12CA0026.outlook.office365.com
 (2603:10b6:301:2::12) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.20.1835.12 via Frontend
 Transport; Mon, 29 Apr 2019 08:57:55 +0000
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXCHOV02.amd.com (165.204.84.17) by
 BY2NAM03FT046.mail.protection.outlook.com (10.152.85.84) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.20.1835.14 via Frontend Transport; Mon, 29 Apr 2019 08:57:54 +0000
Received: from build-machine.amd.com (10.34.1.3) by SATLEXCHOV02.amd.com
 (10.181.40.72) with Microsoft SMTP Server id 14.3.389.1; Mon, 29 Apr 2019
 03:57:53 -0500
From: Evan Quan <evan.quan@amd.com>
To: <amd-gfx@lists.freedesktop.org>
Subject: [PATCH] drm/amdgpu: enable separate timeout setting for every ring
 type
Date: Mon, 29 Apr 2019 16:57:48 +0800
Message-ID: <20190429085748.15712-1-evan.quan@amd.com>
X-Mailer: git-send-email 2.21.0
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; IPV:NLI; CTRY:US; EFV:NLI;
 SFV:NSPM;
 SFS:(10009020)(136003)(376002)(396003)(39860400002)(346002)(2980300002)(428003)(189003)(199004)(68736007)(2870700001)(426003)(77096007)(26005)(186003)(305945005)(336012)(6916009)(36756003)(4326008)(7696005)(5660300002)(51416003)(2906002)(316002)(54906003)(50466002)(48376002)(72206003)(478600001)(53936002)(53416004)(50226002)(97736004)(86362001)(486006)(47776003)(2351001)(8936002)(8676002)(81156014)(81166006)(6666004)(126002)(356004)(14444005)(44832011)(1076003)(476003)(70586007)(70206006)(2616005);
 DIR:OUT; SFP:1101; SCL:1; SRVR:BY2PR12MB0647; H:SATLEXCHOV02.amd.com; FPR:;
 SPF:None; LANG:en; PTR:InfoDomainNonexistent; MX:1; A:1; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ec22055d-2da8-4a52-a1c7-08d6cc80c4cc
X-Microsoft-Antispam: BCL:0; PCL:0;
 RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600141)(711020)(4605104)(2017052603328);
 SRVR:BY2PR12MB0647; 
X-MS-TrafficTypeDiagnostic: BY2PR12MB0647:
X-Microsoft-Antispam-PRVS: <BY2PR12MB0647CF63112E9C5A403A06B3E4390@BY2PR12MB0647.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-Forefront-PRVS: 0022134A87
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam-Message-Info: MrMrvG64OkHpZ9vxXvLbqN+70yRav8voR+1Ht4UDIMVzz5hTm/cXaeouayzOQndaEp0l7N0qnTiGHwU70iGxQIX/EnJWjXDBh+uTps2fdOCUDoJhkvQmd10t73GnlSt8cagjRwhdm2V34bnamU5JpNw3m51sbjHCj9g2iaFQoASRZKnkNforeF4uBmcL2HuxVI9Bz5GW+aJiGsfsADNX+ddVG79olFy82gm3vPSf4PQt0WSazP5RzZee/3sHZYZya9sQxIghj+C7YLSZ4zCOArLfy9px52mSzLo33MKBTdiDvRD+4XAMzOBstmd6B6r8OsPNSN9W/7gDpV46qBIGyKe+VILTUIuQmzQ+lahzU0kfEYz8QuLJL1oF9ApYzy6P+SNCh5pPFjwCUYGEP4qIxLhn+rDgEtc9ifKRrlHpsIE=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 29 Apr 2019 08:57:54.6515 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: ec22055d-2da8-4a52-a1c7-08d6cc80c4cc
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXCHOV02.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BY2PR12MB0647
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=li1Ea6/Yg5bAzeoUxdFNxAotlgU0GBW4dJQIvzOkin8=;
 b=47EOF7//iwY1hh8OvyScO9hV44VnufDDeJLlKKypHlWfxL6A+O9RGEhPA8H//7hHmhx7bgYM1d+4jYUFffVRYKmt9DqGrpE2yw6+9sdmJPC4ckz/rMTdBvypsWBp8IBkCPejfOFbtRzcYhlO7AuDl6T083jL5ZW3+a3z53aW82I=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is
 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Alexander.Deucher@amd.com, Wentao.Lou@amd.com,
 Evan Quan <evan.quan@amd.com>, michel.daenzer@amd.com,
 Christian.Koenig@amd.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RXZlcnkgcmluZyB0eXBlIGNhbiBoYXZlIGl0cyBvd24gdGltZW91dCBzZXR0aW5nLgoKQ2hhbmdl
LUlkOiBJOTkyZjIyNGYzNmJiMzNhY2Q1NjAxNjJiZmZkMmMzZTk4Nzg0MGE3ZQpTaWduZWQtb2Zm
LWJ5OiBFdmFuIFF1YW4gPGV2YW4ucXVhbkBhbWQuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdS5oICAgICAgICB8ICA3ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfZGV2aWNlLmMgfCAxNyArKystLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X2Rydi5jICAgIHwgODIgKysrKysrKysrKysrKysrKysrKystLQogZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ZlbmNlLmMgIHwgMzUgKysrKysrKy0tCiBkcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9haS5jICAgICAgfCAgMiArLQogNSBmaWxlcyBjaGFu
Z2VkLCAxMjQgaW5zZXJ0aW9ucygrKSwgMTkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHUuaAppbmRleCBmNjk2NWI5NDAzZWIuLjlkN2JmOWZiZjJiYSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmgKQEAgLTExOCw3ICsxMTgsNiBAQCBleHRlcm4gaW50IGFt
ZGdwdV9kaXNwX3ByaW9yaXR5OwogZXh0ZXJuIGludCBhbWRncHVfaHdfaTJjOwogZXh0ZXJuIGlu
dCBhbWRncHVfcGNpZV9nZW4yOwogZXh0ZXJuIGludCBhbWRncHVfbXNpOwotZXh0ZXJuIGludCBh
bWRncHVfbG9ja3VwX3RpbWVvdXQ7CiBleHRlcm4gaW50IGFtZGdwdV9kcG07CiBleHRlcm4gaW50
IGFtZGdwdV9md19sb2FkX3R5cGU7CiBleHRlcm4gaW50IGFtZGdwdV9hc3BtOwpAQCAtNDI4LDYg
KzQyNyw3IEBAIHN0cnVjdCBhbWRncHVfZnByaXYgewogfTsKIAogaW50IGFtZGdwdV9maWxlX3Rv
X2Zwcml2KHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3QgYW1kZ3B1X2Zwcml2ICoqZnByaXYpOwor
aW50IGFtZGdwdV9kZXZpY2VfZ2V0X2pvYl90aW1lb3V0KHN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2KTsKIAogaW50IGFtZGdwdV9pYl9nZXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHN0
cnVjdCBhbWRncHVfdm0gKnZtLAogCQkgIHVuc2lnbmVkIHNpemUsIHN0cnVjdCBhbWRncHVfaWIg
KmliKTsKQEAgLTEwMDEsNiArMTAwMSwxMSBAQCBzdHJ1Y3QgYW1kZ3B1X2RldmljZSB7CiAJc3Ry
dWN0IHdvcmtfc3RydWN0CQl4Z21pX3Jlc2V0X3dvcms7CiAKIAlib29sICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIGluX2JhY29fcmVzZXQ7CisKKwlsb25nCQkJCWdmeF90aW1lb3V0OworCWxv
bmcJCQkJc2RtYV90aW1lb3V0OworCWxvbmcJCQkJdmlkZW9fdGltZW91dDsKKwlsb25nCQkJCWNv
bXB1dGVfdGltZW91dDsKIH07CiAKIHN0YXRpYyBpbmxpbmUgc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFtZGdwdV90dG1fYWRldihzdHJ1Y3QgdHRtX2JvX2RldmljZSAqYmRldikKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYwppbmRleCA4MGJmNjA0MDE5YjEuLmJiMTEx
YzA1OTQ5ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2Rl
dmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYwpA
QCAtOTEyLDggKzkxMiwxMCBAQCBzdGF0aWMgdm9pZCBhbWRncHVfZGV2aWNlX2NoZWNrX3NtdV9w
cnZfYnVmZmVyX3NpemUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAgKiBWYWxpZGF0ZXMg
Y2VydGFpbiBtb2R1bGUgcGFyYW1ldGVycyBhbmQgdXBkYXRlcwogICogdGhlIGFzc29jaWF0ZWQg
dmFsdWVzIHVzZWQgYnkgdGhlIGRyaXZlciAoYWxsIGFzaWNzKS4KICAqLwotc3RhdGljIHZvaWQg
YW1kZ3B1X2RldmljZV9jaGVja19hcmd1bWVudHMoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
CitzdGF0aWMgaW50IGFtZGdwdV9kZXZpY2VfY2hlY2tfYXJndW1lbnRzKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2KQogeworCWludCByZXQgPSAwOworCiAJaWYgKGFtZGdwdV9zY2hlZF9qb2Jz
IDwgNCkgewogCQlkZXZfd2FybihhZGV2LT5kZXYsICJzY2hlZCBqb2JzICglZCkgbXVzdCBiZSBh
dCBsZWFzdCA0XG4iLAogCQkJIGFtZGdwdV9zY2hlZF9qb2JzKTsKQEAgLTk1OCwxMyArOTYwLDE2
IEBAIHN0YXRpYyB2b2lkIGFtZGdwdV9kZXZpY2VfY2hlY2tfYXJndW1lbnRzKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2KQogCQlhbWRncHVfdnJhbV9wYWdlX3NwbGl0ID0gMTAyNDsKIAl9CiAK
LQlpZiAoYW1kZ3B1X2xvY2t1cF90aW1lb3V0ID09IDApIHsKLQkJZGV2X3dhcm4oYWRldi0+ZGV2
LCAibG9ja3VwX3RpbWVvdXQgbXN1dCBiZSA+IDAsIGFkanVzdGluZyB0byAxMDAwMFxuIik7Ci0J
CWFtZGdwdV9sb2NrdXBfdGltZW91dCA9IDEwMDAwOworCXJldCA9IGFtZGdwdV9kZXZpY2VfZ2V0
X2pvYl90aW1lb3V0KGFkZXYpOworCWlmIChyZXQpIHsKKwkJZGV2X2VycihhZGV2LT5kZXYsICJp
bnZhbGlkIGpvYiB0aW1lb3V0IHNldHRpbmdcbiIpOworCQlyZXR1cm4gcmV0OwogCX0KIAogCWFk
ZXYtPmZpcm13YXJlLmxvYWRfdHlwZSA9IGFtZGdwdV91Y29kZV9nZXRfbG9hZF90eXBlKGFkZXYs
IGFtZGdwdV9md19sb2FkX3R5cGUpOwogCWFtZGdwdV9kaXJlY3RfZ21hX3NpemUgPSBtaW4oYW1k
Z3B1X2RpcmVjdF9nbWFfc2l6ZSwgOTYpOworCisJcmV0dXJuIHJldDsKIH0KIAogLyoqCkBAIC0y
NDY4LDcgKzI0NzMsOSBAQCBpbnQgYW1kZ3B1X2RldmljZV9pbml0KHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2LAogCW11dGV4X2luaXQoJmFkZXYtPmxvY2tfcmVzZXQpOwogCW11dGV4X2luaXQo
JmFkZXYtPnZpcnQuZHBtX211dGV4KTsKIAotCWFtZGdwdV9kZXZpY2VfY2hlY2tfYXJndW1lbnRz
KGFkZXYpOworCXJldCA9IGFtZGdwdV9kZXZpY2VfY2hlY2tfYXJndW1lbnRzKGFkZXYpOworCWlm
IChyZXQpCisJCXJldHVybiByZXQ7CiAKIAlzcGluX2xvY2tfaW5pdCgmYWRldi0+bW1pb19pZHhf
bG9jayk7CiAJc3Bpbl9sb2NrX2luaXQoJmFkZXYtPnNtY19pZHhfbG9jayk7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfZHJ2LmMKaW5kZXggNzFkZjI3Y2QwM2RlLi40Njk0ZTM2ZDFi
ZjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kcnYuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZHJ2LmMKQEAgLTgzLDYgKzgz
LDggQEAKIAogI2RlZmluZSBBTURHUFVfVkVSU0lPTgkJIjE5LjEwLjkuNDE4IgogCisjZGVmaW5l
IE1BWF9QQVJBTV9MRU5HVEgJMjU2CisKIGludCBhbWRncHVfdnJhbV9saW1pdCA9IDA7CiBpbnQg
YW1kZ3B1X3Zpc192cmFtX2xpbWl0ID0gMDsKIGludCBhbWRncHVfZ2FydF9zaXplID0gLTE7IC8q
IGF1dG8gKi8KQEAgLTk1LDcgKzk3LDcgQEAgaW50IGFtZGdwdV9kaXNwX3ByaW9yaXR5ID0gMDsK
IGludCBhbWRncHVfaHdfaTJjID0gMDsKIGludCBhbWRncHVfcGNpZV9nZW4yID0gLTE7CiBpbnQg
YW1kZ3B1X21zaSA9IC0xOwotaW50IGFtZGdwdV9sb2NrdXBfdGltZW91dCA9IDEwMDAwOworY2hh
ciBhbWRncHVfbG9ja3VwX3RpbWVvdXRbTUFYX1BBUkFNX0xFTkdUSF07CiBpbnQgYW1kZ3B1X2Rw
bSA9IC0xOwogaW50IGFtZGdwdV9md19sb2FkX3R5cGUgPSAtMTsKIGludCBhbWRncHVfYXNwbSA9
IC0xOwpAQCAtMjMyLDEyICsyMzQsMjAgQEAgTU9EVUxFX1BBUk1fREVTQyhtc2ksICJNU0kgc3Vw
cG9ydCAoMSA9IGVuYWJsZSwgMCA9IGRpc2FibGUsIC0xID0gYXV0bykiKTsKIG1vZHVsZV9wYXJh
bV9uYW1lZChtc2ksIGFtZGdwdV9tc2ksIGludCwgMDQ0NCk7CiAKIC8qKgotICogRE9DOiBsb2Nr
dXBfdGltZW91dCAoaW50KQotICogU2V0IEdQVSBzY2hlZHVsZXIgdGltZW91dCB2YWx1ZSBpbiBt
cy4gVmFsdWUgMCBpcyBpbnZhbGlkYXRlZCwgd2lsbCBiZSBhZGp1c3RlZCB0byAxMDAwMC4KLSAq
IE5lZ2F0aXZlIHZhbHVlcyBtZWFuICdpbmZpbml0ZSB0aW1lb3V0JyAoTUFYX0pJRkZZX09GRlNF
VCkuIFRoZSBkZWZhdWx0IGlzIDEwMDAwLgorICogRE9DOiBsb2NrdXBfdGltZW91dCAoc3RyaW5n
KQorICogU2V0IEdQVSBzY2hlZHVsZXIgdGltZW91dCB2YWx1ZSBpbiBtcy4KKyAqCisgKiBUaGUg
Zm9ybWF0IGlzIG5vbi1jb21wdXRlWy5nZnguc2RtYS52aWRlb11bOmNvbXB1dGVdLgorICogV2l0
aCBubyAibm9uLWNvbXB1dGVbLmdmeC5zZG1hLnZpZGVvXSIgdGltZW91dCBzcGVjaWZpZWQsIHRo
ZSBkZWZhdWx0IHRpbWVvdXQgZm9yIG5vbi1jb21wdXRlX2pvYiBpcyAxMDAwMC4KKyAqIFRoZSAi
bm9uLWNvbXB1dGUiIHRpbWVvdXQgc2V0dGluZyBhcHBseXMgdG8gYWxsIG5vbiBjb21wdXRlIElQ
cyhnZngsIHNkbWEgYW5kIHZpZGVvKS4gVW5sZXNzCisgKiB0aGUgdGltZW91dCBmb3IgdGhpcyBJ
UCBpcyBzcGVjaWZpZWQgc2VwYXJhdGVseShieSAiWy5nZnguc2RtYS52aWRlb10iKS4KKyAqCisg
KiBXaXRoIG5vICJbOmNvbXB1dGVdIiB0aW1lb3V0IHNwZWNpZmllZCwgdGhlcmUgd2lsbCBiZSBu
byB0aW1lb3V0IGVuZm9yY2VkIG9uIGNvbXB1dGUgam9icy4KKyAqIE90aGVyd2lzZSwgdGhlIHRp
bWVvdXQgZm9yIGNvbXB1dGUgam9icyBpcyBzZXQgYXMgc3BlY2lmaWVkLgogICovCi1NT0RVTEVf
UEFSTV9ERVNDKGxvY2t1cF90aW1lb3V0LCAiR1BVIGxvY2t1cCB0aW1lb3V0IGluIG1zID4gMCAo
ZGVmYXVsdCAxMDAwMCkiKTsKLW1vZHVsZV9wYXJhbV9uYW1lZChsb2NrdXBfdGltZW91dCwgYW1k
Z3B1X2xvY2t1cF90aW1lb3V0LCBpbnQsIDA0NDQpOworTU9EVUxFX1BBUk1fREVTQyhsb2NrdXBf
dGltZW91dCwgIkdQVSBsb2NrdXAgdGltZW91dCBpbiBtcyAoZGVmYXVsdDogMTAwMDAgZm9yIG5v
bi1jb21wdXRlIGpvYnMgYW5kIG5vIHRpbWVvdXQgZm9yIGNvbXB1dGUgam9icyksICIKKwkJImZv
cm1hdCBpcyBub24tY29tcHV0ZVsuZ2Z4LnNkbWEudmlkZW9dWzpjb21wdXRlXSIpOworbW9kdWxl
X3BhcmFtX3N0cmluZyhsb2NrdXBfdGltZW91dCwgYW1kZ3B1X2xvY2t1cF90aW1lb3V0LCBzaXpl
b2YoYW1kZ3B1X2xvY2t1cF90aW1lb3V0KSwgMDQ0NCk7CiAKIC8qKgogICogRE9DOiBkcG0gKGlu
dCkKQEAgLTEzMDcsNiArMTMxNyw2NiBAQCBpbnQgYW1kZ3B1X2ZpbGVfdG9fZnByaXYoc3RydWN0
IGZpbGUgKmZpbHAsIHN0cnVjdCBhbWRncHVfZnByaXYgKipmcHJpdikKIAlyZXR1cm4gMDsKIH0K
IAoraW50IGFtZGdwdV9kZXZpY2VfZ2V0X2pvYl90aW1lb3V0KHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2KQoreworCWNoYXIgKmlucHV0ID0gYW1kZ3B1X2xvY2t1cF90aW1lb3V0OworCWNoYXIg
Km5vbl9jb21wdXRlX3NldHRpbmcgPSBOVUxMOworCWNoYXIgKnRpbWVvdXRfc2V0dGluZyA9IE5V
TEw7CisJaW50IGluZGV4ID0gMDsKKwlpbnQgcmV0ID0gMDsKKworCS8qIERlZmF1bHQgdGltZW91
dCBmb3Igbm9uIGNvbXB1dGUgam9iIGlzIDEwMDAwICovCisJYWRldi0+Z2Z4X3RpbWVvdXQgPQor
CQlhZGV2LT5zZG1hX3RpbWVvdXQgPQorCQkJYWRldi0+dmlkZW9fdGltZW91dCA9IDEwMDAwOwor
CS8qIEVuZm9yY2Ugbm8gdGltZW91dCBvbiBjb21wdXRlIGpvYiBhdCBkZWZhdWx0ICovCisJYWRl
di0+Y29tcHV0ZV90aW1lb3V0ID0gTUFYX1NDSEVEVUxFX1RJTUVPVVQ7CisKKwlpZiAoc3Rybmxl
bihpbnB1dCwgTUFYX1BBUkFNX0xFTkdUSCkpIHsKKwkJbm9uX2NvbXB1dGVfc2V0dGluZyA9IHN0
cnNlcCgmaW5wdXQsICI6Iik7CisJCWlmIChpbnB1dCkgeworCQkJcmV0ID0ga3N0cnRvbChpbnB1
dCwgMCwgJihhZGV2LT5jb21wdXRlX3RpbWVvdXQpKTsKKwkJCWlmIChyZXQpCisJCQkJcmV0dXJu
IHJldDsKKwkJfQorCisJCXdoaWxlICgodGltZW91dF9zZXR0aW5nID0gc3Ryc2VwKCZub25fY29t
cHV0ZV9zZXR0aW5nLCAiLiIpKSAmJgorCQkJCXN0cm5sZW4odGltZW91dF9zZXR0aW5nLCBNQVhf
UEFSQU1fTEVOR1RIKSkgeworCQkJc3dpdGNoIChpbmRleCkgeworCQkJY2FzZSAwOgorCQkJCXJl
dCA9IGtzdHJ0b2wodGltZW91dF9zZXR0aW5nLCAwLCAmYWRldi0+Z2Z4X3RpbWVvdXQpOworCQkJ
CWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7CisKKwkJCQlhZGV2LT5zZG1hX3RpbWVvdXQgPQor
CQkJCQlhZGV2LT52aWRlb190aW1lb3V0ID0KKwkJCQkJCWFkZXYtPmdmeF90aW1lb3V0OworCQkJ
CWJyZWFrOworCQkJY2FzZSAxOgorCQkJCXJldCA9IGtzdHJ0b2wodGltZW91dF9zZXR0aW5nLCAw
LCAmYWRldi0+Z2Z4X3RpbWVvdXQpOworCQkJCWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7CisJ
CQkJYnJlYWs7CisJCQljYXNlIDI6CisJCQkJcmV0ID0ga3N0cnRvbCh0aW1lb3V0X3NldHRpbmcs
IDAsICZhZGV2LT5zZG1hX3RpbWVvdXQpOworCQkJCWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7
CisJCQkJYnJlYWs7CisJCQljYXNlIDM6CisJCQkJcmV0ID0ga3N0cnRvbCh0aW1lb3V0X3NldHRp
bmcsIDAsICZhZGV2LT52aWRlb190aW1lb3V0KTsKKwkJCQlpZiAocmV0KQorCQkJCQlyZXR1cm4g
cmV0OworCQkJCWJyZWFrOworCQkJZGVmYXVsdDoKKwkJCQlicmVhazsKKwkJCX0KKwkJCWluZGV4
Kys7CisJCX0KKwl9CisKKwlyZXR1cm4gcmV0OworfQorCiBzdGF0aWMgYm9vbAogYW1kZ3B1X2dl
dF9jcnRjX3NjYW5vdXRfcG9zaXRpb24oc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdW5zaWduZWQg
aW50IHBpcGUsCiAJCQkJIGJvb2wgaW5fdmJsYW5rX2lycSwgaW50ICp2cG9zLCBpbnQgKmhwb3Ms
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZmVuY2UuYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9mZW5jZS5jCmluZGV4IGQxOWFkMzRi
ZWY3NS4uYmI0MGU4OTQ2YmMyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfZmVuY2UuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
ZmVuY2UuYwpAQCAtNDM2LDkgKzQzNiwxMyBAQCBpbnQgYW1kZ3B1X2ZlbmNlX2RyaXZlcl9zdGFy
dF9yaW5nKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywKIGludCBhbWRncHVfZmVuY2VfZHJpdmVy
X2luaXRfcmluZyhzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcsCiAJCQkJICB1bnNpZ25lZCBudW1f
aHdfc3VibWlzc2lvbikKIHsKKwlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IHJpbmctPmFk
ZXY7CiAJbG9uZyB0aW1lb3V0OwogCWludCByOwogCisJaWYgKCFhZGV2KQorCQlyZXR1cm4gLUVJ
TlZBTDsKKwogCS8qIENoZWNrIHRoYXQgbnVtX2h3X3N1Ym1pc3Npb24gaXMgYSBwb3dlciBvZiB0
d28gKi8KIAlpZiAoKG51bV9od19zdWJtaXNzaW9uICYgKG51bV9od19zdWJtaXNzaW9uIC0gMSkp
ICE9IDApCiAJCXJldHVybiAtRUlOVkFMOwpAQCAtNDY1LDEyICs0NjksMzEgQEAgaW50IGFtZGdw
dV9mZW5jZV9kcml2ZXJfaW5pdF9yaW5nKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywKIAogCS8q
IE5vIG5lZWQgdG8gc2V0dXAgdGhlIEdQVSBzY2hlZHVsZXIgZm9yIEtJUSByaW5nICovCiAJaWYg
KHJpbmctPmZ1bmNzLT50eXBlICE9IEFNREdQVV9SSU5HX1RZUEVfS0lRKSB7Ci0JCS8qIGZvciBu
b24tc3Jpb3YgY2FzZSwgbm8gdGltZW91dCBlbmZvcmNlIG9uIGNvbXB1dGUgcmluZyAqLwotCQlp
ZiAoKHJpbmctPmZ1bmNzLT50eXBlID09IEFNREdQVV9SSU5HX1RZUEVfQ09NUFVURSkKLQkJCQkm
JiAhYW1kZ3B1X3NyaW92X3ZmKHJpbmctPmFkZXYpKQotCQkJdGltZW91dCA9IE1BWF9TQ0hFRFVM
RV9USU1FT1VUOwotCQllbHNlCi0JCQl0aW1lb3V0ID0gbXNlY3NfdG9famlmZmllcyhhbWRncHVf
bG9ja3VwX3RpbWVvdXQpOworCQlzd2l0Y2ggKHJpbmctPmZ1bmNzLT50eXBlKSB7CisJCWNhc2Ug
QU1ER1BVX1JJTkdfVFlQRV9HRlg6CisJCQl0aW1lb3V0ID0gYWRldi0+Z2Z4X3RpbWVvdXQ7CisJ
CQlicmVhazsKKwkJY2FzZSBBTURHUFVfUklOR19UWVBFX0NPTVBVVEU6CisJCQkvKgorCQkJICog
Rm9yIG5vbi1zcmlvdiBjYXNlLCBubyB0aW1lb3V0IGVuZm9yY2UKKwkJCSAqIG9uIGNvbXB1dGUg
cmluZyBhdCBkZWZhdWx0LiBVbmxlc3MgdXNlcgorCQkJICogc3BlY2lmaWVzIGEgdGltZW91dCBm
b3IgY29tcHV0ZSByaW5nLgorCQkJICoKKwkJCSAqIEZvciBzcmlvdiBjYXNlLCBhbHdheXMgdXNl
IHRoZSB0aW1lb3V0CisJCQkgKiBhcyBnZnggcmluZworCQkJICovCisJCQlpZiAoIWFtZGdwdV9z
cmlvdl92ZihyaW5nLT5hZGV2KSkKKwkJCQl0aW1lb3V0ID0gYWRldi0+Y29tcHV0ZV90aW1lb3V0
OworCQkJZWxzZQorCQkJCXRpbWVvdXQgPSBhZGV2LT5nZnhfdGltZW91dDsKKwkJCWJyZWFrOwor
CQljYXNlIEFNREdQVV9SSU5HX1RZUEVfU0RNQToKKwkJCXRpbWVvdXQgPSBhZGV2LT5zZG1hX3Rp
bWVvdXQ7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCXRpbWVvdXQgPSBhZGV2LT52aWRlb190
aW1lb3V0OworCQkJYnJlYWs7CisJCX0KIAogCQlyID0gZHJtX3NjaGVkX2luaXQoJnJpbmctPnNj
aGVkLCAmYW1kZ3B1X3NjaGVkX29wcywKIAkJCQkgICBudW1faHdfc3VibWlzc2lvbiwgYW1kZ3B1
X2pvYl9oYW5nX2xpbWl0LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
bXhncHVfYWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1X2FpLmMKaW5kZXgg
OGRiYWQ0OTZiMjlmLi4wODk5NTJhMWU2YjAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L214Z3B1X2FpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhn
cHVfYWkuYwpAQCAtMzQzLDcgKzM0Myw3IEBAIHN0YXRpYyB2b2lkIHhncHVfYWlfbWFpbGJveF9m
bHJfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAKIAkvKiBUcmlnZ2VyIHJlY292ZXJ5
IGZvciB3b3JsZCBzd2l0Y2ggZmFpbHVyZSBpZiBubyBURFIgKi8KIAlpZiAoYW1kZ3B1X2Rldmlj
ZV9zaG91bGRfcmVjb3Zlcl9ncHUoYWRldikKLQkJJiYgYW1kZ3B1X2xvY2t1cF90aW1lb3V0ID09
IE1BWF9TQ0hFRFVMRV9USU1FT1VUKQorCQkmJiBhZGV2LT5zZG1hX3RpbWVvdXQgPT0gTUFYX1ND
SEVEVUxFX1RJTUVPVVQpCiAJCWFtZGdwdV9kZXZpY2VfZ3B1X3JlY292ZXIoYWRldiwgTlVMTCk7
CiB9CiAKLS0gCjIuMjEuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18KYW1kLWdmeCBtYWlsaW5nIGxpc3QKYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4
