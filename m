Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 492ECE7361
	for <lists+amd-gfx@lfdr.de>; Mon, 28 Oct 2019 15:09:00 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A969A6E8A4;
	Mon, 28 Oct 2019 14:08:58 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM02-SN1-obe.outbound.protection.outlook.com
 (mail-eopbgr770089.outbound.protection.outlook.com [40.107.77.89])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 1DB396E8A4
 for <amd-gfx@lists.freedesktop.org>; Mon, 28 Oct 2019 14:08:57 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=bBm0w3ArM6801o3ZqfygtTSut2idPDiqFDr5BKkqlCTY0IMwdPOglrylEi1OrMPbpCiJwcWZ90864OEEaEsS82bolTYI1lLWSC9cVET31iX3F8/YJ/68RtcHa7RXzrvmIH2q3l8Rn22n/at+pjxq6u88TRzrRBpedPkA2UFGGLipvNHocOz090E5bsX6KIAbgg1aJ+Jg2/9UjuyigmWDRmVRbrhW9147YgEv86XAdI+DyapD8l1Qbd5+Xe/1FBCzyH0DJHvFcd+7VYOMLMXZWuhr+YFiUmIKBYcTLwxI1x5LP6D/WsfW9oj9GwMnDe215ZIHSPkuaMM8StOk/o9IRQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=DvdPkp7KrdXcv46B6q/2whiHPmgrLsFHHIyPM3R3rJ4=;
 b=aLNL+mVKy/suq+gZXt1ehxvr6jrKyyEZHLBXP3pUCqlYhH+jx8g3RcN5wmkxE1260++YddK3V6CnHwOeWzO4uqGPQOAkjgaEJmkBEKDUoleoAleemZTbb11x+avuWTdW5QSfdjzOs5/xXfEv051BMB0bgi7dyQmFYyBXTPYq/vQW87DnGHvrAZtqtDp/R1C51ACmvRN76OoeIkxZxqpZlWU5c0+wJBPAk9K9xuHPD5SzEJktv+mEsWBHBzMOK452jqBaF9UIOGmANvHVsu/AXWg7DmYMtBoih8BJUzib2qyGXc2dSrXdM4I47r6DXNlp0ZQ/AdLbHx4vZZB7D3LRrg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=none (sender ip is
 165.204.84.17) smtp.rcpttodomain=lists.freedesktop.org smtp.mailfrom=amd.com; 
 dmarc=permerror action=none header.from=amd.com; dkim=none (message not
 signed); arc=none
Received: from BN8PR12CA0002.namprd12.prod.outlook.com (2603:10b6:408:60::15)
 by CY4PR12MB1461.namprd12.prod.outlook.com (2603:10b6:910:f::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.2387.20; Mon, 28 Oct
 2019 14:08:53 +0000
Received: from BY2NAM03FT045.eop-NAM03.prod.protection.outlook.com
 (2a01:111:f400:7e4a::205) by BN8PR12CA0002.outlook.office365.com
 (2603:10b6:408:60::15) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.20.2387.20 via Frontend
 Transport; Mon, 28 Oct 2019 14:08:53 +0000
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXMB02.amd.com (165.204.84.17) by
 BY2NAM03FT045.mail.protection.outlook.com (10.152.85.113) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256) id
 15.20.2387.20 via Frontend Transport; Mon, 28 Oct 2019 14:08:53 +0000
Received: from SATLEXMB03.amd.com (10.181.40.144) by SATLEXMB02.amd.com
 (10.181.40.143) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Mon, 28 Oct
 2019 09:08:52 -0500
Received: from SATLEXMB01.amd.com (10.181.40.142) by SATLEXMB03.amd.com
 (10.181.40.144) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Mon, 28 Oct
 2019 09:08:52 -0500
Received: from kazvm.amd.com (10.180.168.240) by SATLEXMB01.amd.com
 (10.181.40.142) with Microsoft SMTP Server id 15.1.1713.5 via Frontend
 Transport; Mon, 28 Oct 2019 09:08:51 -0500
From: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
To: <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 04/11] drm/amd/display: Add the DMUB service
Date: Mon, 28 Oct 2019 10:08:30 -0400
Message-ID: <20191028140837.7908-5-nicholas.kazlauskas@amd.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191028140837.7908-1-nicholas.kazlauskas@amd.com>
References: <20191028140837.7908-1-nicholas.kazlauskas@amd.com>
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; IPV:NLI; CTRY:US; EFV:NLI;
 SFV:NSPM;
 SFS:(10009020)(4636009)(396003)(39860400002)(136003)(376002)(346002)(428003)(189003)(199004)(50226002)(30864003)(86362001)(2351001)(70586007)(478600001)(8676002)(81156014)(8936002)(4326008)(5660300002)(81166006)(53416004)(1076003)(336012)(446003)(426003)(186003)(51416003)(76176011)(7696005)(26005)(356004)(70206006)(305945005)(14444005)(6666004)(316002)(6916009)(2906002)(50466002)(47776003)(2616005)(11346002)(476003)(2870700001)(48376002)(126002)(44832011)(36756003)(486006)(569006);
 DIR:OUT; SFP:1101; SCL:1; SRVR:CY4PR12MB1461; H:SATLEXMB02.amd.com; FPR:;
 SPF:None; LANG:en; PTR:InfoDomainNonexistent; MX:1; A:1; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: e5554b6e-3278-40c9-c453-08d75bb05d50
X-MS-TrafficTypeDiagnostic: CY4PR12MB1461:
X-Microsoft-Antispam-PRVS: <CY4PR12MB1461AACDEE1862976457D1F8EC660@CY4PR12MB1461.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:10000;
X-Forefront-PRVS: 0204F0BDE2
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: YeXrJ31UrYfUyFYPjJn62slwJrWoKCum+81Vw24GTR+TS5t44pvC90rEpK2THDiMLn60xQt4Cpn7V76D7RJ1TBZBE6lqkKgIRL0EJKHKYE3S4MXo6Nb/W4cB2r5iKw21q4X9YWhn2XrvnoTFX6SMeONIDB+Ex9zibu0JrgO98Tnqn1W9X4pXDcETa1icQgS/qDtT47dkZdLaACpBIlp9ttpdSO/4vzy2VHASkSL0gA8xlohQnhWbFAGvxZxuyN0VTWnroLb4ahv7bPNRcMArFWA/V+Rlrj0QNMhZzWKFLUwCO1pbG62afpmsXhEkQb2qNxUgyuYVpKQtweJf1C5/WufhyuyIwYsUe7TjjrxCPfCjVcCPOm9iDuyvTLDprRJdv8BIFohwSpg9P9QKErHO1dInW8KLNGzHm/V9zrRYF9Bo5ymCluUjCOBIY+8i/FS2
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 28 Oct 2019 14:08:53.2829 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: e5554b6e-3278-40c9-c453-08d75bb05d50
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXMB02.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR12MB1461
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=DvdPkp7KrdXcv46B6q/2whiHPmgrLsFHHIyPM3R3rJ4=;
 b=Cz62uHDTeTp4ykEfZuWTTAaBzeycADQDoK12Scv+cFFKHvztuy/jPbhstdkTAfsoQlxAGifYbtFgo0RCQuGkrX8hwOrZfLGhQn+nB4ilBkJqkiG1mokoLZAPH0Ipx21L6yNkd0jHH5oVQV1bpxq2vtGt2tr9PgEOBNVLbAlVceg=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is
 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VGhlIERNVUIgc2VydmljZSBpcyB0aGUgaW50ZXJmYWNlIHRvIHRoZSBETUNVQi4KCkl0J3MgcmVx
dWlyZWQgdG8gc3VwcG9ydCBSZW5vaXIgZmVhdHVyZXMgc28gaXQgd2lsbCBiZSBlbmFibGVkIGFu
ZApjb21waWxlZCBhdXRvbWF0aWNhbGx5IHdoZW4gdGhlIFJlbm9pciBkaXNwbGF5IGVuZ2luZSBp
cyBlbmFibGVkIHZpYQpDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzEuCgpETVVCIGNvZGUgd2lsbCBp
bml0aWFsbHkgYmUgZ3VhcmRlZCBieSBDT05GSUdfRFJNX0FNRF9EQ19ETVVCIGFuZCBsYXRlcgpz
d2l0Y2hlZCB0byBDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzEgd2l0aCB0aGUgY29uZmlnIG9wdGlv
biBkcm9wcGVkLgoKU2lnbmVkLW9mZi1ieTogTmljaG9sYXMgS2F6bGF1c2thcyA8bmljaG9sYXMu
a2F6bGF1c2thc0BhbWQuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9LY29u
ZmlnICAgICAgICAgICB8ICAgNiArCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvTWFrZWZp
bGUgICAgICAgICAgfCAgIDggKwogLi4uL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9pbmMvZG11
Yl9jbWQuaCAgIHwgMjU2ICsrKysrKysrKwogLi4uL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9p
bmMvZG11Yl9yYi5oICAgIHwgMTI5ICsrKysrCiAuLi4vZ3B1L2RybS9hbWQvZGlzcGxheS9kbXVi
L2luYy9kbXViX3Nydi5oICAgfCA1MDUgKysrKysrKysrKysrKysrKysrCiAuLi4vYW1kL2Rpc3Bs
YXkvZG11Yi9pbmMvZG11Yl90cmFjZV9idWZmZXIuaCAgfCAgNTEgKysKIC4uLi9ncHUvZHJtL2Ft
ZC9kaXNwbGF5L2RtdWIvaW5jL2RtdWJfdHlwZXMuaCB8ICA2NCArKysKIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kbXViL3NyYy9NYWtlZmlsZSB8ICAyOSArCiAuLi4vZ3B1L2RybS9hbWQv
ZGlzcGxheS9kbXViL3NyYy9kbXViX2RjbjIwLmMgfCAxMzcgKysrKysKIC4uLi9ncHUvZHJtL2Ft
ZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfZGNuMjAuaCB8ICA2MiArKysKIC4uLi9ncHUvZHJtL2Ft
ZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfZGNuMjEuYyB8IDEyNiArKysrKwogLi4uL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9kY24yMS5oIHwgIDQ1ICsrCiAuLi4vZ3B1L2RybS9h
bWQvZGlzcGxheS9kbXViL3NyYy9kbXViX3JlZy5jICAgfCAxMDkgKysrKwogLi4uL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9yZWcuaCAgIHwgMTIwICsrKysrCiAuLi4vZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kbXViL3NyYy9kbXViX3Nydi5jICAgfCA0MTUgKysrKysrKysrKysrKysK
IDE1IGZpbGVzIGNoYW5nZWQsIDIwNjIgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0
IGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2luYy9kbXViX2NtZC5oCiBjcmVhdGUg
bW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvaW5jL2RtdWJfcmIu
aAogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2lu
Yy9kbXViX3Nydi5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNw
bGF5L2RtdWIvaW5jL2RtdWJfdHJhY2VfYnVmZmVyLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2
ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9pbmMvZG11Yl90eXBlcy5oCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL01ha2VmaWxlCiBj
cmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2Rt
dWJfZGNuMjAuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxh
eS9kbXViL3NyYy9kbXViX2RjbjIwLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9k
cm0vYW1kL2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9kY24yMS5jCiBjcmVhdGUgbW9kZSAxMDA2NDQg
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfZGNuMjEuaAogY3JlYXRl
IG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9kbXViX3Jl
Zy5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIv
c3JjL2RtdWJfcmVnLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vYW1kL2Rp
c3BsYXkvZG11Yi9zcmMvZG11Yl9zcnYuYwoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9LY29uZmlnIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L0tjb25maWcK
aW5kZXggMzEzMTgzYjgwMDMyLi5mY2VkMzllMjI5ZDUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvZGlzcGxheS9LY29uZmlnCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxh
eS9LY29uZmlnCkBAIC0zMCw2ICszMCw3IEBAIGNvbmZpZyBEUk1fQU1EX0RDX0RDTjJfMQogCWJv
b2wgIkRDTiAyLjEgZmFtaWx5IgogCWRlcGVuZHMgb24gRFJNX0FNRF9EQyAmJiBYODYKIAlkZXBl
bmRzIG9uIERSTV9BTURfRENfRENOMl8wCisJc2VsZWN0IERSTV9BTURfRENfRE1VQgogCWhlbHAK
IAkgIENob29zZSB0aGlzIG9wdGlvbiBpZiB5b3Ugd2FudCB0byBoYXZlCiAJICBSZW5vaXIgc3Vw
cG9ydCBmb3IgZGlzcGxheSBlbmdpbmUKQEAgLTUyLDYgKzUzLDExIEBAIGNvbmZpZyBEUk1fQU1E
X0RDX0hEQ1AKIAkgaWYgeW91IHdhbnQgdG8gc3VwcG9ydAogCSBIRENQIGF1dGhlbnRpY2F0aW9u
CiAKK2NvbmZpZyBEUk1fQU1EX0RDX0RNVUIKKyAgICAgICAgZGVmX2Jvb2wgbgorICAgICAgICBo
ZWxwCisgICAgICAgICAgRE1VQiBzdXBwb3J0IGZvciBkaXNwbGF5IGVuZ2luZQorCiBjb25maWcg
REVCVUdfS0VSTkVMX0RDCiAJYm9vbCAiRW5hYmxlIGtnZGIgYnJlYWsgaW4gREMiCiAJZGVwZW5k
cyBvbiBEUk1fQU1EX0RDCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkv
TWFrZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvTWFrZWZpbGUKaW5kZXggMzZi
M2Q2YTVkMDRkLi4zYzczMzJiZTRhODkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
ZGlzcGxheS9NYWtlZmlsZQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvTWFrZWZp
bGUKQEAgLTM4LDYgKzM4LDEwIEBAIGlmZGVmIENPTkZJR19EUk1fQU1EX0RDX0hEQ1AKIHN1YmRp
ci1jY2ZsYWdzLXkgKz0gLUkkKEZVTExfQU1EX0RJU1BMQVlfUEFUSCkvbW9kdWxlcy9oZGNwCiBl
bmRpZgogCitpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19ETVVCCitzdWJkaXItY2NmbGFncy15ICs9
IC1JJChGVUxMX0FNRF9ESVNQTEFZX1BBVEgpL2RtdWIvaW5jCitlbmRpZgorCiAjVE9ETzogcmVt
b3ZlIHdoZW4gVGltaW5nIFN5bmMgZmVhdHVyZSBpcyBjb21wbGV0ZQogc3ViZGlyLWNjZmxhZ3Mt
eSArPSAtREJVSUxEX0ZFQVRVUkVfVElNSU5HX1NZTkM9MAogCkBAIC00Nyw2ICs1MSwxMCBAQCBp
ZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19IRENQCiBEQUxfTElCUyArPSBtb2R1bGVzL2hkY3AKIGVu
ZGlmCiAKK2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RNVUIKK0RBTF9MSUJTICs9IGRtdWIvc3Jj
CitlbmRpZgorCiBBTURfREFMID0gJChhZGRzdWZmaXggL01ha2VmaWxlLCAkKGFkZHByZWZpeCAk
KEZVTExfQU1EX0RJU1BMQVlfUEFUSCkvLCQoREFMX0xJQlMpKSkKIAogaW5jbHVkZSAkKEFNRF9E
QUwpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9pbmMvZG11
Yl9jbWQuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2luYy9kbXViX2NtZC5o
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uYjI1ZjkyZTMyODBkCi0t
LSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvaW5jL2Rt
dWJfY21kLmgKQEAgLTAsMCArMSwyNTYgQEAKKy8qCisgKiBDb3B5cmlnaHQgMjAxOSBBZHZhbmNl
ZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRl
ZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2Yg
dGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNv
ZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9u
LCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29w
eSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFu
ZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0
byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRv
IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5v
dGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgorICog
YWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCisgKgor
ICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0Yg
QU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlU
RUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1Ig
QSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNI
QUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZP
UiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBB
TiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICogQVJJU0lORyBGUk9N
LCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9S
CisgKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKgorICogQXV0aG9yczogQU1E
CisgKgorICovCisKKyNpZm5kZWYgX0RNVUJfQ01EX0hfCisjZGVmaW5lIF9ETVVCX0NNRF9IXwor
CisjaW5jbHVkZSAiZG11Yl90eXBlcy5oIgorI2luY2x1ZGUgImF0b21maXJtd2FyZS5oIgorCisj
ZGVmaW5lIERNVUJfUkJfQ01EX1NJWkUgNjQKKyNkZWZpbmUgRE1VQl9SQl9NQVhfRU5UUlkgMTI4
CisjZGVmaW5lIERNVUJfUkJfU0laRSAoRE1VQl9SQl9DTURfU0laRSAqIERNVUJfUkJfTUFYX0VO
VFJZKQorI2RlZmluZSBSRUdfU0VUX01BU0sgMHhGRkZGCisKK2VudW0gZG11Yl9jbWRfdHlwZSB7
CisJRE1VQl9DTURfX05VTEwsCisJRE1VQl9DTURfX1JFR19TRVFfUkVBRF9NT0RJRllfV1JJVEUs
CisJRE1VQl9DTURfX1JFR19TRVFfRklFTERfVVBEQVRFX1NFUSwKKwlETVVCX0NNRF9fUkVHX1NF
UV9CVVJTVF9XUklURSwKKwlETVVCX0NNRF9fUkVHX1JFR19XQUlULAorCURNVUJfQ01EX19ESUdY
X0VOQ09ERVJfQ09OVFJPTCwKKwlETVVCX0NNRF9fU0VUX1BJWEVMX0NMT0NLLAorCURNVUJfQ01E
X19FTkFCTEVfRElTUF9QT1dFUl9HQVRJTkcsCisJRE1VQl9DTURfX0RQUEhZX0lOSVQsCisJRE1V
Ql9DTURfX0RJRzFfVFJBTlNNSVRURVJfQ09OVFJPTCwKKworCS8vIFBTUgorCURNVUJfQ01EX19Q
U1JfRU5BQkxFLAorCURNVUJfQ01EX19QU1JfRElTQUJMRSwKKwlETVVCX0NNRF9fUFNSX0NPUFlf
U0VUVElOR1MsCisJRE1VQl9DTURfX1BTUl9TRVRfTEVWRUwsCit9OworCisjcHJhZ21hIHBhY2so
cHVzaCwgMSkKKworc3RydWN0IGRtdWJfY21kX2hlYWRlciB7CisJZW51bSBkbXViX2NtZF90eXBl
IHR5cGUgOiA4OworCXVuc2lnbmVkIGludCByZXNlcnZlZDAgOiAxNjsKKwl1bnNpZ25lZCBpbnQg
cGF5bG9hZF9ieXRlcyA6IDY7ICAvKiB1cCB0byA2MCBieXRlcyAqLworCXVuc2lnbmVkIGludCBy
ZXNlcnZlZCA6IDI7Cit9OworCisvKgorICogUmVhZCBtb2RpZnkgd3JpdGUKKyAqCisgKiA2MCBw
YXlsb2FkIGJ5dGVzIGNhbiBob2xkIHVwIHRvIDUgc2V0cyBvZiByZWFkIG1vZGlmeSB3cml0ZXMs
CisgKiBlYWNoIHRha2UgMyBkd29yZHMuCisgKgorICogbnVtYmVyIG9mIHNlcXVlbmNlcyA9IGhl
YWRlci5wYXlsb2FkX2J5dGVzIC8gc2l6ZW9mKHN0cnVjdCBkbXViX2NtZF9yZWFkX21vZGlmeV93
cml0ZV9zZXF1ZW5jZSkKKyAqCisgKiBtb2RpZnlfbWFzayA9IDB4ZmZmZidmZmZmIG1lYW5zIGFs
bCBmaWVsZHMgYXJlIGdvaW5nIHRvIGJlIHVwZGF0ZWQuICBpbiB0aGlzIGNhc2UKKyAqIGNvbW1h
bmQgcGFyc2VyIHdpbGwgc2tpcCB0aGUgcmVhZCBhbmQgd2UgY2FuIHVzZSBtb2RpZnlfbWFzayA9
IDB4ZmZmZidmZmZmIGFzIHJlZyB3cml0ZQorICovCitzdHJ1Y3QgZG11Yl9jbWRfcmVhZF9tb2Rp
Znlfd3JpdGVfc2VxdWVuY2UgeworCXVpbnQzMl90IGFkZHI7CisJdWludDMyX3QgbW9kaWZ5X21h
c2s7CisJdWludDMyX3QgbW9kaWZ5X3ZhbHVlOworfTsKKworI2RlZmluZSBETVVCX1JFQURfTU9E
SUZZX1dSSVRFX1NFUV9fTUFYCQk1CitzdHJ1Y3QgZG11Yl9yYl9jbWRfcmVhZF9tb2RpZnlfd3Jp
dGUgeworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIgaGVhZGVyOyAgLy8gdHlwZSA9IERNVUJfQ01E
X19SRUdfU0VRX1JFQURfTU9ESUZZX1dSSVRFCisJc3RydWN0IGRtdWJfY21kX3JlYWRfbW9kaWZ5
X3dyaXRlX3NlcXVlbmNlIHNlcVtETVVCX1JFQURfTU9ESUZZX1dSSVRFX1NFUV9fTUFYXTsKK307
CisKKy8qCisgKiBVcGRhdGUgYSByZWdpc3RlciB3aXRoIHNwZWNpZmllZCBtYXNrcyBhbmQgdmFs
dWVzIHNlcXVldW5jZQorICoKKyAqIDYwIHBheWxvYWQgYnl0ZXMgY2FuIGhvbGQgYWRkcmVzcyAr
IHVwIHRvIDcgc2V0cyBvZiBtYXNrL3ZhbHVlIGNvbWJvLCBlYWNoIHRha2UgMiBkd29yZAorICoK
KyAqIG51bWJlciBvZiBmaWVsZCB1cGRhdGUgc2VxdWVuY2UgPSAoaGVhZGVyLnBheWxvYWRfYnl0
ZXMgLSBzaXplb2YoYWRkcikpIC8gc2l6ZW9mKHN0cnVjdCByZWFkX21vZGlmeV93cml0ZV9zZXF1
ZW5jZSkKKyAqCisgKgorICogVVNFIENBU0U6CisgKiAgIDEuIGF1dG8taW5jcmVtZW50IHJlZ2lz
dGVyIHdoZXJlIGFkZGl0aW9uYWwgcmVhZCB3b3VsZCB1cGRhdGUgcG9pbnRlciBhbmQgcHJvZHVj
ZSB3cm9uZyByZXN1bHQKKyAqICAgMi4gdG9nZ2xlIGEgYml0IHdpdGhvdXQgcmVhZCBpbiB0aGUg
bWlkZGxlCisgKi8KKworc3RydWN0IGRtdWJfY21kX3JlZ19maWVsZF91cGRhdGVfc2VxdWVuY2Ug
eworCXVpbnQzMl90IG1vZGlmeV9tYXNrOyAgLy8gMHhmZmZmJ2ZmZmYgdG8gc2tpcCBpbml0aWFs
IHJlYWQKKwl1aW50MzJfdCBtb2RpZnlfdmFsdWU7Cit9OworCisjZGVmaW5lIERNVUJfUkVHX0ZJ
RUxEX1VQREFURV9TRVFfX01BWAkJNworCitzdHJ1Y3QgZG11Yl9yYl9jbWRfcmVnX2ZpZWxkX3Vw
ZGF0ZV9zZXF1ZW5jZSB7CisJc3RydWN0IGRtdWJfY21kX2hlYWRlciBoZWFkZXI7CisJdWludDMy
X3QgYWRkcjsKKwlzdHJ1Y3QgZG11Yl9jbWRfcmVnX2ZpZWxkX3VwZGF0ZV9zZXF1ZW5jZSBzZXFb
RE1VQl9SRUdfRklFTERfVVBEQVRFX1NFUV9fTUFYXTsKK307CisKKworLyoKKyAqIEJ1cnN0IHdy
aXRlCisgKgorICogc3VwcG9ydCB1c2UgY2FzZSBzdWNoIGFzIHdyaXRpbmcgb3V0IExVVHMuCisg
KgorICogNjAgcGF5bG9hZCBieXRlcyBjYW4gaG9sZCB1cCB0byAxNCB2YWx1ZXMgdG8gd3JpdGUg
dG8gZ2l2ZW4gYWRkcmVzcworICoKKyAqIG51bWJlciBvZiBwYXlsb2FkID0gaGVhZGVyLnBheWxv
YWRfYnl0ZXMgLyBzaXplb2Yoc3RydWN0IHJlYWRfbW9kaWZ5X3dyaXRlX3NlcXVlbmNlKQorICov
CisjZGVmaW5lIERNVUJfQlVSU1RfV1JJVEVfVkFMVUVTX19NQVggIDE0CitzdHJ1Y3QgZG11Yl9y
Yl9jbWRfYnVyc3Rfd3JpdGUgeworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIgaGVhZGVyOyAgLy8g
dHlwZSA9IERNVUJfQ01EX19SRUdfU0VRX0JVUlNUX1dSSVRFCisJdWludDMyX3QgYWRkcjsKKwl1
aW50MzJfdCB3cml0ZV92YWx1ZXNbRE1VQl9CVVJTVF9XUklURV9WQUxVRVNfX01BWF07Cit9Owor
CisKK3N0cnVjdCBkbXViX3JiX2NtZF9jb21tb24geworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIg
aGVhZGVyOworCXVpbnQ4X3QgY21kX2J1ZmZlcltETVVCX1JCX0NNRF9TSVpFIC0gc2l6ZW9mKHN0
cnVjdCBkbXViX2NtZF9oZWFkZXIpXTsKK307CisKK3N0cnVjdCBkbXViX2NtZF9yZWdfd2FpdF9k
YXRhIHsKKwl1aW50MzJfdCBhZGRyOworCXVpbnQzMl90IG1hc2s7CisJdWludDMyX3QgY29uZGl0
aW9uX2ZpZWxkX3ZhbHVlOworCXVpbnQzMl90IHRpbWVfb3V0X3VzOworfTsKKworc3RydWN0IGRt
dWJfcmJfY21kX3JlZ193YWl0IHsKKwlzdHJ1Y3QgZG11Yl9jbWRfaGVhZGVyIGhlYWRlcjsKKwlz
dHJ1Y3QgZG11Yl9jbWRfcmVnX3dhaXRfZGF0YSByZWdfd2FpdDsKK307CisKK3N0cnVjdCBkbXVi
X2NtZF9kaWd4X2VuY29kZXJfY29udHJvbF9kYXRhIHsKKwl1bmlvbiBkaWdfZW5jb2Rlcl9jb250
cm9sX3BhcmFtZXRlcnNfdjFfNSBkaWc7Cit9OworCitzdHJ1Y3QgZG11Yl9yYl9jbWRfZGlneF9l
bmNvZGVyX2NvbnRyb2wgeworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIgaGVhZGVyOworCXN0cnVj
dCBkbXViX2NtZF9kaWd4X2VuY29kZXJfY29udHJvbF9kYXRhIGVuY29kZXJfY29udHJvbDsKK307
CisKK3N0cnVjdCBkbXViX2NtZF9zZXRfcGl4ZWxfY2xvY2tfZGF0YSB7CisJc3RydWN0IHNldF9w
aXhlbF9jbG9ja19wYXJhbWV0ZXJfdjFfNyBjbGs7Cit9OworCitzdHJ1Y3QgZG11Yl9yYl9jbWRf
c2V0X3BpeGVsX2Nsb2NrIHsKKwlzdHJ1Y3QgZG11Yl9jbWRfaGVhZGVyIGhlYWRlcjsKKwlzdHJ1
Y3QgZG11Yl9jbWRfc2V0X3BpeGVsX2Nsb2NrX2RhdGEgcGl4ZWxfY2xvY2s7Cit9OworCitzdHJ1
Y3QgZG11Yl9jbWRfZW5hYmxlX2Rpc3BfcG93ZXJfZ2F0aW5nX2RhdGEgeworCXN0cnVjdCBlbmFi
bGVfZGlzcF9wb3dlcl9nYXRpbmdfcGFyYW1ldGVyc192Ml8xIHB3cjsKK307CisKK3N0cnVjdCBk
bXViX3JiX2NtZF9lbmFibGVfZGlzcF9wb3dlcl9nYXRpbmcgeworCXN0cnVjdCBkbXViX2NtZF9o
ZWFkZXIgaGVhZGVyOworCXN0cnVjdCBkbXViX2NtZF9lbmFibGVfZGlzcF9wb3dlcl9nYXRpbmdf
ZGF0YSBwb3dlcl9nYXRpbmc7Cit9OworCitzdHJ1Y3QgZG11Yl9jbWRfZGlnMV90cmFuc21pdHRl
cl9jb250cm9sX2RhdGEgeworCXN0cnVjdCBkaWdfdHJhbnNtaXR0ZXJfY29udHJvbF9wYXJhbWV0
ZXJzX3YxXzYgZGlnOworfTsKKworc3RydWN0IGRtdWJfcmJfY21kX2RpZzFfdHJhbnNtaXR0ZXJf
Y29udHJvbCB7CisJc3RydWN0IGRtdWJfY21kX2hlYWRlciBoZWFkZXI7CisJc3RydWN0IGRtdWJf
Y21kX2RpZzFfdHJhbnNtaXR0ZXJfY29udHJvbF9kYXRhIHRyYW5zbWl0dGVyX2NvbnRyb2w7Cit9
OworCitzdHJ1Y3QgZG11Yl9yYl9jbWRfZHBwaHlfaW5pdCB7CisJc3RydWN0IGRtdWJfY21kX2hl
YWRlciBoZWFkZXI7CisJdWludDhfdCByZXNlcnZlZFs2MF07Cit9OworCitzdHJ1Y3QgZG11Yl9j
bWRfcHNyX2NvcHlfc2V0dGluZ3NfZGF0YSB7CisJdWludDMyX3QgcmVnMTsKKwl1aW50MzJfdCBy
ZWcyOworCXVpbnQzMl90IHJlZzM7Cit9OworCitzdHJ1Y3QgZG11Yl9yYl9jbWRfcHNyX2NvcHlf
c2V0dGluZ3MgeworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIgaGVhZGVyOworCXN0cnVjdCBkbXVi
X2NtZF9wc3JfY29weV9zZXR0aW5nc19kYXRhIHBzcl9jb3B5X3NldHRpbmdzX2RhdGE7Cit9Owor
CitzdHJ1Y3QgZG11Yl9jbWRfcHNyX3NldF9sZXZlbF9kYXRhIHsKKwl1aW50MTZfdCBwc3JfbGV2
ZWw7Cit9OworCitzdHJ1Y3QgZG11Yl9yYl9jbWRfcHNyX3NldF9sZXZlbCB7CisJc3RydWN0IGRt
dWJfY21kX2hlYWRlciBoZWFkZXI7CisJc3RydWN0IGRtdWJfY21kX3Bzcl9zZXRfbGV2ZWxfZGF0
YSBwc3Jfc2V0X2xldmVsX2RhdGE7Cit9OworCitzdHJ1Y3QgZG11Yl9yYl9jbWRfcHNyX2Rpc2Fi
bGUgeworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIgaGVhZGVyOworfTsKKworc3RydWN0IGRtdWJf
cmJfY21kX3Bzcl9lbmFibGUgeworCXN0cnVjdCBkbXViX2NtZF9oZWFkZXIgaGVhZGVyOworfTsK
Kworc3RydWN0IGRtdWJfY21kX3Bzcl9ub3RpZnlfdmJsYW5rX2RhdGEgeworCXVpbnQzMl90IHZi
bGFua19pbnQ7IC8vIFdoaWNoIHZibGFuayBpbnRlcnJ1cHQgd2FzIHRyaWdnZXJlZAorfTsKKwor
c3RydWN0IGRtdWJfcmJfY21kX25vdGlmeV92YmxhbmsgeworCXN0cnVjdCBkbXViX2NtZF9oZWFk
ZXIgaGVhZGVyOworCXN0cnVjdCBkbXViX2NtZF9wc3Jfbm90aWZ5X3ZibGFua19kYXRhIHBzcl9u
b3RpZnlfdmJsYW5rX2RhdGE7Cit9OworCitzdHJ1Y3QgZG11Yl9jbWRfcHNyX25vdGlmeV9zdGF0
aWNfc3RhdGVfZGF0YSB7CisJdWludDMyX3Qgc3NfaW50OyAgIC8vIFdoaWNoIHN0YXRpYyBzY3Jl
ZW4gaW50ZXJydXB0IHdhcyB0cmlnZ2VyZWQKKwl1aW50MzJfdCBzc19lbnRlcjsgLy8gRW50ZXIg
KDEpIG9yIGV4aXQgKDApIHN0YXRpYyBzY3JlZW4KK307CisKK3N0cnVjdCBkbXViX3JiX2NtZF9w
c3Jfbm90aWZ5X3N0YXRpY19zdGF0ZSB7CisJc3RydWN0IGRtdWJfY21kX2hlYWRlciBoZWFkZXI7
CisJc3RydWN0IGRtdWJfY21kX3Bzcl9ub3RpZnlfc3RhdGljX3N0YXRlX2RhdGEgcHNyX25vdGlm
eV9zdGF0aWNfc3RhdGVfZGF0YTsKK307CisKK3VuaW9uIGRtdWJfcmJfY21kIHsKKwlzdHJ1Y3Qg
ZG11Yl9yYl9jbWRfcmVhZF9tb2RpZnlfd3JpdGUgcmVhZF9tb2RpZnlfd3JpdGU7CisJc3RydWN0
IGRtdWJfcmJfY21kX3JlZ19maWVsZF91cGRhdGVfc2VxdWVuY2UgcmVnX2ZpZWxkX3VwZGF0ZV9z
ZXE7CisJc3RydWN0IGRtdWJfcmJfY21kX2J1cnN0X3dyaXRlIGJ1cnN0X3dyaXRlOworCXN0cnVj
dCBkbXViX3JiX2NtZF9yZWdfd2FpdCByZWdfd2FpdDsKKwlzdHJ1Y3QgZG11Yl9yYl9jbWRfY29t
bW9uIGNtZF9jb21tb247CisJc3RydWN0IGRtdWJfcmJfY21kX2RpZ3hfZW5jb2Rlcl9jb250cm9s
IGRpZ3hfZW5jb2Rlcl9jb250cm9sOworCXN0cnVjdCBkbXViX3JiX2NtZF9zZXRfcGl4ZWxfY2xv
Y2sgc2V0X3BpeGVsX2Nsb2NrOworCXN0cnVjdCBkbXViX3JiX2NtZF9lbmFibGVfZGlzcF9wb3dl
cl9nYXRpbmcgZW5hYmxlX2Rpc3BfcG93ZXJfZ2F0aW5nOworCXN0cnVjdCBkbXViX3JiX2NtZF9k
cHBoeV9pbml0IGRwcGh5X2luaXQ7CisJc3RydWN0IGRtdWJfcmJfY21kX2RpZzFfdHJhbnNtaXR0
ZXJfY29udHJvbCBkaWcxX3RyYW5zbWl0dGVyX2NvbnRyb2w7CisJc3RydWN0IGRtdWJfcmJfY21k
X3Bzcl9lbmFibGUgcHNyX2VuYWJsZTsKKwlzdHJ1Y3QgZG11Yl9yYl9jbWRfcHNyX2Rpc2FibGUg
cHNyX2Rpc2FibGU7CisJc3RydWN0IGRtdWJfcmJfY21kX3Bzcl9jb3B5X3NldHRpbmdzIHBzcl9j
b3B5X3NldHRpbmdzOworCXN0cnVjdCBkbXViX3JiX2NtZF9wc3Jfc2V0X2xldmVsIHBzcl9zZXRf
bGV2ZWw7Cit9OworCisjcHJhZ21hIHBhY2socG9wKQorCisjZW5kaWYgLyogX0RNVUJfQ01EX0hf
ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9pbmMvZG11
Yl9yYi5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvaW5jL2RtdWJfcmIuaApu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmFjMjI3NDRlYWE5NAotLS0g
L2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2luYy9kbXVi
X3JiLmgKQEAgLTAsMCArMSwxMjkgQEAKKy8qCisgKiBDb3B5cmlnaHQgMjAxOSBBZHZhbmNlZCBN
aWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwg
ZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhp
cyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3
YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBp
bmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwg
bW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9v
ciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3
aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRo
ZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGlj
ZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgorICogYWxs
IGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCisgKgorICog
VEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5Z
IEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQg
VE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQ
QVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxM
CisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBB
TlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBB
Q1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICogQVJJU0lORyBGUk9NLCBP
VVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCisg
KiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKgorICogQXV0aG9yczogQU1ECisg
KgorICovCisKKyNpZm5kZWYgX0RNVUJfUkJfSF8KKyNkZWZpbmUgX0RNVUJfUkJfSF8KKworI2lu
Y2x1ZGUgImRtdWJfdHlwZXMuaCIKKyNpbmNsdWRlICJkbXViX2NtZC5oIgorCisjaWYgZGVmaW5l
ZChfX2NwbHVzcGx1cykKK2V4dGVybiAiQyIgeworI2VuZGlmCisKK3N0cnVjdCBkbXViX2NtZF9o
ZWFkZXI7CisKK3N0cnVjdCBkbXViX3JiX2luaXRfcGFyYW1zIHsKKwl2b2lkICpjdHg7CisJdm9p
ZCAqYmFzZV9hZGRyZXNzOworCXVpbnQzMl90IGNhcGFjaXR5OworfTsKKworc3RydWN0IGRtdWJf
cmIgeworCXZvaWQgKmJhc2VfYWRkcmVzczsKKwl1aW50MzJfdCBkYXRhX2NvdW50OworCXVpbnQz
Ml90IHJwdHI7CisJdWludDMyX3Qgd3JwdDsKKwl1aW50MzJfdCBjYXBhY2l0eTsKKworCXZvaWQg
KmN0eDsKKwl2b2lkICpkbXViOworfTsKKworCitzdGF0aWMgaW5saW5lIGJvb2wgZG11Yl9yYl9l
bXB0eShzdHJ1Y3QgZG11Yl9yYiAqcmIpCit7CisJcmV0dXJuIChyYi0+d3JwdCA9PSByYi0+cnB0
cik7Cit9CisKK3N0YXRpYyBpbmxpbmUgYm9vbCBkbXViX3JiX2Z1bGwoc3RydWN0IGRtdWJfcmIg
KnJiKQoreworCXVpbnQzMl90IGRhdGFfY291bnQ7CisKKwlpZiAocmItPndycHQgPj0gcmItPnJw
dHIpCisJCWRhdGFfY291bnQgPSByYi0+d3JwdCAtIHJiLT5ycHRyOworCWVsc2UKKwkJZGF0YV9j
b3VudCA9IHJiLT5jYXBhY2l0eSAtIChyYi0+cnB0ciAtIHJiLT53cnB0KTsKKworCXJldHVybiAo
ZGF0YV9jb3VudCA9PSAocmItPmNhcGFjaXR5IC0gRE1VQl9SQl9DTURfU0laRSkpOworfQorCitz
dGF0aWMgaW5saW5lIGJvb2wgZG11Yl9yYl9wdXNoX2Zyb250KHN0cnVjdCBkbXViX3JiICpyYiwK
KwkJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl9jbWRfaGVhZGVyICpjbWQpCit7CisJdWludDhf
dCAqd3RfcHRyID0gKHVpbnQ4X3QgKikocmItPmJhc2VfYWRkcmVzcykgKyByYi0+d3JwdDsKKwor
CWlmIChkbXViX3JiX2Z1bGwocmIpKQorCQlyZXR1cm4gZmFsc2U7CisKKwlkbXViX21lbWNweSh3
dF9wdHIsIGNtZCwgRE1VQl9SQl9DTURfU0laRSk7CisJcmItPndycHQgKz0gRE1VQl9SQl9DTURf
U0laRTsKKworCWlmIChyYi0+d3JwdCA+PSByYi0+Y2FwYWNpdHkpCisJCXJiLT53cnB0ICU9IHJi
LT5jYXBhY2l0eTsKKworCXJldHVybiB0cnVlOworfQorCitzdGF0aWMgaW5saW5lIGJvb2wgZG11
Yl9yYl9mcm9udChzdHJ1Y3QgZG11Yl9yYiAqcmIsCisJCQkJIHN0cnVjdCBkbXViX2NtZF9oZWFk
ZXIgKmNtZCkKK3sKKwl1aW50OF90ICpyZF9wdHIgPSAodWludDhfdCAqKXJiLT5iYXNlX2FkZHJl
c3MgKyByYi0+cnB0cjsKKworCWlmIChkbXViX3JiX2VtcHR5KHJiKSkKKwkJcmV0dXJuIGZhbHNl
OworCisJZG11Yl9tZW1jcHkoY21kLCByZF9wdHIsIERNVUJfUkJfQ01EX1NJWkUpOworCisJcmV0
dXJuIHRydWU7Cit9CisKK3N0YXRpYyBpbmxpbmUgYm9vbCBkbXViX3JiX3BvcF9mcm9udChzdHJ1
Y3QgZG11Yl9yYiAqcmIpCit7CisJaWYgKGRtdWJfcmJfZW1wdHkocmIpKQorCQlyZXR1cm4gZmFs
c2U7CisKKwlyYi0+cnB0ciArPSBETVVCX1JCX0NNRF9TSVpFOworCisJaWYgKHJiLT5ycHRyID49
IHJiLT5jYXBhY2l0eSkKKwkJcmItPnJwdHIgJT0gcmItPmNhcGFjaXR5OworCisJcmV0dXJuIHRy
dWU7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBkbXViX3JiX2luaXQoc3RydWN0IGRtdWJfcmIg
KnJiLAorCQkJCXN0cnVjdCBkbXViX3JiX2luaXRfcGFyYW1zICppbml0X3BhcmFtcykKK3sKKwly
Yi0+YmFzZV9hZGRyZXNzID0gaW5pdF9wYXJhbXMtPmJhc2VfYWRkcmVzczsKKwlyYi0+Y2FwYWNp
dHkgPSBpbml0X3BhcmFtcy0+Y2FwYWNpdHk7CisJcmItPnJwdHIgPSAwOworCXJiLT53cnB0ID0g
MDsKK30KKworI2lmIGRlZmluZWQoX19jcGx1c3BsdXMpCit9CisjZW5kaWYKKworI2VuZGlmIC8q
IF9ETVVCX1JCX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkv
ZG11Yi9pbmMvZG11Yl9zcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2lu
Yy9kbXViX3Nydi5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uYWE4
ZjAzOTY2MTZkCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L2RtdWIvaW5jL2RtdWJfc3J2LmgKQEAgLTAsMCArMSw1MDUgQEAKKy8qCisgKiBDb3B5cmlnaHQg
MjAxOSBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVybWlzc2lvbiBpcyBo
ZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEK
KyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZp
bGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0
IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRz
IHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGlj
ZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJt
aXQgcGVyc29ucyB0byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNv
LCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUg
Y29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNs
dWRlZCBpbgorICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29m
dHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQg
V0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBC
VVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICog
RklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElO
IE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykg
QkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwg
V0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICog
QVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBP
UiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKgorICog
QXV0aG9yczogQU1ECisgKgorICovCisKKyNpZm5kZWYgX0RNVUJfU1JWX0hfCisjZGVmaW5lIF9E
TVVCX1NSVl9IXworCisvKioKKyAqIERPQzogRE1VQiBpbnRlcmZhY2UgYW5kIG9wZXJhdGlvbgor
ICoKKyAqIERNVUIgaXMgdGhlIGludGVyZmFjZSB0byB0aGUgZGlzcGxheSBETUNVQiBtaWNyb2Nv
bnRyb2xsZXIgb24gRENOIGhhcmR3YXJlLgorICogSXQgZGVsZWdhdGVzIGhhcmR3YXJlIGluaXRp
YWxpemF0aW9uIGFuZCBjb21tYW5kIHN1Ym1pc3Npb24gdG8gdGhlCisgKiBtaWNyb2NvbnRyb2xs
ZXIuIERNVUIgaXMgdGhlIHNob3J0bmFtZSBmb3IgRE1DVUIuCisgKgorICogVGhpcyBpbnRlcmZh
Y2UgaXMgbm90IHRocmVhZC1zYWZlLiBFbnN1cmUgdGhhdCBhbGwgYWNjZXNzIHRvIHRoZSBpbnRl
cmZhY2UKKyAqIGlzIHByb3Blcmx5IHN5bmNocm9uaXplZCBieSB0aGUgY2FsbGVyLgorICoKKyAq
IEluaXRpYWxpemF0aW9uIGFuZCB1c2FnZSBvZiB0aGUgRE1VQiBzZXJ2aWNlIHNob3VsZCBiZSBk
b25lIGluIHRoZQorICogc3RlcHMgZ2l2ZW4gYmVsb3c6CisgKgorICogMS4gZG11Yl9zcnZfY3Jl
YXRlKCkKKyAqIDIuIGRtdWJfc3J2X2hhc19od19zdXBwb3J0KCkKKyAqIDMuIGRtdWJfc3J2X2Nh
bGNfcmVnaW9uX2luZm8oKQorICogNC4gZG11Yl9zcnZfaHdfaW5pdCgpCisgKgorICogVGhlIGNh
bGwgdG8gZG11Yl9zcnZfY3JlYXRlKCkgaXMgcmVxdWlyZWQgdG8gdXNlIHRoZSBzZXJ2ZXIuCisg
KgorICogVGhlIGNhbGxzIHRvIGRtdWJfc3J2X2hhc19od19zdXBwb3J0KCkgYW5kIGRtdWJfc3J2
X2NhbGNfcmVnaW9uX2luZm8oKQorICogYXJlIGhlbHBlcnMgdG8gcXVlcnkgY2FjaGUgd2luZG93
IHNpemUgYW5kIGFsbG9jYXRlIGZyYW1lYnVmZmVyKHMpCisgKiBmb3IgdGhlIGNhY2hlIHdpbmRv
d3MuCisgKgorICogVGhlIGNhbGwgdG8gZG11Yl9zcnZfaHdfaW5pdCgpIHByb2dyYW1zIHRoZSBE
TUNVQiByZWdpc3RlcnMgdG8gcHJlcGFyZQorICogZm9yIGNvbW1hbmQgc3VibWlzc2lvbi4gQ29t
bWFuZHMgY2FuIGJlIHF1ZXVlZCB2aWEgZG11Yl9zcnZfY21kX3F1ZXVlKCkKKyAqIGFuZCBleGVj
dXRlZCB2aWEgZG11Yl9zcnZfY21kX2V4ZWN1dGUoKS4KKyAqCisgKiBJZiB0aGUgcXVldWUgaXMg
ZnVsbCB0aGUgZG11Yl9zcnZfd2FpdF9mb3JfaWRsZSgpIGNhbGwgY2FuIGJlIHVzZWQgdG8KKyAq
IHdhaXQgdW50aWwgdGhlIHF1ZXVlIGhhcyBiZWVuIGNsZWFyZWQuCisgKgorICogRGVzdHJveWlu
ZyB0aGUgRE1VQiBzZXJ2aWNlIGNhbiBiZSBkb25lIGJ5IGNhbGxpbmcgZG11Yl9zcnZfZGVzdHJv
eSgpLgorICogVGhpcyBkb2VzIG5vdCBjbGVhciBETVVCIGhhcmR3YXJlIHN0YXRlLCBvbmx5IHNv
ZnR3YXJlIHN0YXRlLgorICoKKyAqIFRoZSBpbnRlcmZhY2UgaXMgaW50ZW5kZWQgdG8gYmUgc3Rh
bmRhbG9uZSBhbmQgc2hvdWxkIG5vdCBkZXBlbmQgb24gYW55CisgKiBvdGhlciBjb21wb25lbnQg
d2l0aGluIERBTC4KKyAqLworCisjaW5jbHVkZSAiZG11Yl90eXBlcy5oIgorI2luY2x1ZGUgImRt
dWJfY21kLmgiCisjaW5jbHVkZSAiZG11Yl9yYi5oIgorCisjaWYgZGVmaW5lZChfX2NwbHVzcGx1
cykKK2V4dGVybiAiQyIgeworI2VuZGlmCisKKy8qIEZvcndhcmQgZGVjbGFyYXRpb25zICovCitz
dHJ1Y3QgZG11Yl9zcnY7CitzdHJ1Y3QgZG11Yl9jbWRfaGVhZGVyOworc3RydWN0IGRtY3U7CisK
Ky8qIGVudW0gZG11Yl9zdGF0dXMgLSByZXR1cm4gY29kZSBmb3IgZG1jdWIgZnVuY3Rpb25zICov
CitlbnVtIGRtdWJfc3RhdHVzIHsKKwlETVVCX1NUQVRVU19PSyA9IDAsCisJRE1VQl9TVEFUVVNf
Tk9fQ1RYLAorCURNVUJfU1RBVFVTX1FVRVVFX0ZVTEwsCisJRE1VQl9TVEFUVVNfVElNRU9VVCwK
KwlETVVCX1NUQVRVU19JTlZBTElELAorfTsKKworLyogZW51bSBkbXViX2FzaWMgLSBkbXViIGFz
aWMgaWRlbnRpZmllciAqLworZW51bSBkbXViX2FzaWMgeworCURNVUJfQVNJQ19OT05FID0gMCwK
KwlETVVCX0FTSUNfRENOMjAsCisJRE1VQl9BU0lDX0RDTjIxLAorCURNVUJfQVNJQ19NQVgsCit9
OworCisvKiBlbnVtIGRtdWJfd2luZG93X2lkIC0gZG11YiB3aW5kb3cgaWRlbnRpZmllciAqLwor
ZW51bSBkbXViX3dpbmRvd19pZCB7CisJRE1VQl9XSU5ET1dfMF9JTlNUX0NPTlNUID0gMCwKKwlE
TVVCX1dJTkRPV18xX1NUQUNLLAorCURNVUJfV0lORE9XXzJfQlNTX0RBVEEsCisJRE1VQl9XSU5E
T1dfM19WQklPUywKKwlETVVCX1dJTkRPV180X01BSUxCT1gsCisJRE1VQl9XSU5ET1dfNV9UUkFD
RUJVRkYsCisJRE1VQl9XSU5ET1dfNl9SRVNFUlZFRCwKKwlETVVCX1dJTkRPV183X1JFU0VSVkVE
LAorCURNVUJfV0lORE9XX1RPVEFMLAorfTsKKworLyoqCisgKiBzdHJ1Y3QgZG11Yl9yZWdpb24g
LSBkbXViIGh3IG1lbW9yeSByZWdpb24KKyAqIEBiYXNlOiBiYXNlIGFkZHJlc3MgZm9yIHJlZ2lv
biwgbXVzdCBiZSAyNTYgYnl0ZSBhbGlnbmVkCisgKiBAdG9wOiB0b3AgYWRkcmVzcyBmb3IgcmVn
aW9uCisgKi8KK3N0cnVjdCBkbXViX3JlZ2lvbiB7CisJdWludDMyX3QgYmFzZTsKKwl1aW50MzJf
dCB0b3A7Cit9OworCisvKioKKyAqIHN0cnVjdCBkbXViX3dpbmRvdyAtIGRtdWIgaHcgY2FjaGUg
d2luZG93CisgKiBAb2ZmOiBvZmZzZXQgdG8gdGhlIGZiIG1lbW9yeSBpbiBncHUgYWRkcmVzcyBz
cGFjZQorICogQHI6IHJlZ2lvbiBpbiB1YyBhZGRyZXNzIHNwYWNlIGZvciBjYWNoZSB3aW5kb3cK
KyAqLworc3RydWN0IGRtdWJfd2luZG93IHsKKwl1bmlvbiBkbXViX2FkZHIgb2Zmc2V0OworCXN0
cnVjdCBkbXViX3JlZ2lvbiByZWdpb247Cit9OworCisvKioKKyAqIHN0cnVjdCBkbXViX2ZiIC0g
ZGVmaW5lcyBhIGRtdWIgZnJhbWVidWZmZXIgbWVtb3J5IHJlZ2lvbgorICogQGNwdV9hZGRyOiBj
cHUgdmlydHVhbCBhZGRyZXNzIGZvciB0aGUgcmVnaW9uLCBOVUxMIGlmIGludmFsaWQKKyAqIEBn
cHVfYWRkcjogZ3B1IHZpcnR1YWwgYWRkcmVzcyBmb3IgdGhlIHJlZ2lvbiwgTlVMTCBpZiBpbnZh
bGlkCisgKiBAc2l6ZTogc2l6ZSBvZiB0aGUgcmVnaW9uIGluIGJ5dGVzLCB6ZXJvIGlmIGludmFs
aWQKKyAqLworc3RydWN0IGRtdWJfZmIgeworCXZvaWQgKmNwdV9hZGRyOworCXVpbnQ2NF90IGdw
dV9hZGRyOworCXVpbnQzMl90IHNpemU7Cit9OworCisvKioKKyAqIHN0cnVjdCBkbXViX3Nydl9y
ZWdpb25fcGFyYW1zIC0gcGFyYW1zIHVzZWQgZm9yIGNhbGN1bGF0aW5nIGRtdWIgcmVnaW9ucwor
ICogQGluc3RfY29uc3Rfc2l6ZTogc2l6ZSBvZiB0aGUgZncgaW5zdCBjb25zdCBzZWN0aW9uCisg
KiBAYnNzX2RhdGFfc2l6ZTogc2l6ZSBvZiB0aGUgZncgYnNzIGRhdGEgc2VjdGlvbgorICogQHZi
aW9zX3NpemU6IHNpemUgb2YgdGhlIHZiaW9zIGRhdGEKKyAqLworc3RydWN0IGRtdWJfc3J2X3Jl
Z2lvbl9wYXJhbXMgeworCXVpbnQzMl90IGluc3RfY29uc3Rfc2l6ZTsKKwl1aW50MzJfdCBic3Nf
ZGF0YV9zaXplOworCXVpbnQzMl90IHZiaW9zX3NpemU7Cit9OworCisvKioKKyAqIHN0cnVjdCBk
bXViX3Nydl9yZWdpb25faW5mbyAtIG91dHB1dCByZWdpb24gaW5mbyBmcm9tIHRoZSBkbXViIHNl
cnZpY2UKKyAqIEBmYl9zaXplOiByZXF1aXJlZCBtaW5pbXVtIGZiIHNpemUgZm9yIGFsbCByZWdp
b25zLCBhbGlnbmVkIHRvIDQwOTYgYnl0ZXMKKyAqIEBudW1fcmVnaW9uczogbnVtYmVyIG9mIHJl
Z2lvbnMgdXNlZCBieSB0aGUgZG11YiBzZXJ2aWNlCisgKiBAcmVnaW9uczogcmVnaW9uIGluZm8K
KyAqCisgKiBUaGUgcmVnaW9ucyBhcmUgYWxpZ25lZCBzdWNoIHRoYXQgdGhleSBjYW4gYmUgYWxs
IHBsYWNlZCB3aXRoaW4gdGhlCisgKiBzYW1lIGZyYW1lYnVmZmVyIGJ1dCB0aGV5IGNhbiBhbHNv
IGJlIHBsYWNlZCBpbnRvIGRpZmZlcmVudCBmcmFtZWJ1ZmZlcnMuCisgKgorICogVGhlIHNpemUg
b2YgZWFjaCByZWdpb24gY2FuIGJlIGNhbGN1bGF0ZWQgYnkgdGhlIGNhbGxlcjoKKyAqIHNpemUg
PSByZWcudG9wIC0gcmVnLmJhc2UKKyAqCisgKiBDYXJlIG11c3QgYmUgdGFrZW4gd2hlbiBwZXJm
b3JtaW5nIGN1c3RvbSBhbGxvY2F0aW9ucyB0byBlbnN1cmUgdGhhdCBlYWNoCisgKiByZWdpb24g
YmFzZSBhZGRyZXNzIGlzIDI1NiBieXRlIGFsaWduZWQuCisgKi8KK3N0cnVjdCBkbXViX3Nydl9y
ZWdpb25faW5mbyB7CisJdWludDMyX3QgZmJfc2l6ZTsKKwl1aW50OF90IG51bV9yZWdpb25zOwor
CXN0cnVjdCBkbXViX3JlZ2lvbiByZWdpb25zW0RNVUJfV0lORE9XX1RPVEFMXTsKK307CisKKy8q
KgorICogc3RydWN0IGRtdWJfc3J2X2ZiX3BhcmFtcyAtIHBhcmFtZXRlcnMgdXNlZCBmb3IgZHJp
dmVyIGZiIHNldHVwCisgKiBAcmVnaW9uX2luZm86IHJlZ2lvbiBpbmZvIGNhbGN1bGF0ZWQgYnkg
ZG11YiBzZXJ2aWNlCisgKiBAY3B1X2FkZHI6IGJhc2UgY3B1IGFkZHJlc3MgZm9yIHRoZSBmcmFt
ZWJ1ZmZlcgorICogQGdwdV9hZGRyOiBiYXNlIGdwdSB2aXJ0dWFsIGFkZHJlc3MgZm9yIHRoZSBm
cmFtZWJ1ZmZlcgorICovCitzdHJ1Y3QgZG11Yl9zcnZfZmJfcGFyYW1zIHsKKwljb25zdCBzdHJ1
Y3QgZG11Yl9zcnZfcmVnaW9uX2luZm8gKnJlZ2lvbl9pbmZvOworCXZvaWQgKmNwdV9hZGRyOwor
CXVpbnQ2NF90IGdwdV9hZGRyOworfTsKKworLyoqCisgKiBzdHJ1Y3QgZG11Yl9zcnZfZmJfaW5m
byAtIG91dHB1dCBmYiBpbmZvIGZyb20gdGhlIGRtdWIgc2VydmljZQorICogQG51bV9mYnM6IG51
bWJlciBvZiByZXF1aXJlZCBkbXViIGZyYW1lYnVmZmVycworICogQGZiczogZmIgZGF0YSBmb3Ig
ZWFjaCByZWdpb24KKyAqCisgKiBPdXRwdXQgZnJvbSB0aGUgZG11YiBzZXJ2aWNlIGhlbHBlciB0
aGF0IGNhbiBiZSB1c2VkIGJ5IHRoZQorICogZHJpdmVyIHRvIHByZXBhcmUgZG11Yl9mYiB0aGF0
IGNhbiBiZSBwYXNzZWQgaW50byB0aGUgZG11YgorICogaHcgaW5pdCBzZXJ2aWNlLgorICoKKyAq
IEFzc3VtZXMgdGhhdCBhbGwgcmVnaW9ucyBhcmUgd2l0aGluIHRoZSBzYW1lIGZyYW1lYnVmZmVy
CisgKiBhbmQgaGF2ZSBiZWVuIHNldHVwIGFjY29yZGluZyB0byB0aGUgcmVnaW9uX2luZm8gZ2Vu
ZXJhdGVkCisgKiBieSB0aGUgZG11YiBzZXJ2aWNlLgorICovCitzdHJ1Y3QgZG11Yl9zcnZfZmJf
aW5mbyB7CisJdWludDhfdCBudW1fZmI7CisJc3RydWN0IGRtdWJfZmIgZmJbRE1VQl9XSU5ET1df
VE9UQUxdOworfTsKKworLyoqCisgKiBzdHJ1Y3QgZG11Yl9zcnZfYmFzZV9mdW5jcyAtIERyaXZl
ciBzcGVjaWZpYyBiYXNlIGNhbGxiYWNrcworICovCitzdHJ1Y3QgZG11Yl9zcnZfYmFzZV9mdW5j
cyB7CisJLyoqCisJICogQHJlZ19yZWFkOgorCSAqCisJICogSG9vayBmb3IgcmVhZGluZyBhIHJl
Z2lzdGVyLgorCSAqCisJICogUmV0dXJuOiBUaGUgMzItYml0IHJlZ2lzdGVyIHZhbHVlIGZyb20g
dGhlIGdpdmVuIGFkZHJlc3MuCisJICovCisJdWludDMyX3QgKCpyZWdfcmVhZCkodm9pZCAqY3R4
LCB1aW50MzJfdCBhZGRyZXNzKTsKKworCS8qKgorCSAqIEByZWdfd3JpdGU6CisJICoKKwkgKiBI
b29rIGZvciB3cml0aW5nIGEgdmFsdWUgdG8gdGhlIHJlZ2lzdGVyIHNwZWNpZmllZCBieSBhZGRy
ZXNzLgorCSAqLworCXZvaWQgKCpyZWdfd3JpdGUpKHZvaWQgKmN0eCwgdWludDMyX3QgYWRkcmVz
cywgdWludDMyX3QgdmFsdWUpOworfTsKKworLyoqCisgKiBzdHJ1Y3QgZG11Yl9zcnZfaHdfZnVu
Y3MgLSBoYXJkd2FyZSBzZXF1ZW5jZXIgZnVuY3MgZm9yIGRtdWIKKyAqLworc3RydWN0IGRtdWJf
c3J2X2h3X2Z1bmNzIHsKKwkvKiBwcml2YXRlOiBpbnRlcm5hbCB1c2Ugb25seSAqLworCisJdm9p
ZCAoKnJlc2V0KShzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIpOworCisJdm9pZCAoKnJlc2V0X3JlbGVh
c2UpKHN0cnVjdCBkbXViX3NydiAqZG11Yik7CisKKwl2b2lkICgqYmFja2Rvb3JfbG9hZCkoc3Ry
dWN0IGRtdWJfc3J2ICpkbXViLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGRtdWJfd2luZG93ICpj
dzAsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cgKmN3MSk7CisKKwl2b2lkICgq
c2V0dXBfd2luZG93cykoc3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJICAgICAgY29uc3Qgc3Ry
dWN0IGRtdWJfd2luZG93ICpjdzIsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cg
KmN3MywKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3c0LAorCQkJCSAgY29u
c3Qgc3RydWN0IGRtdWJfd2luZG93ICpjdzUpOworCisJdm9pZCAoKnNldHVwX21haWxib3gpKHN0
cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBkbXViX3JlZ2lvbiAq
aW5ib3gxKTsKKworCXVpbnQzMl90ICgqZ2V0X2luYm94MV9ycHRyKShzdHJ1Y3QgZG11Yl9zcnYg
KmRtdWIpOworCisJdm9pZCAoKnNldF9pbmJveDFfd3B0cikoc3RydWN0IGRtdWJfc3J2ICpkbXVi
LCB1aW50MzJfdCB3cHRyX29mZnNldCk7CisKKwlib29sICgqaXNfc3VwcG9ydGVkKShzdHJ1Y3Qg
ZG11Yl9zcnYgKmRtdWIpOworCisJYm9vbCAoKmlzX3BoeV9pbml0KShzdHJ1Y3QgZG11Yl9zcnYg
KmRtdWIpOworCisJYm9vbCAoKmlzX2F1dG9fbG9hZF9kb25lKShzdHJ1Y3QgZG11Yl9zcnYgKmRt
dWIpOworfTsKKworLyoqCisgKiBzdHJ1Y3QgZG11Yl9zcnZfY3JlYXRlX3BhcmFtcyAtIHBhcmFt
cyBmb3IgZG11YiBzZXJ2aWNlIGNyZWF0aW9uCisgKiBAYmFzZV9mdW5jczogZHJpdmVyIHN1cHBs
aWVkIGJhc2Ugcm91dGluZXMKKyAqIEBod19mdW5jczogb3B0aW9uYWwgb3ZlcnJpZGVzIGZvciBo
dyBmdW5jcworICogQHVzZXJfY3R4OiBjb250ZXh0IGRhdGEgZm9yIGNhbGxiYWNrIGZ1bmNzCisg
KiBAYXNpYzogZHJpdmVyIHN1cHBsaWVkIGFzaWMKKyAqIEBpc192aXJ0dWFsOiBmYWxzZSBmb3Ig
aHcgc3VwcG9ydCBvbmx5CisgKi8KK3N0cnVjdCBkbXViX3Nydl9jcmVhdGVfcGFyYW1zIHsKKwlz
dHJ1Y3QgZG11Yl9zcnZfYmFzZV9mdW5jcyBmdW5jczsKKwlzdHJ1Y3QgZG11Yl9zcnZfaHdfZnVu
Y3MgKmh3X2Z1bmNzOworCXZvaWQgKnVzZXJfY3R4OworCWVudW0gZG11Yl9hc2ljIGFzaWM7CisJ
Ym9vbCBpc192aXJ0dWFsOworfTsKKworLyoKKyAqIHN0cnVjdCBkbXViX3Nydl9od19wYXJhbXMg
LSBwYXJhbXMgZm9yIGRtdWIgaGFyZHdhcmUgaW5pdGlhbGl6YXRpb24KKyAqIEBmYjogZnJhbWVi
dWZmZXIgaW5mbyBmb3IgZWFjaCByZWdpb24KKyAqIEBmYl9iYXNlOiBiYXNlIG9mIHRoZSBmcmFt
ZWJ1ZmZlciBhcGVydHVyZQorICogQGZiX29mZnNldDogb2Zmc2V0IG9mIHRoZSBmcmFtZWJ1ZmZl
ciBhcGVydHVyZQorICogQHBzcF92ZXJzaW9uOiBwc3AgdmVyc2lvbiB0byBwYXNzIGZvciBETUNV
IGluaXQKKyAqLworc3RydWN0IGRtdWJfc3J2X2h3X3BhcmFtcyB7CisJc3RydWN0IGRtdWJfZmIg
KmZiW0RNVUJfV0lORE9XX1RPVEFMXTsKKwl1aW50NjRfdCBmYl9iYXNlOworCXVpbnQ2NF90IGZi
X29mZnNldDsKKwl1aW50MzJfdCBwc3BfdmVyc2lvbjsKK307CisKKy8qKgorICogc3RydWN0IGRt
dWJfc3J2IC0gc29mdHdhcmUgc3RhdGUgZm9yIGRtY3ViCisgKiBAYXNpYzogZG11YiBhc2ljIGlk
ZW50aWZpZXIKKyAqIEB1c2VyX2N0eDogdXNlciBwcm92aWRlZCBjb250ZXh0IGZvciB0aGUgZG11
Yl9zcnYKKyAqIEBpc192aXJ0dWFsOiBmYWxzZSBpZiBoYXJkd2FyZSBzdXBwb3J0IG9ubHkKKyAq
Lworc3RydWN0IGRtdWJfc3J2IHsKKwllbnVtIGRtdWJfYXNpYyBhc2ljOworCXZvaWQgKnVzZXJf
Y3R4OworCWJvb2wgaXNfdmlydHVhbDsKKworCS8qIHByaXZhdGU6IGludGVybmFsIHVzZSBvbmx5
ICovCisJc3RydWN0IGRtdWJfc3J2X2Jhc2VfZnVuY3MgZnVuY3M7CisJc3RydWN0IGRtdWJfc3J2
X2h3X2Z1bmNzIGh3X2Z1bmNzOworCXN0cnVjdCBkbXViX3JiIGluYm94MV9yYjsKKworCWJvb2wg
c3dfaW5pdDsKKwlib29sIGh3X2luaXQ7CisKKwl1aW50NjRfdCBmYl9iYXNlOworCXVpbnQ2NF90
IGZiX29mZnNldDsKKwl1aW50MzJfdCBwc3BfdmVyc2lvbjsKK307CisKKy8qKgorICogZG11Yl9z
cnZfY3JlYXRlKCkgLSBjcmVhdGVzIHRoZSBETVVCIHNlcnZpY2UuCisgKiBAZG11YjogdGhlIGRt
dWIgc2VydmljZQorICogQHBhcmFtczogY3JlYXRpb24gcGFyYW1ldGVycyBmb3IgdGhlIHNlcnZp
Y2UKKyAqCisgKiBSZXR1cm46CisgKiAgIERNVUJfU1RBVFVTX09LIC0gc3VjY2VzcworICogICBE
TVVCX1NUQVRVU19JTlZBTElEIC0gdW5zcGVjaWZpZWQgZXJyb3IKKyAqLworZW51bSBkbXViX3N0
YXR1cyBkbXViX3Nydl9jcmVhdGUoc3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJCSBjb25zdCBz
dHJ1Y3QgZG11Yl9zcnZfY3JlYXRlX3BhcmFtcyAqcGFyYW1zKTsKKworLyoqCisgKiBkbXViX3Ny
dl9kZXN0cm95KCkgLSBkZXN0cm95cyB0aGUgRE1VQiBzZXJ2aWNlLgorICogQGRtdWI6IHRoZSBk
bXViIHNlcnZpY2UKKyAqLwordm9pZCBkbXViX3Nydl9kZXN0cm95KHN0cnVjdCBkbXViX3NydiAq
ZG11Yik7CisKKy8qKgorICogZG11Yl9zcnZfY2FsY19yZWdpb25faW5mbygpIC0gcmV0cmVpdmVz
IHJlZ2lvbiBpbmZvIGZyb20gdGhlIGRtdWIgc2VydmljZQorICogQGRtdWI6IHRoZSBkbXViIHNl
cnZpY2UKKyAqIEBwYXJhbXM6IHBhcmFtZXRlcnMgdXNlZCB0byBjYWxjdWxhdGUgcmVnaW9uIGxv
Y2F0aW9ucworICogQGluZm9fb3V0OiB0aGUgb3V0cHV0IHJlZ2lvbiBpbmZvIGZyb20gZG11Ygor
ICoKKyAqIENhbGN1bGF0ZXMgdGhlIGJhc2UgYW5kIHRvcCBhZGRyZXNzIGZvciBhbGwgcmVsZXZh
bnQgZG11YiByZWdpb25zCisgKiB1c2luZyB0aGUgcGFyYW1ldGVycyBnaXZlbiAoaWYgYW55KS4K
KyAqCisgKiBSZXR1cm46CisgKiAgIERNVUJfU1RBVFVTX09LIC0gc3VjY2VzcworICogICBETVVC
X1NUQVRVU19JTlZBTElEIC0gdW5zcGVjaWZpZWQgZXJyb3IKKyAqLworZW51bSBkbXViX3N0YXR1
cworZG11Yl9zcnZfY2FsY19yZWdpb25faW5mbyhzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIsCisJCQkg
IGNvbnN0IHN0cnVjdCBkbXViX3Nydl9yZWdpb25fcGFyYW1zICpwYXJhbXMsCisJCQkgIHN0cnVj
dCBkbXViX3Nydl9yZWdpb25faW5mbyAqb3V0KTsKKworLyoqCisgKiBkbXViX3Nydl9jYWxjX3Jl
Z2lvbl9pbmZvKCkgLSByZXRyZWl2ZXMgZmIgaW5mbyBmcm9tIHRoZSBkbXViIHNlcnZpY2UKKyAq
IEBkbXViOiB0aGUgZG11YiBzZXJ2aWNlCisgKiBAcGFyYW1zOiBwYXJhbWV0ZXJzIHVzZWQgdG8g
Y2FsY3VsYXRlIGZiIGxvY2F0aW9ucworICogQGluZm9fb3V0OiB0aGUgb3V0cHV0IGZiIGluZm8g
ZnJvbSBkbXViCisgKgorICogQ2FsY3VsYXRlcyB0aGUgYmFzZSBhbmQgdG9wIGFkZHJlc3MgZm9y
IGFsbCByZWxldmFudCBkbXViIHJlZ2lvbnMKKyAqIHVzaW5nIHRoZSBwYXJhbWV0ZXJzIGdpdmVu
IChpZiBhbnkpLgorICoKKyAqIFJldHVybjoKKyAqICAgRE1VQl9TVEFUVVNfT0sgLSBzdWNjZXNz
CisgKiAgIERNVUJfU1RBVFVTX0lOVkFMSUQgLSB1bnNwZWNpZmllZCBlcnJvcgorICovCitlbnVt
IGRtdWJfc3RhdHVzIGRtdWJfc3J2X2NhbGNfZmJfaW5mbyhzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIs
CisJCQkJICAgICAgIGNvbnN0IHN0cnVjdCBkbXViX3Nydl9mYl9wYXJhbXMgKnBhcmFtcywKKwkJ
CQkgICAgICAgc3RydWN0IGRtdWJfc3J2X2ZiX2luZm8gKm91dCk7CisKKy8qKgorICogZG11Yl9z
cnZfaGFzX2h3X3N1cHBvcnQoKSAtIHJldHVybnMgaHcgc3VwcG9ydCBzdGF0ZSBmb3IgZG1jdWIK
KyAqIEBkbXViOiB0aGUgZG11YiBzZXJ2aWNlCisgKiBAaXNfc3VwcG9ydGVkOiBodyBzdXBwb3J0
IHN0YXRlCisgKgorICogUXVlcmllcyB0aGUgaGFyZHdhcmUgZm9yIERNQ1VCIHN1cHBvcnQgYW5k
IHJldHVybnMgdGhlIHJlc3VsdC4KKyAqCisgKiBDYW4gYmUgY2FsbGVkIGJlZm9yZSBkbXViX3Ny
dl9od19pbml0KCkuCisgKgorICogUmV0dXJuOgorICogICBETVVCX1NUQVRVU19PSyAtIHN1Y2Nl
c3MKKyAqICAgRE1VQl9TVEFUVVNfSU5WQUxJRCAtIHVuc3BlY2lmaWVkIGVycm9yCisgKi8KK2Vu
dW0gZG11Yl9zdGF0dXMgZG11Yl9zcnZfaGFzX2h3X3N1cHBvcnQoc3RydWN0IGRtdWJfc3J2ICpk
bXViLAorCQkJCQkgYm9vbCAqaXNfc3VwcG9ydGVkKTsKKworLyoqCisgKiBkbXViX3Nydl9od19p
bml0KCkgLSBpbml0aWFsaXplcyB0aGUgdW5kZXJseWluZyBETVVCIGhhcmR3YXJlCisgKiBAZG11
YjogdGhlIGRtdWIgc2VydmljZQorICogQHBhcmFtczogcGFyYW1zIGZvciBoYXJkd2FyZSBpbml0
aWFsaXphdGlvbgorICoKKyAqIFJlc2V0cyB0aGUgRE1VQiBoYXJkd2FyZSBhbmQgcGVyZm9ybXMg
YmFja2Rvb3IgbG9hZGluZyBvZiB0aGUKKyAqIHJlcXVpcmVkIGNhY2hlIHJlZ2lvbnMgYmFzZWQg
b24gdGhlIGlucHV0IGZyYW1lYnVmZmVyIHJlZ2lvbnMuCisgKgorICogUmV0dXJuOgorICogICBE
TVVCX1NUQVRVU19PSyAtIHN1Y2Nlc3MKKyAqICAgRE1VQl9TVEFUVVNfTk9fQ1RYIC0gZG1jdWIg
Y29udGV4dCBub3QgaW5pdGlhbGl6ZWQKKyAqICAgRE1VQl9TVEFUVVNfSU5WQUxJRCAtIHVuc3Bl
Y2lmaWVkIGVycm9yCisgKi8KK2VudW0gZG11Yl9zdGF0dXMgZG11Yl9zcnZfaHdfaW5pdChzdHJ1
Y3QgZG11Yl9zcnYgKmRtdWIsCisJCQkJICBjb25zdCBzdHJ1Y3QgZG11Yl9zcnZfaHdfcGFyYW1z
ICpwYXJhbXMpOworCisvKioKKyAqIGRtdWJfc3J2X2NtZF9xdWV1ZSgpIC0gcXVldWVzIGEgY29t
bWFuZCB0byB0aGUgRE1VQgorICogQGRtdWI6IHRoZSBkbXViIHNlcnZpY2UKKyAqIEBjbWQ6IHRo
ZSBjb21tYW5kIHRvIHF1ZXVlCisgKgorICogUXVldWVzIGEgY29tbWFuZCB0byB0aGUgRE1VQiBz
ZXJ2aWNlIGJ1dCBkb2VzIG5vdCBiZWdpbiBleGVjdXRpb24KKyAqIGltbWVkaWF0ZWx5LgorICoK
KyAqIFJldHVybjoKKyAqICAgRE1VQl9TVEFUVVNfT0sgLSBzdWNjZXNzCisgKiAgIERNVUJfU1RB
VFVTX1FVRVVFX0ZVTEwgLSBubyByZW1haW5pbmcgcm9vbSBpbiBxdWV1ZQorICogICBETVVCX1NU
QVRVU19JTlZBTElEIC0gdW5zcGVjaWZpZWQgZXJyb3IKKyAqLworZW51bSBkbXViX3N0YXR1cyBk
bXViX3Nydl9jbWRfcXVldWUoc3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJCSAgICBjb25zdCBz
dHJ1Y3QgZG11Yl9jbWRfaGVhZGVyICpjbWQpOworCisvKioKKyAqIGRtdWJfc3J2X2NtZF9leGVj
dXRlKCkgLSBFeGVjdXRlcyBhIHF1ZXVlZCBzZXF1ZW5jZSB0byB0aGUgZG11YgorICogQGRtdWI6
IHRoZSBkbXViIHNlcnZpY2UKKyAqCisgKiBCZWdpbnMgZXhldWN0aW9uIG9mIHF1ZXVlZCBjb21t
YW5kcyBvbiB0aGUgZG11Yi4KKyAqCisgKiBSZXR1cm46CisgKiAgIERNVUJfU1RBVFVTX09LIC0g
c3VjY2VzcworICogICBETVVCX1NUQVRVU19JTlZBTElEIC0gdW5zcGVjaWZpZWQgZXJyb3IKKyAq
LworZW51bSBkbXViX3N0YXR1cyBkbXViX3Nydl9jbWRfZXhlY3V0ZShzdHJ1Y3QgZG11Yl9zcnYg
KmRtdWIpOworCisvKioKKyAqIGRtdWJfc3J2X2NtZF9zdWJtaXQoKSAtIHN1Ym1pdHMgYSBjb21t
YW5kIHRvIHRoZSBETVVCIGltbWVkaWF0ZWx5CisgKiBAZG11YjogdGhlIGRtdWIgc2VydmljZQor
ICogQGNtZDogdGhlIGNvbW1hbmQgdG8gc3VibWl0CisgKiBAdGltZW91dF91czogdGhlIG1heGlt
dW0gbnVtYmVyIG9mIG1pY3Jvc2Vjb25kcyB0byB3YWl0CisgKgorICogU3VibWl0cyBhIGNvbW1h
bmQgdG8gdGhlIERNVUIgd2l0aCBhbiBvcHRpb25hbCB0aW1lb3V0LgorICogSWYgdGltZW91dF91
cyBpcyBnaXZlbiB0aGVuIHRoZSBzZXJ2aWNlIHdpbGwgYXR0ZW1wdCB0bworICogcmVzdWJtaXQg
Zm9yIHRoZSBnaXZlbiBudW1iZXIgb2YgbWljcm9zZWNvbmRzLgorICoKKyAqIFJldHVybjoKKyAq
ICAgRE1VQl9TVEFUVVNfT0sgLSBzdWNjZXNzCisgKiAgIERNVUJfU1RBVFVTX1RJTUVPVVQgLSB3
YWl0IGZvciBzdWJtaXQgdGltZWQgb3V0CisgKiAgIERNVUJfU1RBVFVTX0lOVkFMSUQgLSB1bnNw
ZWNpZmllZCBlcnJvcgorICovCitlbnVtIGRtdWJfc3RhdHVzIGRtdWJfc3J2X2NtZF9zdWJtaXQo
c3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJCSAgICAgY29uc3Qgc3RydWN0IGRtdWJfY21kX2hl
YWRlciAqY21kLAorCQkJCSAgICAgdWludDMyX3QgdGltZW91dF91cyk7CisKKy8qKgorICogZG11
Yl9zcnZfd2FpdF9mb3JfYXV0b19sb2FkKCkgLSBXYWl0cyBmb3IgZmlybXdhcmUgYXV0byBsb2Fk
IHRvIGNvbXBsZXRlCisgKiBAZG11YjogdGhlIGRtdWIgc2VydmljZQorICogQHRpbWVvdXRfdXM6
IHRoZSBtYXhpbXVtIG51bWJlciBvZiBtaWNyb3NlY29uZHMgdG8gd2FpdAorICoKKyAqIFdhaXRz
IHVudGlsIGZpcm13YXJlIGhhcyBiZWVuIGF1dG9sb2FkZWQgYnkgdGhlIERNQ1VCLiBUaGUgbWF4
aW11bQorICogd2FpdCB0aW1lIGlzIGdpdmVuIGluIG1pY3Jvc2Vjb25kcyB0byBwcmV2ZW50IHNw
aW5uaW5nIGZvcmV2ZXIuCisgKgorICogT24gQVNJQ3Mgd2l0aG91dCBmaXJtd2FyZSBhdXRvbG9h
ZCBzdXBwb3J0IHRoaXMgZnVuY3Rpb24gd2lsbCByZXR1cm4KKyAqIGltbWVkaWF0ZWx5LgorICoK
KyAqIFJldHVybjoKKyAqICAgRE1VQl9TVEFUVVNfT0sgLSBzdWNjZXNzCisgKiAgIERNVUJfU1RB
VFVTX1RJTUVPVVQgLSB3YWl0IGZvciBwaHkgaW5pdCB0aW1lZCBvdXQKKyAqICAgRE1VQl9TVEFU
VVNfSU5WQUxJRCAtIHVuc3BlY2lmaWVkIGVycm9yCisgKi8KK2VudW0gZG11Yl9zdGF0dXMgZG11
Yl9zcnZfd2FpdF9mb3JfYXV0b19sb2FkKHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCQkJICAg
ICB1aW50MzJfdCB0aW1lb3V0X3VzKTsKKworLyoqCisgKiBkbXViX3Nydl93YWl0X2Zvcl9waHlf
aW5pdCgpIC0gV2FpdHMgZm9yIERNVUIgUEhZIGluaXQgdG8gY29tcGxldGUKKyAqIEBkbXViOiB0
aGUgZG11YiBzZXJ2aWNlCisgKiBAdGltZW91dF91czogdGhlIG1heGltdW0gbnVtYmVyIG9mIG1p
Y3Jvc2Vjb25kcyB0byB3YWl0CisgKgorICogV2FpdHMgdW50aWwgdGhlIFBIWSBoYXMgYmVlbiBp
bml0aWFsaXplZCBieSB0aGUgRE1VQi4gVGhlIG1heGltdW0KKyAqIHdhaXQgdGltZSBpcyBnaXZl
biBpbiBtaWNyb3NlY29uZHMgdG8gcHJldmVudCBzcGlubmluZyBmb3JldmVyLgorICoKKyAqIE9u
IEFTSUNzIHdpdGhvdXQgUEhZIGluaXQgc3VwcG9ydCB0aGlzIGZ1bmN0aW9uIHdpbGwgcmV0dXJu
CisgKiBpbW1lZGlhdGVseS4KKyAqCisgKiBSZXR1cm46CisgKiAgIERNVUJfU1RBVFVTX09LIC0g
c3VjY2VzcworICogICBETVVCX1NUQVRVU19USU1FT1VUIC0gd2FpdCBmb3IgcGh5IGluaXQgdGlt
ZWQgb3V0CisgKiAgIERNVUJfU1RBVFVTX0lOVkFMSUQgLSB1bnNwZWNpZmllZCBlcnJvcgorICov
CitlbnVtIGRtdWJfc3RhdHVzIGRtdWJfc3J2X3dhaXRfZm9yX3BoeV9pbml0KHN0cnVjdCBkbXVi
X3NydiAqZG11YiwKKwkJCQkJICAgIHVpbnQzMl90IHRpbWVvdXRfdXMpOworCisvKioKKyAqIGRt
dWJfc3J2X3dhaXRfZm9yX2lkbGUoKSAtIFdhaXRzIGZvciB0aGUgRE1VQiB0byBiZSBpZGxlCisg
KiBAZG11YjogdGhlIGRtdWIgc2VydmljZQorICogQHRpbWVvdXRfdXM6IHRoZSBtYXhpbXVtIG51
bWJlciBvZiBtaWNyb3NlY29uZHMgdG8gd2FpdAorICoKKyAqIFdhaXRzIHVudGlsIHRoZSBETVVC
IGJ1ZmZlciBpcyBlbXB0eSBhbmQgYWxsIGNvbW1hbmRzIGhhdmUKKyAqIGZpbmlzaGVkIHByb2Nl
c3NpbmcuIFRoZSBtYXhpbXVtIHdhaXQgdGltZSBpcyBnaXZlbiBpbgorICogbWljcm9zZWNvbmRz
IHRvIHByZXZlbnQgc3Bpbm5pbmcgZm9yZXZlci4KKyAqCisgKiBSZXR1cm46CisgKiAgIERNVUJf
U1RBVFVTX09LIC0gc3VjY2VzcworICogICBETVVCX1NUQVRVU19USU1FT1VUIC0gd2FpdCBmb3Ig
YnVmZmVyIHRvIGZsdXNoIHRpbWVkIG91dAorICogICBETVVCX1NUQVRVU19JTlZBTElEIC0gdW5z
cGVjaWZpZWQgZXJyb3IKKyAqLworZW51bSBkbXViX3N0YXR1cyBkbXViX3Nydl93YWl0X2Zvcl9p
ZGxlKHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCQkJdWludDMyX3QgdGltZW91dF91cyk7CisK
KyNpZiBkZWZpbmVkKF9fY3BsdXNwbHVzKQorfQorI2VuZGlmCisKKyNlbmRpZiAvKiBfRE1VQl9T
UlZfSF8gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2lu
Yy9kbXViX3RyYWNlX2J1ZmZlci5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIv
aW5jL2RtdWJfdHJhY2VfYnVmZmVyLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwMDAwLi45NzA3NzA2YmE4Y2UKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvZG11Yi9pbmMvZG11Yl90cmFjZV9idWZmZXIuaApAQCAtMCwwICsxLDUxIEBA
CisvKgorICogQ29weXJpZ2h0IDIwMTkgQWR2YW5jZWQgTWljcm8gRGV2aWNlcywgSW5jLgorICoK
KyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkg
cGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0
ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0
aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
dGlvbgorICogdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gs
IGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNv
ZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlz
IGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6
CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBu
b3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KKyAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwg
cG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgorICoKKyAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURF
RCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCisgKiBJ
TVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1F
UkNIQU5UQUJJTElUWSwKKyAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBO
T05JTkZSSU5HRU1FTlQuICBJTiBOTyBFVkVOVCBTSEFMTAorICogVEhFIENPUFlSSUdIVCBIT0xE
RVIoUykgT1IgQVVUSE9SKFMpIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SCisg
KiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JU
IE9SIE9USEVSV0lTRSwKKyAqIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04g
V0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUgorICogT1RIRVIgREVBTElOR1MgSU4gVEhF
IFNPRlRXQVJFLgorICoKKyAqIEF1dGhvcnM6IEFNRAorICoKKyAqLworI2lmbmRlZiBfRE1VQl9U
UkFDRV9CVUZGRVJfSF8KKyNkZWZpbmUgX0RNVUJfVFJBQ0VfQlVGRkVSX0hfCisKKyNpbmNsdWRl
ICJkbXViX3R5cGVzLmgiCisKKyNkZWZpbmUgTE9BRF9ETUNVX0ZXCTEKKyNkZWZpbmUgTE9BRF9Q
SFlfRlcJMgorCitzdHJ1Y3QgZG1jdWJfdHJhY2VfYnVmX2VudHJ5IHsKKwl1aW50MzJfdCB0cmFj
ZV9jb2RlOworCXVpbnQzMl90IHRpY2tfY291bnQ7CisJdWludDMyX3QgcGFyYW0wOworCXVpbnQz
Ml90IHBhcmFtMTsKK307CisKKyNkZWZpbmUgVFJBQ0VfQlVGX1NJWkUgKDEwMjQpIC8vMSBrQgor
I2RlZmluZSBQRVJGX1RSQUNFX01BWF9FTlRSWSAoKFRSQUNFX0JVRl9TSVpFIC0gOCkvc2l6ZW9m
KHN0cnVjdCBkbWN1Yl90cmFjZV9idWZfZW50cnkpKQorCitzdHJ1Y3QgZG1jdWJfdHJhY2VfYnVm
IHsKKwl1aW50MzJfdCBlbnRyeV9jb3VudDsKKwl1aW50MzJfdCBjbGtfZnJlcTsKKwlzdHJ1Y3Qg
ZG1jdWJfdHJhY2VfYnVmX2VudHJ5IGVudHJpZXNbUEVSRl9UUkFDRV9NQVhfRU5UUlldOworfTsK
KworCisKKyNlbmRpZiAvKiBfRE1VQl9UUkFDRV9CVUZGRVJfSF8gKi8KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL2luYy9kbXViX3R5cGVzLmggYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9pbmMvZG11Yl90eXBlcy5oCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNDFkNTI0YjBkYjJmCi0tLSAvZGV2L251bGwKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvaW5jL2RtdWJfdHlwZXMuaApAQCAt
MCwwICsxLDY0IEBACisvKgorICogQ29weXJpZ2h0IDIwMTkgQWR2YW5jZWQgTWljcm8gRGV2aWNl
cywgSW5jLgorICoKKyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hh
cmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUg
YW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICog
dG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdp
dGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVy
Z2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3Bp
ZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAq
IFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5n
IGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMg
cGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KKyAqIGFsbCBjb3BpZXMgb3Ig
c3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgorICoKKyAqIFRIRSBTT0ZUV0FS
RSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBS
RVNTIE9SCisgKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJS
QU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKKyAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQ
VVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuICBJTiBOTyBFVkVOVCBTSEFMTAorICogVEhFIENP
UFlSSUdIVCBIT0xERVIoUykgT1IgQVVUSE9SKFMpIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBE
QU1BR0VTIE9SCisgKiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENP
TlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwKKyAqIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElO
IENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUgorICogT1RIRVIgREVB
TElOR1MgSU4gVEhFIFNPRlRXQVJFLgorICoKKyAqIEF1dGhvcnM6IEFNRAorICoKKyAqLworCisj
aWZuZGVmIF9ETVVCX1RZUEVTX0hfCisjZGVmaW5lIF9ETVVCX1RZUEVTX0hfCisKKy8qIEJhc2lj
IHR5cGUgZGVmaW5pdGlvbnMuICovCisjaW5jbHVkZSA8YXNtL2J5dGVvcmRlci5oPgorI2luY2x1
ZGUgPGxpbnV4L3R5cGVzLmg+CisjaW5jbHVkZSA8bGludXgvc3RyaW5nLmg+CisjaW5jbHVkZSA8
bGludXgvZGVsYXkuaD4KKyNpbmNsdWRlIDxzdGRhcmcuaD4KKworI2lmIGRlZmluZWQoX19jcGx1
c3BsdXMpCitleHRlcm4gIkMiIHsKKyNlbmRpZgorCisjaWZuZGVmIGRtdWJfbWVtY3B5CisjZGVm
aW5lIGRtdWJfbWVtY3B5KGRlc3QsIHNvdXJjZSwgYnl0ZXMpIG1lbWNweSgoZGVzdCksIChzb3Vy
Y2UpLCAoYnl0ZXMpKQorI2VuZGlmCisKKyNpZm5kZWYgZG11Yl9tZW1zZXQKKyNkZWZpbmUgZG11
Yl9tZW1zZXQoZGVzdCwgdmFsLCBieXRlcykgbWVtc2V0KChkZXN0KSwgKHZhbCksIChieXRlcykp
CisjZW5kaWYKKworI2lmbmRlZiBkbXViX3VkZWxheQorI2RlZmluZSBkbXViX3VkZWxheShtaWNy
b3NlY29uZHMpIHVkZWxheShtaWNyb3NlY29uZHMpCisjZW5kaWYKKwordW5pb24gZG11Yl9hZGRy
IHsKKwlzdHJ1Y3QgeworCQl1aW50MzJfdCBsb3dfcGFydDsKKwkJdWludDMyX3QgaGlnaF9wYXJ0
OworCX0gdTsKKwl1aW50NjRfdCBxdWFkX3BhcnQ7Cit9OworCisjaWYgZGVmaW5lZChfX2NwbHVz
cGx1cykKK30KKyNlbmRpZgorCisjZW5kaWYgLyogX0RNVUJfVFlQRVNfSF8gKi8KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9NYWtlZmlsZSBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9NYWtlZmlsZQpuZXcgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmYzYjg0NGY0NzRmZAotLS0gL2Rldi9udWxsCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9NYWtlZmlsZQpAQCAtMCwwICsx
LDI5IEBACisjCisjIENvcHlyaWdodCAyMDE5IEFkdmFuY2VkIE1pY3JvIERldmljZXMsIEluYy4K
KyMKKyMgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFu
eSBwZXJzb24gb2J0YWluaW5nIGEKKyMgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lh
dGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwKKyMgdG8gZGVhbCBpbiB0
aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
dGlvbgorIyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwg
ZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyMgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0
d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCisjIFNvZnR3YXJlIGlzIGZ1
cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6Cisj
CisjIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNl
IHNoYWxsIGJlIGluY2x1ZGVkIGluCisjIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlv
bnMgb2YgdGhlIFNvZnR3YXJlLgorIworIyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElT
IiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorIyBJTVBMSUVELCBJ
TkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJ
TElUWSwKKyMgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdF
TUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisjIFRIRSBDT1BZUklHSFQgSE9MREVSKFMpIE9SIEFV
VEhPUihTKSBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUgorIyBPVEhFUiBMSUFC
SUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lT
RSwKKyMgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZU
V0FSRSBPUiBUSEUgVVNFIE9SCisjIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KKyMK
KworaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRE1VQgorRE1VQiA9IGRtdWJfc3J2Lm8gZG11Yl9y
ZWcubyBkbXViX2RjbjIwLm8gZG11Yl9kY24yMS5vCisKK0FNRF9EQUxfRE1VQiA9ICQoYWRkcHJl
Zml4ICQoQU1EREFMUEFUSCkvZG11Yi9zcmMvLCQoRE1VQikpCisKK0FNRF9ESVNQTEFZX0ZJTEVT
ICs9ICQoQU1EX0RBTF9ETVVCKQorZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9kbXViL3NyYy9kbXViX2RjbjIwLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rp
c3BsYXkvZG11Yi9zcmMvZG11Yl9kY24yMC5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAwMDAwMC4uMjM2YTQxNTZiYmUxCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfZGNuMjAuYwpAQCAtMCwwICsxLDEzNyBAQAor
LyoKKyAqIENvcHlyaWdodCAyMDE5IEFkdmFuY2VkIE1pY3JvIERldmljZXMsIEluYy4KKyAqCisg
KiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBl
cnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVk
IGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwKKyAqIHRvIGRlYWwgaW4gdGhl
IFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRp
b24KKyAqIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBk
aXN0cmlidXRlLCBzdWJsaWNlbnNlLAorICogYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0
d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCisgKiBTb2Z0d2FyZSBpcyBm
dXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgor
ICoKKyAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90
aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCisgKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBv
cnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQg
IkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorICogSU1Q
TElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJD
SEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9O
SU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBDT1BZUklHSFQgSE9MREVS
KFMpIE9SIEFVVEhPUihTKSBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUgorICog
T1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBP
UiBPVEhFUldJU0UsCisgKiBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJ
VEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKKyAqIE9USEVSIERFQUxJTkdTIElOIFRIRSBT
T0ZUV0FSRS4KKyAqCisgKiBBdXRob3JzOiBBTUQKKyAqCisgKi8KKworI2luY2x1ZGUgIi4uL2lu
Yy9kbXViX3Nydi5oIgorI2luY2x1ZGUgImRtdWJfcmVnLmgiCisKKyNpbmNsdWRlICJkY24vZGNu
XzJfMF8wX29mZnNldC5oIgorI2luY2x1ZGUgImRjbi9kY25fMl8wXzBfc2hfbWFzay5oIgorI2lu
Y2x1ZGUgInNvYzE1X2h3X2lwLmgiCisjaW5jbHVkZSAidmVnYTEwX2lwX29mZnNldC5oIgorCisj
ZGVmaW5lIEJBU0VfSU5ORVIoc2VnKSBEQ05fQkFTRV9fSU5TVDBfU0VHIyNzZWcKKyNkZWZpbmUg
Q1RYIGRtdWIKKwordm9pZCBkbXViX2RjbjIwX3Jlc2V0KHN0cnVjdCBkbXViX3NydiAqZG11YikK
K3sKKwlSRUdfVVBEQVRFKERNQ1VCX0NOVEwsIERNQ1VCX1NPRlRfUkVTRVQsIDEpOworCVJFR19V
UERBVEUoRE1DVUJfQ05UTCwgRE1DVUJfRU5BQkxFLCAwKTsKK30KKwordm9pZCBkbXViX2RjbjIw
X3Jlc2V0X3JlbGVhc2Uoc3RydWN0IGRtdWJfc3J2ICpkbXViKQoreworCVJFR19XUklURShETUNV
Ql9TQ1JBVENIMTUsIGRtdWItPnBzcF92ZXJzaW9uICYgMHgwMDExMDBGRik7CisJUkVHX1VQREFU
RV8yKERNQ1VCX0NOVEwsIERNQ1VCX0VOQUJMRSwgMSwgRE1DVUJfVFJBQ0VQT1JUX0VOLCAxKTsK
KwlSRUdfVVBEQVRFKERNQ1VCX0NOVEwsIERNQ1VCX1NPRlRfUkVTRVQsIDApOworfQorCit2b2lk
IGRtdWJfZGNuMjBfYmFja2Rvb3JfbG9hZChzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIsIHN0cnVjdCBk
bXViX3dpbmRvdyAqY3cwLAorCQkJICAgICAgc3RydWN0IGRtdWJfd2luZG93ICpjdzEpCit7CisJ
UkVHX1VQREFURShETUNVQl9TRUNfQ05UTCwgRE1DVUJfU0VDX1JFU0VULCAxKTsKKwlSRUdfVVBE
QVRFXzIoRE1DVUJfTUVNX0NOVEwsIERNQ1VCX01FTV9SRUFEX1NQQUNFLCAweDQsCisJCSAgICAg
RE1DVUJfTUVNX1dSSVRFX1NQQUNFLCAweDQpOworCisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjNf
Q1cwX09GRlNFVCwgY3cwLT5vZmZzZXQudS5sb3dfcGFydCk7CisJUkVHX1dSSVRFKERNQ1VCX1JF
R0lPTjNfQ1cwX09GRlNFVF9ISUdILCBjdzAtPm9mZnNldC51LmhpZ2hfcGFydCk7CisJUkVHX1dS
SVRFKERNQ1VCX1JFR0lPTjNfQ1cwX0JBU0VfQUREUkVTUywgY3cwLT5yZWdpb24uYmFzZSk7CisJ
UkVHX1NFVF8yKERNQ1VCX1JFR0lPTjNfQ1cwX1RPUF9BRERSRVNTLCAwLAorCQkgIERNQ1VCX1JF
R0lPTjNfQ1cwX1RPUF9BRERSRVNTLCBjdzAtPnJlZ2lvbi50b3AsCisJCSAgRE1DVUJfUkVHSU9O
M19DVzBfRU5BQkxFLCAxKTsKKworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXMV9PRkZTRVQs
IGN3MS0+b2Zmc2V0LnUubG93X3BhcnQpOworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXMV9P
RkZTRVRfSElHSCwgY3cxLT5vZmZzZXQudS5oaWdoX3BhcnQpOworCVJFR19XUklURShETUNVQl9S
RUdJT04zX0NXMV9CQVNFX0FERFJFU1MsIGN3MS0+cmVnaW9uLmJhc2UpOworCVJFR19TRVRfMihE
TUNVQl9SRUdJT04zX0NXMV9UT1BfQUREUkVTUywgMCwKKwkJICBETUNVQl9SRUdJT04zX0NXMV9U
T1BfQUREUkVTUywgY3cxLT5yZWdpb24udG9wLAorCQkgIERNQ1VCX1JFR0lPTjNfQ1cxX0VOQUJM
RSwgMSk7CisKKwlSRUdfVVBEQVRFXzIoRE1DVUJfU0VDX0NOVEwsIERNQ1VCX1NFQ19SRVNFVCwg
MCwgRE1DVUJfTUVNX1VOSVRfSUQsCisJCSAgICAgMHgyMCk7Cit9CisKK3ZvaWQgZG11Yl9kY24y
MF9zZXR1cF93aW5kb3dzKHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCSAgICAgIGNvbnN0IHN0
cnVjdCBkbXViX3dpbmRvdyAqY3cyLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGRtdWJfd2luZG93
ICpjdzMsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cgKmN3NCwKKwkJCQkgIGNv
bnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3c1KQoreworCVJFR19XUklURShETUNVQl9SRUdJT04z
X0NXMl9PRkZTRVQsIGN3Mi0+b2Zmc2V0LnUubG93X3BhcnQpOworCVJFR19XUklURShETUNVQl9S
RUdJT04zX0NXMl9PRkZTRVRfSElHSCwgY3cyLT5vZmZzZXQudS5oaWdoX3BhcnQpOworCVJFR19X
UklURShETUNVQl9SRUdJT04zX0NXMl9CQVNFX0FERFJFU1MsIGN3Mi0+cmVnaW9uLmJhc2UpOwor
CVJFR19TRVRfMihETUNVQl9SRUdJT04zX0NXMl9UT1BfQUREUkVTUywgMCwKKwkJICBETUNVQl9S
RUdJT04zX0NXMl9UT1BfQUREUkVTUywgY3cyLT5yZWdpb24udG9wLAorCQkgIERNQ1VCX1JFR0lP
TjNfQ1cyX0VOQUJMRSwgMSk7CisKKwlSRUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzNfT0ZGU0VU
LCBjdzMtPm9mZnNldC51Lmxvd19wYXJ0KTsKKwlSRUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzNf
T0ZGU0VUX0hJR0gsIGN3My0+b2Zmc2V0LnUuaGlnaF9wYXJ0KTsKKwlSRUdfV1JJVEUoRE1DVUJf
UkVHSU9OM19DVzNfQkFTRV9BRERSRVNTLCBjdzMtPnJlZ2lvbi5iYXNlKTsKKwlSRUdfU0VUXzIo
RE1DVUJfUkVHSU9OM19DVzNfVE9QX0FERFJFU1MsIDAsCisJCSAgRE1DVUJfUkVHSU9OM19DVzNf
VE9QX0FERFJFU1MsIGN3My0+cmVnaW9uLnRvcCwKKwkJICBETUNVQl9SRUdJT04zX0NXM19FTkFC
TEUsIDEpOworCisJLyogVE9ETzogTW92ZSB0aGlzIHRvIENXNC4gKi8KKworCVJFR19XUklURShE
TUNVQl9SRUdJT040X09GRlNFVCwgY3c0LT5vZmZzZXQudS5sb3dfcGFydCk7CisJUkVHX1dSSVRF
KERNQ1VCX1JFR0lPTjRfT0ZGU0VUX0hJR0gsIGN3NC0+b2Zmc2V0LnUuaGlnaF9wYXJ0KTsKKwlS
RUdfU0VUXzIoRE1DVUJfUkVHSU9ONF9UT1BfQUREUkVTUywgMCwgRE1DVUJfUkVHSU9ONF9UT1Bf
QUREUkVTUywKKwkJICBjdzQtPnJlZ2lvbi50b3AgLSBjdzQtPnJlZ2lvbi5iYXNlIC0gMSwgRE1D
VUJfUkVHSU9ONF9FTkFCTEUsCisJCSAgMSk7Cit9CisKK3ZvaWQgZG11Yl9kY24yMF9zZXR1cF9t
YWlsYm94KHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBkbXVi
X3JlZ2lvbiAqaW5ib3gxKQoreworCS8qIFRPRE86IFVzZSBDVzQgaW5zdGVhZCBvZiByZWdpb24g
NC4gKi8KKworCVJFR19XUklURShETUNVQl9JTkJPWDFfQkFTRV9BRERSRVNTLCAweDgwMDAwMDAw
KTsKKwlSRUdfV1JJVEUoRE1DVUJfSU5CT1gxX1NJWkUsIGluYm94MS0+dG9wIC0gaW5ib3gxLT5i
YXNlKTsKKwlSRUdfV1JJVEUoRE1DVUJfSU5CT1gxX1JQVFIsIDApOworCVJFR19XUklURShETUNV
Ql9JTkJPWDFfV1BUUiwgMCk7Cit9CisKK3VpbnQzMl90IGRtdWJfZGNuMjBfZ2V0X2luYm94MV9y
cHRyKHN0cnVjdCBkbXViX3NydiAqZG11YikKK3sKKwlyZXR1cm4gUkVHX1JFQUQoRE1DVUJfSU5C
T1gxX1JQVFIpOworfQorCit2b2lkIGRtdWJfZGNuMjBfc2V0X2luYm94MV93cHRyKHN0cnVjdCBk
bXViX3NydiAqZG11YiwgdWludDMyX3Qgd3B0cl9vZmZzZXQpCit7CisJUkVHX1dSSVRFKERNQ1VC
X0lOQk9YMV9XUFRSLCB3cHRyX29mZnNldCk7Cit9CisKK2Jvb2wgZG11Yl9kY24yMF9pc19zdXBw
b3J0ZWQoc3RydWN0IGRtdWJfc3J2ICpkbXViKQoreworCXVpbnQzMl90IHN1cHBvcnRlZCA9IDA7
CisKKwlSRUdfR0VUKENDX0RDX1BJUEVfRElTLCBEQ19ETUNVQl9FTkFCTEUsICZzdXBwb3J0ZWQp
OworCisJcmV0dXJuIHN1cHBvcnRlZDsKK30KKworYm9vbCBkbXViX2RjbjIwX2lzX3BoeV9pbml0
KHN0cnVjdCBkbXViX3NydiAqZG11YikKK3sKKwlyZXR1cm4gUkVHX1JFQUQoRE1DVUJfU0NSQVRD
SDEwKSAhPSAwOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2Rt
dWIvc3JjL2RtdWJfZGNuMjAuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3Ny
Yy9kbXViX2RjbjIwLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi40
MTI2OWRhNDAzNjMKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3Bs
YXkvZG11Yi9zcmMvZG11Yl9kY24yMC5oCkBAIC0wLDAgKzEsNjIgQEAKKy8qCisgKiBDb3B5cmln
aHQgMjAxOSBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVybWlzc2lvbiBp
cyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5n
IGEKKyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9u
IGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRo
b3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmln
aHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3Vi
bGljZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBw
ZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRv
IHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJv
dmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBp
bmNsdWRlZCBpbgorICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUg
U29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhP
VVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElO
RyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAor
ICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4g
IElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1Io
UykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElU
WSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAor
ICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FS
RSBPUiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKgor
ICogQXV0aG9yczogQU1ECisgKgorICovCisKKyNpZm5kZWYgX0RNVUJfRENOMjBfSF8KKyNkZWZp
bmUgX0RNVUJfRENOMjBfSF8KKworI2luY2x1ZGUgIi4uL2luYy9kbXViX3R5cGVzLmgiCisKK3N0
cnVjdCBkbXViX3NydjsKKworLyogSGFyZHdhcmUgZnVuY3Rpb25zLiAqLworCit2b2lkIGRtdWJf
ZGNuMjBfaW5pdChzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIpOworCit2b2lkIGRtdWJfZGNuMjBfcmVz
ZXQoc3RydWN0IGRtdWJfc3J2ICpkbXViKTsKKwordm9pZCBkbXViX2RjbjIwX3Jlc2V0X3JlbGVh
c2Uoc3RydWN0IGRtdWJfc3J2ICpkbXViKTsKKwordm9pZCBkbXViX2RjbjIwX2JhY2tkb29yX2xv
YWQoc3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGRtdWJfd2lu
ZG93ICpjdzAsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cgKmN3MSk7CisKK3Zv
aWQgZG11Yl9kY24yMF9zZXR1cF93aW5kb3dzKHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCSAg
ICAgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3cyLAorCQkJICAgICAgY29uc3Qgc3RydWN0
IGRtdWJfd2luZG93ICpjdzMsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cgKmN3
NCwKKwkJCQkgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3c1KTsKKwordm9pZCBkbXViX2Rj
bjIwX3NldHVwX21haWxib3goc3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJICAgICAgY29uc3Qg
c3RydWN0IGRtdWJfcmVnaW9uICppbmJveDEpOworCit1aW50MzJfdCBkbXViX2RjbjIwX2dldF9p
bmJveDFfcnB0cihzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIpOworCit2b2lkIGRtdWJfZGNuMjBfc2V0
X2luYm94MV93cHRyKHN0cnVjdCBkbXViX3NydiAqZG11YiwgdWludDMyX3Qgd3B0cl9vZmZzZXQp
OworCitib29sIGRtdWJfZGNuMjBfaXNfc3VwcG9ydGVkKHN0cnVjdCBkbXViX3NydiAqZG11Yik7
CisKK2Jvb2wgZG11Yl9kY24yMF9pc19waHlfaW5pdChzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIpOwor
CisjZW5kaWYgLyogX0RNVUJfRENOMjBfSF8gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kbXViL3NyYy9kbXViX2RjbjIxLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9kY24yMS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4
IDAwMDAwMDAwMDAwMC4uZDQwYTgwODExMmU3Ci0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfZGNuMjEuYwpAQCAtMCwwICsxLDEyNiBA
QAorLyoKKyAqIENvcHlyaWdodCAyMDE5IEFkdmFuY2VkIE1pY3JvIERldmljZXMsIEluYy4KKyAq
CisgKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55
IHBlcnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lh
dGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwKKyAqIHRvIGRlYWwgaW4g
dGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0
YXRpb24KKyAqIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNo
LCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLAorICogYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBT
b2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCisgKiBTb2Z0d2FyZSBp
cyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25z
OgorICoKKyAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24g
bm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCisgKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFs
IHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJPVklE
RUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorICog
SU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBN
RVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQg
Tk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBDT1BZUklHSFQgSE9M
REVSKFMpIE9SIEFVVEhPUihTKSBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUgor
ICogT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9S
VCBPUiBPVEhFUldJU0UsCisgKiBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9O
IFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKKyAqIE9USEVSIERFQUxJTkdTIElOIFRI
RSBTT0ZUV0FSRS4KKyAqCisgKiBBdXRob3JzOiBBTUQKKyAqCisgKi8KKworI2luY2x1ZGUgIi4u
L2luYy9kbXViX3Nydi5oIgorI2luY2x1ZGUgImRtdWJfcmVnLmgiCisKKyNpbmNsdWRlICJkY24v
ZGNuXzJfMV8wX29mZnNldC5oIgorI2luY2x1ZGUgImRjbi9kY25fMl8xXzBfc2hfbWFzay5oIgor
I2luY2x1ZGUgInJlbm9pcl9pcF9vZmZzZXQuaCIKKworI2RlZmluZSBCQVNFX0lOTkVSKHNlZykg
RE1VX0JBU0VfX0lOU1QwX1NFRyMjc2VnCisjZGVmaW5lIENUWCBkbXViCisKK3N0YXRpYyBpbmxp
bmUgdm9pZCBkbXViX2RjbjIxX3RyYW5zbGF0ZV9hZGRyKGNvbnN0IHVuaW9uIGRtdWJfYWRkciAq
YWRkcl9pbiwKKwkJCQkJICAgICB1aW50NjRfdCBmYl9iYXNlLAorCQkJCQkgICAgIHVpbnQ2NF90
IGZiX29mZnNldCwKKwkJCQkJICAgICB1bmlvbiBkbXViX2FkZHIgKmFkZHJfb3V0KQoreworCWFk
ZHJfb3V0LT5xdWFkX3BhcnQgPSBhZGRyX2luLT5xdWFkX3BhcnQgLSBmYl9iYXNlICsgZmJfb2Zm
c2V0OworfQorCit2b2lkIGRtdWJfZGNuMjFfYmFja2Rvb3JfbG9hZChzdHJ1Y3QgZG11Yl9zcnYg
KmRtdWIsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cgKmN3MCwKKwkJCSAgICAg
IGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3cxKQoreworCXVuaW9uIGRtdWJfYWRkciBvZmZz
ZXQ7CisJdWludDY0X3QgZmJfYmFzZSA9IGRtdWItPmZiX2Jhc2UsIGZiX29mZnNldCA9IGRtdWIt
PmZiX29mZnNldDsKKworCVJFR19VUERBVEUoRE1DVUJfU0VDX0NOVEwsIERNQ1VCX1NFQ19SRVNF
VCwgMSk7CisJUkVHX1VQREFURV8yKERNQ1VCX01FTV9DTlRMLCBETUNVQl9NRU1fUkVBRF9TUEFD
RSwgMHgzLAorCQkgICAgIERNQ1VCX01FTV9XUklURV9TUEFDRSwgMHgzKTsKKworCWRtdWJfZGNu
MjFfdHJhbnNsYXRlX2FkZHIoJmN3MC0+b2Zmc2V0LCBmYl9iYXNlLCBmYl9vZmZzZXQsICZvZmZz
ZXQpOworCisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjNfQ1cwX09GRlNFVCwgb2Zmc2V0LnUubG93
X3BhcnQpOworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXMF9PRkZTRVRfSElHSCwgb2Zmc2V0
LnUuaGlnaF9wYXJ0KTsKKwlSRUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzBfQkFTRV9BRERSRVNT
LCBjdzAtPnJlZ2lvbi5iYXNlKTsKKwlSRUdfU0VUXzIoRE1DVUJfUkVHSU9OM19DVzBfVE9QX0FE
RFJFU1MsIDAsCisJCSAgRE1DVUJfUkVHSU9OM19DVzBfVE9QX0FERFJFU1MsIGN3MC0+cmVnaW9u
LnRvcCwKKwkJICBETUNVQl9SRUdJT04zX0NXMF9FTkFCTEUsIDEpOworCisJZG11Yl9kY24yMV90
cmFuc2xhdGVfYWRkcigmY3cxLT5vZmZzZXQsIGZiX2Jhc2UsIGZiX29mZnNldCwgJm9mZnNldCk7
CisKKwlSRUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzFfT0ZGU0VULCBvZmZzZXQudS5sb3dfcGFy
dCk7CisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjNfQ1cxX09GRlNFVF9ISUdILCBvZmZzZXQudS5o
aWdoX3BhcnQpOworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXMV9CQVNFX0FERFJFU1MsIGN3
MS0+cmVnaW9uLmJhc2UpOworCVJFR19TRVRfMihETUNVQl9SRUdJT04zX0NXMV9UT1BfQUREUkVT
UywgMCwKKwkJICBETUNVQl9SRUdJT04zX0NXMV9UT1BfQUREUkVTUywgY3cxLT5yZWdpb24udG9w
LAorCQkgIERNQ1VCX1JFR0lPTjNfQ1cxX0VOQUJMRSwgMSk7CisKKwlSRUdfVVBEQVRFXzIoRE1D
VUJfU0VDX0NOVEwsIERNQ1VCX1NFQ19SRVNFVCwgMCwgRE1DVUJfTUVNX1VOSVRfSUQsCisJCSAg
ICAgMHgyMCk7Cit9CisKK3ZvaWQgZG11Yl9kY24yMV9zZXR1cF93aW5kb3dzKHN0cnVjdCBkbXVi
X3NydiAqZG11YiwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3cyLAorCQkJ
ICAgICAgY29uc3Qgc3RydWN0IGRtdWJfd2luZG93ICpjdzMsCisJCQkgICAgICBjb25zdCBzdHJ1
Y3QgZG11Yl93aW5kb3cgKmN3NCwKKwkJCQkgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3c1
KQoreworCXVuaW9uIGRtdWJfYWRkciBvZmZzZXQ7CisJdWludDY0X3QgZmJfYmFzZSA9IGRtdWIt
PmZiX2Jhc2UsIGZiX29mZnNldCA9IGRtdWItPmZiX29mZnNldDsKKworCWRtdWJfZGNuMjFfdHJh
bnNsYXRlX2FkZHIoJmN3Mi0+b2Zmc2V0LCBmYl9iYXNlLCBmYl9vZmZzZXQsICZvZmZzZXQpOwor
CisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjNfQ1cyX09GRlNFVCwgb2Zmc2V0LnUubG93X3BhcnQp
OworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXMl9PRkZTRVRfSElHSCwgb2Zmc2V0LnUuaGln
aF9wYXJ0KTsKKwlSRUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzJfQkFTRV9BRERSRVNTLCBjdzIt
PnJlZ2lvbi5iYXNlKTsKKwlSRUdfU0VUXzIoRE1DVUJfUkVHSU9OM19DVzJfVE9QX0FERFJFU1Ms
IDAsCisJCSAgRE1DVUJfUkVHSU9OM19DVzJfVE9QX0FERFJFU1MsIGN3Mi0+cmVnaW9uLnRvcCwK
KwkJICBETUNVQl9SRUdJT04zX0NXMl9FTkFCTEUsIDEpOworCisJZG11Yl9kY24yMV90cmFuc2xh
dGVfYWRkcigmY3czLT5vZmZzZXQsIGZiX2Jhc2UsIGZiX29mZnNldCwgJm9mZnNldCk7CisKKwlS
RUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzNfT0ZGU0VULCBvZmZzZXQudS5sb3dfcGFydCk7CisJ
UkVHX1dSSVRFKERNQ1VCX1JFR0lPTjNfQ1czX09GRlNFVF9ISUdILCBvZmZzZXQudS5oaWdoX3Bh
cnQpOworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXM19CQVNFX0FERFJFU1MsIGN3My0+cmVn
aW9uLmJhc2UpOworCVJFR19TRVRfMihETUNVQl9SRUdJT04zX0NXM19UT1BfQUREUkVTUywgMCwK
KwkJICBETUNVQl9SRUdJT04zX0NXM19UT1BfQUREUkVTUywgY3czLT5yZWdpb24udG9wLAorCQkg
IERNQ1VCX1JFR0lPTjNfQ1czX0VOQUJMRSwgMSk7CisKKwkvKiBUT0RPOiBNb3ZlIHRoaXMgdG8g
Q1c0LiAqLworCWRtdWJfZGNuMjFfdHJhbnNsYXRlX2FkZHIoJmN3NC0+b2Zmc2V0LCBmYl9iYXNl
LCBmYl9vZmZzZXQsICZvZmZzZXQpOworCisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjRfT0ZGU0VU
LCBvZmZzZXQudS5sb3dfcGFydCk7CisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjRfT0ZGU0VUX0hJ
R0gsIG9mZnNldC51LmhpZ2hfcGFydCk7CisJUkVHX1NFVF8yKERNQ1VCX1JFR0lPTjRfVE9QX0FE
RFJFU1MsIDAsIERNQ1VCX1JFR0lPTjRfVE9QX0FERFJFU1MsCisJCSAgY3c0LT5yZWdpb24udG9w
IC0gY3c0LT5yZWdpb24uYmFzZSAtIDEsIERNQ1VCX1JFR0lPTjRfRU5BQkxFLAorCQkgIDEpOwor
CisJZG11Yl9kY24yMV90cmFuc2xhdGVfYWRkcigmY3c1LT5vZmZzZXQsIGZiX2Jhc2UsIGZiX29m
ZnNldCwgJm9mZnNldCk7CisKKwlSRUdfV1JJVEUoRE1DVUJfUkVHSU9OM19DVzVfT0ZGU0VULCBv
ZmZzZXQudS5sb3dfcGFydCk7CisJUkVHX1dSSVRFKERNQ1VCX1JFR0lPTjNfQ1c1X09GRlNFVF9I
SUdILCBvZmZzZXQudS5oaWdoX3BhcnQpOworCVJFR19XUklURShETUNVQl9SRUdJT04zX0NXNV9C
QVNFX0FERFJFU1MsIGN3NS0+cmVnaW9uLmJhc2UpOworCVJFR19TRVRfMihETUNVQl9SRUdJT04z
X0NXNV9UT1BfQUREUkVTUywgMCwKKwkJICBETUNVQl9SRUdJT04zX0NXNV9UT1BfQUREUkVTUywg
Y3c1LT5yZWdpb24udG9wLAorCQkgIERNQ1VCX1JFR0lPTjNfQ1c1X0VOQUJMRSwgMSk7Cit9CisK
K2Jvb2wgZG11Yl9kY24yMV9pc19hdXRvX2xvYWRfZG9uZShzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIp
Cit7CisJcmV0dXJuIChSRUdfUkVBRChETUNVQl9TQ1JBVENIMCkgPT0gMyk7Cit9CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9kY24yMS5oIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfZGNuMjEuaApuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmY1Nzk2OWQ4ZDU2ZgotLS0gL2Rldi9u
dWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9kbXViX2RjbjIx
LmgKQEAgLTAsMCArMSw0NSBAQAorLyoKKyAqIENvcHlyaWdodCAyMDE5IEFkdmFuY2VkIE1pY3Jv
IERldmljZXMsIEluYy4KKyAqCisgKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVl
IG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNv
ZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUi
KSwKKyAqIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1
ZGluZyB3aXRob3V0IGxpbWl0YXRpb24KKyAqIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2Rp
ZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLAorICogYW5kL29yIHNl
bGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20g
dGhlCisgKiBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZv
bGxvd2luZyBjb25kaXRpb25zOgorICoKKyAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFu
ZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCisgKiBhbGwgY29w
aWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBUSEUg
U09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lO
RCwgRVhQUkVTUyBPUgorICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBU
SEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJ
Q1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAq
IFRIRSBDT1BZUklHSFQgSE9MREVSKFMpIE9SIEFVVEhPUihTKSBCRSBMSUFCTEUgRk9SIEFOWSBD
TEFJTSwgREFNQUdFUyBPUgorICogT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElP
TiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsCisgKiBBUklTSU5HIEZST00sIE9VVCBP
RiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKKyAqIE9U
SEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKiBBdXRob3JzOiBBTUQKKyAqCisg
Ki8KKworI2lmbmRlZiBfRE1VQl9EQ04yMV9IXworI2RlZmluZSBfRE1VQl9EQ04yMV9IXworCisj
aW5jbHVkZSAiZG11Yl9kY24yMC5oIgorCisvKiBIYXJkd2FyZSBmdW5jdGlvbnMuICovCisKK3Zv
aWQgZG11Yl9kY24yMV9iYWNrZG9vcl9sb2FkKHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCSAg
ICAgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3cwLAorCQkJICAgICAgY29uc3Qgc3RydWN0
IGRtdWJfd2luZG93ICpjdzEpOworCit2b2lkIGRtdWJfZGNuMjFfc2V0dXBfd2luZG93cyhzdHJ1
Y3QgZG11Yl9zcnYgKmRtdWIsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5kb3cgKmN3
MiwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBkbXViX3dpbmRvdyAqY3czLAorCQkJICAgICAgY29u
c3Qgc3RydWN0IGRtdWJfd2luZG93ICpjdzQsCisJCQkJICBjb25zdCBzdHJ1Y3QgZG11Yl93aW5k
b3cgKmN3NSk7CisKK2Jvb2wgZG11Yl9kY24yMV9pc19hdXRvX2xvYWRfZG9uZShzdHJ1Y3QgZG11
Yl9zcnYgKmRtdWIpOworCisjZW5kaWYgLyogX0RNVUJfRENOMjFfSF8gKi8KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9kbXViX3JlZy5jIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfcmVnLmMKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi40MDk0ZWNhMjEyZjAKLS0tIC9kZXYvbnVsbAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9yZWcuYwpAQCAtMCww
ICsxLDEwOSBAQAorLyoKKyAqIENvcHlyaWdodCAyMDE5IEFkdmFuY2VkIE1pY3JvIERldmljZXMs
IEluYy4KKyAqCisgKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJn
ZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlzIHNvZnR3YXJlIGFu
ZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwKKyAqIHRv
IGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRo
b3V0IGxpbWl0YXRpb24KKyAqIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdl
LCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLAorICogYW5kL29yIHNlbGwgY29waWVz
IG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCisgKiBT
b2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBj
b25kaXRpb25zOgorICoKKyAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBl
cm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCisgKiBhbGwgY29waWVzIG9yIHN1
YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUg
SVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVT
UyBPUgorICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFO
VElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVS
UE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBDT1BZ
UklHSFQgSE9MREVSKFMpIE9SIEFVVEhPUihTKSBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFN
QUdFUyBPUgorICogT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05U
UkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsCisgKiBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBD
T05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKKyAqIE9USEVSIERFQUxJ
TkdTIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKiBBdXRob3JzOiBBTUQKKyAqCisgKi8KKworI2lu
Y2x1ZGUgImRtdWJfcmVnLmgiCisjaW5jbHVkZSAiLi4vaW5jL2RtdWJfc3J2LmgiCisKK3N0cnVj
dCBkbXViX3JlZ192YWx1ZV9tYXNrcyB7CisJdWludDMyX3QgdmFsdWU7CisJdWludDMyX3QgbWFz
azsKK307CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorc2V0X3JlZ19maWVsZF92YWx1ZV9tYXNrcyhz
dHJ1Y3QgZG11Yl9yZWdfdmFsdWVfbWFza3MgKmZpZWxkX3ZhbHVlX21hc2ssCisJCQkgIHVpbnQz
Ml90IHZhbHVlLCB1aW50MzJfdCBtYXNrLCB1aW50OF90IHNoaWZ0KQoreworCWZpZWxkX3ZhbHVl
X21hc2stPnZhbHVlID0KKwkJKGZpZWxkX3ZhbHVlX21hc2stPnZhbHVlICYgfm1hc2spIHwgKG1h
c2sgJiAodmFsdWUgPDwgc2hpZnQpKTsKKwlmaWVsZF92YWx1ZV9tYXNrLT5tYXNrID0gZmllbGRf
dmFsdWVfbWFzay0+bWFzayB8IG1hc2s7Cit9CisKK3N0YXRpYyB2b2lkIHNldF9yZWdfZmllbGRf
dmFsdWVzKHN0cnVjdCBkbXViX3JlZ192YWx1ZV9tYXNrcyAqZmllbGRfdmFsdWVfbWFzaywKKwkJ
CQkgdWludDMyX3QgYWRkciwgaW50IG4sIHVpbnQ4X3Qgc2hpZnQxLAorCQkJCSB1aW50MzJfdCBt
YXNrMSwgdWludDMyX3QgZmllbGRfdmFsdWUxLAorCQkJCSB2YV9saXN0IGFwKQoreworCXVpbnQz
Ml90IHNoaWZ0LCBtYXNrLCBmaWVsZF92YWx1ZTsKKwlpbnQgaSA9IDE7CisKKwkvKiBnYXRoZXIg
YWxsIGJpdHMgdmFsdWUvbWFzayBnZXR0aW5nIHVwZGF0ZWQgaW4gdGhpcyByZWdpc3RlciAqLwor
CXNldF9yZWdfZmllbGRfdmFsdWVfbWFza3MoZmllbGRfdmFsdWVfbWFzaywgZmllbGRfdmFsdWUx
LCBtYXNrMSwKKwkJCQkgIHNoaWZ0MSk7CisKKwl3aGlsZSAoaSA8IG4pIHsKKwkJc2hpZnQgPSB2
YV9hcmcoYXAsIHVpbnQzMl90KTsKKwkJbWFzayA9IHZhX2FyZyhhcCwgdWludDMyX3QpOworCQlm
aWVsZF92YWx1ZSA9IHZhX2FyZyhhcCwgdWludDMyX3QpOworCisJCXNldF9yZWdfZmllbGRfdmFs
dWVfbWFza3MoZmllbGRfdmFsdWVfbWFzaywgZmllbGRfdmFsdWUsIG1hc2ssCisJCQkJCSAgc2hp
ZnQpOworCQlpKys7CisJfQorfQorCitzdGF0aWMgaW5saW5lIHVpbnQzMl90IGdldF9yZWdfZmll
bGRfdmFsdWVfZXgodWludDMyX3QgcmVnX3ZhbHVlLCB1aW50MzJfdCBtYXNrLAorCQkJCQkgICAg
ICB1aW50OF90IHNoaWZ0KQoreworCXJldHVybiAobWFzayAmIHJlZ192YWx1ZSkgPj4gc2hpZnQ7
Cit9CisKK3ZvaWQgZG11Yl9yZWdfdXBkYXRlKHN0cnVjdCBkbXViX3NydiAqc3J2LCB1aW50MzJf
dCBhZGRyLCBpbnQgbiwgdWludDhfdCBzaGlmdDEsCisJCSAgICAgdWludDMyX3QgbWFzazEsIHVp
bnQzMl90IGZpZWxkX3ZhbHVlMSwgLi4uKQoreworCXN0cnVjdCBkbXViX3JlZ192YWx1ZV9tYXNr
cyBmaWVsZF92YWx1ZV9tYXNrID0geyAwIH07CisJdWludDMyX3QgcmVnX3ZhbDsKKwl2YV9saXN0
IGFwOworCisJdmFfc3RhcnQoYXAsIGZpZWxkX3ZhbHVlMSk7CisJc2V0X3JlZ19maWVsZF92YWx1
ZXMoJmZpZWxkX3ZhbHVlX21hc2ssIGFkZHIsIG4sIHNoaWZ0MSwgbWFzazEsCisJCQkgICAgIGZp
ZWxkX3ZhbHVlMSwgYXApOworCXZhX2VuZChhcCk7CisKKwlyZWdfdmFsID0gc3J2LT5mdW5jcy5y
ZWdfcmVhZChzcnYtPnVzZXJfY3R4LCBhZGRyKTsKKwlyZWdfdmFsID0gKHJlZ192YWwgJiB+Zmll
bGRfdmFsdWVfbWFzay5tYXNrKSB8IGZpZWxkX3ZhbHVlX21hc2sudmFsdWU7CisJc3J2LT5mdW5j
cy5yZWdfd3JpdGUoc3J2LT51c2VyX2N0eCwgYWRkciwgcmVnX3ZhbCk7Cit9CisKK3ZvaWQgZG11
Yl9yZWdfc2V0KHN0cnVjdCBkbXViX3NydiAqc3J2LCB1aW50MzJfdCBhZGRyLCB1aW50MzJfdCBy
ZWdfdmFsLCBpbnQgbiwKKwkJICB1aW50OF90IHNoaWZ0MSwgdWludDMyX3QgbWFzazEsIHVpbnQz
Ml90IGZpZWxkX3ZhbHVlMSwgLi4uKQoreworCXN0cnVjdCBkbXViX3JlZ192YWx1ZV9tYXNrcyBm
aWVsZF92YWx1ZV9tYXNrID0geyAwIH07CisJdmFfbGlzdCBhcDsKKworCXZhX3N0YXJ0KGFwLCBm
aWVsZF92YWx1ZTEpOworCXNldF9yZWdfZmllbGRfdmFsdWVzKCZmaWVsZF92YWx1ZV9tYXNrLCBh
ZGRyLCBuLCBzaGlmdDEsIG1hc2sxLAorCQkJICAgICBmaWVsZF92YWx1ZTEsIGFwKTsKKwl2YV9l
bmQoYXApOworCisJcmVnX3ZhbCA9IChyZWdfdmFsICYgfmZpZWxkX3ZhbHVlX21hc2subWFzaykg
fCBmaWVsZF92YWx1ZV9tYXNrLnZhbHVlOworCXNydi0+ZnVuY3MucmVnX3dyaXRlKHNydi0+dXNl
cl9jdHgsIGFkZHIsIHJlZ192YWwpOworfQorCit2b2lkIGRtdWJfcmVnX2dldChzdHJ1Y3QgZG11
Yl9zcnYgKnNydiwgdWludDMyX3QgYWRkciwgdWludDhfdCBzaGlmdCwKKwkJICB1aW50MzJfdCBt
YXNrLCB1aW50MzJfdCAqZmllbGRfdmFsdWUpCit7CisJdWludDMyX3QgcmVnX3ZhbCA9IHNydi0+
ZnVuY3MucmVnX3JlYWQoc3J2LT51c2VyX2N0eCwgYWRkcik7CisJKmZpZWxkX3ZhbHVlID0gZ2V0
X3JlZ19maWVsZF92YWx1ZV9leChyZWdfdmFsLCBtYXNrLCBzaGlmdCk7Cit9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9zcmMvZG11Yl9yZWcuaCBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kbXViL3NyYy9kbXViX3JlZy5oCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uYmFjNGVlOGY3NDVmCi0tLSAvZGV2L251bGwKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RtdWIvc3JjL2RtdWJfcmVnLmgKQEAgLTAs
MCArMSwxMjAgQEAKKy8qCisgKiBDb3B5cmlnaHQgMjAxOSBBZHZhbmNlZCBNaWNybyBEZXZpY2Vz
LCBJbmMuCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFy
Z2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBh
bmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0
byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0
aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJn
ZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGll
cyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQorICog
U29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcg
Y29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBw
ZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgorICogYWxsIGNvcGllcyBvciBz
dWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJF
IElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJF
U1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJB
TlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBV
UlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09Q
WVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERB
TUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09O
VFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4g
Q09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFM
SU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKgorICogQXV0aG9yczogQU1ECisgKgorICovCisKKyNp
Zm5kZWYgX0RNVUJfUkVHX0hfCisjZGVmaW5lIF9ETVVCX1JFR19IXworCisjaW5jbHVkZSAiLi4v
aW5jL2RtdWJfdHlwZXMuaCIKKworc3RydWN0IGRtdWJfc3J2OworCisvKiBSZWdpc3RlciBvZmZz
ZXQgYW5kIGZpZWxkIGxvb2t1cC4gKi8KKworI2RlZmluZSBCQVNFKHNlZykgQkFTRV9JTk5FUihz
ZWcpCisKKyNkZWZpbmUgUkVHX09GRlNFVChiYXNlX2luZGV4LCBhZGRyKSAoQkFTRShiYXNlX2lu
ZGV4KSArIGFkZHIpCisKKyNkZWZpbmUgUkVHKHJlZ19uYW1lKSBSRUdfT0ZGU0VUKG1tICMjIHJl
Z19uYW1lICMjIF9CQVNFX0lEWCwgbW0gIyMgcmVnX25hbWUpCisKKyNkZWZpbmUgRkQocmVnX2Zp
ZWxkKSByZWdfZmllbGQgIyMgX19TSElGVCwgIHJlZ19maWVsZCAjIyBfTUFTSworCisjZGVmaW5l
IEZOKHJlZ19uYW1lLCBmaWVsZCkgRkQocmVnX25hbWUjI19fIyNmaWVsZCkKKworLyogUmVnaXN0
ZXIgcmVhZHMgYW5kIHdyaXRlcy4gKi8KKworI2RlZmluZSBSRUdfUkVBRChyZWcpICgoQ1RYKS0+
ZnVuY3MucmVnX3JlYWQoKENUWCktPnVzZXJfY3R4LCBSRUcocmVnKSkpCisKKyNkZWZpbmUgUkVH
X1dSSVRFKHJlZywgdmFsKSBcCisJKChDVFgpLT5mdW5jcy5yZWdfd3JpdGUoKENUWCktPnVzZXJf
Y3R4LCBSRUcocmVnKSwgKHZhbCkpKQorCisvKiBSZWdpc3RlciBmaWVsZCBzZXR0aW5nLiAqLwor
CisjZGVmaW5lIFJFR19TRVRfTihyZWdfbmFtZSwgbiwgaW5pdGlhbF92YWwsIC4uLikgXAorCWRt
dWJfcmVnX3NldChDVFgsIFJFRyhyZWdfbmFtZSksIGluaXRpYWxfdmFsLCBuLCBfX1ZBX0FSR1Nf
XykKKworI2RlZmluZSBSRUdfU0VUKHJlZ19uYW1lLCBpbml0aWFsX3ZhbCwgZmllbGQsIHZhbCkg
XAorCQlSRUdfU0VUX04ocmVnX25hbWUsIDEsIGluaXRpYWxfdmFsLCBcCisJCQkJRk4ocmVnX25h
bWUsIGZpZWxkKSwgdmFsKQorCisjZGVmaW5lIFJFR19TRVRfMihyZWcsIGluaXRfdmFsdWUsIGYx
LCB2MSwgZjIsIHYyKSBcCisJCVJFR19TRVRfTihyZWcsIDIsIGluaXRfdmFsdWUsIFwKKwkJCQlG
TihyZWcsIGYxKSwgdjEsIFwKKwkJCQlGTihyZWcsIGYyKSwgdjIpCisKKyNkZWZpbmUgUkVHX1NF
VF8zKHJlZywgaW5pdF92YWx1ZSwgZjEsIHYxLCBmMiwgdjIsIGYzLCB2MykgXAorCQlSRUdfU0VU
X04ocmVnLCAzLCBpbml0X3ZhbHVlLCBcCisJCQkJRk4ocmVnLCBmMSksIHYxLCBcCisJCQkJRk4o
cmVnLCBmMiksIHYyLCBcCisJCQkJRk4ocmVnLCBmMyksIHYzKQorCisjZGVmaW5lIFJFR19TRVRf
NChyZWcsIGluaXRfdmFsdWUsIGYxLCB2MSwgZjIsIHYyLCBmMywgdjMsIGY0LCB2NCkgXAorCQlS
RUdfU0VUX04ocmVnLCA0LCBpbml0X3ZhbHVlLCBcCisJCQkJRk4ocmVnLCBmMSksIHYxLCBcCisJ
CQkJRk4ocmVnLCBmMiksIHYyLCBcCisJCQkJRk4ocmVnLCBmMyksIHYzLCBcCisJCQkJRk4ocmVn
LCBmNCksIHY0KQorCisvKiBSZWdpc3RlciBmaWVsZCB1cGRhdGluZy4gKi8KKworI2RlZmluZSBS
RUdfVVBEQVRFX04ocmVnX25hbWUsIG4sIC4uLilcCisJCWRtdWJfcmVnX3VwZGF0ZShDVFgsIFJF
RyhyZWdfbmFtZSksIG4sIF9fVkFfQVJHU19fKQorCisjZGVmaW5lIFJFR19VUERBVEUocmVnX25h
bWUsIGZpZWxkLCB2YWwpCVwKKwkJUkVHX1VQREFURV9OKHJlZ19uYW1lLCAxLCBcCisJCQkJRk4o
cmVnX25hbWUsIGZpZWxkKSwgdmFsKQorCisjZGVmaW5lIFJFR19VUERBVEVfMihyZWcsIGYxLCB2
MSwgZjIsIHYyKQlcCisJCVJFR19VUERBVEVfTihyZWcsIDIsXAorCQkJCUZOKHJlZywgZjEpLCB2
MSxcCisJCQkJRk4ocmVnLCBmMiksIHYyKQorCisjZGVmaW5lIFJFR19VUERBVEVfMyhyZWcsIGYx
LCB2MSwgZjIsIHYyLCBmMywgdjMpIFwKKwkJUkVHX1VQREFURV9OKHJlZywgMywgXAorCQkJCUZO
KHJlZywgZjEpLCB2MSwgXAorCQkJCUZOKHJlZywgZjIpLCB2MiwgXAorCQkJCUZOKHJlZywgZjMp
LCB2MykKKworI2RlZmluZSBSRUdfVVBEQVRFXzQocmVnLCBmMSwgdjEsIGYyLCB2MiwgZjMsIHYz
LCBmNCwgdjQpIFwKKwkJUkVHX1VQREFURV9OKHJlZywgNCwgXAorCQkJCUZOKHJlZywgZjEpLCB2
MSwgXAorCQkJCUZOKHJlZywgZjIpLCB2MiwgXAorCQkJCUZOKHJlZywgZjMpLCB2MywgXAorCQkJ
CUZOKHJlZywgZjQpLCB2NCkKKworLyogUmVnaXN0ZXIgZmllbGQgZ2V0dGluZy4gKi8KKworI2Rl
ZmluZSBSRUdfR0VUKHJlZ19uYW1lLCBmaWVsZCwgdmFsKSBcCisJZG11Yl9yZWdfZ2V0KENUWCwg
UkVHKHJlZ19uYW1lKSwgRk4ocmVnX25hbWUsIGZpZWxkKSwgdmFsKQorCit2b2lkIGRtdWJfcmVn
X3NldChzdHJ1Y3QgZG11Yl9zcnYgKnNydiwgdWludDMyX3QgYWRkciwgdWludDMyX3QgcmVnX3Zh
bCwgaW50IG4sCisJCSAgdWludDhfdCBzaGlmdDEsIHVpbnQzMl90IG1hc2sxLCB1aW50MzJfdCBm
aWVsZF92YWx1ZTEsIC4uLik7CisKK3ZvaWQgZG11Yl9yZWdfdXBkYXRlKHN0cnVjdCBkbXViX3Ny
diAqc3J2LCB1aW50MzJfdCBhZGRyLCBpbnQgbiwgdWludDhfdCBzaGlmdDEsCisJCSAgICAgdWlu
dDMyX3QgbWFzazEsIHVpbnQzMl90IGZpZWxkX3ZhbHVlMSwgLi4uKTsKKwordm9pZCBkbXViX3Jl
Z19nZXQoc3RydWN0IGRtdWJfc3J2ICpzcnYsIHVpbnQzMl90IGFkZHIsIHVpbnQ4X3Qgc2hpZnQs
CisJCSAgdWludDMyX3QgbWFzaywgdWludDMyX3QgKmZpZWxkX3ZhbHVlKTsKKworI2VuZGlmIC8q
IF9ETVVCX1JFR19IXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L2RtdWIvc3JjL2RtdWJfc3J2LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZG11Yi9z
cmMvZG11Yl9zcnYuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjIy
OWVhYjcyNzdkMQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxh
eS9kbXViL3NyYy9kbXViX3Nydi5jCkBAIC0wLDAgKzEsNDE1IEBACisvKgorICogQ29weXJpZ2h0
IDIwMTkgQWR2YW5jZWQgTWljcm8gRGV2aWNlcywgSW5jLgorICoKKyAqIFBlcm1pc3Npb24gaXMg
aGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBh
CisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBm
aWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91
dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJpZ2h0
cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1Ymxp
Y2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVy
bWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBz
bywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3Zl
IGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5j
bHVkZWQgaW4KKyAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNv
ZnR3YXJlLgorICoKKyAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VU
IFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCisgKiBJTVBMSUVELCBJTkNMVURJTkcg
QlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKKyAq
IEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuICBJ
TiBOTyBFVkVOVCBTSEFMTAorICogVEhFIENPUFlSSUdIVCBIT0xERVIoUykgT1IgQVVUSE9SKFMp
IEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SCisgKiBPVEhFUiBMSUFCSUxJVFks
IFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwKKyAq
IEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUg
T1IgVEhFIFVTRSBPUgorICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgorICoKKyAq
IEF1dGhvcnM6IEFNRAorICoKKyAqLworCisjaW5jbHVkZSAiLi4vaW5jL2RtdWJfc3J2LmgiCisj
aW5jbHVkZSAiZG11Yl9kY24yMC5oIgorI2luY2x1ZGUgImRtdWJfZGNuMjEuaCIKKy8qCisgKiBO
b3RlOiB0aGUgRE1VQiBzZXJ2aWNlIGlzIHN0YW5kYWxvbmUuIE5vIGFkZGl0aW9uYWwgaGVhZGVy
cyBzaG91bGQgYmUKKyAqIGFkZGVkIGJlbG93IG9yIGFib3ZlIHRoaXMgbGluZSB1bmxlc3MgdGhl
eSByZXNpZGUgd2l0aGluIHRoZSBETVVCCisgKiBmb2xkZXIuCisgKi8KKworLyogQWxpZ25tZW50
IGZvciBmcmFtZWJ1ZmZlciBtZW1vcnkuICovCisjZGVmaW5lIERNVUJfRkJfQUxJR05NRU5UICgx
MDI0ICogMTAyNCkKKworLyogU3RhY2sgc2l6ZS4gKi8KKyNkZWZpbmUgRE1VQl9TVEFDS19TSVpF
ICgxMjggKiAxMDI0KQorCisvKiBDb250ZXh0IHNpemUuICovCisjZGVmaW5lIERNVUJfQ09OVEVY
VF9TSVpFICg1MTIgKiAxMDI0KQorCisvKiBNYWlsYm94IHNpemUgKi8KKyNkZWZpbmUgRE1VQl9N
QUlMQk9YX1NJWkUgKERNVUJfUkJfU0laRSkKKworLyogVHJhY2VidWZmZXIgc2l6ZSAqLworI2Rl
ZmluZSBETVVCX1RSQUNFQlVGRl9TSVpFICgxMDI0KSAvLzFrQiBidWZmZXIKKworLyogTnVtYmVy
IG9mIHdpbmRvd3MgaW4gdXNlLiAqLworI2RlZmluZSBETVVCX05VTV9XSU5ET1dTIChETVVCX1dJ
TkRPV181X1RSQUNFQlVGRiArIDEpCisvKiBCYXNlIGFkZHJlc3Nlcy4gKi8KKworI2RlZmluZSBE
TVVCX0NXMF9CQVNFICgweDYwMDAwMDAwKQorI2RlZmluZSBETVVCX0NXMV9CQVNFICgweDYxMDAw
MDAwKQorI2RlZmluZSBETVVCX0NXNV9CQVNFICgweDY1MDAwMDAwKQorCitzdGF0aWMgaW5saW5l
IHVpbnQzMl90IGRtdWJfYWxpZ24odWludDMyX3QgdmFsLCB1aW50MzJfdCBmYWN0b3IpCit7CisJ
cmV0dXJuICh2YWwgKyBmYWN0b3IgLSAxKSAvIGZhY3RvciAqIGZhY3RvcjsKK30KKworc3RhdGlj
IGJvb2wgZG11Yl9zcnZfaHdfc2V0dXAoc3RydWN0IGRtdWJfc3J2ICpkbXViLCBlbnVtIGRtdWJf
YXNpYyBhc2ljKQoreworCXN0cnVjdCBkbXViX3Nydl9od19mdW5jcyAqZnVuY3MgPSAmZG11Yi0+
aHdfZnVuY3M7CisKKwlzd2l0Y2ggKGFzaWMpIHsKKwljYXNlIERNVUJfQVNJQ19EQ04yMDoKKwlj
YXNlIERNVUJfQVNJQ19EQ04yMToKKwkJZnVuY3MtPnJlc2V0ID0gZG11Yl9kY24yMF9yZXNldDsK
KwkJZnVuY3MtPnJlc2V0X3JlbGVhc2UgPSBkbXViX2RjbjIwX3Jlc2V0X3JlbGVhc2U7CisJCWZ1
bmNzLT5iYWNrZG9vcl9sb2FkID0gZG11Yl9kY24yMF9iYWNrZG9vcl9sb2FkOworCQlmdW5jcy0+
c2V0dXBfd2luZG93cyA9IGRtdWJfZGNuMjBfc2V0dXBfd2luZG93czsKKwkJZnVuY3MtPnNldHVw
X21haWxib3ggPSBkbXViX2RjbjIwX3NldHVwX21haWxib3g7CisJCWZ1bmNzLT5nZXRfaW5ib3gx
X3JwdHIgPSBkbXViX2RjbjIwX2dldF9pbmJveDFfcnB0cjsKKwkJZnVuY3MtPnNldF9pbmJveDFf
d3B0ciA9IGRtdWJfZGNuMjBfc2V0X2luYm94MV93cHRyOworCQlmdW5jcy0+aXNfc3VwcG9ydGVk
ID0gZG11Yl9kY24yMF9pc19zdXBwb3J0ZWQ7CisJCWZ1bmNzLT5pc19waHlfaW5pdCA9IGRtdWJf
ZGNuMjBfaXNfcGh5X2luaXQ7CisKKwkJaWYgKGFzaWMgPT0gRE1VQl9BU0lDX0RDTjIxKSB7CisJ
CQlmdW5jcy0+YmFja2Rvb3JfbG9hZCA9IGRtdWJfZGNuMjFfYmFja2Rvb3JfbG9hZDsKKwkJCWZ1
bmNzLT5zZXR1cF93aW5kb3dzID0gZG11Yl9kY24yMV9zZXR1cF93aW5kb3dzOworCQkJZnVuY3Mt
PmlzX2F1dG9fbG9hZF9kb25lID0gZG11Yl9kY24yMV9pc19hdXRvX2xvYWRfZG9uZTsKKwkJfQor
CQlicmVhazsKKworCWRlZmF1bHQ6CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwlyZXR1cm4gdHJ1
ZTsKK30KKworZW51bSBkbXViX3N0YXR1cyBkbXViX3Nydl9jcmVhdGUoc3RydWN0IGRtdWJfc3J2
ICpkbXViLAorCQkJCSBjb25zdCBzdHJ1Y3QgZG11Yl9zcnZfY3JlYXRlX3BhcmFtcyAqcGFyYW1z
KQoreworCWVudW0gZG11Yl9zdGF0dXMgc3RhdHVzID0gRE1VQl9TVEFUVVNfT0s7CisKKwlkbXVi
X21lbXNldChkbXViLCAwLCBzaXplb2YoKmRtdWIpKTsKKworCWRtdWItPmZ1bmNzID0gcGFyYW1z
LT5mdW5jczsKKwlkbXViLT51c2VyX2N0eCA9IHBhcmFtcy0+dXNlcl9jdHg7CisJZG11Yi0+YXNp
YyA9IHBhcmFtcy0+YXNpYzsKKwlkbXViLT5pc192aXJ0dWFsID0gcGFyYW1zLT5pc192aXJ0dWFs
OworCisJLyogU2V0dXAgYXNpYyBkZXBlbmRlbnQgaGFyZHdhcmUgZnVuY3MuICovCisJaWYgKCFk
bXViX3Nydl9od19zZXR1cChkbXViLCBwYXJhbXMtPmFzaWMpKSB7CisJCXN0YXR1cyA9IERNVUJf
U1RBVFVTX0lOVkFMSUQ7CisJCWdvdG8gY2xlYW51cDsKKwl9CisKKwkvKiBPdmVycmlkZSAoc29t
ZSkgaGFyZHdhcmUgZnVuY3MgYmFzZWQgb24gdXNlciBwYXJhbXMuICovCisJaWYgKHBhcmFtcy0+
aHdfZnVuY3MpIHsKKwkJaWYgKHBhcmFtcy0+aHdfZnVuY3MtPmdldF9pbmJveDFfcnB0cikKKwkJ
CWRtdWItPmh3X2Z1bmNzLmdldF9pbmJveDFfcnB0ciA9CisJCQkJcGFyYW1zLT5od19mdW5jcy0+
Z2V0X2luYm94MV9ycHRyOworCisJCWlmIChwYXJhbXMtPmh3X2Z1bmNzLT5zZXRfaW5ib3gxX3dw
dHIpCisJCQlkbXViLT5od19mdW5jcy5zZXRfaW5ib3gxX3dwdHIgPQorCQkJCXBhcmFtcy0+aHdf
ZnVuY3MtPnNldF9pbmJveDFfd3B0cjsKKworCQlpZiAocGFyYW1zLT5od19mdW5jcy0+aXNfc3Vw
cG9ydGVkKQorCQkJZG11Yi0+aHdfZnVuY3MuaXNfc3VwcG9ydGVkID0KKwkJCQlwYXJhbXMtPmh3
X2Z1bmNzLT5pc19zdXBwb3J0ZWQ7CisJfQorCisJLyogU2FuaXR5IGNoZWNrcyBmb3IgcmVxdWly
ZWQgaHcgZnVuYyBwb2ludGVycy4gKi8KKwlpZiAoIWRtdWItPmh3X2Z1bmNzLmdldF9pbmJveDFf
cnB0ciB8fAorCSAgICAhZG11Yi0+aHdfZnVuY3Muc2V0X2luYm94MV93cHRyKSB7CisJCXN0YXR1
cyA9IERNVUJfU1RBVFVTX0lOVkFMSUQ7CisJCWdvdG8gY2xlYW51cDsKKwl9CisKK2NsZWFudXA6
CisJaWYgKHN0YXR1cyA9PSBETVVCX1NUQVRVU19PSykKKwkJZG11Yi0+c3dfaW5pdCA9IHRydWU7
CisJZWxzZQorCQlkbXViX3Nydl9kZXN0cm95KGRtdWIpOworCisJcmV0dXJuIHN0YXR1czsKK30K
Kwordm9pZCBkbXViX3Nydl9kZXN0cm95KHN0cnVjdCBkbXViX3NydiAqZG11YikKK3sKKwlkbXVi
X21lbXNldChkbXViLCAwLCBzaXplb2YoKmRtdWIpKTsKK30KKworZW51bSBkbXViX3N0YXR1cwor
ZG11Yl9zcnZfY2FsY19yZWdpb25faW5mbyhzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIsCisJCQkgIGNv
bnN0IHN0cnVjdCBkbXViX3Nydl9yZWdpb25fcGFyYW1zICpwYXJhbXMsCisJCQkgIHN0cnVjdCBk
bXViX3Nydl9yZWdpb25faW5mbyAqb3V0KQoreworCXN0cnVjdCBkbXViX3JlZ2lvbiAqaW5zdCA9
ICZvdXQtPnJlZ2lvbnNbRE1VQl9XSU5ET1dfMF9JTlNUX0NPTlNUXTsKKwlzdHJ1Y3QgZG11Yl9y
ZWdpb24gKnN0YWNrID0gJm91dC0+cmVnaW9uc1tETVVCX1dJTkRPV18xX1NUQUNLXTsKKwlzdHJ1
Y3QgZG11Yl9yZWdpb24gKmRhdGEgPSAmb3V0LT5yZWdpb25zW0RNVUJfV0lORE9XXzJfQlNTX0RB
VEFdOworCXN0cnVjdCBkbXViX3JlZ2lvbiAqYmlvcyA9ICZvdXQtPnJlZ2lvbnNbRE1VQl9XSU5E
T1dfM19WQklPU107CisJc3RydWN0IGRtdWJfcmVnaW9uICptYWlsID0gJm91dC0+cmVnaW9uc1tE
TVVCX1dJTkRPV180X01BSUxCT1hdOworCXN0cnVjdCBkbXViX3JlZ2lvbiAqdHJhY2VfYnVmZiA9
ICZvdXQtPnJlZ2lvbnNbRE1VQl9XSU5ET1dfNV9UUkFDRUJVRkZdOworCisJaWYgKCFkbXViLT5z
d19pbml0KQorCQlyZXR1cm4gRE1VQl9TVEFUVVNfSU5WQUxJRDsKKworCW1lbXNldChvdXQsIDAs
IHNpemVvZigqb3V0KSk7CisKKwlvdXQtPm51bV9yZWdpb25zID0gRE1VQl9OVU1fV0lORE9XUzsK
KworCWluc3QtPmJhc2UgPSAweDA7CisJaW5zdC0+dG9wID0gaW5zdC0+YmFzZSArIHBhcmFtcy0+
aW5zdF9jb25zdF9zaXplOworCisJZGF0YS0+YmFzZSA9IGRtdWJfYWxpZ24oaW5zdC0+dG9wLCAy
NTYpOworCWRhdGEtPnRvcCA9IGRhdGEtPmJhc2UgKyBwYXJhbXMtPmJzc19kYXRhX3NpemU7CisK
KwlzdGFjay0+YmFzZSA9IGRtdWJfYWxpZ24oZGF0YS0+dG9wLCAyNTYpOworCXN0YWNrLT50b3Ag
PSBzdGFjay0+YmFzZSArIERNVUJfU1RBQ0tfU0laRSArIERNVUJfQ09OVEVYVF9TSVpFOworCisJ
Ymlvcy0+YmFzZSA9IGRtdWJfYWxpZ24oc3RhY2stPnRvcCwgMjU2KTsKKwliaW9zLT50b3AgPSBi
aW9zLT5iYXNlICsgcGFyYW1zLT52Ymlvc19zaXplOworCisJbWFpbC0+YmFzZSA9IGRtdWJfYWxp
Z24oYmlvcy0+dG9wLCAyNTYpOworCW1haWwtPnRvcCA9IG1haWwtPmJhc2UgKyBETVVCX01BSUxC
T1hfU0laRTsKKworCXRyYWNlX2J1ZmYtPmJhc2UgPSBkbXViX2FsaWduKG1haWwtPnRvcCwgMjU2
KTsKKwl0cmFjZV9idWZmLT50b3AgPSB0cmFjZV9idWZmLT5iYXNlICsgRE1VQl9UUkFDRUJVRkZf
U0laRTsKKworCW91dC0+ZmJfc2l6ZSA9IGRtdWJfYWxpZ24odHJhY2VfYnVmZi0+dG9wLCA0MDk2
KTsKKworCXJldHVybiBETVVCX1NUQVRVU19PSzsKK30KKworZW51bSBkbXViX3N0YXR1cyBkbXVi
X3Nydl9jYWxjX2ZiX2luZm8oc3RydWN0IGRtdWJfc3J2ICpkbXViLAorCQkJCSAgICAgICBjb25z
dCBzdHJ1Y3QgZG11Yl9zcnZfZmJfcGFyYW1zICpwYXJhbXMsCisJCQkJICAgICAgIHN0cnVjdCBk
bXViX3Nydl9mYl9pbmZvICpvdXQpCit7CisJdWludDhfdCAqY3B1X2Jhc2U7CisJdWludDY0X3Qg
Z3B1X2Jhc2U7CisJdWludDMyX3QgaTsKKworCWlmICghZG11Yi0+c3dfaW5pdCkKKwkJcmV0dXJu
IERNVUJfU1RBVFVTX0lOVkFMSUQ7CisKKwltZW1zZXQob3V0LCAwLCBzaXplb2YoKm91dCkpOwor
CisJaWYgKHBhcmFtcy0+cmVnaW9uX2luZm8tPm51bV9yZWdpb25zICE9IERNVUJfTlVNX1dJTkRP
V1MpCisJCXJldHVybiBETVVCX1NUQVRVU19JTlZBTElEOworCisJY3B1X2Jhc2UgPSAodWludDhf
dCAqKXBhcmFtcy0+Y3B1X2FkZHI7CisJZ3B1X2Jhc2UgPSBwYXJhbXMtPmdwdV9hZGRyOworCisJ
Zm9yIChpID0gMDsgaSA8IERNVUJfTlVNX1dJTkRPV1M7ICsraSkgeworCQljb25zdCBzdHJ1Y3Qg
ZG11Yl9yZWdpb24gKnJlZyA9CisJCQkmcGFyYW1zLT5yZWdpb25faW5mby0+cmVnaW9uc1tpXTsK
KworCQlvdXQtPmZiW2ldLmNwdV9hZGRyID0gY3B1X2Jhc2UgKyByZWctPmJhc2U7CisJCW91dC0+
ZmJbaV0uZ3B1X2FkZHIgPSBncHVfYmFzZSArIHJlZy0+YmFzZTsKKwkJb3V0LT5mYltpXS5zaXpl
ID0gcmVnLT50b3AgLSByZWctPmJhc2U7CisJfQorCisJb3V0LT5udW1fZmIgPSBETVVCX05VTV9X
SU5ET1dTOworCisJcmV0dXJuIERNVUJfU1RBVFVTX09LOworfQorCitlbnVtIGRtdWJfc3RhdHVz
IGRtdWJfc3J2X2hhc19od19zdXBwb3J0KHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCQkJIGJv
b2wgKmlzX3N1cHBvcnRlZCkKK3sKKwkqaXNfc3VwcG9ydGVkID0gZmFsc2U7CisKKwlpZiAoIWRt
dWItPnN3X2luaXQpCisJCXJldHVybiBETVVCX1NUQVRVU19JTlZBTElEOworCisJaWYgKGRtdWIt
Pmh3X2Z1bmNzLmlzX3N1cHBvcnRlZCkKKwkJKmlzX3N1cHBvcnRlZCA9IGRtdWItPmh3X2Z1bmNz
LmlzX3N1cHBvcnRlZChkbXViKTsKKworCXJldHVybiBETVVCX1NUQVRVU19PSzsKK30KKworZW51
bSBkbXViX3N0YXR1cyBkbXViX3Nydl9od19pbml0KHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJ
CQkgIGNvbnN0IHN0cnVjdCBkbXViX3Nydl9od19wYXJhbXMgKnBhcmFtcykKK3sKKwlzdHJ1Y3Qg
ZG11Yl9mYiAqaW5zdF9mYiA9IHBhcmFtcy0+ZmJbRE1VQl9XSU5ET1dfMF9JTlNUX0NPTlNUXTsK
KwlzdHJ1Y3QgZG11Yl9mYiAqc3RhY2tfZmIgPSBwYXJhbXMtPmZiW0RNVUJfV0lORE9XXzFfU1RB
Q0tdOworCXN0cnVjdCBkbXViX2ZiICpkYXRhX2ZiID0gcGFyYW1zLT5mYltETVVCX1dJTkRPV18y
X0JTU19EQVRBXTsKKwlzdHJ1Y3QgZG11Yl9mYiAqYmlvc19mYiA9IHBhcmFtcy0+ZmJbRE1VQl9X
SU5ET1dfM19WQklPU107CisJc3RydWN0IGRtdWJfZmIgKm1haWxfZmIgPSBwYXJhbXMtPmZiW0RN
VUJfV0lORE9XXzRfTUFJTEJPWF07CisJc3RydWN0IGRtdWJfZmIgKnRyYWNlYnVmZl9mYiA9IHBh
cmFtcy0+ZmJbRE1VQl9XSU5ET1dfNV9UUkFDRUJVRkZdOworCisJc3RydWN0IGRtdWJfcmJfaW5p
dF9wYXJhbXMgcmJfcGFyYW1zOworCXN0cnVjdCBkbXViX3dpbmRvdyBjdzAsIGN3MSwgY3cyLCBj
dzMsIGN3NCwgY3c1OworCXN0cnVjdCBkbXViX3JlZ2lvbiBpbmJveDE7CisKKwlpZiAoIWRtdWIt
PnN3X2luaXQpCisJCXJldHVybiBETVVCX1NUQVRVU19JTlZBTElEOworCisJZG11Yi0+ZmJfYmFz
ZSA9IHBhcmFtcy0+ZmJfYmFzZTsKKwlkbXViLT5mYl9vZmZzZXQgPSBwYXJhbXMtPmZiX29mZnNl
dDsKKwlkbXViLT5wc3BfdmVyc2lvbiA9IHBhcmFtcy0+cHNwX3ZlcnNpb247CisKKwlpZiAoaW5z
dF9mYiAmJiBkYXRhX2ZiKSB7CisJCWN3MC5vZmZzZXQucXVhZF9wYXJ0ID0gaW5zdF9mYi0+Z3B1
X2FkZHI7CisJCWN3MC5yZWdpb24uYmFzZSA9IERNVUJfQ1cwX0JBU0U7CisJCWN3MC5yZWdpb24u
dG9wID0gY3cwLnJlZ2lvbi5iYXNlICsgaW5zdF9mYi0+c2l6ZSAtIDE7CisKKwkJY3cxLm9mZnNl
dC5xdWFkX3BhcnQgPSBzdGFja19mYi0+Z3B1X2FkZHI7CisJCWN3MS5yZWdpb24uYmFzZSA9IERN
VUJfQ1cxX0JBU0U7CisJCWN3MS5yZWdpb24udG9wID0gY3cxLnJlZ2lvbi5iYXNlICsgc3RhY2tf
ZmItPnNpemUgLSAxOworCisJCWlmIChkbXViLT5od19mdW5jcy5iYWNrZG9vcl9sb2FkKQorCQkJ
ZG11Yi0+aHdfZnVuY3MuYmFja2Rvb3JfbG9hZChkbXViLCAmY3cwLCAmY3cxKTsKKwl9CisKKwlp
ZiAoZG11Yi0+aHdfZnVuY3MucmVzZXQpCisJCWRtdWItPmh3X2Z1bmNzLnJlc2V0KGRtdWIpOwor
CisJaWYgKGluc3RfZmIgJiYgZGF0YV9mYiAmJiBiaW9zX2ZiICYmIG1haWxfZmIpIHsKKwkJY3cy
Lm9mZnNldC5xdWFkX3BhcnQgPSBkYXRhX2ZiLT5ncHVfYWRkcjsKKwkJY3cyLnJlZ2lvbi5iYXNl
ID0gRE1VQl9DVzBfQkFTRSArIGluc3RfZmItPnNpemU7CisJCWN3Mi5yZWdpb24udG9wID0gY3cy
LnJlZ2lvbi5iYXNlICsgZGF0YV9mYi0+c2l6ZTsKKworCQljdzMub2Zmc2V0LnF1YWRfcGFydCA9
IGJpb3NfZmItPmdwdV9hZGRyOworCQljdzMucmVnaW9uLmJhc2UgPSBETVVCX0NXMV9CQVNFICsg
c3RhY2tfZmItPnNpemU7CisJCWN3My5yZWdpb24udG9wID0gY3czLnJlZ2lvbi5iYXNlICsgYmlv
c19mYi0+c2l6ZTsKKworCQljdzQub2Zmc2V0LnF1YWRfcGFydCA9IG1haWxfZmItPmdwdV9hZGRy
OworCQljdzQucmVnaW9uLmJhc2UgPSBjdzMucmVnaW9uLnRvcCArIDE7CisJCWN3NC5yZWdpb24u
dG9wID0gY3c0LnJlZ2lvbi5iYXNlICsgbWFpbF9mYi0+c2l6ZTsKKworCQlpbmJveDEuYmFzZSA9
IGN3NC5yZWdpb24uYmFzZTsKKwkJaW5ib3gxLnRvcCA9IGN3NC5yZWdpb24udG9wOworCisJCWN3
NS5vZmZzZXQucXVhZF9wYXJ0ID0gdHJhY2VidWZmX2ZiLT5ncHVfYWRkcjsKKwkJY3c1LnJlZ2lv
bi5iYXNlID0gRE1VQl9DVzVfQkFTRTsKKwkJY3c1LnJlZ2lvbi50b3AgPSBjdzUucmVnaW9uLmJh
c2UgKyB0cmFjZWJ1ZmZfZmItPnNpemU7CisKKwkJaWYgKGRtdWItPmh3X2Z1bmNzLnNldHVwX3dp
bmRvd3MpCisJCQlkbXViLT5od19mdW5jcy5zZXR1cF93aW5kb3dzKGRtdWIsICZjdzIsICZjdzMs
ICZjdzQsICZjdzUpOworCisJCWlmIChkbXViLT5od19mdW5jcy5zZXR1cF9tYWlsYm94KQorCQkJ
ZG11Yi0+aHdfZnVuY3Muc2V0dXBfbWFpbGJveChkbXViLCAmaW5ib3gxKTsKKwl9CisKKwlpZiAo
bWFpbF9mYikgeworCQlkbXViX21lbXNldCgmcmJfcGFyYW1zLCAwLCBzaXplb2YocmJfcGFyYW1z
KSk7CisJCXJiX3BhcmFtcy5jdHggPSBkbXViOworCQlyYl9wYXJhbXMuYmFzZV9hZGRyZXNzID0g
bWFpbF9mYi0+Y3B1X2FkZHI7CisJCXJiX3BhcmFtcy5jYXBhY2l0eSA9IERNVUJfUkJfU0laRTsK
KworCQlkbXViX3JiX2luaXQoJmRtdWItPmluYm94MV9yYiwgJnJiX3BhcmFtcyk7CisJfQorCisJ
aWYgKGRtdWItPmh3X2Z1bmNzLnJlc2V0X3JlbGVhc2UpCisJCWRtdWItPmh3X2Z1bmNzLnJlc2V0
X3JlbGVhc2UoZG11Yik7CisKKwlkbXViLT5od19pbml0ID0gdHJ1ZTsKKworCXJldHVybiBETVVC
X1NUQVRVU19PSzsKK30KKworZW51bSBkbXViX3N0YXR1cyBkbXViX3Nydl9jbWRfcXVldWUoc3Ry
dWN0IGRtdWJfc3J2ICpkbXViLAorCQkJCSAgICBjb25zdCBzdHJ1Y3QgZG11Yl9jbWRfaGVhZGVy
ICpjbWQpCit7CisJaWYgKCFkbXViLT5od19pbml0KQorCQlyZXR1cm4gRE1VQl9TVEFUVVNfSU5W
QUxJRDsKKworCWlmIChkbXViX3JiX3B1c2hfZnJvbnQoJmRtdWItPmluYm94MV9yYiwgY21kKSkK
KwkJcmV0dXJuIERNVUJfU1RBVFVTX09LOworCisJcmV0dXJuIERNVUJfU1RBVFVTX1FVRVVFX0ZV
TEw7Cit9CisKK2VudW0gZG11Yl9zdGF0dXMgZG11Yl9zcnZfY21kX2V4ZWN1dGUoc3RydWN0IGRt
dWJfc3J2ICpkbXViKQoreworCWlmICghZG11Yi0+aHdfaW5pdCkKKwkJcmV0dXJuIERNVUJfU1RB
VFVTX0lOVkFMSUQ7CisKKwlkbXViLT5od19mdW5jcy5zZXRfaW5ib3gxX3dwdHIoZG11YiwgZG11
Yi0+aW5ib3gxX3JiLndycHQpOworCXJldHVybiBETVVCX1NUQVRVU19PSzsKK30KKworZW51bSBk
bXViX3N0YXR1cyBkbXViX3Nydl9jbWRfc3VibWl0KHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJ
CQkgICAgIGNvbnN0IHN0cnVjdCBkbXViX2NtZF9oZWFkZXIgKmNtZCwKKwkJCQkgICAgIHVpbnQz
Ml90IHRpbWVvdXRfdXMpCit7CisJdWludDMyX3QgaSA9IDA7CisKKwlpZiAoIWRtdWItPmh3X2lu
aXQpCisJCXJldHVybiBETVVCX1NUQVRVU19JTlZBTElEOworCisJZm9yIChpID0gMDsgaSA8PSB0
aW1lb3V0X3VzOyArK2kpIHsKKwkJZG11Yi0+aW5ib3gxX3JiLnJwdHIgPSBkbXViLT5od19mdW5j
cy5nZXRfaW5ib3gxX3JwdHIoZG11Yik7CisJCWlmIChkbXViX3JiX3B1c2hfZnJvbnQoJmRtdWIt
PmluYm94MV9yYiwgY21kKSkgeworCQkJZG11Yi0+aHdfZnVuY3Muc2V0X2luYm94MV93cHRyKGRt
dWIsCisJCQkJCQkgICAgICAgZG11Yi0+aW5ib3gxX3JiLndycHQpOworCQkJcmV0dXJuIERNVUJf
U1RBVFVTX09LOworCQl9CisKKwkJdWRlbGF5KDEpOworCX0KKworCXJldHVybiBETVVCX1NUQVRV
U19USU1FT1VUOworfQorCitlbnVtIGRtdWJfc3RhdHVzIGRtdWJfc3J2X3dhaXRfZm9yX2F1dG9f
bG9hZChzdHJ1Y3QgZG11Yl9zcnYgKmRtdWIsCisJCQkJCSAgICAgdWludDMyX3QgdGltZW91dF91
cykKK3sKKwl1aW50MzJfdCBpOworCisJaWYgKCFkbXViLT5od19pbml0IHx8ICFkbXViLT5od19m
dW5jcy5pc19hdXRvX2xvYWRfZG9uZSkKKwkJcmV0dXJuIERNVUJfU1RBVFVTX0lOVkFMSUQ7CisK
Kwlmb3IgKGkgPSAwOyBpIDw9IHRpbWVvdXRfdXM7IGkgKz0gMTAwKSB7CisJCWlmIChkbXViLT5o
d19mdW5jcy5pc19hdXRvX2xvYWRfZG9uZShkbXViKSkKKwkJCXJldHVybiBETVVCX1NUQVRVU19P
SzsKKworCQl1ZGVsYXkoMTAwKTsKKwl9CisKKwlyZXR1cm4gRE1VQl9TVEFUVVNfVElNRU9VVDsK
K30KKworZW51bSBkbXViX3N0YXR1cyBkbXViX3Nydl93YWl0X2Zvcl9waHlfaW5pdChzdHJ1Y3Qg
ZG11Yl9zcnYgKmRtdWIsCisJCQkJCSAgICB1aW50MzJfdCB0aW1lb3V0X3VzKQoreworCXVpbnQz
Ml90IGk7CisKKwlpZiAoIWRtdWItPmh3X2luaXQgfHwgIWRtdWItPmh3X2Z1bmNzLmlzX3BoeV9p
bml0KQorCQlyZXR1cm4gRE1VQl9TVEFUVVNfSU5WQUxJRDsKKworCWZvciAoaSA9IDA7IGkgPD0g
dGltZW91dF91czsgaSArPSAxMCkgeworCQlpZiAoZG11Yi0+aHdfZnVuY3MuaXNfcGh5X2luaXQo
ZG11YikpCisJCQlyZXR1cm4gRE1VQl9TVEFUVVNfT0s7CisKKwkJdWRlbGF5KDEwKTsKKwl9CisK
KwlyZXR1cm4gRE1VQl9TVEFUVVNfVElNRU9VVDsKK30KKworZW51bSBkbXViX3N0YXR1cyBkbXVi
X3Nydl93YWl0X2Zvcl9pZGxlKHN0cnVjdCBkbXViX3NydiAqZG11YiwKKwkJCQkJdWludDMyX3Qg
dGltZW91dF91cykKK3sKKwl1aW50MzJfdCBpOworCisJaWYgKCFkbXViLT5od19pbml0KQorCQly
ZXR1cm4gRE1VQl9TVEFUVVNfSU5WQUxJRDsKKworCWZvciAoaSA9IDA7IGkgPD0gdGltZW91dF91
czsgKytpKSB7CisJCWRtdWItPmluYm94MV9yYi5ycHRyID0gZG11Yi0+aHdfZnVuY3MuZ2V0X2lu
Ym94MV9ycHRyKGRtdWIpOworCQlpZiAoZG11Yl9yYl9lbXB0eSgmZG11Yi0+aW5ib3gxX3JiKSkK
KwkJCXJldHVybiBETVVCX1NUQVRVU19PSzsKKworCQl1ZGVsYXkoMSk7CisJfQorCisJcmV0dXJu
IERNVUJfU1RBVFVTX1RJTUVPVVQ7Cit9Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vYW1kLWdmeA==
