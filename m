Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id B759FBBD03
	for <lists+amd-gfx@lfdr.de>; Mon, 23 Sep 2019 22:36:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 36DD889DB9;
	Mon, 23 Sep 2019 20:35:59 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-qk1-x744.google.com (mail-qk1-x744.google.com
 [IPv6:2607:f8b0:4864:20::744])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E4EBC89D64
 for <amd-gfx@lists.freedesktop.org>; Mon, 23 Sep 2019 20:35:55 +0000 (UTC)
Received: by mail-qk1-x744.google.com with SMTP id y144so16885660qkb.7
 for <amd-gfx@lists.freedesktop.org>; Mon, 23 Sep 2019 13:35:55 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=7G09c/ZypjSomYmxbGXmjUBOXpiR0LQbPX/bBKbUsAU=;
 b=Uogp4AXrG5Orgobu6UiFM91Kpj4+4NSbKA8l3bPRQ5pA5Sac2xAzS4dQg0uYrw/P4f
 i7tvPQPMqcvb7ymfWGLR2RY+p0gQEynCvICiswEdfXE8eD/RALO5X2AJDKcAj72eataX
 JhiUNWbVONJpX9h0RfRQ1WTTUpc93J3rf4TNp5b7vXaXKYcXSLXg6xiactsi88NieGt9
 hBjevh4IXNE79tLBdkNG75k8hrrA+eehfD8bdtLgVWb2WH+X62gL7BsI7Kdv6NrSB+/R
 fYOSZWgUuvJy8OuGDqRdxXIwoCyAD7KMk12ci2jzX/QJSzdYONeyd1/U3Wz8Gng+sk5a
 Yf9w==
X-Gm-Message-State: APjAAAUyxkDbWKBhnsfO0WahWstqPB5Q7tmLuSsZ5dtsHjpLQA4f/ism
 g6zXEjlW/NYPZMFr5a01x+taJedP
X-Google-Smtp-Source: APXvYqzuRP2GpFXDapgMSUEq814CeXRGgkW+WZwV2GaqSp7vdFABWh20Dqh8+L2eCt9QbDHukrnhlg==
X-Received: by 2002:a37:b8f:: with SMTP id 137mr1861797qkl.466.1569270954759; 
 Mon, 23 Sep 2019 13:35:54 -0700 (PDT)
Received: from localhost.localdomain ([71.219.73.178])
 by smtp.gmail.com with ESMTPSA id w34sm7762306qth.84.2019.09.23.13.35.53
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 23 Sep 2019 13:35:53 -0700 (PDT)
From: Alex Deucher <alexdeucher@gmail.com>
X-Google-Original-From: Alex Deucher <alexander.deucher@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH 2/2] drm/amdgpu/atomfirmware: simplify the interface to get
 vram info
Date: Mon, 23 Sep 2019 15:35:37 -0500
Message-Id: <20190923203537.3301-2-alexander.deucher@amd.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190923203537.3301-1-alexander.deucher@amd.com>
References: <20190923203537.3301-1-alexander.deucher@amd.com>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=7G09c/ZypjSomYmxbGXmjUBOXpiR0LQbPX/bBKbUsAU=;
 b=L3IKZ6zLacPZHE98dMJlAtjfQNLQDsFwr8b/x+eLJO4CSjFMdl134hlEH8+0/+hNcw
 PjYAzOlXIolzpe+Gcl7V5MLZTKWRO72jgNaJQg1TLiolfYr/SwNk5Gz7Y2Znb5DCbRV+
 wl61+YxawVyhSrDqyRwA3eOLf1fxihzoyff90Vt0S6OwSiTvsz7fApl6pdKmM3dgkxGk
 FVdv1rrPuuMOWZDxSi5W6TODDZj2aFbPixEsqlGp2JsFiolLIJpMKuw9m86GRDzcYOF9
 F0Hb351jlRb3L0SWww8embmpGCMluRnrkjU72YYa+iN0mar9dD6z7AL9GZNgJwuh8S9t
 PO9Q==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Alex Deucher <alexander.deucher@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

ZmV0Y2ggYm90aCB0aGUgdnJhbSB0eXBlIGFuZCB3aWR0aCBpbiBvbmUgZnVuY3Rpb24gY2FsbC4g
IFRoaXMKYXZvaWRzIGhhdmluZyB0byBwYXJzZSB0aGUgc2FtZSBkYXRhIHRhYmxlIHR3aWNlIHRv
IGdldCB0aGUgdHdvCnBpZWNlcyBvZiBkYXRhLgoKU2lnbmVkLW9mZi1ieTogQWxleCBEZXVjaGVy
IDxhbGV4YW5kZXIuZGV1Y2hlckBhbWQuY29tPgotLS0KIC4uLi9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X2F0b21maXJtd2FyZS5jICB8IDM0ICstLS0tLS0tLS0tLS0KIC4uLi9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X2F0b21maXJtd2FyZS5oICB8ICA0ICstCiBkcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9nbWNfdjEwXzAuYyAgICAgICAgfCAyMSArKystLS0tLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYyAgICAgICAgIHwgNDkgKysrKysrKysrKy0tLS0tLS0t
LQogNCBmaWxlcyBjaGFuZ2VkLCAzNyBpbnNlcnRpb25zKCspLCA3MSBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYXRvbWZpcm13YXJl
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYXRvbWZpcm13YXJlLmMKaW5k
ZXggOWZlY2NlYzJlYTVkLi4xOTkxM2MzOTU4OGIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9hdG9tZmlybXdhcmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfYXRvbWZpcm13YXJlLmMKQEAgLTE2OSw5ICsxNjksOCBAQCBzdGF0
aWMgaW50IGNvbnZlcnRfYXRvbV9tZW1fdHlwZV90b192cmFtX3R5cGUoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsCiAJcmV0dXJuIHZyYW1fdHlwZTsKIH0KIAotc3RhdGljIGludAotYW1kZ3B1
X2F0b21maXJtd2FyZV9nZXRfdnJhbV9pbmZvKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAot
CQkJCSAgaW50ICp2cmFtX3dpZHRoLCBpbnQgKnZyYW1fdHlwZSkKK2ludCBhbWRncHVfYXRvbWZp
cm13YXJlX2dldF92cmFtX2luZm8oc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCisJCQkJICAg
ICAgaW50ICp2cmFtX3dpZHRoLCBpbnQgKnZyYW1fdHlwZSkKIHsKIAlzdHJ1Y3QgYW1kZ3B1X21v
ZGVfaW5mbyAqbW9kZV9pbmZvID0gJmFkZXYtPm1vZGVfaW5mbzsKIAlpbnQgaW5kZXgsIGkgPSAw
OwpAQCAtMTg1LDcgKzE4NCw2IEBAIGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1faW5mbyhz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAl1MzIgbWVtX2NoYW5uZWxfd2lkdGg7CiAJdTMy
IG1vZHVsZV9pZDsKIAotCiAJaWYgKGFkZXYtPmZsYWdzICYgQU1EX0lTX0FQVSkKIAkJaW5kZXgg
PSBnZXRfaW5kZXhfaW50b19tYXN0ZXJfdGFibGUoYXRvbV9tYXN0ZXJfbGlzdF9vZl9kYXRhX3Rh
Ymxlc192Ml8xLAogCQkJCQkJICAgIGludGVncmF0ZWRzeXN0ZW1pbmZvKTsKQEAgLTI2MSwzNCAr
MjU5LDYgQEAgYW1kZ3B1X2F0b21maXJtd2FyZV9nZXRfdnJhbV9pbmZvKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2LAogCXJldHVybiAwOwogfQogCi0vKgotICogUmV0dXJuIHZyYW0gd2lkdGgg
ZnJvbSBpbnRlZ3JhdGVkIHN5c3RlbSBpbmZvIHRhYmxlLCBpZiBhdmFpbGFibGUsCi0gKiBvciAw
IGlmIG5vdC4KLSAqLwotaW50IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1fd2lkdGgoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCi17Ci0JaW50IHZyYW1fd2lkdGggPSAwLCB2cmFtX3R5
cGUgPSAwOwotCWludCByID0gYW1kZ3B1X2F0b21maXJtd2FyZV9nZXRfdnJhbV9pbmZvKGFkZXYs
ICZ2cmFtX3dpZHRoLCAmdnJhbV90eXBlKTsKLQlpZiAocikKLQkJcmV0dXJuIDA7Ci0KLQlyZXR1
cm4gdnJhbV93aWR0aDsKLX0KLQotLyoKLSAqIFJldHVybiB2cmFtIHR5cGUgZnJvbSBlaXRoZXIg
aW50ZWdyYXRlZCBzeXN0ZW0gaW5mbyB0YWJsZQotICogb3IgdW1jIGluZm8gdGFibGUsIGlmIGF2
YWlsYWJsZSwgb3IgMCAoVFlQRV9VTktOT1dOKSBpZiBub3QKLSAqLwotaW50IGFtZGdwdV9hdG9t
ZmlybXdhcmVfZ2V0X3ZyYW1fdHlwZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKLXsKLQlp
bnQgdnJhbV93aWR0aCA9IDAsIHZyYW1fdHlwZSA9IDA7Ci0JaW50IHIgPSBhbWRncHVfYXRvbWZp
cm13YXJlX2dldF92cmFtX2luZm8oYWRldiwgJnZyYW1fd2lkdGgsICZ2cmFtX3R5cGUpOwotCWlm
IChyKQotCQlyZXR1cm4gMDsKLQotCXJldHVybiB2cmFtX3R5cGU7Ci19Ci0KIC8qCiAgKiBSZXR1
cm4gdHJ1ZSBpZiB2YmlvcyBlbmFibGVkIGVjYyBieSBkZWZhdWx0LCBpZiB1bWMgaW5mbyB0YWJs
ZSBpcyBhdmFpbGFibGUKICAqIG9yIGZhbHNlIGlmIGVjYyBpcyBub3QgZW5hYmxlZCBvciB1bWMg
aW5mbyB0YWJsZSBpcyBub3QgYXZhaWxhYmxlCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfYXRvbWZpcm13YXJlLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfYXRvbWZpcm13YXJlLmgKaW5kZXggNWVjNmY5MmYzNTNjLi44MjgxOWYwM2U0
NDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hdG9tZmly
bXdhcmUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYXRvbWZpcm13
YXJlLmgKQEAgLTI5LDggKzI5LDggQEAKIGJvb2wgYW1kZ3B1X2F0b21maXJtd2FyZV9ncHVfc3Vw
cG9ydHNfdmlydHVhbGl6YXRpb24oc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOwogdm9pZCBh
bWRncHVfYXRvbWZpcm13YXJlX3NjcmF0Y2hfcmVnc19pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2KTsKIGludCBhbWRncHVfYXRvbWZpcm13YXJlX2FsbG9jYXRlX2ZiX3NjcmF0Y2goc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOwotaW50IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3Zy
YW1fd2lkdGgoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOwotaW50IGFtZGdwdV9hdG9tZmly
bXdhcmVfZ2V0X3ZyYW1fdHlwZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldik7CitpbnQgYW1k
Z3B1X2F0b21maXJtd2FyZV9nZXRfdnJhbV9pbmZvKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
LAorCQkJCSAgICAgIGludCAqdnJhbV93aWR0aCwgaW50ICp2cmFtX3R5cGUpOwogaW50IGFtZGdw
dV9hdG9tZmlybXdhcmVfZ2V0X2Nsb2NrX2luZm8oc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
OwogaW50IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X2dmeF9pbmZvKHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2KTsKIGJvb2wgYW1kZ3B1X2F0b21maXJtd2FyZV9tZW1fZWNjX3N1cHBvcnRlZChz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9nbWNfdjEwXzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192
MTBfMC5jCmluZGV4IDBhMTFkNzhkMWZiMi4uY2IzZjYxODczYmFhIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjEwXzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9nbWNfdjEwXzAuYwpAQCAtNTM5LDE3ICs1MzksNiBAQCBzdGF0aWMgdm9pZCBn
bWNfdjEwXzBfdnJhbV9ndHRfbG9jYXRpb24oc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAg
Ki8KIHN0YXRpYyBpbnQgZ21jX3YxMF8wX21jX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYpCiB7Ci0JaW50IGNoYW5zaXplLCBudW1jaGFuOwotCi0JaWYgKCFhbWRncHVfZW11X21vZGUp
Ci0JCWFkZXYtPmdtYy52cmFtX3dpZHRoID0gYW1kZ3B1X2F0b21maXJtd2FyZV9nZXRfdnJhbV93
aWR0aChhZGV2KTsKLQllbHNlIHsKLQkJLyogaGFyZCBjb2RlIHZyYW1fd2lkdGggZm9yIGVtdWxh
dGlvbiAqLwotCQljaGFuc2l6ZSA9IDEyODsKLQkJbnVtY2hhbiA9IDE7Ci0JCWFkZXYtPmdtYy52
cmFtX3dpZHRoID0gbnVtY2hhbiAqIGNoYW5zaXplOwotCX0KLQogCS8qIENvdWxkIGFwZXIgc2l6
ZSByZXBvcnQgMCA/ICovCiAJYWRldi0+Z21jLmFwZXJfYmFzZSA9IHBjaV9yZXNvdXJjZV9zdGFy
dChhZGV2LT5wZGV2LCAwKTsKIAlhZGV2LT5nbWMuYXBlcl9zaXplID0gcGNpX3Jlc291cmNlX2xl
bihhZGV2LT5wZGV2LCAwKTsKQEAgLTYzNSw3ICs2MjQsNyBAQCBzdGF0aWMgdW5zaWduZWQgZ21j
X3YxMF8wX2dldF92Ymlvc19mYl9zaXplKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCiBz
dGF0aWMgaW50IGdtY192MTBfMF9zd19pbml0KHZvaWQgKmhhbmRsZSkKIHsKLQlpbnQgcjsKKwlp
bnQgciwgdnJhbV93aWR0aCA9IDAsIHZyYW1fdHlwZSA9IDA7CiAJc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKiloYW5kbGU7CiAKIAlnZnhodWJfdjJf
MF9pbml0KGFkZXYpOwpAQCAtNjQzLDcgKzYzMiwxMyBAQCBzdGF0aWMgaW50IGdtY192MTBfMF9z
d19pbml0KHZvaWQgKmhhbmRsZSkKIAogCXNwaW5fbG9ja19pbml0KCZhZGV2LT5nbWMuaW52YWxp
ZGF0ZV9sb2NrKTsKIAotCWFkZXYtPmdtYy52cmFtX3R5cGUgPSBhbWRncHVfYXRvbWZpcm13YXJl
X2dldF92cmFtX3R5cGUoYWRldik7CisJciA9IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1f
aW5mbyhhZGV2LCAmdnJhbV93aWR0aCwgJnZyYW1fdHlwZSk7CisJaWYgKCFhbWRncHVfZW11X21v
ZGUpCisJCWFkZXYtPmdtYy52cmFtX3dpZHRoID0gdnJhbV93aWR0aDsKKwllbHNlCisJCWFkZXYt
PmdtYy52cmFtX3dpZHRoID0gMSAqIDEyODsgLyogbnVtY2hhbiAqIGNoYW5zaXplICovCisKKwlh
ZGV2LT5nbWMudnJhbV90eXBlID0gdnJhbV90eXBlOwogCXN3aXRjaCAoYWRldi0+YXNpY190eXBl
KSB7CiAJY2FzZSBDSElQX05BVkkxMDoKIAljYXNlIENISVBfTkFWSTE0OgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dtY192OV8wLmMKaW5kZXggNjEwMmRlYWEwM2NhLi5iNDQ1MWE1ODc0M2MgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192OV8wLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYwpAQCAtODk1LDMwICs4OTUsOCBAQCBz
dGF0aWMgdm9pZCBnbWNfdjlfMF92cmFtX2d0dF9sb2NhdGlvbihzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiwKICAqLwogc3RhdGljIGludCBnbWNfdjlfMF9tY19pbml0KHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2KQogewotCWludCBjaGFuc2l6ZSwgbnVtY2hhbjsKIAlpbnQgcjsKIAotCWlm
IChhbWRncHVfc3Jpb3ZfdmYoYWRldikpIHsKLQkJLyogRm9yIFZlZ2ExMCBTUi1JT1YsIHZyYW1f
d2lkdGggY2FuJ3QgYmUgcmVhZCBmcm9tIEFUT00gYXMgUkFWRU4sCi0JCSAqIGFuZCBERiByZWxh
dGVkIHJlZ2lzdGVycyBpcyBub3QgcmVhZGFibGUsIHNlZW1zIGhhcmRjb3JkIGlzIHRoZQotCQkg
KiBvbmx5IHdheSB0byBzZXQgdGhlIGNvcnJlY3QgdnJhbV93aWR0aAotCQkgKi8KLQkJYWRldi0+
Z21jLnZyYW1fd2lkdGggPSAyMDQ4OwotCX0gZWxzZSBpZiAoYW1kZ3B1X2VtdV9tb2RlICE9IDEp
IHsKLQkJYWRldi0+Z21jLnZyYW1fd2lkdGggPSBhbWRncHVfYXRvbWZpcm13YXJlX2dldF92cmFt
X3dpZHRoKGFkZXYpOwotCX0KLQotCWlmICghYWRldi0+Z21jLnZyYW1fd2lkdGgpIHsKLQkJLyog
aGJtIG1lbW9yeSBjaGFubmVsIHNpemUgKi8KLQkJaWYgKGFkZXYtPmZsYWdzICYgQU1EX0lTX0FQ
VSkKLQkJCWNoYW5zaXplID0gNjQ7Ci0JCWVsc2UKLQkJCWNoYW5zaXplID0gMTI4OwotCi0JCW51
bWNoYW4gPSBhZGV2LT5kZl9mdW5jcy0+Z2V0X2hibV9jaGFubmVsX251bWJlcihhZGV2KTsKLQkJ
YWRldi0+Z21jLnZyYW1fd2lkdGggPSBudW1jaGFuICogY2hhbnNpemU7Ci0JfQotCiAJLyogc2l6
ZSBpbiBNQiBvbiBzaSAqLwogCWFkZXYtPmdtYy5tY192cmFtX3NpemUgPQogCQlhZGV2LT5uYmlv
LmZ1bmNzLT5nZXRfbWVtc2l6ZShhZGV2KSAqIDEwMjRVTEwgKiAxMDI0VUxMOwpAQCAtMTAzMyw3
ICsxMDExLDcgQEAgc3RhdGljIHVuc2lnbmVkIGdtY192OV8wX2dldF92Ymlvc19mYl9zaXplKHN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCiBzdGF0aWMgaW50IGdtY192OV8wX3N3X2luaXQo
dm9pZCAqaGFuZGxlKQogewotCWludCByOworCWludCByLCB2cmFtX3dpZHRoID0gMCwgdnJhbV90
eXBlID0gMDsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IChzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqKWhhbmRsZTsKIAogCWdmeGh1Yl92MV8wX2luaXQoYWRldik7CkBAIC0xMDQ0LDcgKzEw
MjIsMzAgQEAgc3RhdGljIGludCBnbWNfdjlfMF9zd19pbml0KHZvaWQgKmhhbmRsZSkKIAogCXNw
aW5fbG9ja19pbml0KCZhZGV2LT5nbWMuaW52YWxpZGF0ZV9sb2NrKTsKIAotCWFkZXYtPmdtYy52
cmFtX3R5cGUgPSBhbWRncHVfYXRvbWZpcm13YXJlX2dldF92cmFtX3R5cGUoYWRldik7CisJciA9
IGFtZGdwdV9hdG9tZmlybXdhcmVfZ2V0X3ZyYW1faW5mbyhhZGV2LCAmdnJhbV93aWR0aCwgJnZy
YW1fdHlwZSk7CisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkKKwkJLyogRm9yIFZlZ2ExMCBT
Ui1JT1YsIHZyYW1fd2lkdGggY2FuJ3QgYmUgcmVhZCBmcm9tIEFUT00gYXMgUkFWRU4sCisJCSAq
IGFuZCBERiByZWxhdGVkIHJlZ2lzdGVycyBpcyBub3QgcmVhZGFibGUsIHNlZW1zIGhhcmRjb3Jk
IGlzIHRoZQorCQkgKiBvbmx5IHdheSB0byBzZXQgdGhlIGNvcnJlY3QgdnJhbV93aWR0aAorCQkg
Ki8KKwkJYWRldi0+Z21jLnZyYW1fd2lkdGggPSAyMDQ4OworCWVsc2UgaWYgKGFtZGdwdV9lbXVf
bW9kZSAhPSAxKQorCQlhZGV2LT5nbWMudnJhbV93aWR0aCA9IHZyYW1fd2lkdGg7CisKKwlpZiAo
IWFkZXYtPmdtYy52cmFtX3dpZHRoKSB7CisJCWludCBjaGFuc2l6ZSwgbnVtY2hhbjsKKworCQkv
KiBoYm0gbWVtb3J5IGNoYW5uZWwgc2l6ZSAqLworCQlpZiAoYWRldi0+ZmxhZ3MgJiBBTURfSVNf
QVBVKQorCQkJY2hhbnNpemUgPSA2NDsKKwkJZWxzZQorCQkJY2hhbnNpemUgPSAxMjg7CisKKwkJ
bnVtY2hhbiA9IGFkZXYtPmRmX2Z1bmNzLT5nZXRfaGJtX2NoYW5uZWxfbnVtYmVyKGFkZXYpOwor
CQlhZGV2LT5nbWMudnJhbV93aWR0aCA9IG51bWNoYW4gKiBjaGFuc2l6ZTsKKwl9CisKKwlhZGV2
LT5nbWMudnJhbV90eXBlID0gdnJhbV90eXBlOwogCXN3aXRjaCAoYWRldi0+YXNpY190eXBlKSB7
CiAJY2FzZSBDSElQX1JBVkVOOgogCQlhZGV2LT5udW1fdm1odWJzID0gMjsKLS0gCjIuMjAuMQoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KYW1kLWdmeCBt
YWlsaW5nIGxpc3QKYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4
