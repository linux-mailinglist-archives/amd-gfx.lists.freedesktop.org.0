Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 297DD4907D
	for <lists+amd-gfx@lfdr.de>; Mon, 17 Jun 2019 21:50:53 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4C3806E082;
	Mon, 17 Jun 2019 19:50:51 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-qt1-x844.google.com (mail-qt1-x844.google.com
 [IPv6:2607:f8b0:4864:20::844])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D9AFC6E073
 for <amd-gfx@lists.freedesktop.org>; Mon, 17 Jun 2019 19:50:48 +0000 (UTC)
Received: by mail-qt1-x844.google.com with SMTP id w17so5909522qto.10
 for <amd-gfx@lists.freedesktop.org>; Mon, 17 Jun 2019 12:50:48 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=1F/Uyjl7wUA5i/NzdMcKGWjXfOpGFeIZ/yKIV2ReD/I=;
 b=rPc2aloxLsQGHc37rygy9gLTRR/l00UCUzO9u03dgH109e6d+jTmPlvkXz9oGQ2bZl
 RA50b4pihwHv5qeZSqEu+dpNNU4IAnLgNI0r5nDl64lHZZra5b1hWDhIsW0pwqKyET+Y
 yN5sej+aSH7tXK+0y1kt39Ds0a5nXtNEUGazbqj7ONG0Z0UXd9XbY6tD3TjmXkqLqpxY
 OKMAgqPTxydNtmtEL3MIYpKAvbuIww4OyMguiBhs+WIRYhYIg+2ybYACu11a8E9J/tHd
 A7c7W9RNPwsFv0VyupzHeQuShnVlck3mnOaNJw/aEU/UXpq15h5FmA3T7fAh7knr8E+V
 YSAg==
X-Gm-Message-State: APjAAAWOyMMn6BG9TofSGHfSUttLTU8dLPu/2Oia4lfm9VCJQwgq+Q9f
 XXfsb5tqXDn+cCl8t6IlRQCQd3iKVGABfQ==
X-Google-Smtp-Source: APXvYqxVjlX2HP2NiyeOUm2Lb0kcaxRNnRldpxL2syiqITa0Bjbz4m5JdzCt291a2dxorK2Q5w80jg==
X-Received: by 2002:ac8:124c:: with SMTP id g12mr64865422qtj.57.1560801046911; 
 Mon, 17 Jun 2019 12:50:46 -0700 (PDT)
Received: from localhost.localdomain ([71.219.5.136])
 by smtp.gmail.com with ESMTPSA id a51sm7520252qta.85.2019.06.17.12.50.45
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Mon, 17 Jun 2019 12:50:46 -0700 (PDT)
From: Alex Deucher <alexdeucher@gmail.com>
X-Google-Original-From: Alex Deucher <alexander.deucher@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH 450/459] drm/amd/display: Rework CRTC color management
Date: Mon, 17 Jun 2019 14:49:39 -0500
Message-Id: <20190617194948.18667-51-alexander.deucher@amd.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190617194948.18667-1-alexander.deucher@amd.com>
References: <20190617194948.18667-1-alexander.deucher@amd.com>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=1F/Uyjl7wUA5i/NzdMcKGWjXfOpGFeIZ/yKIV2ReD/I=;
 b=rwdnVMd44OIe4goyqsdTIfle65E+ESACeJX63yBZGeBi5hoQvflmrOonJIxKgMZ+v3
 E61MGje/sDxVTtpzEN++A47UoAl/FjW3Zp6dEAXJ0ibHiFLPAskQ5NLVDIrPXaYxB4DK
 Iilc+y+X10cz7Z9lbxoEMqDTSeA5ivi6Gx0evcer1OkcyZX21H+XcXoA3uRQox6ZvWDc
 I705b0WLOK1WUuD6UszNfosbxrhVE8kJIRmul04VVbiXYyEJiTBZ77f/n+GmBgR9Tu1z
 gGOZ7EoY5EU/SOzFV9ZWirbQDhoQR7uJm2jDjrXYiAo2+KBOTX3War3jFBxPIdgTob1y
 5YwQ==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Sun peng Li <Sunpeng.Li@amd.com>, Alex Deucher <alexander.deucher@amd.com>,
 Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>,
 Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RnJvbTogTmljaG9sYXMgS2F6bGF1c2thcyA8bmljaG9sYXMua2F6bGF1c2thc0BhbWQuY29tPgoK
W1doeV0KVG8gcHJlcGFyZSBmb3IgdGhlIHVwY29taW5nIERSTSBwbGFuZSBjb2xvciBtYW5hZ2Vt
ZW50IHByb3BlcnRpZXMKd2UgbmVlZCB0byBjb3JyZWN0IGEgbG90IG9mIHdyb25nIGJlaGF2aW9y
IGFuZCBhc3N1bXB0aW9ucyBtYWRlIGZvcgpDUlRDIGNvbG9yIG1hbmFnZW1lbnQuCgpUaGUgZG9j
dW1lbnRhdGlvbiBhZGRlZCBieSB0aGlzIGNvbW1pdCBpbiBhbWRncHVfZG1fY29sb3IgZXhwbGFp
bnMKaG93IHRoZSBIVyBjb2xvciBwaXBlbGluZSB3b3JrcyBhbmQgaXRzIGxpbWl0YXRpb25zIHdp
dGggdGhlIERSTQppbnRlcmZhY2UuCgpUaGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiBkb2VzIHRo
ZSBmb2xsb3dpbmcgd3Jvbmc6Ci0gSW1wbGljaXQgc1JHQiBER00gd2hlbiBubyBDUlRDIERHTSBp
cyBzZXQKLSBJbXBsaWNpdCBzUkdCIFJHTSB3aGVuIG5vIENSVEMgUkdNIGlzIHNldAotIE5vIHdh
eSB0byBzcGVjaWZ5IGEgbm9uLWxpbmVhciBER00gbWF0cml4IHRoYXQgcHJvZHVjZXMgY29ycmVj
dCBvdXRwdXQKLSBObyB3YXkgdG8gc3BlY2lmeSBhIGNvcnJlY3QgUkdNIHdoZW4gYSBsaW5lYXIg
REdNIGlzIHVzZWQKCldlIGhhZCB3b3JrYXJvdW5kcyBmb3IgcGFzc2luZyBrbXNfY29sb3IgdGVz
dHMgYnV0IG5vdCBhbGwgb2YgdGhlCmJlaGF2aW9yIHdlIGhhZCB3cm9uZyB3YXMgY292ZXJlZCBi
eSB0aGVzZSB0ZXN0cyAoZXNwZWNpYWxseSB3aGVuCml0IGNvbWVzIHRvIG5vbi1saW5lYXIgREdN
KS4gVGVzdGluZyBib3RoIERHTSBhbmQgUkdNIGF0IHRoZSBzYW1lIHRpbWUKaXNuJ3Qgc29tZXRo
aW5nIGttc19jb2xvciB0ZXN0cyB3ZWxsIGVpdGhlci4KCltIb3ddClRoZSBzcGVjaWZpY3MgZm9y
IGhvdyBjb2xvciBtYW5hZ2VtZW50IHdvcmtzIGluIEFNREdQVSBhbmQgdGhlIG5ldwpiZWhhdmlv
ciBjYW4gYmUgZm91bmQgYnkgcmVhZGluZyB0aGUgZG9jdW1lbnRhdGlvbiBhZGRlZCB0bwphbWRn
cHVfZG1fY29sb3IuYyBmcm9tIHRoaXMgcGF0Y2guCgpBbGwgb2YgdGhlIGluY29ycmVjdCBjYXNl
cyBmcm9tIHRoZSBvbGQgaW1wbGVtZW50YXRpb24gaGF2ZSBiZWVuCmFkZHJlc3NlZCBmb3IgdGhl
IGF0b21pYyBpbnRlcmZhY2UsIGJ1dCB0aGVyZSBzdGlsbCBhIGZldyBUT0RPcyBmb3IKdGhlIGxl
Z2FjeSBvbmUuCgpOb3RlOiB0aGlzIGRvZXMgY2F1c2UgcmVncmVzc2lvbnMgZm9yIGttc19jb2xv
ckBwaXBlLWEtY3RtLSogb3ZlciBIRE1JLgoKVGhlIHJlc3VsdCBsb29rcyBjb3JyZWN0IGZyb20g
dmlzdWFsIGluc3BlY3Rpb24gYnV0IHRoZSBDUkMgbm8gbG9uZ2VyCm1hdGNoZXMuIEZvciByZWZl
cmVuY2UsIHRoZSB0ZXN0IHdhcyBwcmV2aW91c2x5IGRvaW5nIHRoZSBmb2xsb3dpbmc6CgpsaW5l
YXIgZGVnYW1tYSAtPiBDVE0gLT4gc1JHQiByZWdhbW1hIC0+IFJHQiB0byBZVVYgKDcwOSkgLT4g
Li4uCgpOb3cgdGhlIHRlc3QgaXMgZG9pbmc6CgpsaW5lYXIgZGVnYW1tYSAtPiBDVE0gLT4gbGlu
ZWFyIHJlZ2FtbWEgLT4gUkdCIHRvIFlVViAoNzA5KSAtPiAuLi4KClNpZ25lZC1vZmYtYnk6IE5p
Y2hvbGFzIEthemxhdXNrYXMgPG5pY2hvbGFzLmthemxhdXNrYXNAYW1kLmNvbT4KUmV2aWV3ZWQt
Ynk6IFN1biBwZW5nIExpIDxTdW5wZW5nLkxpQGFtZC5jb20+CkFja2VkLWJ5OiBCaGF3YW5wcmVl
dCBMYWtoYSA8Qmhhd2FucHJlZXQuTGFraGFAYW1kLmNvbT4KU2lnbmVkLW9mZi1ieTogQWxleCBE
ZXVjaGVyIDxhbGV4YW5kZXIuZGV1Y2hlckBhbWQuY29tPgotLS0KIC4uLi9ncHUvZHJtL2FtZC9k
aXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYyB8ICAzMiArLQogLi4uL2dwdS9kcm0vYW1kL2Rp
c3BsYXkvYW1kZ3B1X2RtL2FtZGdwdV9kbS5oIHwgIDEwICstCiAuLi4vYW1kL2Rpc3BsYXkvYW1k
Z3B1X2RtL2FtZGdwdV9kbV9jb2xvci5jICAgfCA0NzMgKysrKysrKysrKysrLS0tLS0tCiAzIGZp
bGVzIGNoYW5nZWQsIDM1NiBpbnNlcnRpb25zKCspLCAxNTkgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMKaW5kZXgg
MGJlNjM2M2M2NmU0Li5lOGYyZTA4MDRiZGIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYwpAQCAtMjk1MSw2ICsyOTUxLDcgQEAgc3Rh
dGljIGludCBmaWxsX2RjX3BsYW5lX2F0dHJpYnV0ZXMoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYsCiAJCQkJICAgIHN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLAogCQkJCSAg
ICBzdHJ1Y3QgZHJtX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CisJc3RydWN0IGRtX2NydGNf
c3RhdGUgKmRtX2NydGNfc3RhdGUgPSB0b19kbV9jcnRjX3N0YXRlKGNydGNfc3RhdGUpOwogCWNv
bnN0IHN0cnVjdCBhbWRncHVfZnJhbWVidWZmZXIgKmFtZGdwdV9mYiA9CiAJCXRvX2FtZGdwdV9m
cmFtZWJ1ZmZlcihwbGFuZV9zdGF0ZS0+ZmIpOwogCXN0cnVjdCBkY19zY2FsaW5nX2luZm8gc2Nh
bGluZ19pbmZvOwpAQCAtMjk5NSwxMyArMjk5NiwxMSBAQCBzdGF0aWMgaW50IGZpbGxfZGNfcGxh
bmVfYXR0cmlidXRlcyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkgKiBBbHdheXMgc2V0
IGlucHV0IHRyYW5zZmVyIGZ1bmN0aW9uLCBzaW5jZSBwbGFuZSBzdGF0ZSBpcyByZWZyZXNoZWQK
IAkgKiBldmVyeSB0aW1lLgogCSAqLwotCXJldCA9IGFtZGdwdV9kbV9zZXRfZGVnYW1tYV9sdXQo
Y3J0Y19zdGF0ZSwgZGNfcGxhbmVfc3RhdGUpOwotCWlmIChyZXQpIHsKLQkJZGNfdHJhbnNmZXJf
ZnVuY19yZWxlYXNlKGRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jKTsKLQkJZGNfcGxh
bmVfc3RhdGUtPmluX3RyYW5zZmVyX2Z1bmMgPSBOVUxMOwotCX0KKwlyZXQgPSBhbWRncHVfZG1f
dXBkYXRlX3BsYW5lX2NvbG9yX21nbXQoZG1fY3J0Y19zdGF0ZSwgZGNfcGxhbmVfc3RhdGUpOwor
CWlmIChyZXQpCisJCXJldHVybiByZXQ7CiAKLQlyZXR1cm4gcmV0OworCXJldHVybiAwOwogfQog
CiBzdGF0aWMgdm9pZCB1cGRhdGVfc3RyZWFtX3NjYWxpbmdfc2V0dGluZ3MoY29uc3Qgc3RydWN0
IGRybV9kaXNwbGF5X21vZGUgKm1vZGUsCkBAIC0zNTkwLDYgKzM1ODksOCBAQCBkbV9jcnRjX2R1
cGxpY2F0ZV9zdGF0ZShzdHJ1Y3QgZHJtX2NydGMgKmNydGMpCiAJc3RhdGUtPnZycl9zdXBwb3J0
ZWQgPSBjdXItPnZycl9zdXBwb3J0ZWQ7CiAJc3RhdGUtPmZyZWVzeW5jX2NvbmZpZyA9IGN1ci0+
ZnJlZXN5bmNfY29uZmlnOwogCXN0YXRlLT5jcmNfZW5hYmxlZCA9IGN1ci0+Y3JjX2VuYWJsZWQ7
CisJc3RhdGUtPmNtX2hhc19kZWdhbW1hID0gY3VyLT5jbV9oYXNfZGVnYW1tYTsKKwlzdGF0ZS0+
Y21faXNfZGVnYW1tYV9zcmdiID0gY3VyLT5jbV9pc19kZWdhbW1hX3NyZ2I7CiAKIAkvKiBUT0RP
IER1cGxpY2F0ZSBkY19zdHJlYW0gYWZ0ZXIgb2JqZWN0cyBhcmUgc3RyZWFtIG9iamVjdCBpcyBm
bGF0dGVuZWQgKi8KIApAQCAtNTYzNyw4ICs1NjM4LDE4IEBAIHN0YXRpYyB2b2lkIGFtZGdwdV9k
bV9jb21taXRfcGxhbmVzKHN0cnVjdCBkcm1fYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJCWJ1bmRs
ZS0+c3RyZWFtX3VwZGF0ZS5kc3QgPSBhY3J0Y19zdGF0ZS0+c3RyZWFtLT5kc3Q7CiAJCX0KIAot
CQlpZiAobmV3X3BjcnRjX3N0YXRlLT5jb2xvcl9tZ210X2NoYW5nZWQpCi0JCQlidW5kbGUtPnN0
cmVhbV91cGRhdGUub3V0X3RyYW5zZmVyX2Z1bmMgPSBhY3J0Y19zdGF0ZS0+c3RyZWFtLT5vdXRf
dHJhbnNmZXJfZnVuYzsKKwkJaWYgKG5ld19wY3J0Y19zdGF0ZS0+Y29sb3JfbWdtdF9jaGFuZ2Vk
KSB7CisJCQkvKgorCQkJICogVE9ETzogVGhpcyBpc24ndCBmdWxseSBjb3JyZWN0IHNpbmNlIHdl
J3ZlIGFjdHVhbGx5CisJCQkgKiBhbHJlYWR5IG1vZGlmaWVkIHRoZSBzdHJlYW0gaW4gcGxhY2Uu
CisJCQkgKi8KKwkJCWJ1bmRsZS0+c3RyZWFtX3VwZGF0ZS5nYW11dF9yZW1hcCA9CisJCQkJJmFj
cnRjX3N0YXRlLT5zdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeDsKKwkJCWJ1bmRsZS0+c3RyZWFt
X3VwZGF0ZS5vdXRwdXRfY3NjX3RyYW5zZm9ybSA9CisJCQkJJmFjcnRjX3N0YXRlLT5zdHJlYW0t
PmNzY19jb2xvcl9tYXRyaXg7CisJCQlidW5kbGUtPnN0cmVhbV91cGRhdGUub3V0X3RyYW5zZmVy
X2Z1bmMgPQorCQkJCWFjcnRjX3N0YXRlLT5zdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jOworCQl9
CiAKIAkJYWNydGNfc3RhdGUtPnN0cmVhbS0+YWJtX2xldmVsID0gYWNydGNfc3RhdGUtPmFibV9s
ZXZlbDsKIAkJaWYgKGFjcnRjX3N0YXRlLT5hYm1fbGV2ZWwgIT0gZG1fb2xkX2NydGNfc3RhdGUt
PmFibV9sZXZlbCkKQEAgLTY0NjgsMTAgKzY0NzksOSBAQCBzdGF0aWMgaW50IGRtX3VwZGF0ZV9j
cnRjX3N0YXRlKHN0cnVjdCBhbWRncHVfZGlzcGxheV9tYW5hZ2VyICpkbSwKIAkgKi8KIAlpZiAo
ZG1fbmV3X2NydGNfc3RhdGUtPmJhc2UuY29sb3JfbWdtdF9jaGFuZ2VkIHx8CiAJICAgIGRybV9h
dG9taWNfY3J0Y19uZWVkc19tb2Rlc2V0KG5ld19jcnRjX3N0YXRlKSkgewotCQlyZXQgPSBhbWRn
cHVfZG1fc2V0X3JlZ2FtbWFfbHV0KGRtX25ld19jcnRjX3N0YXRlKTsKKwkJcmV0ID0gYW1kZ3B1
X2RtX3VwZGF0ZV9jcnRjX2NvbG9yX21nbXQoZG1fbmV3X2NydGNfc3RhdGUpOwogCQlpZiAocmV0
KQogCQkJZ290byBmYWlsOwotCQlhbWRncHVfZG1fc2V0X2N0bShkbV9uZXdfY3J0Y19zdGF0ZSk7
CiAJfQogCiAJLyogVXBkYXRlIEZyZWVzeW5jIHNldHRpbmdzLiAqLwpAQCAtNjc2Niw2ICs2Nzc2
LDggQEAgZG1fZGV0ZXJtaW5lX3VwZGF0ZV90eXBlX2Zvcl9jb21taXQoc3RydWN0IGFtZGdwdV9k
aXNwbGF5X21hbmFnZXIgKmRtLAogCQkJCQkJbmV3X2RtX3BsYW5lX3N0YXRlLT5kY19zdGF0ZS0+
aW5fdHJhbnNmZXJfZnVuYzsKIAkJCQlzdHJlYW1fdXBkYXRlLmdhbXV0X3JlbWFwID0KIAkJCQkJ
CSZuZXdfZG1fY3J0Y19zdGF0ZS0+c3RyZWFtLT5nYW11dF9yZW1hcF9tYXRyaXg7CisJCQkJc3Ry
ZWFtX3VwZGF0ZS5vdXRwdXRfY3NjX3RyYW5zZm9ybSA9CisJCQkJCQkmbmV3X2RtX2NydGNfc3Rh
dGUtPnN0cmVhbS0+Y3NjX2NvbG9yX21hdHJpeDsKIAkJCQlzdHJlYW1fdXBkYXRlLm91dF90cmFu
c2Zlcl9mdW5jID0KIAkJCQkJCW5ld19kbV9jcnRjX3N0YXRlLT5zdHJlYW0tPm91dF90cmFuc2Zl
cl9mdW5jOwogCQkJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2Ft
ZGdwdV9kbS9hbWRncHVfZG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVf
ZG0vYW1kZ3B1X2RtLmgKaW5kZXggMmFiNzJiZGRiN2IxLi4xZDQ5OGU2ZGMxZmUgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmgKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uaApAQCAt
Mjc4LDYgKzI3OCw5IEBAIHN0cnVjdCBkbV9jcnRjX3N0YXRlIHsKIAlzdHJ1Y3QgZHJtX2NydGNf
c3RhdGUgYmFzZTsKIAlzdHJ1Y3QgZGNfc3RyZWFtX3N0YXRlICpzdHJlYW07CiAKKwlib29sIGNt
X2hhc19kZWdhbW1hOworCWJvb2wgY21faXNfZGVnYW1tYV9zcmdiOworCiAJaW50IGFjdGl2ZV9w
bGFuZXM7CiAJYm9vbCBpbnRlcnJ1cHRzX2VuYWJsZWQ7CiAKQEAgLTM2OCwxMCArMzcxLDkgQEAg
dm9pZCBhbWRncHVfZG1fY3J0Y19oYW5kbGVfY3JjX2lycShzdHJ1Y3QgZHJtX2NydGMgKmNydGMp
OwogI2RlZmluZSBNQVhfQ09MT1JfTEVHQUNZX0xVVF9FTlRSSUVTIDI1NgogCiB2b2lkIGFtZGdw
dV9kbV9pbml0X2NvbG9yX21vZCh2b2lkKTsKLWludCBhbWRncHVfZG1fc2V0X2RlZ2FtbWFfbHV0
KHN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJCSAgICAgIHN0cnVjdCBkY19w
bGFuZV9zdGF0ZSAqZGNfcGxhbmVfc3RhdGUpOwotdm9pZCBhbWRncHVfZG1fc2V0X2N0bShzdHJ1
Y3QgZG1fY3J0Y19zdGF0ZSAqY3J0Yyk7Ci1pbnQgYW1kZ3B1X2RtX3NldF9yZWdhbW1hX2x1dChz
dHJ1Y3QgZG1fY3J0Y19zdGF0ZSAqY3J0Yyk7CitpbnQgYW1kZ3B1X2RtX3VwZGF0ZV9jcnRjX2Nv
bG9yX21nbXQoc3RydWN0IGRtX2NydGNfc3RhdGUgKmNydGMpOworaW50IGFtZGdwdV9kbV91cGRh
dGVfcGxhbmVfY29sb3JfbWdtdChzdHJ1Y3QgZG1fY3J0Y19zdGF0ZSAqY3J0YywKKwkJCQkgICAg
ICBzdHJ1Y3QgZGNfcGxhbmVfc3RhdGUgKmRjX3BsYW5lX3N0YXRlKTsKIAogZXh0ZXJuIGNvbnN0
IHN0cnVjdCBkcm1fZW5jb2Rlcl9oZWxwZXJfZnVuY3MgYW1kZ3B1X2RtX2VuY29kZXJfaGVscGVy
X2Z1bmNzOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1
X2RtL2FtZGdwdV9kbV9jb2xvci5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdw
dV9kbS9hbWRncHVfZG1fY29sb3IuYwppbmRleCA3NWI2YTJhYzkxMGIuLmI0M2JiN2Y5MGU0ZSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVf
ZG1fY29sb3IuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2Ft
ZGdwdV9kbV9jb2xvci5jCkBAIC0yNyw2ICsyNyw0NyBAQAogI2luY2x1ZGUgImFtZGdwdV9kbS5o
IgogI2luY2x1ZGUgImRjLmgiCiAjaW5jbHVkZSAibW9kdWxlcy9jb2xvci9jb2xvcl9nYW1tYS5o
IgorI2luY2x1ZGUgImJhc2ljcy9jb252ZXJzaW9uLmgiCisKKy8qCisgKiBUaGUgREMgaW50ZXJm
YWNlIHRvIEhXIGdpdmVzIHVzIHRoZSBmb2xsb3dpbmcgY29sb3IgbWFuYWdlbWVudCBibG9ja3MK
KyAqIHBlciBwaXBlIChzdXJmYWNlKToKKyAqCisgKiAtIElucHV0IGdhbW1hIExVVCAoZGUtbm9y
bWFsaXplZCkKKyAqIC0gSW5wdXQgQ1NDIChub3JtYWxpemVkKQorICogLSBTdXJmYWNlIGRlZ2Ft
bWEgTFVUIChub3JtYWxpemVkKQorICogLSBTdXJmYWNlIENTQyAobm9ybWFsaXplZCkKKyAqIC0g
U3VyZmFjZSByZWdhbW1hIExVVCAobm9ybWFsaXplZCkKKyAqIC0gT3V0cHV0IENTQyAobm9ybWFs
aXplZCkKKyAqCisgKiBCdXQgdGhlc2UgYXJlbid0IGEgZGlyZWN0IG1hcHBpbmcgdG8gRFJNIGNv
bG9yIHByb3BlcnRpZXMuIFRoZSBjdXJyZW50IERSTQorICogaW50ZXJmYWNlIGV4cG9zZXMgQ1JU
QyBkZWdhbW1hLCBDUlRDIENUTSBhbmQgQ1JUQyByZWdhbW1hIHdoaWxlIG91ciBoYXJkd2FyZQor
ICogaXMgZXNzZW50aWFsbHkgZ2l2aW5nOgorICoKKyAqIFBsYW5lIENUTSAtPiBQbGFuZSBkZWdh
bW1hIC0+IFBsYW5lIENUTSAtPiBQbGFuZSByZWdhbW1hIC0+IFBsYW5lIENUTQorICoKKyAqIFRo
ZSBpbnB1dCBnYW1tYSBMVVQgYmxvY2sgaXNuJ3QgcmVhbGx5IGFwcGxpY2FibGUgaGVyZSBzaW5j
ZSBpdCBvcGVyYXRlcworICogb24gdGhlIGFjdHVhbCBpbnB1dCBkYXRhIGl0c2VsZiByYXRoZXIg
dGhhbiB0aGUgSFcgZnAgcmVwcmVzZW50YXRpb24uIFRoZQorICogaW5wdXQgYW5kIG91dHB1dCBD
U0MgYmxvY2tzIGFyZSB0ZWNobmljYWxseSBhdmFpbGFibGUgdG8gdXNlIGFzIHBhcnQgb2YKKyAq
IHRoZSBEQyBpbnRlcmZhY2UgYnV0IGFyZSB0eXBpY2FsbHkgdXNlZCBpbnRlcm5hbGx5IGJ5IERD
IGZvciBjb252ZXJzaW9ucworICogYmV0d2VlbiBjb2xvciBzcGFjZXMuIFRoZXNlIGNvdWxkIGJl
IGJsZW5kZWQgdG9nZXRoZXIgd2l0aCB1c2VyCisgKiBhZGp1c3RtZW50cyBpbiB0aGUgZnV0dXJl
IGJ1dCBmb3Igbm93IHRoZXNlIHNob3VsZCByZW1haW4gdW50b3VjaGVkLgorICoKKyAqIFRoZSBw
aXBlIGJsZW5kaW5nIGFsc28gaGFwcGVucyBhZnRlciB0aGVzZSBibG9ja3Mgc28gd2UgZG9uJ3Qg
YWN0dWFsbHkKKyAqIHN1cHBvcnQgYW55IENSVEMgcHJvcHMgd2l0aCBjb3JyZWN0IGJsZW5kaW5n
IHdpdGggbXVsdGlwbGUgcGxhbmVzIC0gYnV0IHdlCisgKiBjYW4gc3RpbGwgc3VwcG9ydCBDUlRD
IGNvbG9yIG1hbmFnZW1lbnQgcHJvcGVydGllcyBpbiBETSBpbiBtb3N0IHNpbmdsZQorICogcGxh
bmUgY2FzZXMgY29ycmVjdGx5IHdpdGggY2xldmVyIG1hbmFnZW1lbnQgb2YgdGhlIERDIGludGVy
ZmFjZSBpbiBETS4KKyAqCisgKiBBcyBwZXIgRFJNIGRvY3VtZW50YXRpb24sIGJsb2NrcyBzaG91
bGQgYmUgaW4gaGFyZHdhcmUgYnlwYXNzIHdoZW4gdGhlaXIKKyAqIHJlc3BlY3RpdmUgcHJvcGVy
dHkgaXMgc2V0IHRvIE5VTEwuIEEgbGluZWFyIERHTS9SR00gTFVUIHNob3VsZCBhbHNvCisgKiBj
b25zaWRlcmVkIGFzIHB1dHRpbmcgdGhlIHJlc3BlY3RpdmUgYmxvY2sgaW50byBieXBhc3MgbW9k
ZS4KKyAqCisgKiBUaGlzIG1lYW5zIHRoYXQgdGhlIGZvbGxvd2luZworICogY29uZmlndXJhdGlv
biBpcyBhc3N1bWVkIHRvIGJlIHRoZSBkZWZhdWx0OgorICoKKyAqIFBsYW5lIERHTSBCeXBhc3Mg
LT4gUGxhbmUgQ1RNIEJ5cGFzcyAtPiBQbGFuZSBSR00gQnlwYXNzIC0+IC4uLgorICogQ1JUQyBE
R00gQnlwYXNzIC0+IENSVEMgQ1RNIEJ5cGFzcyAtPiBDUlRDIFJHTSBCeXBhc3MKKyAqLwogCiAj
ZGVmaW5lIE1BWF9EUk1fTFVUX1ZBTFVFIDB4RkZGRgogCkBAIC00MSw2ICs4MiwxMyBAQCB2b2lk
IGFtZGdwdV9kbV9pbml0X2NvbG9yX21vZCh2b2lkKQogCXNldHVwX3hfcG9pbnRzX2Rpc3RyaWJ1
dGlvbigpOwogfQogCisvKiBFeHRyYWN0cyB0aGUgRFJNIGx1dCBhbmQgbHV0IHNpemUgZnJvbSBh
IGJsb2IuICovCitzdGF0aWMgY29uc3Qgc3RydWN0IGRybV9jb2xvcl9sdXQgKgorX19leHRyYWN0
X2Jsb2JfbHV0KGNvbnN0IHN0cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAqYmxvYiwgdWludDMyX3Qg
KnNpemUpCit7CisJKnNpemUgPSBibG9iID8gZHJtX2NvbG9yX2x1dF9zaXplKGJsb2IpIDogMDsK
KwlyZXR1cm4gYmxvYiA/IChzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqKWJsb2ItPmRhdGEgOiBOVUxM
OworfQogCiAvKgogICogUmV0dXJuIHRydWUgaWYgdGhlIGdpdmVuIGx1dCBpcyBhIGxpbmVhciBt
YXBwaW5nIG9mIHZhbHVlcywgaS5lLiBpdCBhY3RzCkBAIC01MCw3ICs5OCw3IEBAIHZvaWQgYW1k
Z3B1X2RtX2luaXRfY29sb3JfbW9kKHZvaWQpCiAgKiBmKGEpID0gKDB4RkYwMC9NQVhfQ09MT1Jf
TFVUX0VOVFJJRVMtMSlhOyBmb3IgaW50ZWdlciBhIGluCiAgKiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBbMCwgTUFYX0NPTE9SX0xVVF9FTlRSSUVTKQogICovCi1z
dGF0aWMgYm9vbCBfX2lzX2x1dF9saW5lYXIoc3RydWN0IGRybV9jb2xvcl9sdXQgKmx1dCwgdWlu
dDMyX3Qgc2l6ZSkKK3N0YXRpYyBib29sIF9faXNfbHV0X2xpbmVhcihjb25zdCBzdHJ1Y3QgZHJt
X2NvbG9yX2x1dCAqbHV0LCB1aW50MzJfdCBzaXplKQogewogCWludCBpOwogCXVpbnQzMl90IGV4
cGVjdGVkOwpAQCAtNzUsOSArMTIzLDggQEAgc3RhdGljIGJvb2wgX19pc19sdXRfbGluZWFyKHN0
cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQsIHVpbnQzMl90IHNpemUpCiAgKiBDb252ZXJ0IHRoZSBk
cm1fY29sb3JfbHV0IHRvIGRjX2dhbW1hLiBUaGUgY29udmVyc2lvbiBkZXBlbmRzIG9uIHRoZSBz
aXplCiAgKiBvZiB0aGUgbHV0IC0gd2hldGhlciBvciBub3QgaXQncyBsZWdhY3kuCiAgKi8KLXN0
YXRpYyB2b2lkIF9fZHJtX2x1dF90b19kY19nYW1tYShzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0
LAotCQkJCSAgc3RydWN0IGRjX2dhbW1hICpnYW1tYSwKLQkJCQkgIGJvb2wgaXNfbGVnYWN5KQor
c3RhdGljIHZvaWQgX19kcm1fbHV0X3RvX2RjX2dhbW1hKGNvbnN0IHN0cnVjdCBkcm1fY29sb3Jf
bHV0ICpsdXQsCisJCQkJICBzdHJ1Y3QgZGNfZ2FtbWEgKmdhbW1hLCBib29sIGlzX2xlZ2FjeSkK
IHsKIAl1aW50MzJfdCByLCBnLCBiOwogCWludCBpOwpAQCAtMTA3LDEwMyArMTU0LDE2IEBAIHN0
YXRpYyB2b2lkIF9fZHJtX2x1dF90b19kY19nYW1tYShzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0
LAogCX0KIH0KIAotLyoqCi0gKiBhbWRncHVfZG1fc2V0X3JlZ2FtbWFfbHV0OiBTZXQgcmVnYW1t
YSBsdXQgZm9yIHRoZSBnaXZlbiBDUlRDLgotICogQGNydGM6IGFtZGdwdV9kbSBjcnRjIHN0YXRl
Ci0gKgotICogVXBkYXRlIHRoZSB1bmRlcmx5aW5nIGRjX3N0cmVhbV9zdGF0ZSdzIG91dHB1dCB0
cmFuc2ZlciBmdW5jdGlvbiAoT1RGKSBpbgotICogcHJlcGFyYXRpb24gZm9yIGhhcmR3YXJlIGNv
bW1pdC4gSWYgbm8gbHV0IGlzIHNwZWNpZmllZCBieSB1c2VyLCB3ZSBkZWZhdWx0Ci0gKiB0byBT
UkdCLgotICoKLSAqIFJFVFVSTlM6Ci0gKiAwIG9uIHN1Y2Nlc3MsIC1FTk9NRU0gaWYgbWVtb3J5
IGNhbm5vdCBiZSBhbGxvY2F0ZWQgdG8gY2FsY3VsYXRlIHRoZSBPVEYuCi0gKi8KLWludCBhbWRn
cHVfZG1fc2V0X3JlZ2FtbWFfbHV0KHN0cnVjdCBkbV9jcnRjX3N0YXRlICpjcnRjKQotewotCXN0
cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAqYmxvYiA9IGNydGMtPmJhc2UuZ2FtbWFfbHV0OwotCXN0
cnVjdCBkY19zdHJlYW1fc3RhdGUgKnN0cmVhbSA9IGNydGMtPnN0cmVhbTsKLQlzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiA9IChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqKQotCQljcnRjLT5iYXNl
LnN0YXRlLT5kZXYtPmRldl9wcml2YXRlOwotCXN0cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQ7Ci0J
dWludDMyX3QgbHV0X3NpemU7Ci0Jc3RydWN0IGRjX2dhbW1hICpnYW1tYSA9IE5VTEw7Ci0JZW51
bSBkY190cmFuc2Zlcl9mdW5jX3R5cGUgb2xkX3R5cGUgPSBzdHJlYW0tPm91dF90cmFuc2Zlcl9m
dW5jLT50eXBlOwotCi0JYm9vbCByZXQ7Ci0KLQlpZiAoIWJsb2IgJiYgYWRldi0+YXNpY190eXBl
IDw9IENISVBfUkFWRU4pIHsKLQkJLyogQnkgZGVmYXVsdCwgdXNlIHRoZSBTUkdCIHByZWRlZmlu
ZWQgY3VydmUuKi8KLQkJc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYy0+dHlwZSA9IFRGX1RZUEVf
UFJFREVGSU5FRDsKLQkJc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYy0+dGYgPSBUUkFOU0ZFUl9G
VU5DVElPTl9TUkdCOwotCQlyZXR1cm4gMDsKLQl9Ci0KLQlpZiAoYmxvYikgewotCQlsdXQgPSAo
c3RydWN0IGRybV9jb2xvcl9sdXQgKilibG9iLT5kYXRhOwotCQlsdXRfc2l6ZSA9IGJsb2ItPmxl
bmd0aCAvIHNpemVvZihzdHJ1Y3QgZHJtX2NvbG9yX2x1dCk7Ci0KLQkJZ2FtbWEgPSBkY19jcmVh
dGVfZ2FtbWEoKTsKLQkJaWYgKCFnYW1tYSkKLQkJCXJldHVybiAtRU5PTUVNOwotCi0JCWdhbW1h
LT5udW1fZW50cmllcyA9IGx1dF9zaXplOwotCQlpZiAoZ2FtbWEtPm51bV9lbnRyaWVzID09IE1B
WF9DT0xPUl9MRUdBQ1lfTFVUX0VOVFJJRVMpCi0JCQlnYW1tYS0+dHlwZSA9IEdBTU1BX1JHQl8y
NTY7Ci0JCWVsc2UgaWYgKGdhbW1hLT5udW1fZW50cmllcyA9PSBNQVhfQ09MT1JfTFVUX0VOVFJJ
RVMpCi0JCQlnYW1tYS0+dHlwZSA9IEdBTU1BX0NTX1RGTV8xRDsKLQkJZWxzZSB7Ci0JCQkvKiBJ
bnZhbGlkIGx1dCBzaXplICovCi0JCQlkY19nYW1tYV9yZWxlYXNlKCZnYW1tYSk7Ci0JCQlyZXR1
cm4gLUVJTlZBTDsKLQkJfQotCi0JCS8qIENvbnZlcnQgZHJtX2x1dCBpbnRvIGRjX2dhbW1hICov
Ci0JCV9fZHJtX2x1dF90b19kY19nYW1tYShsdXQsIGdhbW1hLCBnYW1tYS0+dHlwZSA9PSBHQU1N
QV9SR0JfMjU2KTsKLQl9Ci0KLQkvKiBwcmVkZWZpbmVkIGdhbW1hIFJPTSBvbmx5IGV4aXN0IGZv
ciBSQVZFTiBhbmQgcHJlLVJBVkVOIEFTSUMsCi0JICogc2V0IGNhblJvbUJlVXNlZCBhY2NvcmRp
bmdseQotCSAqLwotCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBFX0RJ
U1RSSUJVVEVEX1BPSU5UUzsKLQlyZXQgPSBtb2RfY29sb3JfY2FsY3VsYXRlX3JlZ2FtbWFfcGFy
YW1zKHN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1bmMsCi0JCQlnYW1tYSwgdHJ1ZSwgYWRldi0+YXNp
Y190eXBlIDw9IENISVBfTkFWSTEwLCBOVUxMKTsKLQotCWlmIChnYW1tYSkKLQkJZGNfZ2FtbWFf
cmVsZWFzZSgmZ2FtbWEpOwotCi0JaWYgKCFyZXQpIHsKLQkJc3RyZWFtLT5vdXRfdHJhbnNmZXJf
ZnVuYy0+dHlwZSA9IG9sZF90eXBlOwotCQlEUk1fRVJST1IoIk91dCBvZiBtZW1vcnkgd2hlbiBj
YWxjdWxhdGluZyByZWdhbW1hIHBhcmFtc1xuIik7Ci0JCXJldHVybiAtRU5PTUVNOwotCX0KLQot
CXJldHVybiAwOwotfQotCi0vKioKLSAqIGFtZGdwdV9kbV9zZXRfY3RtOiBTZXQgdGhlIGNvbG9y
IHRyYW5zZm9ybSBtYXRyaXggZm9yIHRoZSBnaXZlbiBDUlRDLgotICogQGNydGM6IGFtZGdwdV9k
bSBjcnRjIHN0YXRlCi0gKgotICogVXBkYXRlIHRoZSB1bmRlcmx5aW5nIGRjX3N0cmVhbV9zdGF0
ZSdzIGdhbXV0IHJlbWFwIG1hdHJpeCBpbiBwcmVwYXJhdGlvbgotICogZm9yIGhhcmR3YXJlIGNv
bW1pdC4gSWYgbm8gbWF0cml4IGlzIHNwZWNpZmllZCBieSB1c2VyLCBnYW11dCByZW1hcCB3aWxs
IGJlCi0gKiBkaXNhYmxlZC4KKy8qCisgKiBDb252ZXJ0cyBhIERSTSBDVE0gdG8gYSBEQyBDU0Mg
ZmxvYXQgbWF0cml4LgorICogVGhlIG1hdHJpeCBuZWVkcyB0byBiZSBhIDN4NCAoMTIgZW50cnkp
IG1hdHJpeC4KICAqLwotdm9pZCBhbWRncHVfZG1fc2V0X2N0bShzdHJ1Y3QgZG1fY3J0Y19zdGF0
ZSAqY3J0YykKK3N0YXRpYyB2b2lkIF9fZHJtX2N0bV90b19kY19tYXRyaXgoY29uc3Qgc3RydWN0
IGRybV9jb2xvcl9jdG0gKmN0bSwKKwkJCQkgICBzdHJ1Y3QgZml4ZWQzMV8zMiAqbWF0cml4KQog
ewotCi0Jc3RydWN0IGRybV9wcm9wZXJ0eV9ibG9iICpibG9iID0gY3J0Yy0+YmFzZS5jdG07Ci0J
c3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3RyZWFtID0gY3J0Yy0+c3RyZWFtOwotCXN0cnVjdCBk
cm1fY29sb3JfY3RtICpjdG07CiAJaW50NjRfdCB2YWw7CiAJaW50IGk7CiAKLQlpZiAoIWJsb2Ip
IHsKLQkJc3RyZWFtLT5nYW11dF9yZW1hcF9tYXRyaXguZW5hYmxlX3JlbWFwID0gZmFsc2U7Ci0J
CXJldHVybjsKLQl9Ci0KLQlzdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeC5lbmFibGVfcmVtYXAg
PSB0cnVlOwotCWN0bSA9IChzdHJ1Y3QgZHJtX2NvbG9yX2N0bSAqKWJsb2ItPmRhdGE7CiAJLyoK
IAkgKiBEUk0gZ2l2ZXMgYSAzeDMgbWF0cml4LCBidXQgREMgd2FudHMgM3g0LiBBc3N1bWluZyB3
ZSdyZSBvcGVyYXRpbmcKIAkgKiB3aXRoIGhvbW9nZW5lb3VzIGNvb3JkaW5hdGVzLCBhdWdtZW50
IHRoZSBtYXRyaXggd2l0aCAwJ3MuCkBAIC0yMTUsODMgKzE3NSwzMDYgQEAgdm9pZCBhbWRncHVf
ZG1fc2V0X2N0bShzdHJ1Y3QgZG1fY3J0Y19zdGF0ZSAqY3J0YykKIAlmb3IgKGkgPSAwOyBpIDwg
MTI7IGkrKykgewogCQkvKiBTa2lwIDR0aCBlbGVtZW50ICovCiAJCWlmIChpICUgNCA9PSAzKSB7
Ci0JCQlzdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeC5tYXRyaXhbaV0gPSBkY19maXhwdF96ZXJv
OworCQkJbWF0cml4W2ldID0gZGNfZml4cHRfemVybzsKIAkJCWNvbnRpbnVlOwogCQl9CiAKIAkJ
LyogZ2FtdXRfcmVtYXBfbWF0cml4W2ldID0gY3RtW2kgLSBmbG9vcihpLzQpXSAqLwotCQl2YWwg
PSBjdG0tPm1hdHJpeFtpIC0gKGkvNCldOworCQl2YWwgPSBjdG0tPm1hdHJpeFtpIC0gKGkgLyA0
KV07CiAJCS8qIElmIG5lZ2F0aXZlLCBjb252ZXJ0IHRvIDIncyBjb21wbGVtZW50LiAqLwogCQlp
ZiAodmFsICYgKDFVTEwgPDwgNjMpKQogCQkJdmFsID0gLSh2YWwgJiB+KDFVTEwgPDwgNjMpKTsK
IAotCQlzdHJlYW0tPmdhbXV0X3JlbWFwX21hdHJpeC5tYXRyaXhbaV0udmFsdWUgPSB2YWw7CisJ
CW1hdHJpeFtpXS52YWx1ZSA9IHZhbDsKIAl9CiB9CiAKKy8qIENhbGN1bGF0ZXMgdGhlIGxlZ2Fj
eSB0cmFuc2ZlciBmdW5jdGlvbiAtIG9ubHkgZm9yIHNSR0IgaW5wdXQgc3BhY2UuICovCitzdGF0
aWMgaW50IF9fc2V0X2xlZ2FjeV90ZihzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqZnVuYywKKwkJ
CSAgIGNvbnN0IHN0cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQsIHVpbnQzMl90IGx1dF9zaXplLAor
CQkJICAgYm9vbCBoYXNfcm9tKQoreworCXN0cnVjdCBkY19nYW1tYSAqZ2FtbWEgPSBOVUxMOwor
CWJvb2wgcmVzOwogCi0vKioKLSAqIGFtZGdwdV9kbV9zZXRfZGVnYW1tYV9sdXQ6IFNldCBkZWdh
bW1hIGx1dCBmb3IgdGhlIGdpdmVuIENSVEMuCi0gKiBAY3J0YzogYW1kZ3B1X2RtIGNydGMgc3Rh
dGUKLSAqCi0gKiBVcGRhdGUgdGhlIHVuZGVybHlpbmcgZGNfc3RyZWFtX3N0YXRlJ3MgaW5wdXQg
dHJhbnNmZXIgZnVuY3Rpb24gKElURikgaW4KLSAqIHByZXBhcmF0aW9uIGZvciBoYXJkd2FyZSBj
b21taXQuIElmIG5vIGx1dCBpcyBzcGVjaWZpZWQgYnkgdXNlciwgd2UgZGVmYXVsdAotICogdG8g
U1JHQiBkZWdhbW1hLgotICoKLSAqIFdlIHN1cHBvcnQgZGVnYW1tYSBieXBhc3MsIHByZWRlZmlu
ZWQgU1JHQiwgYW5kIGN1c3RvbSBkZWdhbW1hCi0gKgotICogUkVUVVJOUzoKLSAqIDAgb24gc3Vj
Y2VzcwotICogLUVJTlZBTCBpZiBjcnRjX3N0YXRlIGhhcyBhIGRlZ2FtbWFfbHV0IG9mIGludmFs
aWQgc2l6ZQotICogLUVOT01FTSBpZiBnYW1tYSBhbGxvY2F0aW9uIGZhaWxzCi0gKi8KLWludCBh
bWRncHVfZG1fc2V0X2RlZ2FtbWFfbHV0KHN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKLQkJCSAgICAgIHN0cnVjdCBkY19wbGFuZV9zdGF0ZSAqZGNfcGxhbmVfc3RhdGUpCisJQVNT
RVJUKGx1dCAmJiBsdXRfc2l6ZSA9PSBNQVhfQ09MT1JfTEVHQUNZX0xVVF9FTlRSSUVTKTsKKwor
CWdhbW1hID0gZGNfY3JlYXRlX2dhbW1hKCk7CisJaWYgKCFnYW1tYSkKKwkJcmV0dXJuIC1FTk9N
RU07CisKKwlnYW1tYS0+dHlwZSA9IEdBTU1BX1JHQl8yNTY7CisJZ2FtbWEtPm51bV9lbnRyaWVz
ID0gbHV0X3NpemU7CisJX19kcm1fbHV0X3RvX2RjX2dhbW1hKGx1dCwgZ2FtbWEsIHRydWUpOwor
CisJcmVzID0gbW9kX2NvbG9yX2NhbGN1bGF0ZV9yZWdhbW1hX3BhcmFtcyhmdW5jLCBnYW1tYSwg
dHJ1ZSwgaGFzX3JvbSwKKwkJCQkJCSBOVUxMKTsKKworCXJldHVybiByZXMgPyAwIDogLUVOT01F
TTsKK30KKworLyogQ2FsY3VsYXRlcyB0aGUgb3V0cHV0IHRyYW5zZmVyIGZ1bmN0aW9uIGJhc2Vk
IG9uIGV4cGVjdGVkIGlucHV0IHNwYWNlLiAqLworc3RhdGljIGludCBfX3NldF9vdXRwdXRfdGYo
c3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKmZ1bmMsCisJCQkgICBjb25zdCBzdHJ1Y3QgZHJtX2Nv
bG9yX2x1dCAqbHV0LCB1aW50MzJfdCBsdXRfc2l6ZSwKKwkJCSAgIGJvb2wgaGFzX3JvbSkKIHsK
LQlzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmJsb2IgPSBjcnRjX3N0YXRlLT5kZWdhbW1hX2x1
dDsKLQlzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0OwotCXVpbnQzMl90IGx1dF9zaXplOwotCXN0
cnVjdCBkY19nYW1tYSAqZ2FtbWE7Ci0JYm9vbCByZXQ7Ci0KLQlpZiAoIWJsb2IpIHsKLQkJLyog
RGVmYXVsdCB0byBTUkdCICovCi0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50
eXBlID0gVEZfVFlQRV9QUkVERUZJTkVEOwotCQlkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNmZXJf
ZnVuYy0+dGYgPSBUUkFOU0ZFUl9GVU5DVElPTl9TUkdCOwotCQlyZXR1cm4gMDsKLQl9CisJc3Ry
dWN0IGRjX2dhbW1hICpnYW1tYSA9IE5VTEw7CisJYm9vbCByZXM7CiAKLQlsdXQgPSAoc3RydWN0
IGRybV9jb2xvcl9sdXQgKilibG9iLT5kYXRhOwotCWlmIChfX2lzX2x1dF9saW5lYXIobHV0LCBN
QVhfQ09MT1JfTFVUX0VOVFJJRVMpKSB7Ci0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9m
dW5jLT50eXBlID0gVEZfVFlQRV9CWVBBU1M7Ci0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zl
cl9mdW5jLT50ZiA9IFRSQU5TRkVSX0ZVTkNUSU9OX0xJTkVBUjsKLQkJcmV0dXJuIDA7Ci0JfQor
CUFTU0VSVChsdXQgJiYgbHV0X3NpemUgPT0gTUFYX0NPTE9SX0xVVF9FTlRSSUVTKTsKIAogCWdh
bW1hID0gZGNfY3JlYXRlX2dhbW1hKCk7CiAJaWYgKCFnYW1tYSkKIAkJcmV0dXJuIC1FTk9NRU07
CiAKLQlsdXRfc2l6ZSA9IGJsb2ItPmxlbmd0aCAvIHNpemVvZihzdHJ1Y3QgZHJtX2NvbG9yX2x1
dCk7CiAJZ2FtbWEtPm51bV9lbnRyaWVzID0gbHV0X3NpemU7Ci0JaWYgKGdhbW1hLT5udW1fZW50
cmllcyA9PSBNQVhfQ09MT1JfTFVUX0VOVFJJRVMpCisJX19kcm1fbHV0X3RvX2RjX2dhbW1hKGx1
dCwgZ2FtbWEsIGZhbHNlKTsKKworCWlmIChmdW5jLT50ZiA9PSBUUkFOU0ZFUl9GVU5DVElPTl9M
SU5FQVIpIHsKKwkJLyoKKwkJICogQ29sb3IgbW9kdWxlIGRvZXNuJ3QgbGlrZSBjYWxjdWxhdGlu
ZyByZWdhbW1hIHBhcmFtcworCQkgKiBvbiB0b3Agb2YgYSBsaW5lYXIgaW5wdXQuIEJ1dCBkZWdh
bW1hIHBhcmFtcyBjYW4gYmUgdXNlZAorCQkgKiBpbnN0ZWFkIHRvIHNpbXVsYXRlIHRoaXMuCisJ
CSAqLwogCQlnYW1tYS0+dHlwZSA9IEdBTU1BX0NVU1RPTTsKLQllbHNlIHsKLQkJZGNfZ2FtbWFf
cmVsZWFzZSgmZ2FtbWEpOwotCQlyZXR1cm4gLUVJTlZBTDsKKwkJcmVzID0gbW9kX2NvbG9yX2Nh
bGN1bGF0ZV9kZWdhbW1hX3BhcmFtcyhmdW5jLCBnYW1tYSwgdHJ1ZSk7CisJfSBlbHNlIHsKKwkJ
LyoKKwkJICogQXNzdW1lIHNSR0IuIFRoZSBhY3R1YWwgbWFwcGluZyB3aWxsIGRlcGVuZCBvbiB3
aGV0aGVyIHRoZQorCQkgKiBpbnB1dCB3YXMgbGVnYWN5IG9yIG5vdC4KKwkJICovCisJCWdhbW1h
LT50eXBlID0gR0FNTUFfQ1NfVEZNXzFEOworCQlyZXMgPSBtb2RfY29sb3JfY2FsY3VsYXRlX3Jl
Z2FtbWFfcGFyYW1zKGZ1bmMsIGdhbW1hLCBmYWxzZSwKKwkJCQkJCQkgaGFzX3JvbSwgTlVMTCk7
CiAJfQogCisJZGNfZ2FtbWFfcmVsZWFzZSgmZ2FtbWEpOworCisJcmV0dXJuIHJlcyA/IDAgOiAt
RU5PTUVNOworfQorCisvKiBDYWN1bGF0ZXMgdGhlIGlucHV0IHRyYW5zZmVyIGZ1bmN0aW9uIGJh
c2VkIG9uIGV4cGVjdGVkIGlucHV0IHNwYWNlLiAqLworc3RhdGljIGludCBfX3NldF9pbnB1dF90
ZihzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqZnVuYywKKwkJCSAgY29uc3Qgc3RydWN0IGRybV9j
b2xvcl9sdXQgKmx1dCwgdWludDMyX3QgbHV0X3NpemUpCit7CisJc3RydWN0IGRjX2dhbW1hICpn
YW1tYSA9IE5VTEw7CisJYm9vbCByZXM7CisKKwlnYW1tYSA9IGRjX2NyZWF0ZV9nYW1tYSgpOwor
CWlmICghZ2FtbWEpCisJCXJldHVybiAtRU5PTUVNOworCisJZ2FtbWEtPnR5cGUgPSBHQU1NQV9D
VVNUT007CisJZ2FtbWEtPm51bV9lbnRyaWVzID0gbHV0X3NpemU7CisKIAlfX2RybV9sdXRfdG9f
ZGNfZ2FtbWEobHV0LCBnYW1tYSwgZmFsc2UpOwogCi0JZGNfcGxhbmVfc3RhdGUtPmluX3RyYW5z
ZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBFX0RJU1RSSUJVVEVEX1BPSU5UUzsKLQlyZXQgPSBtb2Rf
Y29sb3JfY2FsY3VsYXRlX2RlZ2FtbWFfcGFyYW1zKGRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zl
cl9mdW5jLCBnYW1tYSwgdHJ1ZSk7CisJcmVzID0gbW9kX2NvbG9yX2NhbGN1bGF0ZV9kZWdhbW1h
X3BhcmFtcyhmdW5jLCBnYW1tYSwgdHJ1ZSk7CiAJZGNfZ2FtbWFfcmVsZWFzZSgmZ2FtbWEpOwot
CWlmICghcmV0KSB7Ci0JCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50eXBlID0g
VEZfVFlQRV9CWVBBU1M7Ci0JCURSTV9FUlJPUigiT3V0IG9mIG1lbW9yeSB3aGVuIGNhbGN1bGF0
aW5nIGRlZ2FtbWEgcGFyYW1zXG4iKTsKLQkJcmV0dXJuIC1FTk9NRU07CisKKwlyZXR1cm4gcmVz
ID8gMCA6IC1FTk9NRU07Cit9CisKKy8qKgorICogYW1kZ3B1X2RtX3VwZGF0ZV9jcnRjX2NvbG9y
X21nbXQ6IE1hcHMgRFJNIGNvbG9yIG1hbmFnZW1lbnQgdG8gREMgc3RyZWFtLgorICogQGNydGM6
IGFtZGdwdV9kbSBjcnRjIHN0YXRlCisgKgorICogV2l0aCBubyBwbGFuZSBsZXZlbCBjb2xvciBt
YW5hZ2VtZW50IHByb3BlcnRpZXMgd2UncmUgZnJlZSB0byB1c2UgYW55CisgKiBvZiB0aGUgSFcg
YmxvY2tzIGFzIGxvbmcgYXMgdGhlIENSVEMgQ1RNIGFsd2F5cyBjb21lcyBiZWZvcmUgdGhlCisg
KiBDUlRDIFJHTSBhbmQgYWZ0ZXIgdGhlIENSVEMgREdNLgorICoKKyAqIFRoZSBDUlRDIFJHTSBi
bG9jayB3aWxsIGJlIHBsYWNlZCBpbiB0aGUgUkdNIExVVCBibG9jayBpZiBpdCBpcyBub24tbGlu
ZWFyLgorICogVGhlIENSVEMgREdNIGJsb2NrIHdpbGwgYmUgcGxhY2VkIGluIHRoZSBER00gTFVU
IGJsb2NrIGlmIGl0IGlzIG5vbi1saW5lYXIuCisgKiBUaGUgQ1JUQyBDVE0gd2lsbCBiZSBwbGFj
ZWQgaW4gdGhlIGdhbXV0IHJlbWFwIGJsb2NrIGlmIGl0IGlzIG5vbi1saW5lYXIuCisgKgorICog
VGhlIFJHTSBibG9jayBpcyB0eXBpY2FsbHkgbW9yZSBmdWxseSBmZWF0dXJlZCBhbmQgYWNjdXJh
dGUgYWNyb3NzCisgKiBhbGwgQVNJQ3MgLSBEQ0UgY2FuJ3Qgc3VwcG9ydCBhIGN1c3RvbSBub24t
bGluZWFyIENSVEMgREdNLgorICoKKyAqIEZvciBzdXBwb3J0aW5nIGJvdGggcGxhbmUgbGV2ZWwg
Y29sb3IgbWFuYWdlbWVudCBhbmQgQ1JUQyBsZXZlbCBjb2xvcgorICogbWFuYWdlbWVudCBhdCBv
bmNlIHdlIGhhdmUgdG8gZWl0aGVyIHJlc3RyaWN0IHRoZSB1c2FnZSBvZiBDUlRDIHByb3BlcnRp
ZXMKKyAqIG9yIGJsZW5kIGFkanVzdG1lbnRzIHRvZ2V0aGVyLgorICoKKyAqIFJldHVybnMgMCBv
biBzdWNjZXNzLgorICovCitpbnQgYW1kZ3B1X2RtX3VwZGF0ZV9jcnRjX2NvbG9yX21nbXQoc3Ry
dWN0IGRtX2NydGNfc3RhdGUgKmNydGMpCit7CisJc3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3Ry
ZWFtID0gY3J0Yy0+c3RyZWFtOworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0KKwkJKHN0
cnVjdCBhbWRncHVfZGV2aWNlICopY3J0Yy0+YmFzZS5zdGF0ZS0+ZGV2LT5kZXZfcHJpdmF0ZTsK
Kwlib29sIGhhc19yb20gPSBhZGV2LT5hc2ljX3R5cGUgPD0gQ0hJUF9SQVZFTjsKKwlzdHJ1Y3Qg
ZHJtX2NvbG9yX2N0bSAqY3RtID0gTlVMTDsKKwljb25zdCBzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAq
ZGVnYW1tYV9sdXQsICpyZWdhbW1hX2x1dDsKKwl1aW50MzJfdCBkZWdhbW1hX3NpemUsIHJlZ2Ft
bWFfc2l6ZTsKKwlib29sIGhhc19yZWdhbW1hLCBoYXNfZGVnYW1tYTsKKwlib29sIGlzX2xlZ2Fj
eTsKKwlpbnQgcjsKKworCWRlZ2FtbWFfbHV0ID0gX19leHRyYWN0X2Jsb2JfbHV0KGNydGMtPmJh
c2UuZGVnYW1tYV9sdXQsICZkZWdhbW1hX3NpemUpOworCWlmIChkZWdhbW1hX2x1dCAmJiBkZWdh
bW1hX3NpemUgIT0gTUFYX0NPTE9SX0xVVF9FTlRSSUVTKQorCQlyZXR1cm4gLUVJTlZBTDsKKwor
CXJlZ2FtbWFfbHV0ID0gX19leHRyYWN0X2Jsb2JfbHV0KGNydGMtPmJhc2UuZ2FtbWFfbHV0LCAm
cmVnYW1tYV9zaXplKTsKKwlpZiAocmVnYW1tYV9sdXQgJiYgcmVnYW1tYV9zaXplICE9IE1BWF9D
T0xPUl9MVVRfRU5UUklFUyAmJgorCSAgICByZWdhbW1hX3NpemUgIT0gTUFYX0NPTE9SX0xFR0FD
WV9MVVRfRU5UUklFUykKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwloYXNfZGVnYW1tYSA9CisJCWRl
Z2FtbWFfbHV0ICYmICFfX2lzX2x1dF9saW5lYXIoZGVnYW1tYV9sdXQsIGRlZ2FtbWFfc2l6ZSk7
CisKKwloYXNfcmVnYW1tYSA9CisJCXJlZ2FtbWFfbHV0ICYmICFfX2lzX2x1dF9saW5lYXIocmVn
YW1tYV9sdXQsIHJlZ2FtbWFfc2l6ZSk7CisKKwlpc19sZWdhY3kgPSByZWdhbW1hX3NpemUgPT0g
TUFYX0NPTE9SX0xFR0FDWV9MVVRfRU5UUklFUzsKKworCS8qIFJlc2V0IGFsbCBhZGp1c3RtZW50
cy4gKi8KKwljcnRjLT5jbV9oYXNfZGVnYW1tYSA9IGZhbHNlOworCWNydGMtPmNtX2lzX2RlZ2Ft
bWFfc3JnYiA9IGZhbHNlOworCisJLyogU2V0dXAgcmVnYW1tYSBhbmQgZGVnYW1tYS4gKi8KKwlp
ZiAoaXNfbGVnYWN5KSB7CisJCS8qCisJCSAqIExlZ2FjeSByZWdhbW1hIGZvcmNlcyB1cyB0byB1
c2UgdGhlIHNSR0IgUkdNIGFzIGEgYmFzZS4KKwkJICogVGhpcyBhbHNvIG1lYW5zIHdlIGNhbid0
IHVzZSBsaW5lYXIgREdNIHNpbmNlIERHTSBuZWVkcworCQkgKiB0byB1c2Ugc1JHQiBhcyBhIGJh
c2UgYXMgd2VsbCwgcmVzdWx0aW5nIGluIGluY29ycmVjdCBDUlRDCisJCSAqIERHTSBhbmQgQ1JU
QyBDVE0uCisJCSAqCisJCSAqIFRPRE86IEp1c3QgbWFwIHRoaXMgdG8gdGhlIHN0YW5kYXJkIHJl
Z2FtbWEgaW50ZXJmYWNlCisJCSAqIGluc3RlYWQgc2luY2UgdGhpcyBpc24ndCByZWFsbHkgcmln
aHQuIE9uZSBvZiB0aGUgY2FzZXMKKwkJICogd2hlcmUgdGhpcyBzZXR1cCBjdXJyZW50bHkgZmFp
bHMgaXMgdHJ5aW5nIHRvIGRvIGFuCisJCSAqIGludmVyc2UgY29sb3IgcmFtcCBpbiBsZWdhY3kg
dXNlcnNwYWNlLgorCQkgKi8KKwkJY3J0Yy0+Y21faXNfZGVnYW1tYV9zcmdiID0gdHJ1ZTsKKwkJ
c3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYy0+dHlwZSA9IFRGX1RZUEVfRElTVFJJQlVURURfUE9J
TlRTOworCQlzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jLT50ZiA9IFRSQU5TRkVSX0ZVTkNUSU9O
X1NSR0I7CisKKwkJciA9IF9fc2V0X2xlZ2FjeV90ZihzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5j
LCByZWdhbW1hX2x1dCwKKwkJCQkgICAgcmVnYW1tYV9zaXplLCBoYXNfcm9tKTsKKwkJaWYgKHIp
CisJCQlyZXR1cm4gcjsKKwl9IGVsc2UgaWYgKGhhc19yZWdhbW1hKSB7CisJCS8qIENSVEMgUkdN
IGdvZXMgaW50byBSR00gTFVULiAqLworCQlzdHJlYW0tPm91dF90cmFuc2Zlcl9mdW5jLT50eXBl
ID0gVEZfVFlQRV9ESVNUUklCVVRFRF9QT0lOVFM7CisJCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1
bmMtPnRmID0gVFJBTlNGRVJfRlVOQ1RJT05fTElORUFSOworCisJCXIgPSBfX3NldF9vdXRwdXRf
dGYoc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYywgcmVnYW1tYV9sdXQsCisJCQkJICAgIHJlZ2Ft
bWFfc2l6ZSwgaGFzX3JvbSk7CisJCWlmIChyKQorCQkJcmV0dXJuIHI7CisJfSBlbHNlIHsKKwkJ
LyoKKwkJICogTm8gQ1JUQyBSR00gbWVhbnMgd2UgY2FuIGp1c3QgcHV0IHRoZSBibG9jayBpbnRv
IGJ5cGFzcworCQkgKiBzaW5jZSB3ZSBkb24ndCBoYXZlIGFueSBwbGFuZSBsZXZlbCBhZGp1c3Rt
ZW50cyB1c2luZyBpdC4KKwkJICovCisJCXN0cmVhbS0+b3V0X3RyYW5zZmVyX2Z1bmMtPnR5cGUg
PSBURl9UWVBFX0JZUEFTUzsKKwkJc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYy0+dGYgPSBUUkFO
U0ZFUl9GVU5DVElPTl9MSU5FQVI7CisJfQorCisJLyoKKwkgKiBDUlRDIERHTSBnb2VzIGludG8g
REdNIExVVC4gSXQgd291bGQgYmUgbmljZSB0byBwbGFjZSBpdAorCSAqIGludG8gdGhlIFJHTSBz
aW5jZSBpdCdzIGEgbW9yZSBmZWF0dXJlZCBibG9jayBidXQgd2UnZAorCSAqIGhhdmUgdG8gcGxh
Y2UgdGhlIENUTSBpbiB0aGUgT0NTQyBpbiB0aGF0IGNhc2UuCisJICovCisJY3J0Yy0+Y21faGFz
X2RlZ2FtbWEgPSBoYXNfZGVnYW1tYTsKKworCS8qIFNldHVwIENSVEMgQ1RNLiAqLworCWlmIChj
cnRjLT5iYXNlLmN0bSkgeworCQljdG0gPSAoc3RydWN0IGRybV9jb2xvcl9jdG0gKiljcnRjLT5i
YXNlLmN0bS0+ZGF0YTsKKworCQkvKgorCQkgKiBHYW11dCByZW1hcHBpbmcgbXVzdCBiZSB1c2Vk
IGZvciBnYW1tYSBjb3JyZWN0aW9uCisJCSAqIHNpbmNlIGl0IGNvbWVzIGJlZm9yZSB0aGUgcmVn
YW1tYSBjb3JyZWN0aW9uLgorCQkgKgorCQkgKiBPQ1NDIGNvdWxkIGJlIHVzZWQgZm9yIGdhbW1h
IGNvcnJlY3Rpb24sIGJ1dCB3ZSdkIG5lZWQgdG8KKwkJICogYmxlbmQgdGhlIGFkanVzdG1lbnRz
IHRvZ2V0aGVyIHdpdGggdGhlIHJlcXVpcmVkIG91dHB1dAorCQkgKiBjb252ZXJzaW9uIG1hdHJp
eCAtIHNvIGp1c3QgdXNlIHRoZSBnYW11dCByZW1hcCBibG9jaworCQkgKiBmb3Igbm93LgorCQkg
Ki8KKwkJX19kcm1fY3RtX3RvX2RjX21hdHJpeChjdG0sIHN0cmVhbS0+Z2FtdXRfcmVtYXBfbWF0
cml4Lm1hdHJpeCk7CisKKwkJc3RyZWFtLT5nYW11dF9yZW1hcF9tYXRyaXguZW5hYmxlX3JlbWFw
ID0gdHJ1ZTsKKwkJc3RyZWFtLT5jc2NfY29sb3JfbWF0cml4LmVuYWJsZV9hZGp1c3RtZW50ID0g
ZmFsc2U7CisJfSBlbHNlIHsKKwkJLyogQnlwYXNzIENUTS4gKi8KKwkJc3RyZWFtLT5nYW11dF9y
ZW1hcF9tYXRyaXguZW5hYmxlX3JlbWFwID0gZmFsc2U7CisJCXN0cmVhbS0+Y3NjX2NvbG9yX21h
dHJpeC5lbmFibGVfYWRqdXN0bWVudCA9IGZhbHNlOwogCX0KIAogCXJldHVybiAwOwogfQogCisv
KioKKyAqIGFtZGdwdV9kbV91cGRhdGVfcGxhbmVfY29sb3JfbWdtdDogTWFwcyBEUk0gY29sb3Ig
bWFuYWdlbWVudCB0byBEQyBwbGFuZS4KKyAqIEBjcnRjOiBhbWRncHVfZG0gY3J0YyBzdGF0ZQor
ICogQCBkY19wbGFuZV9zdGF0ZTogdGFyZ2V0IERDIHN1cmZhY2UKKyAqCisgKiBVcGRhdGUgdGhl
IHVuZGVybHlpbmcgZGNfc3RyZWFtX3N0YXRlJ3MgaW5wdXQgdHJhbnNmZXIgZnVuY3Rpb24gKElU
RikgaW4KKyAqIHByZXBhcmF0aW9uIGZvciBoYXJkd2FyZSBjb21taXQuIFRoZSB0cmFuc2ZlciBm
dW5jdGlvbiB1c2VkIGRlcGVuZHMgb24KKyAqIHRoZSBwcmVwYXJ0aW9uIGRvbmUgb24gdGhlIHN0
cmVhbSBmb3IgY29sb3IgbWFuYWdlbWVudC4KKyAqCisgKiBSZXR1cm5zIDAgb24gc3VjY2Vzcy4K
KyAqLworaW50IGFtZGdwdV9kbV91cGRhdGVfcGxhbmVfY29sb3JfbWdtdChzdHJ1Y3QgZG1fY3J0
Y19zdGF0ZSAqY3J0YywKKwkJCQkgICAgICBzdHJ1Y3QgZGNfcGxhbmVfc3RhdGUgKmRjX3BsYW5l
X3N0YXRlKQoreworCWNvbnN0IHN0cnVjdCBkcm1fY29sb3JfbHV0ICpkZWdhbW1hX2x1dDsKKwl1
aW50MzJfdCBkZWdhbW1hX3NpemU7CisJaW50IHI7CisKKwlpZiAoY3J0Yy0+Y21faGFzX2RlZ2Ft
bWEpIHsKKwkJZGVnYW1tYV9sdXQgPSBfX2V4dHJhY3RfYmxvYl9sdXQoY3J0Yy0+YmFzZS5kZWdh
bW1hX2x1dCwKKwkJCQkJCSAmZGVnYW1tYV9zaXplKTsKKwkJQVNTRVJUKGRlZ2FtbWFfc2l6ZSA9
PSBNQVhfQ09MT1JfTFVUX0VOVFJJRVMpOworCisJCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zl
cl9mdW5jLT50eXBlID0KKwkJCVRGX1RZUEVfRElTVFJJQlVURURfUE9JTlRTOworCisJCS8qCisJ
CSAqIFRoaXMgY2FzZSBpc24ndCBmdWxseSBjb3JyZWN0LCBidXQgYWxzbyBmYWlybHkKKwkJICog
dW5jb21tb24uIFRoaXMgaXMgdXNlcnNwYWNlIHRyeWluZyB0byB1c2UgYQorCQkgKiBsZWdhY3kg
Z2FtbWEgTFVUICsgYXRvbWljIGRlZ2FtbWEgTFVUCisJCSAqIGF0IHRoZSBzYW1lIHRpbWUuCisJ
CSAqCisJCSAqIExlZ2FjeSBnYW1tYSByZXF1aXJlcyB0aGUgaW5wdXQgdG8gYmUgaW4gbGluZWFy
CisJCSAqIHNwYWNlLCBzbyB0aGF0IG1lYW5zIHdlIG5lZWQgdG8gYXBwbHkgYW4gc1JHQgorCQkg
KiBkZWdhbW1hLiBCdXQgY29sb3IgbW9kdWxlIGFsc28gZG9lc24ndCBzdXBwb3J0CisJCSAqIGEg
dXNlciByYW1wIGluIHRoaXMgY2FzZSBzbyB0aGUgZGVnYW1tYSB3aWxsCisJCSAqIGJlIGxvc3Qu
CisJCSAqCisJCSAqIEV2ZW4gaWYgd2UgZGlkIHN1cHBvcnQgaXQsIGl0J3Mgc3RpbGwgbm90IHJp
Z2h0OgorCQkgKgorCQkgKiBJbnB1dCAtPiBDUlRDIERHTSAtPiBzUkdCIERHTSAtPiBDUlRDIENU
TSAtPgorCQkgKiBzUkdCIFJHTSAtPiBDUlRDIFJHTSAtPiBPdXRwdXQKKwkJICoKKwkJICogVGhl
IENTQyB3aWxsIGJlIGRvbmUgaW4gdGhlIHdyb25nIHNwYWNlIHNpbmNlCisJCSAqIHdlJ3JlIGFw
cGx5aW5nIGFuIHNSR0IgREdNIG9uIHRvcCBvZiB0aGUgQ1JUQworCQkgKiBER00uCisJCSAqCisJ
CSAqIFRPRE86IERvbid0IHVzZSB0aGUgbGVnYWN5IGdhbW1hIGludGVyZmFjZSBhbmQganVzdAor
CQkgKiBtYXAgdGhlc2UgdG8gdGhlIGF0b21pYyBvbmUgaW5zdGVhZC4KKwkJICovCisJCWlmIChj
cnRjLT5jbV9pc19kZWdhbW1hX3NyZ2IpCisJCQlkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNmZXJf
ZnVuYy0+dGYgPQorCQkJCVRSQU5TRkVSX0ZVTkNUSU9OX1NSR0I7CisJCWVsc2UKKwkJCWRjX3Bs
YW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50ZiA9CisJCQkJVFJBTlNGRVJfRlVOQ1RJT05f
TElORUFSOworCisJCXIgPSBfX3NldF9pbnB1dF90ZihkY19wbGFuZV9zdGF0ZS0+aW5fdHJhbnNm
ZXJfZnVuYywKKwkJCQkgICBkZWdhbW1hX2x1dCwgZGVnYW1tYV9zaXplKTsKKwkJaWYgKHIpCisJ
CQlyZXR1cm4gcjsKKwl9IGVsc2UgaWYgKGNydGMtPmNtX2lzX2RlZ2FtbWFfc3JnYikgeworCQkv
KgorCQkgKiBGb3IgbGVnYWN5IGdhbW1hIHN1cHBvcnQgd2UgbmVlZCB0aGUgcmVnYW1tYSBpbnB1
dAorCQkgKiBpbiBsaW5lYXIgc3BhY2UuIEFzc3VtZSB0aGF0IHRoZSBpbnB1dCBpcyBzUkdCLgor
CQkgKi8KKwkJZGNfcGxhbmVfc3RhdGUtPmluX3RyYW5zZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBF
X1BSRURFRklORUQ7CisJCWRjX3BsYW5lX3N0YXRlLT5pbl90cmFuc2Zlcl9mdW5jLT50ZiA9IFRS
QU5TRkVSX0ZVTkNUSU9OX1NSR0I7CisJfSBlbHNlIHsKKwkJLyogLi4uT3RoZXJ3aXNlIHdlIGNh
biBqdXN0IGJ5cGFzcyB0aGUgREdNIGJsb2NrLiAqLworCQlkY19wbGFuZV9zdGF0ZS0+aW5fdHJh
bnNmZXJfZnVuYy0+dHlwZSA9IFRGX1RZUEVfQllQQVNTOworCQlkY19wbGFuZV9zdGF0ZS0+aW5f
dHJhbnNmZXJfZnVuYy0+dGYgPSBUUkFOU0ZFUl9GVU5DVElPTl9MSU5FQVI7CisJfQorCisJcmV0
dXJuIDA7Cit9Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0
b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1k
LWdmeA==
