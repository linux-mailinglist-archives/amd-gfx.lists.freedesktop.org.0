Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BA5CA2249F0
	for <lists+amd-gfx@lfdr.de>; Sat, 18 Jul 2020 10:44:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 269EB6E22E;
	Sat, 18 Jul 2020 08:44:36 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM11-DM6-obe.outbound.protection.outlook.com
 (mail-dm6nam11on2079.outbound.protection.outlook.com [40.107.223.79])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7283A6E212
 for <amd-gfx@lists.freedesktop.org>; Sat, 18 Jul 2020 08:44:34 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=XDiYJ4eiUlPIyHztGchAaVxbaZcaO/GEFz+Lrbc957hscq+vxpE8WYSaAt5B6lDCuMvXP2e9BzhmP1mFz+SuOxnRDAa3aX01z1pwWp61MgGQvrGksW4tsezA2KOlECEcRFcERVkJgMTd3a/Pjvx8zkLXqX1oW4NYPheQXjwUhO6F0DTjRCvkPVITRD2TXCNfbkekGN0fqaWjkRlyeXU/tbA/APIUIQ9AxPb9FU7bD6JByO4IgANeSJSeVTR2DUFTbJ7ULADCx7FoRewG7NSL7JGMfJnzu3BXn9RUi1od2rXGoegUjPf6ttE0X1lHFKF7QzQUBbObZxNtqOOUv0Uh0Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=AAXi8Qsu2daEzlBT5kffDU4eSlhIGmavChheL1tsvdQ=;
 b=aJbVF8rW+NyBHBu2cipedgq+buahwuP0qWASgLhhePTQhjXF+mQF35lWSONu2+paW4Tj4g7XldA7UHvU5FKZB064ha6YQi+n8bxlq7ZabIr4JrT+xO6Ggo7yQzuOim4eGzmh3nCFfA0fDaLhBSIu393gZ6qu7vnCmJCkrN5RcUxLE/ROpP1yrKZEN9ZkH5F6d+v3b0DTBEvxeKARLxlSUrd+JCKXwCKITjl6R4hiOmryZDI8FBVa2Ezgx4jAnZGSYsZ6IygQC3wjztQAwRDU5t0YHKl75ggHlvq1lYuumE7R2BBNeEwZ0bGl606LezBKB3nacGE9jDhjK5BjvjSq3Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=none (sender ip is
 165.204.84.17) smtp.rcpttodomain=lists.freedesktop.org smtp.mailfrom=amd.com; 
 dmarc=permerror action=none header.from=amd.com; dkim=none (message not
 signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=AAXi8Qsu2daEzlBT5kffDU4eSlhIGmavChheL1tsvdQ=;
 b=lt5l2vtovcFxntBGrT7v8WCrTg/jtPDUtyaeMNpjdrtJ/vdgIps0iJprzuq41giWx9p/lNZipGf/EzJfACQEMj81O9bhLAWEi4KXmNeVa5h98Wx0opz4nBAnKc69Tu38ISmPKOCWVh6gzYkRAlC4mGaXntiz69Vh8wg5u1Txn9g=
Received: from DM5PR2201CA0023.namprd22.prod.outlook.com (2603:10b6:4:14::33)
 by DM5PR1201MB0012.namprd12.prod.outlook.com (2603:10b6:3:e7::18)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3174.20; Sat, 18 Jul
 2020 08:44:30 +0000
Received: from DM6NAM11FT062.eop-nam11.prod.protection.outlook.com
 (2603:10b6:4:14:cafe::76) by DM5PR2201CA0023.outlook.office365.com
 (2603:10b6:4:14::33) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3195.19 via Frontend
 Transport; Sat, 18 Jul 2020 08:44:30 +0000
X-MS-Exchange-Authentication-Results: spf=none (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXMB02.amd.com (165.204.84.17) by
 DM6NAM11FT062.mail.protection.outlook.com (10.13.173.40) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.3195.18 via Frontend Transport; Sat, 18 Jul 2020 08:44:28 +0000
Received: from SATLEXMB06.amd.com (10.181.40.147) by SATLEXMB02.amd.com
 (10.181.40.143) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Sat, 18 Jul
 2020 03:44:28 -0500
Received: from SATLEXMB02.amd.com (10.181.40.143) by SATLEXMB06.amd.com
 (10.181.40.147) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Sat, 18 Jul
 2020 03:44:27 -0500
Received: from yajunl-gv.amd.com (10.180.168.240) by SATLEXMB02.amd.com
 (10.181.40.143) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5 via Frontend
 Transport; Sat, 18 Jul 2020 03:44:25 -0500
From: Dennis Li <Dennis.Li@amd.com>
To: <amd-gfx@lists.freedesktop.org>, <Alexander.Deucher@amd.com>,
 <Tao.Zhou1@amd.com>, <Hawking.Zhang@amd.com>, <Guchun.Chen@amd.com>
Subject: [PATCH v5] drm/amdgpu: fix system hang issue during GPU reset
Date: Sat, 18 Jul 2020 16:44:16 +0800
Message-ID: <20200718084416.24891-1-Dennis.Li@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; CTRY:US; LANG:en; SCL:1; SRV:;
 IPV:NLI; SFV:NSPM; H:SATLEXMB02.amd.com; PTR:InfoDomainNonexistent; CAT:NONE;
 SFTY:;
 SFS:(4636009)(376002)(346002)(39860400002)(136003)(396003)(46966005)(83380400001)(186003)(1076003)(86362001)(4326008)(7696005)(426003)(47076004)(26005)(316002)(81166007)(110136005)(66574015)(478600001)(82310400002)(2906002)(30864003)(6666004)(5660300002)(336012)(70586007)(356005)(70206006)(2616005)(8936002)(6636002)(8676002)(36756003)(82740400003)(2101003)(579004)(559001);
 DIR:OUT; SFP:1101; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 495822c6-eaa6-4d9f-af38-08d82af6c88a
X-MS-TrafficTypeDiagnostic: DM5PR1201MB0012:
X-Microsoft-Antispam-PRVS: <DM5PR1201MB001212015502303EE5D667CCED7D0@DM5PR1201MB0012.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:155;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 5voaa6c61uJvoTVUxw3m7FyKsxxWjcvxU2hDEF/90X1h6G1HQrriJJ3g6cBxW46sPwHlfFU7FWiuh4UptOOu97Rso8Vp/0EByfvM3QR3jmOv4ujRVgwgLIDfzbBXh33W5RA9eqsvLwr/uU/33dseFWgckhHHprudgxtpB02HyK+JKJ3qVcjh10p/vG18CbEb0Wb6j2yC/bGlxXnFBlWBGkXXEhkxwYrgmvFQVrYKFDu2FJPuQhhCcq4imDYK2hX5c3LBLL/Si8WA9AwbsjD0Z44bip79vRUJOtGWkvAqUABH6fKxvAA+IzET1asl5ra4tIxA3+1Vpo7Qs/YeLSnmRujuTMUSx5Y98mnVn8eT0rJtcBawXPRR9S3oEbGfkUZx2GYjWbzKw/Upi8TAJnBSJd9+576lHHrLqd73k442D9Q=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 18 Jul 2020 08:44:28.6929 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 495822c6-eaa6-4d9f-af38-08d82af6c88a
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXMB02.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT062.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0012
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Dennis Li <Dennis.Li@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

d2hlbiBHUFUgaGFuZywgZHJpdmVyIGhhcyBtdWx0aS1wYXRocyB0byBlbnRlciBhbWRncHVfZGV2
aWNlX2dwdV9yZWNvdmVyLAp0aGUgYXRvbWljIGFkZXYtPmluX2dwdV9yZXNldCBhbmQgaGl2ZS0+
aW5fcmVzZXQgYXJlIHVzZWQgdG8gYXZvaWQKcmUtZW50ZXJpbmcgR1BVIHJlY292ZXJ5LgoKRHVy
aW5nIEdQVSByZXNldCBhbmQgcmVzdW1lLCBpdCBpcyB1bnNhZmUgdGhhdCBvdGhlciB0aHJlYWRz
IGFjY2VzcyBHUFUsCndoaWNoIG1heWJlIGNhdXNlIEdQVSByZXNldCBmYWlsZWQuIFRoZXJlZm9y
ZSB0aGUgbmV3IHJ3X3NlbWFwaG9yZQphZGV2LT5yZXNldF9zZW0gaXMgaW50cm9kdWNlZCwgd2hp
Y2ggcHJvdGVjdCBHUFUgZnJvbSBiZWluZyBhY2Nlc3NlZCBieQpleHRlcm5hbCB0aHJlYWRzIGR1
cmluZyByZWNvdmVyeS4KCnYyOgoxLiBhZGQgcndsb2NrIGZvciBzb21lIGlvY3RscywgZGVidWdm
cyBhbmQgZmlsZS1jbG9zZSBmdW5jdGlvbi4KMi4gY2hhbmdlIHRvIHVzZSBkcW0tPmlzX3Jlc2V0
dGluZyBhbmQgZHFtX2xvY2sgZm9yIHByb3RlY3Rpb24gaW4ga2ZkCmRyaXZlci4KMy4gcmVtb3Zl
IHRyeV9sb2NrIGFuZCBjaGFuZ2UgYWRldi0+aW5fZ3B1X3Jlc2V0IGFzIGF0b21pYywgdG8gYXZv
aWQKcmUtZW50ZXIgR1BVIHJlY292ZXJ5IGZvciB0aGUgc2FtZSBHUFUgaGFuZy4KCnYzOgoxLiBj
aGFuZ2UgYmFjayB0byB1c2UgYWRldi0+cmVzZXRfc2VtIHRvIHByb3RlY3Qga2ZkIGNhbGxiYWNr
CmZ1bmN0aW9ucywgYmVjYXVzZSBkcW1fbG9jayBjb3VsZG4ndCBwcm90ZWN0IGFsbCBjb2Rlcywg
Zm9yIGV4YW1wbGU6CmZyZWVfbXFkIG11c3QgYmUgY2FsbGVkIG91dHNpZGUgb2YgZHFtX2xvY2s7
CgpbIDEyMzAuMTc2MTk5XSBIYXJkd2FyZSBuYW1lOiBTdXBlcm1pY3JvIFNZUy03MDQ5R1AtVFJU
L1gxMURQRy1RVCwgQklPUyAzLjEgMDUvMjMvMjAxOQpbIDEyMzAuMTc3MjIxXSBDYWxsIFRyYWNl
OgpbIDEyMzAuMTc4MjQ5XSAgZHVtcF9zdGFjaysweDk4LzB4ZDUKWyAxMjMwLjE3OTQ0M10gIGFt
ZGdwdV92aXJ0X2tpcV9yZWdfd3JpdGVfcmVnX3dhaXQrMHgxODEvMHgxOTAgW2FtZGdwdV0KWyAx
MjMwLjE4MDY3M10gIGdtY192OV8wX2ZsdXNoX2dwdV90bGIrMHhjYy8weDMxMCBbYW1kZ3B1XQpb
IDEyMzAuMTgxODgyXSAgYW1kZ3B1X2dhcnRfdW5iaW5kKzB4YTkvMHhlMCBbYW1kZ3B1XQpbIDEy
MzAuMTgzMDk4XSAgYW1kZ3B1X3R0bV9iYWNrZW5kX3VuYmluZCsweDQ2LzB4MTgwIFthbWRncHVd
ClsgMTIzMC4xODQyMzldICA/IHR0bV9ib19wdXQrMHgxNzEvMHg1ZjAgW3R0bV0KWyAxMjMwLjE4
NTM5NF0gIHR0bV90dF91bmJpbmQrMHgyMS8weDQwIFt0dG1dClsgMTIzMC4xODY1NThdICB0dG1f
dHRfZGVzdHJveS5wYXJ0LjEyKzB4MTIvMHg2MCBbdHRtXQpbIDEyMzAuMTg3NzA3XSAgdHRtX3R0
X2Rlc3Ryb3krMHgxMy8weDIwIFt0dG1dClsgMTIzMC4xODg4MzJdICB0dG1fYm9fY2xlYW51cF9t
ZW10eXBlX3VzZSsweDM2LzB4ODAgW3R0bV0KWyAxMjMwLjE4OTk3OV0gIHR0bV9ib19wdXQrMHgx
YmUvMHg1ZjAgW3R0bV0KWyAxMjMwLjE5MTIzMF0gIGFtZGdwdV9ib191bnJlZisweDFlLzB4MzAg
W2FtZGdwdV0KWyAxMjMwLjE5MjUyMl0gIGFtZGdwdV9hbWRrZmRfZnJlZV9ndHRfbWVtKzB4YWYv
MHgxNDAgW2FtZGdwdV0KWyAxMjMwLjE5MzgzM10gIGZyZWVfbXFkKzB4MjUvMHg0MCBbYW1kZ3B1
XQpbIDEyMzAuMTk1MTQzXSAgZGVzdHJveV9xdWV1ZV9jcHNjaCsweDFhNy8weDI3MCBbYW1kZ3B1
XQpbIDEyMzAuMTk2NDc1XSAgcHFtX2Rlc3Ryb3lfcXVldWUrMHgxMDUvMHgyNjAgW2FtZGdwdV0K
WyAxMjMwLjE5NzgxOV0gIGtmZF9pb2N0bF9kZXN0cm95X3F1ZXVlKzB4MzcvMHg3MCBbYW1kZ3B1
XQpbIDEyMzAuMTk5MTU0XSAga2ZkX2lvY3RsKzB4Mjc3LzB4NTAwIFthbWRncHVdClsgMTIzMC4y
MDA0NThdICA/IGtmZF9pb2N0bF9nZXRfY2xvY2tfY291bnRlcnMrMHg2MC8weDYwIFthbWRncHVd
ClsgMTIzMC4yMDE2NTZdICA/IHRvbW95b19maWxlX2lvY3RsKzB4MTkvMHgyMApbIDEyMzAuMjAy
ODMxXSAga3N5c19pb2N0bCsweDk4LzB4YjAKWyAxMjMwLjIwNDAwNF0gIF9feDY0X3N5c19pb2N0
bCsweDFhLzB4MjAKWyAxMjMwLjIwNTE3NF0gIGRvX3N5c2NhbGxfNjQrMHg1Zi8weDI1MApbIDEy
MzAuMjA2MzM5XSAgZW50cnlfU1lTQ0FMTF82NF9hZnRlcl9od2ZyYW1lKzB4NDkvMHhiZQoKMi4g
cmVtb3ZlIHRyeV9sb2NrIGFuZCBpbnRyb2R1Y2UgYXRvbWljIGhpdmUtPmluX3Jlc2V0LCB0byBh
dm9pZApyZS1lbnRlciBHUFUgcmVjb3ZlcnkuCgp2NDoKMS4gcmVtb3ZlIGFuIHVubmVjZXNzYXJ5
IHdoaXRlc3BhY2UgY2hhbmdlIGluIGtmZF9jaGFyZGV2LmMKMi4gcmVtb3ZlIGNvbW1lbnQgY29k
ZXMgaW4gYW1kZ3B1X2RldmljZS5jCjMuIGFkZCBtb3JlIGRldGFpbGVkIGNvbW1lbnQgaW4gY29t
bWl0IG1lc3NhZ2UKNC4gZGVmaW5lIGEgd3JhcCBmdW5jdGlvbiBhbWRncHVfaW5fcmVzZXQKCnY1
OgoxLiBGaXggc29tZSBzdHlsZSBpc3N1ZXMuCgpTaWduZWQtb2ZmLWJ5OiBEZW5uaXMgTGkgPERl
bm5pcy5MaUBhbWQuY29tPgpSZXZpZXdlZC1ieTogQW5kcmV5IEdyb2R6b3Zza3kgPGFuZHJleS5n
cm9kem92c2t5QGFtZC5jb20+ClJldmlld2VkLWJ5OiBDaHJpc3RpYW4gS8O2bmlnIDxjaHJpc3Rp
YW4ua29lbmlnQGFtZC5jb20+ClJldmlld2VkLWJ5OiBGZWxpeCBLdWVobGluZyA8RmVsaXguS3Vl
aGxpbmdAYW1kLmNvbT4KUmV2aWV3ZWQtYnk6IExpam8gTGF6YXIgPExpam8uTGF6YXJAYW1kLmNv
bT4KU3VnZ2VzdGVkLWJ5OiBMdWJlbiBUdWtvdiA8bHViZW4udHVpa292QGFtZC5jb20+CgpDaGFu
Z2UtSWQ6IEk3Zjc3YTcyNzk1NDYyNTg3ZWQ3ZDVmNTFmZTUzYTU5NGEwZjFmNzA4CgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmggYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHUuaAppbmRleCA4MGYzMmIzYmViODguLmJlOGJkM2FlNzgzYSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmgKQEAgLTk2Myw5ICs5NjMsOSBAQCBzdHJ1
Y3QgYW1kZ3B1X2RldmljZSB7CiAJYm9vbCAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbl9z
dXNwZW5kOwogCWJvb2wJCQkJaW5faGliZXJuYXRlOwogCi0JYm9vbCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBpbl9ncHVfcmVzZXQ7CisJYXRvbWljX3QgICAgICAgICAgICAgICAgICAgICAg
ICBpbl9ncHVfcmVzZXQ7CiAJZW51bSBwcF9tcDFfc3RhdGUgICAgICAgICAgICAgICBtcDFfc3Rh
dGU7Ci0Jc3RydWN0IG11dGV4ICBsb2NrX3Jlc2V0OworCXN0cnVjdCByd19zZW1hcGhvcmUJcmVz
ZXRfc2VtOwogCXN0cnVjdCBhbWRncHVfZG9vcmJlbGxfaW5kZXggZG9vcmJlbGxfaW5kZXg7CiAK
IAlzdHJ1Y3QgbXV0ZXgJCQlub3RpZmllcl9sb2NrOwpAQCAtMTI4MCw0ICsxMjgwLDkgQEAgc3Rh
dGljIGlubGluZSBib29sIGFtZGdwdV9pc190bXooc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
CiAgICAgICAgcmV0dXJuIGFkZXYtPmdtYy50bXpfZW5hYmxlZDsKIH0KIAorc3RhdGljIGlubGlu
ZSBib29sIGFtZGdwdV9pbl9yZXNldChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKK3sKKwly
ZXR1cm4gYXRvbWljX3JlYWQoJmFkZXYtPmluX2dwdV9yZXNldCkgPyB0cnVlIDogZmFsc2U7Cit9
CisKICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2FtZGtmZC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZC5jCmlu
ZGV4IDFiODY1ZmVkNzRjYS4uYTBlYTY2M2VjZGJjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X2FtZGtmZC5jCkBAIC0yNDQsMTEgKzI0NCwxNCBAQCBpbnQgYW1kZ3B1X2Ft
ZGtmZF9hbGxvY19ndHRfbWVtKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHNpemVfdCBzaXplLAogCWlm
IChjcF9tcWRfZ2Z4OSkKIAkJYnAuZmxhZ3MgfD0gQU1ER1BVX0dFTV9DUkVBVEVfQ1BfTVFEX0dG
WDk7CiAKKwlpZiAoIWRvd25fcmVhZF90cnlsb2NrKCZhZGV2LT5yZXNldF9zZW0pKQorCQlyZXR1
cm4gLUVJTzsKKwogCXIgPSBhbWRncHVfYm9fY3JlYXRlKGFkZXYsICZicCwgJmJvKTsKIAlpZiAo
cikgewogCQlkZXZfZXJyKGFkZXYtPmRldiwKIAkJCSJmYWlsZWQgdG8gYWxsb2NhdGUgQk8gZm9y
IGFtZGtmZCAoJWQpXG4iLCByKTsKLQkJcmV0dXJuIHI7CisJCWdvdG8gZXJyOwogCX0KIAogCS8q
IG1hcCB0aGUgYnVmZmVyICovCkBAIC0yODMsNiArMjg2LDcgQEAgaW50IGFtZGdwdV9hbWRrZmRf
YWxsb2NfZ3R0X21lbShzdHJ1Y3Qga2dkX2RldiAqa2dkLCBzaXplX3Qgc2l6ZSwKIAogCWFtZGdw
dV9ib191bnJlc2VydmUoYm8pOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAlyZXR1
cm4gMDsKIAogYWxsb2NhdGVfbWVtX2ttYXBfYm9fZmFpbGVkOgpAQCAtMjkxLDE5ICsyOTUsMjUg
QEAgaW50IGFtZGdwdV9hbWRrZmRfYWxsb2NfZ3R0X21lbShzdHJ1Y3Qga2dkX2RldiAqa2dkLCBz
aXplX3Qgc2l6ZSwKIAlhbWRncHVfYm9fdW5yZXNlcnZlKGJvKTsKIGFsbG9jYXRlX21lbV9yZXNl
cnZlX2JvX2ZhaWxlZDoKIAlhbWRncHVfYm9fdW5yZWYoJmJvKTsKLQorZXJyOgorCXVwX3JlYWQo
JmFkZXYtPnJlc2V0X3NlbSk7CiAJcmV0dXJuIHI7CiB9CiAKIHZvaWQgYW1kZ3B1X2FtZGtmZF9m
cmVlX2d0dF9tZW0oc3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbWVtX29iaikKIHsKKwlzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqKWtnZDsKIAlz
dHJ1Y3QgYW1kZ3B1X2JvICpibyA9IChzdHJ1Y3QgYW1kZ3B1X2JvICopIG1lbV9vYmo7CiAKKwlk
b3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlhbWRncHVfYm9fcmVzZXJ2ZShibywgdHJ1
ZSk7CiAJYW1kZ3B1X2JvX2t1bm1hcChibyk7CiAJYW1kZ3B1X2JvX3VucGluKGJvKTsKIAlhbWRn
cHVfYm9fdW5yZXNlcnZlKGJvKTsKIAlhbWRncHVfYm9fdW5yZWYoJihibykpOworCisJdXBfcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsKIH0KIAogaW50IGFtZGdwdV9hbWRrZmRfYWxsb2NfZ3dzKHN0
cnVjdCBrZ2RfZGV2ICprZ2QsIHNpemVfdCBzaXplLApAQCAtMzM1LDkgKzM0NSwxNCBAQCBpbnQg
YW1kZ3B1X2FtZGtmZF9hbGxvY19nd3Moc3RydWN0IGtnZF9kZXYgKmtnZCwgc2l6ZV90IHNpemUs
CiAKIHZvaWQgYW1kZ3B1X2FtZGtmZF9mcmVlX2d3cyhzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lk
ICptZW1fb2JqKQogeworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICopa2dkOwogCXN0cnVjdCBhbWRncHVfYm8gKmJvID0gKHN0cnVjdCBhbWRncHVf
Ym8gKiltZW1fb2JqOwogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJYW1kZ3B1
X2JvX3VucmVmKCZibyk7CisKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogfQogCiB1aW50
MzJfdCBhbWRncHVfYW1ka2ZkX2dldF9md192ZXJzaW9uKHN0cnVjdCBrZ2RfZGV2ICprZ2QsCkBA
IC02MTEsMTIgKzYyNiwxOSBAQCBpbnQgYW1kZ3B1X2FtZGtmZF9zdWJtaXRfaWIoc3RydWN0IGtn
ZF9kZXYgKmtnZCwgZW51bSBrZ2RfZW5naW5lX3R5cGUgZW5naW5lLAogCS8qIFRoaXMgd29ya3Mg
Zm9yIE5PX0hXUy4gVE9ETzogbmVlZCB0byBoYW5kbGUgd2l0aG91dCBrbm93aW5nIFZNSUQgKi8K
IAlqb2ItPnZtaWQgPSB2bWlkOwogCisJaWYgKCFkb3duX3JlYWRfdHJ5bG9jaygmYWRldi0+cmVz
ZXRfc2VtKSkgeworCQlyZXQgPSAtRUlPOworCQlnb3RvIGVycl9pYl9zY2hlZDsKKwl9CisKIAly
ZXQgPSBhbWRncHVfaWJfc2NoZWR1bGUocmluZywgMSwgaWIsIGpvYiwgJmYpOwogCWlmIChyZXQp
IHsKIAkJRFJNX0VSUk9SKCJhbWRncHU6IGZhaWxlZCB0byBzY2hlZHVsZSBJQi5cbiIpOwogCQln
b3RvIGVycl9pYl9zY2hlZDsKIAl9CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJ
cmV0ID0gZG1hX2ZlbmNlX3dhaXQoZiwgZmFsc2UpOwogCiBlcnJfaWJfc2NoZWQ6CkBAIC02NDcs
NiArNjY5LDkgQEAgaW50IGFtZGdwdV9hbWRrZmRfZmx1c2hfZ3B1X3RsYl92bWlkKHN0cnVjdCBr
Z2RfZGV2ICprZ2QsIHVpbnQxNl90IHZtaWQpCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKilrZ2Q7CiAKKwlpZiAoIWRvd25fcmVhZF90cnls
b2NrKCZhZGV2LT5yZXNldF9zZW0pKQorCQlyZXR1cm4gLUVJTzsKKwogCWlmIChhZGV2LT5mYW1p
bHkgPT0gQU1ER1BVX0ZBTUlMWV9BSSkgewogCQlpbnQgaTsKIApAQCAtNjU2LDYgKzY4MSw4IEBA
IGludCBhbWRncHVfYW1ka2ZkX2ZsdXNoX2dwdV90bGJfdm1pZChzdHJ1Y3Qga2dkX2RldiAqa2dk
LCB1aW50MTZfdCB2bWlkKQogCQlhbWRncHVfZ21jX2ZsdXNoX2dwdV90bGIoYWRldiwgdm1pZCwg
QU1ER1BVX0dGWEhVQl8wLCAwKTsKIAl9CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwor
CiAJcmV0dXJuIDA7CiB9CiAKQEAgLTY2NCwxMSArNjkxLDE4IEBAIGludCBhbWRncHVfYW1ka2Zk
X2ZsdXNoX2dwdV90bGJfcGFzaWQoc3RydWN0IGtnZF9kZXYgKmtnZCwgdWludDE2X3QgcGFzaWQp
CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKilr
Z2Q7CiAJY29uc3QgdWludDMyX3QgZmx1c2hfdHlwZSA9IDA7CiAJYm9vbCBhbGxfaHViID0gZmFs
c2U7CisJaW50IHJldCA9IC1FSU87CiAKIAlpZiAoYWRldi0+ZmFtaWx5ID09IEFNREdQVV9GQU1J
TFlfQUkpCiAJCWFsbF9odWIgPSB0cnVlOwogCi0JcmV0dXJuIGFtZGdwdV9nbWNfZmx1c2hfZ3B1
X3RsYl9wYXNpZChhZGV2LCBwYXNpZCwgZmx1c2hfdHlwZSwgYWxsX2h1Yik7CisJaWYgKGRvd25f
cmVhZF90cnlsb2NrKCZhZGV2LT5yZXNldF9zZW0pKSB7CisJCXJldCA9IGFtZGdwdV9nbWNfZmx1
c2hfZ3B1X3RsYl9wYXNpZChhZGV2LAorCQkJCQlwYXNpZCwgZmx1c2hfdHlwZSwgYWxsX2h1Yik7
CisJCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisJfQorCisJcmV0dXJuIHJldDsKIH0KIAog
Ym9vbCBhbWRncHVfYW1ka2ZkX2hhdmVfYXRvbWljc19zdXBwb3J0KHN0cnVjdCBrZ2RfZGV2ICpr
Z2QpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2Zk
X2dmeF92MTAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4
X3YxMC5jCmluZGV4IDY5MWM4OTcwNWJjZC4uYjg3MmNkYjBiNzA1IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYwpAQCAtNTQzLDcg
KzU0Myw3IEBAIHN0YXRpYyBpbnQga2dkX2hxZF9kZXN0cm95KHN0cnVjdCBrZ2RfZGV2ICprZ2Qs
IHZvaWQgKm1xZCwKIAl1aW50MzJfdCB0ZW1wOwogCXN0cnVjdCB2MTBfY29tcHV0ZV9tcWQgKm0g
PSBnZXRfbXFkKG1xZCk7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVf
aW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRUlPOwogCiAjaWYgMApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjcuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y3LmMKaW5kZXggMGI3ZTc4NzQ4
NTQwLi44MzJhMjAwYmI2MmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y3LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X2FtZGtmZF9nZnhfdjcuYwpAQCAtNDI1LDcgKzQyNSw3IEBAIHN0YXRpYyBpbnQga2dk
X2hxZF9kZXN0cm95KHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCwKIAl1bnNpZ25lZCBs
b25nIGZsYWdzLCBlbmRfamlmZmllczsKIAlpbnQgcmV0cnk7CiAKLQlpZiAoYWRldi0+aW5fZ3B1
X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRUlPOwogCiAJ
YWNxdWlyZV9xdWV1ZShrZ2QsIHBpcGVfaWQsIHF1ZXVlX2lkKTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OC5jCmluZGV4IGNjZDYzNWI4MTJi
NS4uZDA5NDAxMjFhNmE5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfYW1ka2ZkX2dmeF92OC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Ft
ZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMKQEAgLTQyMSw3ICs0MjEsNyBAQCBzdGF0aWMgaW50IGtnZF9o
cWRfZGVzdHJveShzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJaW50IHJldHJ5Owog
CXN0cnVjdCB2aV9tcWQgKm0gPSBnZXRfbXFkKG1xZCk7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jl
c2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRUlPOwogCiAJYWNx
dWlyZV9xdWV1ZShrZ2QsIHBpcGVfaWQsIHF1ZXVlX2lkKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y5LmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OS5jCmluZGV4IGRmODQxYzJhYzVlNy4u
MDMyZDNjODY2MjgwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2dmeF92OS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hbWRrZmRfZ2Z4X3Y5LmMKQEAgLTU0MSw3ICs1NDEsNyBAQCBpbnQga2dkX2dmeF92OV9ocWRf
ZGVzdHJveShzdHJ1Y3Qga2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJdWludDMyX3QgdGVtcDsK
IAlzdHJ1Y3QgdjlfbXFkICptID0gZ2V0X21xZChtcWQpOwogCi0JaWYgKGFkZXYtPmluX2dwdV9y
ZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVJTzsKIAogCWFj
cXVpcmVfcXVldWUoa2dkLCBwaXBlX2lkLCBxdWV1ZV9pZCk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMKaW5kZXggYzQwODkzNmU4Zjk4Li44
NzAzYWExZmU0YTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hbWRrZmRfZ3B1dm0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
YW1ka2ZkX2dwdXZtLmMKQEAgLTExOTAsNiArMTE5MCw5IEBAIGludCBhbWRncHVfYW1ka2ZkX2dw
dXZtX2FsbG9jX21lbW9yeV9vZl9ncHUoCiAJCXJldHVybiAtRUlOVkFMOwogCX0KIAorCWlmICgh
ZG93bl9yZWFkX3RyeWxvY2soJmFkZXYtPnJlc2V0X3NlbSkpCisJCXJldHVybiAtRUlPOworCiAJ
Km1lbSA9IGt6YWxsb2Moc2l6ZW9mKHN0cnVjdCBrZ2RfbWVtKSwgR0ZQX0tFUk5FTCk7CiAJaWYg
KCEqbWVtKSB7CiAJCXJldCA9IC1FTk9NRU07CkBAIC0xMjU2LDYgKzEyNTksNyBAQCBpbnQgYW1k
Z3B1X2FtZGtmZF9ncHV2bV9hbGxvY19tZW1vcnlfb2ZfZ3B1KAogCWlmIChvZmZzZXQpCiAJCSpv
ZmZzZXQgPSBhbWRncHVfYm9fbW1hcF9vZmZzZXQoYm8pOwogCisJdXBfcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKIAlyZXR1cm4gMDsKIAogYWxsb2NhdGVfaW5pdF91c2VyX3BhZ2VzX2ZhaWxlZDoK
QEAgLTEyNzMsNiArMTI3Nyw5IEBAIGludCBhbWRncHVfYW1ka2ZkX2dwdXZtX2FsbG9jX21lbW9y
eV9vZl9ncHUoCiAJCXNnX2ZyZWVfdGFibGUoc2cpOwogCQlrZnJlZShzZyk7CiAJfQorCisJdXBf
cmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCXJldHVybiByZXQ7CiB9CiAKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jcy5jIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMKaW5kZXggZmZiY2FmNGJmYjhiLi5hOTRiM2Y4NjJmYzIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jcy5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jcy5jCkBAIC0xMjkyLDYgKzEyOTIs
OCBAQCBpbnQgYW1kZ3B1X2NzX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRh
dGEsIHN0cnVjdCBkcm1fZmlsZSAqZmlscCkKIAlwYXJzZXIuYWRldiA9IGFkZXY7CiAJcGFyc2Vy
LmZpbHAgPSBmaWxwOwogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJciA9IGFt
ZGdwdV9jc19wYXJzZXJfaW5pdCgmcGFyc2VyLCBkYXRhKTsKIAlpZiAocikgewogCQlEUk1fRVJS
T1IoIkZhaWxlZCB0byBpbml0aWFsaXplIHBhcnNlciAlZCFcbiIsIHIpOwpAQCAtMTMzMSw2ICsx
MzMzLDggQEAgaW50IGFtZGdwdV9jc19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lk
ICpkYXRhLCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbHApCiBvdXQ6CiAJYW1kZ3B1X2NzX3BhcnNlcl9m
aW5pKCZwYXJzZXIsIHIsIHJlc2VydmVkX2J1ZmZlcnMpOwogCisJdXBfcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKKwogCXJldHVybiByOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfY3R4LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfY3R4LmMKaW5kZXggODg0MmM1NWQ0NDkwLi5kODVkMTNmN2EwNDMgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jdHguYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfY3R4LmMKQEAgLTM1OCw2ICszNTgsOCBAQCBzdGF0aWMgaW50
IGFtZGdwdV9jdHhfcXVlcnkyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCWlmIChhdG9t
aWNfcmVhZCgmY3R4LT5ndWlsdHkpKQogCQlvdXQtPnN0YXRlLmZsYWdzIHw9IEFNREdQVV9DVFhf
UVVFUlkyX0ZMQUdTX0dVSUxUWTsKIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwog
CS8qcXVlcnkgdWUgY291bnQqLwogCXJhc19jb3VudGVyID0gYW1kZ3B1X3Jhc19xdWVyeV9lcnJv
cl9jb3VudChhZGV2LCBmYWxzZSk7CiAJLypyYXMgY291bnRlciBpcyBtb25vdG9uaWMgaW5jcmVh
c2luZyovCkBAIC0zNzMsNiArMzc1LDggQEAgc3RhdGljIGludCBhbWRncHVfY3R4X3F1ZXJ5Mihz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkJY3R4LT5yYXNfY291bnRlcl9jZSA9IHJhc19j
b3VudGVyOwogCX0KIAorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAltdXRleF91bmxv
Y2soJm1nci0+bG9jayk7CiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X2RlYnVnZnMuYwppbmRleCBhZWFkYTdjOWZiZWEuLjFiYjRjOGI2YTg2NiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RlYnVnZnMuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGVidWdmcy5jCkBAIC0xMDAsMTQg
KzEwMCwxNCBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX2F1dG9kdW1wX29wZW4oc3RydWN0
IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCiAKIAlmaWxlLT5wcml2YXRlX2RhdGEg
PSBhZGV2OwogCi0JbXV0ZXhfbG9jaygmYWRldi0+bG9ja19yZXNldCk7CisJZG93bl9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOwogCWlmIChhZGV2LT5hdXRvZHVtcC5kdW1waW5nLmRvbmUpIHsKIAkJ
cmVpbml0X2NvbXBsZXRpb24oJmFkZXYtPmF1dG9kdW1wLmR1bXBpbmcpOwogCQlyZXQgPSAwOwog
CX0gZWxzZSB7CiAJCXJldCA9IC1FQlVTWTsKIAl9Ci0JbXV0ZXhfdW5sb2NrKCZhZGV2LT5sb2Nr
X3Jlc2V0KTsKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCiAJcmV0dXJuIHJldDsKIH0K
QEAgLTEyNiw3ICsxMjYsNyBAQCBzdGF0aWMgdW5zaWduZWQgaW50IGFtZGdwdV9kZWJ1Z2ZzX2F1
dG9kdW1wX3BvbGwoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBwb2xsXwogCiAJcG9sbF93YWl0
KGZpbGUsICZhZGV2LT5hdXRvZHVtcC5ncHVfaGFuZywgcG9sbF90YWJsZSk7CiAKLQlpZiAoYWRl
di0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiBQ
T0xMSU4gfCBQT0xMUkROT1JNIHwgUE9MTFdSTk9STTsKIAogCXJldHVybiAwOwpAQCAtMTE4OCw3
ICsxMTg4LDcgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdmc190ZXN0X2liKHN0cnVjdCBzZXFf
ZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAl9CiAKIAkvKiBBdm9pZCBhY2NpZGVudGx5IHVucGFya2lu
ZyB0aGUgc2NoZWQgdGhyZWFkIGR1cmluZyBHUFUgcmVzZXQgKi8KLQltdXRleF9sb2NrKCZhZGV2
LT5sb2NrX3Jlc2V0KTsKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAKIAkvKiBob2xk
IG9uIHRoZSBzY2hlZHVsZXIgKi8KIAlmb3IgKGkgPSAwOyBpIDwgQU1ER1BVX01BWF9SSU5HUzsg
aSsrKSB7CkBAIC0xMjE1LDcgKzEyMTUsNyBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3Rl
c3RfaWIoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogCQlrdGhyZWFkX3VucGFyayhy
aW5nLT5zY2hlZC50aHJlYWQpOwogCX0KIAotCW11dGV4X3VubG9jaygmYWRldi0+bG9ja19yZXNl
dCk7CisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAogCXBtX3J1bnRpbWVfbWFya19sYXN0
X2J1c3koZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRldi0+ZGV2KTsK
QEAgLTEzOTUsNyArMTM5NSw3IEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2RlYnVnZnNfaWJfcHJlZW1w
dCh2b2lkICpkYXRhLCB1NjQgdmFsKQogCQlyZXR1cm4gLUVOT01FTTsKIAogCS8qIEF2b2lkIGFj
Y2lkZW50bHkgdW5wYXJraW5nIHRoZSBzY2hlZCB0aHJlYWQgZHVyaW5nIEdQVSByZXNldCAqLwot
CW11dGV4X2xvY2soJmFkZXYtPmxvY2tfcmVzZXQpOworCWRvd25fcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsKIAogCS8qIHN0b3AgdGhlIHNjaGVkdWxlciAqLwogCWt0aHJlYWRfcGFyayhyaW5nLT5z
Y2hlZC50aHJlYWQpOwpAQCAtMTQzNiw3ICsxNDM2LDcgQEAgc3RhdGljIGludCBhbWRncHVfZGVi
dWdmc19pYl9wcmVlbXB0KHZvaWQgKmRhdGEsIHU2NCB2YWwpCiAJLyogcmVzdGFydCB0aGUgc2No
ZWR1bGVyICovCiAJa3RocmVhZF91bnBhcmsocmluZy0+c2NoZWQudGhyZWFkKTsKIAotCW11dGV4
X3VubG9jaygmYWRldi0+bG9ja19yZXNldCk7CisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsK
IAogCXR0bV9ib191bmxvY2tfZGVsYXllZF93b3JrcXVldWUoJmFkZXYtPm1tYW4uYmRldiwgcmVz
Y2hlZCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9k
ZXZpY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYwppbmRl
eCAyOTEzZTQxZjYzYTUuLjVmMDIwMWZkMmRiNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2RldmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9kZXZpY2UuYwpAQCAtMTkyOSw3ICsxOTI5LDcgQEAgc3RhdGljIGludCBhbWRn
cHVfZGV2aWNlX2Z3X2xvYWRpbmcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCQlpZiAo
YWRldi0+aXBfYmxvY2tzW2ldLnN0YXR1cy5odyA9PSB0cnVlKQogCQkJCWJyZWFrOwogCi0JCQlp
ZiAoYWRldi0+aW5fZ3B1X3Jlc2V0IHx8IGFkZXYtPmluX3N1c3BlbmQpIHsKKwkJCWlmIChhbWRn
cHVfaW5fcmVzZXQoYWRldikgfHwgYWRldi0+aW5fc3VzcGVuZCkgewogCQkJCXIgPSBhZGV2LT5p
cF9ibG9ja3NbaV0udmVyc2lvbi0+ZnVuY3MtPnJlc3VtZShhZGV2KTsKIAkJCQlpZiAocikgewog
CQkJCQlEUk1fRVJST1IoInJlc3VtZSBvZiBJUCBibG9jayA8JXM+IGZhaWxlZCAlZFxuIiwKQEAg
LTIxMDAsNyArMjEwMCw3IEBAIHN0YXRpYyBib29sIGFtZGdwdV9kZXZpY2VfY2hlY2tfdnJhbV9s
b3N0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCQkJQU1ER1BVX1JFU0VUX01BR0lDX05V
TSkpCiAJCXJldHVybiB0cnVlOwogCi0JaWYgKCFhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKCFh
bWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiBmYWxzZTsKIAogCS8qCkBAIC0zMDI2LDcg
KzMwMjYsOCBAQCBpbnQgYW1kZ3B1X2RldmljZV9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2LAogCW11dGV4X2luaXQoJmFkZXYtPm1uX2xvY2spOwogCW11dGV4X2luaXQoJmFkZXYtPnZp
cnQudmZfZXJyb3JzLmxvY2spOwogCWhhc2hfaW5pdChhZGV2LT5tbl9oYXNoKTsKLQltdXRleF9p
bml0KCZhZGV2LT5sb2NrX3Jlc2V0KTsKKwlpbml0X3J3c2VtKCZhZGV2LT5yZXNldF9zZW0pOwor
CWF0b21pY19zZXQoJmFkZXYtPmluX2dwdV9yZXNldCwgMCk7CiAJbXV0ZXhfaW5pdCgmYWRldi0+
cHNwLm11dGV4KTsKIAltdXRleF9pbml0KCZhZGV2LT5ub3RpZmllcl9sb2NrKTsKIApAQCAtNDA1
NCw4ICs0MDU1LDExIEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2RvX2FzaWNfcmVzZXQoc3RydWN0IGFt
ZGdwdV9oaXZlX2luZm8gKmhpdmUsCiAJbGlzdF9mb3JfZWFjaF9lbnRyeSh0bXBfYWRldiwgZGV2
aWNlX2xpc3RfaGFuZGxlLCBnbWMueGdtaS5oZWFkKSB7CiAJCWlmIChuZWVkX2Z1bGxfcmVzZXQp
IHsKIAkJCS8qIHBvc3QgY2FyZCAqLwotCQkJaWYgKGFtZGdwdV9hdG9tX2FzaWNfaW5pdCh0bXBf
YWRldi0+bW9kZV9pbmZvLmF0b21fY29udGV4dCkpCi0JCQkJRFJNX1dBUk4oImFzaWMgYXRvbSBp
bml0IGZhaWxlZCEiKTsKKwkJCWlmIChhbWRncHVfYXRvbV9hc2ljX2luaXQodG1wX2FkZXYtPm1v
ZGVfaW5mby5hdG9tX2NvbnRleHQpKSB7CisJCQkJZGV2X3dhcm4odG1wX2FkZXYtPmRldiwgImFz
aWMgYXRvbSBpbml0IGZhaWxlZCEiKTsKKwkJCQlyID0gLUVBR0FJTjsKKwkJCQlnb3RvIG91dDsK
KwkJCX0KIAogCQkJaWYgKCFyKSB7CiAJCQkJZGV2X2luZm8odG1wX2FkZXYtPmRldiwgIkdQVSBy
ZXNldCBzdWNjZWVkZWQsIHRyeWluZyB0byByZXN1bWVcbiIpOwpAQCAtNDEzMSwxNiArNDEzNSwx
NCBAQCBzdGF0aWMgaW50IGFtZGdwdV9kb19hc2ljX3Jlc2V0KHN0cnVjdCBhbWRncHVfaGl2ZV9p
bmZvICpoaXZlLAogCXJldHVybiByOwogfQogCi1zdGF0aWMgYm9vbCBhbWRncHVfZGV2aWNlX2xv
Y2tfYWRldihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgYm9vbCB0cnlsb2NrKQorc3RhdGlj
IGJvb2wgYW1kZ3B1X2RldmljZV9sb2NrX2FkZXYoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
CiB7Ci0JaWYgKHRyeWxvY2spIHsKLQkJaWYgKCFtdXRleF90cnlsb2NrKCZhZGV2LT5sb2NrX3Jl
c2V0KSkKLQkJCXJldHVybiBmYWxzZTsKLQl9IGVsc2UKLQkJbXV0ZXhfbG9jaygmYWRldi0+bG9j
a19yZXNldCk7CisJaWYgKGF0b21pY19jbXB4Y2hnKCZhZGV2LT5pbl9ncHVfcmVzZXQsIDAsIDEp
ICE9IDApCisJCXJldHVybiBmYWxzZTsKKworCWRvd25fd3JpdGUoJmFkZXYtPnJlc2V0X3NlbSk7
CiAKIAlhdG9taWNfaW5jKCZhZGV2LT5ncHVfcmVzZXRfY291bnRlcik7Ci0JYWRldi0+aW5fZ3B1
X3Jlc2V0ID0gdHJ1ZTsKIAlzd2l0Y2ggKGFtZGdwdV9hc2ljX3Jlc2V0X21ldGhvZChhZGV2KSkg
ewogCWNhc2UgQU1EX1JFU0VUX01FVEhPRF9NT0RFMToKIAkJYWRldi0+bXAxX3N0YXRlID0gUFBf
TVAxX1NUQVRFX1NIVVRET1dOOwpAQCAtNDE2MCw4ICs0MTYyLDggQEAgc3RhdGljIHZvaWQgYW1k
Z3B1X2RldmljZV91bmxvY2tfYWRldihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIHsKIAlh
bWRncHVfdmZfZXJyb3JfdHJhbnNfYWxsKGFkZXYpOwogCWFkZXYtPm1wMV9zdGF0ZSA9IFBQX01Q
MV9TVEFURV9OT05FOwotCWFkZXYtPmluX2dwdV9yZXNldCA9IGZhbHNlOwotCW11dGV4X3VubG9j
aygmYWRldi0+bG9ja19yZXNldCk7CisJYXRvbWljX3NldCgmYWRldi0+aW5fZ3B1X3Jlc2V0LCAw
KTsKKwl1cF93cml0ZSgmYWRldi0+cmVzZXRfc2VtKTsKIH0KIAogc3RhdGljIHZvaWQgYW1kZ3B1
X2RldmljZV9yZXN1bWVfZGlzcGxheV9hdWRpbyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikK
QEAgLTQyNzAsMTIgKzQyNzIsMTQgQEAgaW50IGFtZGdwdV9kZXZpY2VfZ3B1X3JlY292ZXIoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJICogV2UgYWx3YXlzIHJlc2V0IGFsbCBzY2hlZHVs
ZXJzIGZvciBkZXZpY2UgYW5kIGFsbCBkZXZpY2VzIGZvciBYR01JCiAJICogaGl2ZSBzbyB0aGF0
IHNob3VsZCB0YWtlIGNhcmUgb2YgdGhlbSB0b28uCiAJICovCi0JaGl2ZSA9IGFtZGdwdV9nZXRf
eGdtaV9oaXZlKGFkZXYsIHRydWUpOwotCWlmIChoaXZlICYmICFtdXRleF90cnlsb2NrKCZoaXZl
LT5yZXNldF9sb2NrKSkgewotCQlEUk1fSU5GTygiQmFpbGluZyBvbiBURFIgZm9yIHNfam9iOiVs
bHgsIGhpdmU6ICVsbHggYXMgYW5vdGhlciBhbHJlYWR5IGluIHByb2dyZXNzIiwKLQkJCSAgam9i
ID8gam9iLT5iYXNlLmlkIDogLTEsIGhpdmUtPmhpdmVfaWQpOwotCQltdXRleF91bmxvY2soJmhp
dmUtPmhpdmVfbG9jayk7Ci0JCXJldHVybiAwOworCWhpdmUgPSBhbWRncHVfZ2V0X3hnbWlfaGl2
ZShhZGV2LCBmYWxzZSk7CisJaWYgKGhpdmUpIHsKKwkJaWYgKGF0b21pY19jbXB4Y2hnKCZoaXZl
LT5pbl9yZXNldCwgMCwgMSkgIT0gMCkgeworCQkJRFJNX0lORk8oIkJhaWxpbmcgb24gVERSIGZv
ciBzX2pvYjolbGx4LCBoaXZlOiAlbGx4IGFzIGFub3RoZXIgYWxyZWFkeSBpbiBwcm9ncmVzcyIs
CisJCQkJam9iID8gam9iLT5iYXNlLmlkIDogLTEsIGhpdmUtPmhpdmVfaWQpOworCQkJcmV0dXJu
IDA7CisJCX0KKwkJbXV0ZXhfbG9jaygmaGl2ZS0+aGl2ZV9sb2NrKTsKIAl9CiAKIAkvKgpAQCAt
NDI5NywxMSArNDMwMSwxMSBAQCBpbnQgYW1kZ3B1X2RldmljZV9ncHVfcmVjb3ZlcihzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldiwKIAogCS8qIGJsb2NrIGFsbCBzY2hlZHVsZXJzIGFuZCByZXNl
dCBnaXZlbiBqb2IncyByaW5nICovCiAJbGlzdF9mb3JfZWFjaF9lbnRyeSh0bXBfYWRldiwgZGV2
aWNlX2xpc3RfaGFuZGxlLCBnbWMueGdtaS5oZWFkKSB7Ci0JCWlmICghYW1kZ3B1X2RldmljZV9s
b2NrX2FkZXYodG1wX2FkZXYsICFoaXZlKSkgeworCQlpZiAoIWFtZGdwdV9kZXZpY2VfbG9ja19h
ZGV2KHRtcF9hZGV2KSkgewogCQkJRFJNX0lORk8oIkJhaWxpbmcgb24gVERSIGZvciBzX2pvYjol
bGx4LCBhcyBhbm90aGVyIGFscmVhZHkgaW4gcHJvZ3Jlc3MiLAogCQkJCSAgam9iID8gam9iLT5i
YXNlLmlkIDogLTEpOwotCQkJbXV0ZXhfdW5sb2NrKCZoaXZlLT5oaXZlX2xvY2spOwotCQkJcmV0
dXJuIDA7CisJCQlyID0gMDsKKwkJCWdvdG8gc2tpcF9yZWNvdmVyeTsKIAkJfQogCiAJCS8qCkBA
IC00NDM0LDggKzQ0MzgsOSBAQCBpbnQgYW1kZ3B1X2RldmljZV9ncHVfcmVjb3ZlcihzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldiwKIAkJYW1kZ3B1X2RldmljZV91bmxvY2tfYWRldih0bXBfYWRl
dik7CiAJfQogCitza2lwX3JlY292ZXJ5OgogCWlmIChoaXZlKSB7Ci0JCW11dGV4X3VubG9jaygm
aGl2ZS0+cmVzZXRfbG9jayk7CisJCWF0b21pY19zZXQoJmhpdmUtPmluX3Jlc2V0LCAwKTsKIAkJ
bXV0ZXhfdW5sb2NrKCZoaXZlLT5oaXZlX2xvY2spOwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X2dlbS5jCmluZGV4IDc3ZDk4OGEwMDMzZi4uOTZkZjM2NjlhOWQyIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZ2VtLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dlbS5jCkBAIC02NzAsNiArNjcwLDggQEAg
aW50IGFtZGdwdV9nZW1fdmFfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0
YSwKIAkJYm9fdmEgPSBOVUxMOwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsK
KwogCXN3aXRjaCAoYXJncy0+b3BlcmF0aW9uKSB7CiAJY2FzZSBBTURHUFVfVkFfT1BfTUFQOgog
CQl2YV9mbGFncyA9IGFtZGdwdV9nZW1fdmFfbWFwX2ZsYWdzKGFkZXYsIGFyZ3MtPmZsYWdzKTsK
QEAgLTY5OSw2ICs3MDEsOCBAQCBpbnQgYW1kZ3B1X2dlbV92YV9pb2N0bChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQlhbWRncHVfZ2VtX3ZhX3VwZGF0ZV92bShhZGV2LCAm
ZnByaXYtPnZtLCBib192YSwKIAkJCQkJYXJncy0+b3BlcmF0aW9uKTsKIAorCXVwX3JlYWQoJmFk
ZXYtPnJlc2V0X3NlbSk7CisKIGVycm9yX2JhY2tvZmY6CiAJdHRtX2V1X2JhY2tvZmZfcmVzZXJ2
YXRpb24oJnRpY2tldCwgJmxpc3QpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfZ2Z4LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
Z2Z4LmMKaW5kZXggZDYxMjAzM2EyM2FjLi40YTNmZTE5MTNiMGEgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZnguYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfZ2Z4LmMKQEAgLTcxMCw3ICs3MTAsNyBAQCB1aW50MzJfdCBhbWRn
cHVfa2lxX3JyZWcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQzMl90IHJlZykKIAkg
KgogCSAqIGFsc28gZG9uJ3Qgd2FpdCBhbnltb3JlIGZvciBJUlEgY29udGV4dAogCSAqICovCi0J
aWYgKHIgPCAxICYmIChhZGV2LT5pbl9ncHVfcmVzZXQgfHwgaW5faW50ZXJydXB0KCkpKQorCWlm
IChyIDwgMSAmJiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpIHx8IGluX2ludGVycnVwdCgpKSkKIAkJ
Z290byBmYWlsZWRfa2lxX3JlYWQ7CiAKIAltaWdodF9zbGVlcCgpOwpAQCAtNzY4LDcgKzc2OCw3
IEBAIHZvaWQgYW1kZ3B1X2tpcV93cmVnKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1aW50
MzJfdCByZWcsIHVpbnQzMl90IHYpCiAJICoKIAkgKiBhbHNvIGRvbid0IHdhaXQgYW55bW9yZSBm
b3IgSVJRIGNvbnRleHQKIAkgKiAqLwotCWlmIChyIDwgMSAmJiAoYWRldi0+aW5fZ3B1X3Jlc2V0
IHx8IGluX2ludGVycnVwdCgpKSkKKwlpZiAociA8IDEgJiYgKGFtZGdwdV9pbl9yZXNldChhZGV2
KSB8fCBpbl9pbnRlcnJ1cHQoKSkpCiAJCWdvdG8gZmFpbGVkX2tpcV93cml0ZTsKIAogCW1pZ2h0
X3NsZWVwKCk7CkBAIC03ODcsNSArNzg3LDUgQEAgdm9pZCBhbWRncHVfa2lxX3dyZWcoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQzMl90IHJlZywgdWludDMyX3QgdikKIAlhbWRncHVf
cmluZ191bmRvKHJpbmcpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmtpcS0+cmluZ19sb2Nr
LCBmbGFncyk7CiBmYWlsZWRfa2lxX3dyaXRlOgotCXByX2VycigiZmFpbGVkIHRvIHdyaXRlIHJl
ZzoleFxuIiwgcmVnKTsKKwlkZXZfd2FybihhZGV2LT5kZXYsICJmYWlsZWQgdG8gd3JpdGUgcmVn
OiV4XG4iLCByZWcpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X2pvYi5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2pvYi5jCmlu
ZGV4IDkzNzAyOWFkNTI3MS4uNzVkMzdkZmI1MWFhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfam9iLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X2pvYi5jCkBAIC0yMjAsMTcgKzIyMCwxNyBAQCBzdGF0aWMgc3RydWN0IGRtYV9m
ZW5jZSAqYW1kZ3B1X2pvYl9ydW4oc3RydWN0IGRybV9zY2hlZF9qb2IgKnNjaGVkX2pvYikKIAog
CXRyYWNlX2FtZGdwdV9zY2hlZF9ydW5fam9iKGpvYik7CiAKLQlpZiAoam9iLT52cmFtX2xvc3Rf
Y291bnRlciAhPSBhdG9taWNfcmVhZCgmcmluZy0+YWRldi0+dnJhbV9sb3N0X2NvdW50ZXIpKQot
CQlkbWFfZmVuY2Vfc2V0X2Vycm9yKGZpbmlzaGVkLCAtRUNBTkNFTEVEKTsvKiBza2lwIElCIGFz
IHdlbGwgaWYgVlJBTSBsb3N0ICovCi0KLQlpZiAoZmluaXNoZWQtPmVycm9yIDwgMCkgewotCQlE
Uk1fSU5GTygiU2tpcCBzY2hlZHVsaW5nIElCcyFcbiIpOwotCX0gZWxzZSB7CisJaWYgKGRvd25f
cmVhZF90cnlsb2NrKCZyaW5nLT5hZGV2LT5yZXNldF9zZW0pKSB7CiAJCXIgPSBhbWRncHVfaWJf
c2NoZWR1bGUocmluZywgam9iLT5udW1faWJzLCBqb2ItPmlicywgam9iLAotCQkJCSAgICAgICAm
ZmVuY2UpOworCQkJCQkmZmVuY2UpOworCQl1cF9yZWFkKCZyaW5nLT5hZGV2LT5yZXNldF9zZW0p
OwogCQlpZiAocikKIAkJCURSTV9FUlJPUigiRXJyb3Igc2NoZWR1bGluZyBJQnMgKCVkKVxuIiwg
cik7CisJfSBlbHNlIHsKKwkJZG1hX2ZlbmNlX3NldF9lcnJvcihmaW5pc2hlZCwgLUVDQU5DRUxF
RCk7CisJCURSTV9JTkZPKCJTa2lwIHNjaGVkdWxpbmcgSUJzIVxuIik7CiAJfQorCiAJLyogaWYg
Z3B1IHJlc2V0LCBodyBmZW5jZSB3aWxsIGJlIHJlcGxhY2VkIGhlcmUgKi8KIAlkbWFfZmVuY2Vf
cHV0KGpvYi0+ZmVuY2UpOwogCWpvYi0+ZmVuY2UgPSBkbWFfZmVuY2VfZ2V0KGZlbmNlKTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9rbXMuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9rbXMuYwppbmRleCA5YzJjNWU0ZWQxZWIuLmVl
YmJlMjEwM2UzMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2ttcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9rbXMuYwpAQCAt
MTA4NCw2ICsxMDg0LDggQEAgdm9pZCBhbWRncHVfZHJpdmVyX3Bvc3RjbG9zZV9rbXMoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwKIAlpZiAoIWZwcml2KQogCQlyZXR1cm47CiAKKwlkb3duX3JlYWQo
JmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX2dldF9zeW5jKGRldi0+ZGV2KTsKIAog
CWlmIChhbWRncHVfZGV2aWNlX2lwX2dldF9pcF9ibG9jayhhZGV2LCBBTURfSVBfQkxPQ0tfVFlQ
RV9VVkQpICE9IE5VTEwpCkBAIC0xMTIyLDYgKzExMjQsOCBAQCB2b2lkIGFtZGdwdV9kcml2ZXJf
cG9zdGNsb3NlX2ttcyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCiAJcG1fcnVudGltZV9tYXJr
X2xhc3RfYnVzeShkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGV2LT5k
ZXYpOworCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIH0KIAogLyoKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMKaW5kZXggZDI0MDEzNzliZDMzLi5hNzc4NjIxZWRjNjUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jCkBAIC0xNjMsNyArMTYzLDcg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wb3dlcl9kcG1fc3RhdGUoc3RydWN0IGRldmlj
ZSAqZGV2LAogCWVudW0gYW1kX3BtX3N0YXRlX3R5cGUgcG07CiAJaW50IHJldDsKIAotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJu
IC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTE3
Miw2ICsxNzIsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3Bvd2VyX2RwbV9zdGF0ZShz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7CiAJCWlmIChh
ZGV2LT5zbXUucHB0X2Z1bmNzLT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZSkKIAkJCXBtID0gc211
X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKCZhZGV2LT5zbXUpOwpAQCAtMTgzLDYgKzE4NSw4IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcG93ZXJfZHBtX3N0YXRlKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJcG0gPSBhZGV2LT5wbS5kcG0udXNlcl9zdGF0ZTsKIAl9CiAKKwl1cF9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYp
OwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTIwMSw3ICsy
MDUsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bvd2VyX2RwbV9zdGF0ZShzdHJ1Y3Qg
ZGV2aWNlICpkZXYsCiAJZW51bSBhbWRfcG1fc3RhdGVfdHlwZSAgc3RhdGU7CiAJaW50IHJldDsK
IAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkK
IAkJcmV0dXJuIC1FUEVSTTsKIAogCWlmIChzdHJuY21wKCJiYXR0ZXJ5IiwgYnVmLCBzdHJsZW4o
ImJhdHRlcnkiKSkgPT0gMCkKQEAgLTIxOSw2ICsyMjMsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfc2V0X3Bvd2VyX2RwbV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7
CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRf
c3dfc211KGFkZXYpKSB7CiAJCW11dGV4X2xvY2soJmFkZXYtPnBtLm11dGV4KTsKIAkJYWRldi0+
cG0uZHBtLnVzZXJfc3RhdGUgPSBzdGF0ZTsKQEAgLTIzMiw2ICsyMzgsOSBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfc2V0X3Bvd2VyX2RwbV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAKIAkJ
YW1kZ3B1X3BtX2NvbXB1dGVfY2xvY2tzKGFkZXYpOwogCX0KKworCXVwX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1f
cnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMzA3LDcgKzMxNiw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xl
dmVsKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbnVtIGFtZF9kcG1fZm9yY2VkX2xldmVsIGxldmVs
ID0gMHhmZjsKIAlpbnQgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGlt
ZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtMzE2LDYgKzMyNSw4IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9nZXRfcG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZp
Y2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCWxldmVsID0gc211X2dldF9w
ZXJmb3JtYW5jZV9sZXZlbCgmYWRldi0+c211KTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPmdldF9wZXJmb3JtYW5jZV9sZXZlbCkKQEAgLTMyMyw2ICszMzQsOCBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfZ2V0X3Bvd2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9sZXZlbChz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJZWxzZQogCQlsZXZlbCA9IGFkZXYtPnBtLmRwbS5mb3JjZWRf
bGV2ZWw7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJr
X2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYt
PmRldik7CiAKQEAgLTM0OSw3ICszNjIsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bv
d2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9sZXZlbChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJZW51
bSBhbWRfZHBtX2ZvcmNlZF9sZXZlbCBjdXJyZW50X2xldmVsID0gMHhmZjsKIAlpbnQgcmV0ID0g
MDsKIAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2
KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCWlmIChzdHJuY21wKCJsb3ciLCBidWYsIHN0cmxlbigi
bG93IikpID09IDApIHsKQEAgLTM4MCw2ICszOTMsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVf
c2V0X3Bvd2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9sZXZlbChzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJ
aWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQljdXJyZW50X2xldmVsID0gc211X2dldF9w
ZXJmb3JtYW5jZV9sZXZlbCgmYWRldi0+c211KTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPmdldF9wZXJmb3JtYW5jZV9sZXZlbCkKQEAgLTM4OCw3ICs0MDMsOCBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bvd2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9sZXZlbChz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJaWYgKGN1cnJlbnRfbGV2ZWwgPT0gbGV2ZWwpIHsKIAkJcG1f
cnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCQlwbV9ydW50aW1lX3B1dF9hdXRv
c3VzcGVuZChkZGV2LT5kZXYpOwotCQlyZXR1cm4gY291bnQ7CisJCXJldCA9IGNvdW50OworCQln
b3RvIHByb19lbmQ7CiAJfQogCiAJaWYgKGFkZXYtPmFzaWNfdHlwZSA9PSBDSElQX1JBVkVOKSB7
CkBAIC00MDksNyArNDI1LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wb3dlcl9kcG1f
Zm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LAogCQlwcl9lcnIoIkN1
cnJlbnRseSBub3QgaW4gYW55IHByb2ZpbGUgbW9kZSFcbiIpOwogCQlwbV9ydW50aW1lX21hcmtf
bGFzdF9idXN5KGRkZXYtPmRldik7CiAJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYt
PmRldik7Ci0JCXJldHVybiAtRUlOVkFMOworCQlyZXQgPSAtRUlOVkFMOworCQlnb3RvIHByb19l
bmQ7CiAJfQogCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7CkBAIC00MTcsNyArNDM0
LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFu
Y2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LAogCQlpZiAocmV0KSB7CiAJCQlwbV9ydW50aW1l
X21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVu
ZChkZGV2LT5kZXYpOwotCQkJcmV0dXJuIC1FSU5WQUw7CisJCQlyZXQgPSAtRUlOVkFMOworCQkJ
Z290byBwcm9fZW5kOwogCQl9CiAJfSBlbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3Mt
PmZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKSB7CiAJCW11dGV4X2xvY2soJmFkZXYtPnBtLm11dGV4
KTsKQEAgLTQyNSwxNCArNDQzLDE2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJf
ZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJCW11dGV4
X3VubG9jaygmYWRldi0+cG0ubXV0ZXgpOwogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShk
ZGV2LT5kZXYpOwogCQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKLQkJ
CXJldHVybiAtRUlOVkFMOworCQkJcmV0ID0gLUVJTlZBTDsKKwkJCWdvdG8gcHJvX2VuZDsKIAkJ
fQogCQlyZXQgPSBhbWRncHVfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKGFkZXYsIGxldmVs
KTsKIAkJaWYgKHJldCkgewogCQkJbXV0ZXhfdW5sb2NrKCZhZGV2LT5wbS5tdXRleCk7CiAJCQlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJCQlwbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChkZGV2LT5kZXYpOwotCQkJcmV0dXJuIC1FSU5WQUw7CisJCQlyZXQgPSAtRUlO
VkFMOworCQkJZ290byBwcm9fZW5kOwogCQl9IGVsc2UgewogCQkJYWRldi0+cG0uZHBtLmZvcmNl
ZF9sZXZlbCA9IGxldmVsOwogCQl9CkBAIC00NDEsNyArNDYxLDkgQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X3NldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmlj
ZSAqZGV2LAogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50
aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCi0JcmV0dXJuIGNvdW50OworcHJvX2Vu
ZDoKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCXJldHVybiByZXQ7CiB9CiAKIHN0YXRp
YyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfbnVtX3N0YXRlcyhzdHJ1Y3QgZGV2aWNlICpkZXYsCkBA
IC00NTMsNyArNDc1LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9udW1fc3RhdGVz
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzdHJ1Y3QgcHBfc3RhdGVzX2luZm8gZGF0YTsKIAlpbnQg
aSwgYnVmX2xlbiwgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1
X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9n
ZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtNDk3LDcgKzUxOSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9nZXRfcHBfY3VyX3N0YXRlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbnVtIGFtZF9wbV9z
dGF0ZV90eXBlIHBtID0gMDsKIAlpbnQgaSA9IDAsIHJldCA9IDA7CiAKLQlpZiAoYWRldi0+aW5f
Z3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07
CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC01MzgsNyArNTYw
LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9mb3JjZV9zdGF0ZShzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJc3RydWN0IGRybV9kZXZpY2UgKmRkZXYgPSBkZXZfZ2V0X2RydmRhdGEoZGV2
KTsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRkZXYtPmRldl9wcml2YXRlOwogCi0J
aWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQly
ZXR1cm4gLUVQRVJNOwogCiAJaWYgKGFkZXYtPnBwX2ZvcmNlX3N0YXRlX2VuYWJsZWQpCkBAIC01
NTgsNyArNTgwLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9mb3JjZV9zdGF0ZShz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJdW5zaWduZWQgbG9uZyBpZHg7CiAJaW50IHJldDsKIAotCWlm
IChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0
dXJuIC1FUEVSTTsKIAogCWlmIChzdHJsZW4oYnVmKSA9PSAxKQpAQCAtNTg0LDYgKzYwNiw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZm9yY2Vfc3RhdGUoc3RydWN0IGRldmljZSAq
ZGV2LAogCQkJcmV0dXJuIHJldDsKIAkJfQogCisJCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsKIAkJLyogb25seSBzZXQgdXNlciBzZWxlY3RlZCBwb3dlciBzdGF0ZXMgKi8KIAkJaWYgKHN0
YXRlICE9IFBPV0VSX1NUQVRFX1RZUEVfSU5URVJOQUxfQk9PVCAmJgogCQkgICAgc3RhdGUgIT0g
UE9XRVJfU1RBVEVfVFlQRV9ERUZBVUxUKSB7CkBAIC01OTEsNiArNjE0LDggQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X3NldF9wcF9mb3JjZV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCQkJ
CUFNRF9QUF9UQVNLX0VOQUJMRV9VU0VSX1NUQVRFLCAmc3RhdGUpOwogCQkJYWRldi0+cHBfZm9y
Y2Vfc3RhdGVfZW5hYmxlZCA9IHRydWU7CiAJCX0KKwkJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsKKwogCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJCXBtX3J1bnRp
bWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAJfQpAQCAtNjE4LDcgKzY0Myw3IEBAIHN0
YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfdGFibGUoc3RydWN0IGRldmljZSAqZGV2LAogCWNo
YXIgKnRhYmxlID0gTlVMTDsKIAlpbnQgc2l6ZSwgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9y
ZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJ
cmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtNjYyLDcgKzY4Nyw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfdGFibGUoc3RydWN0IGRldmljZSAqZGV2LAog
CXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7CiAJaW50IHJl
dCA9IDA7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQo
YWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRk
ZXYtPmRldik7CkBAIC02NzEsMTYgKzY5NiwyMSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0
X3BwX3RhYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKKwlkb3du
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikp
IHsKIAkJcmV0ID0gc211X3N5c19zZXRfcHBfdGFibGUoJmFkZXYtPnNtdSwgKHZvaWQgKilidWYs
IGNvdW50KTsKIAkJaWYgKHJldCkgewogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2
LT5kZXYpOwogCQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKKwkJCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJCQlyZXR1cm4gcmV0OwogCQl9CiAJfSBlbHNlIGlm
IChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnNldF9wcF90YWJsZSkKIAkJYW1kZ3B1X2RwbV9z
ZXRfcHBfdGFibGUoYWRldiwgYnVmLCBjb3VudCk7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRp
bWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTc2OSw3ICs3OTksNyBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX29kX2Nsa192b2x0YWdlKHN0cnVjdCBkZXZpY2UgKmRl
diwKIAljb25zdCBjaGFyIGRlbGltaXRlclszXSA9IHsnICcsICdcbicsICdcMCd9OwogCXVpbnQz
Ml90IHR5cGU7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVz
ZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAlpZiAoY291bnQgPiAxMjcpCkBAIC04MTMs
NiArODQzLDEwIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uo
c3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAorCXJldCA9IGNvdW50Owor
CisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211
KGFkZXYpKSB7CiAJCXJldCA9IHNtdV9vZF9lZGl0X2RwbV90YWJsZSgmYWRldi0+c211LCB0eXBl
LAogCQkJCQkgICAgcGFyYW1ldGVyLCBwYXJhbWV0ZXJfc2l6ZSk7CkBAIC04MjAsNyArODU0LDgg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9vZF9jbGtfdm9sdGFnZShzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJCWlmIChyZXQpIHsKIAkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRl
di0+ZGV2KTsKIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7Ci0JCQly
ZXR1cm4gLUVJTlZBTDsKKwkJCXJldCA9IC1FSU5WQUw7CisJCQlnb3RvIHByb19lbmQ7CiAJCX0K
IAl9IGVsc2UgewogCQlpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5vZG5fZWRpdF9kcG1f
dGFibGUpIHsKQEAgLTgyOSw3ICs4NjQsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bw
X29kX2Nsa192b2x0YWdlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJCWlmIChyZXQpIHsKIAkJCQlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJCQkJcG1fcnVudGltZV9wdXRf
YXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKLQkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCQlyZXQgPSAt
RUlOVkFMOworCQkJCWdvdG8gcHJvX2VuZDsKIAkJCX0KIAkJfQogCkBAIC04NDAsMTggKzg3Niwy
MiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX29kX2Nsa192b2x0YWdlKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAkJCQkJCU5VTEwpOwogCQkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3ko
ZGRldi0+ZGV2KTsKIAkJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwot
CQkJCXJldHVybiBjb3VudDsKKwkJCQlyZXQgPSBjb3VudDsKKwkJCQlnb3RvIHByb19lbmQ7CiAJ
CQl9IGVsc2UgewogCQkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAkJ
CQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwotCQkJCXJldHVybiAtRUlO
VkFMOworCQkJCXJldCA9IC1FSU5WQUw7CisJCQkJZ290byBwcm9fZW5kOwogCQkJfQogCQl9CiAJ
fQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1
dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCi0JcmV0dXJuIGNvdW50OworcHJvX2VuZDoKKwl1
cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCXJldHVybiByZXQ7CiB9CiAKIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9nZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmljZSAqZGV2LApAQCAt
ODYzLDcgKzkwMyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfb2RfY2xrX3ZvbHRh
Z2Uoc3RydWN0IGRldmljZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsKIAlpbnQgcmV0OwogCi0JaWYg
KGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1
cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAt
OTE3LDcgKzk1Nyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZmVhdHVyZXMoc3Ry
dWN0IGRldmljZSAqZGV2LAogCXVpbnQ2NF90IGZlYXR1cmVtYXNrOwogCWludCByZXQ7CiAKLQlp
ZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJl
dHVybiAtRVBFUk07CiAKIAlyZXQgPSBrc3RydG91NjQoYnVmLCAwLCAmZmVhdHVyZW1hc2spOwpA
QCAtOTMyLDExICs5NzIsMTMgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9mZWF0dXJl
cyhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewogCQlyZXQg
PSBzbXVfc3lzX3NldF9wcF9mZWF0dXJlX21hc2soJmFkZXYtPnNtdSwgZmVhdHVyZW1hc2spOwog
CQlpZiAocmV0KSB7CiAJCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJ
CQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOworCQkJdXBfcmVhZCgmYWRl
di0+cmVzZXRfc2VtKTsKIAkJCXJldHVybiAtRUlOVkFMOwogCQl9CiAJfSBlbHNlIGlmIChhZGV2
LT5wb3dlcnBsYXkucHBfZnVuY3MtPnNldF9wcGZlYXR1cmVfc3RhdHVzKSB7CkBAIC05NDQsOSAr
OTg2LDEyIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZmVhdHVyZXMoc3RydWN0IGRl
dmljZSAqZGV2LAogCQlpZiAocmV0KSB7CiAJCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRk
ZXYtPmRldik7CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOworCQkJ
dXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkJCXJldHVybiAtRUlOVkFMOwogCQl9CiAJfQor
CXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5
KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApA
QCAtOTYyLDcgKzEwMDcsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZlYXR1cmVz
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzc2l6ZV90IHNpemU7CiAJaW50IHJldDsKIAotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJu
IC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTk3
MSw2ICsxMDE2LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9mZWF0dXJlcyhzdHJ1
Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5y
ZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQlzaXplID0gc211
X3N5c19nZXRfcHBfZmVhdHVyZV9tYXNrKCZhZGV2LT5zbXUsIGJ1Zik7CiAJZWxzZSBpZiAoYWRl
di0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfcHBmZWF0dXJlX3N0YXR1cykKQEAgLTk3OCw2ICsx
MDI1LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9mZWF0dXJlcyhzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJZWxzZQogCQlzaXplID0gc25wcmludGYoYnVmLCBQQUdFX1NJWkUsICJcbiIp
OwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVfbWFya19sYXN0
X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYp
OwogCkBAIC0xMDIzLDcgKzEwNzIsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2Rw
bV9zY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzc2l6ZV90IHNpemU7CiAJaW50IHJldDsKIAot
CWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJ
cmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsK
QEAgLTEwMzIsNiArMTA4MSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX3Nj
bGsoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAorCWRvd25fcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJc2l6
ZSA9IHNtdV9wcmludF9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TQ0xLLCBidWYpOwogCWVs
c2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+cHJpbnRfY2xvY2tfbGV2ZWxzKQpAQCAt
MTAzOSw2ICsxMDkwLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fc2Nsayhz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJZWxzZQogCQlzaXplID0gc25wcmludGYoYnVmLCBQQUdFX1NJ
WkUsICJcbiIpOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVf
bWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChk
ZGV2LT5kZXYpOwogCkBAIC0xMDkxLDcgKzExNDQsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVf
c2V0X3BwX2RwbV9zY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlpbnQgcmV0OwogCXVpbnQzMl90
IG1hc2sgPSAwOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gYW1kZ3B1X3JlYWRfbWFzayhi
dWYsIGNvdW50LCAmbWFzayk7CkBAIC0xMTA0LDExICsxMTU3LDE1IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9zZXRfcHBfZHBtX3NjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0
OwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChpc19zdXBwb3J0
X3N3X3NtdShhZGV2KSkKIAkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwg
U01VX1NDTEssIG1hc2ssIHRydWUpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5j
cy0+Zm9yY2VfY2xvY2tfbGV2ZWwpCiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfY2xvY2tfbGV2
ZWwoYWRldiwgUFBfU0NMSywgbWFzayk7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwor
CiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0
X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTExMjcsNyArMTE4NCw3IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX21jbGsoc3RydWN0IGRldmljZSAqZGV2LAogCXNzaXpl
X3Qgc2l6ZTsKIAlpbnQgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGlt
ZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtMTEzNiw2ICsxMTkzLDggQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2dldF9wcF9kcG1fbWNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiBy
ZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBv
cnRfc3dfc211KGFkZXYpKQogCQlzaXplID0gc211X3ByaW50X2Nsa19sZXZlbHMoJmFkZXYtPnNt
dSwgU01VX01DTEssIGJ1Zik7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5w
cmludF9jbG9ja19sZXZlbHMpCkBAIC0xMTQzLDYgKzEyMDIsOCBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfZ2V0X3BwX2RwbV9tY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCXNpemUg
PSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1
bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTExNTksNyArMTIyMCw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX21jbGsoc3RydWN0IGRldmljZSAqZGV2
LAogCXVpbnQzMl90IG1hc2sgPSAwOwogCWludCByZXQ7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jl
c2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAly
ZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsKQEAgLTExNzIsMTEgKzEy
MzMsMTUgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fbWNsayhzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQlyZXQgPSBzbXVfZm9yY2Vf
Y2xrX2xldmVscygmYWRldi0+c211LCBTTVVfTUNMSywgbWFzaywgdHJ1ZSk7CiAJZWxzZSBpZiAo
YWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9jbG9ja19sZXZlbCkKIAkJcmV0ID0gYW1k
Z3B1X2RwbV9mb3JjZV9jbG9ja19sZXZlbChhZGV2LCBQUF9NQ0xLLCBtYXNrKTsKIAorCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYt
PmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTE5
NSw3ICsxMjYwLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fc29jY2xrKHN0
cnVjdCBkZXZpY2UgKmRldiwKIAlzc2l6ZV90IHNpemU7CiAJaW50IHJldDsKIAotCWlmIChhZGV2
LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1F
UEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTEyMDQs
NiArMTI2OSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX3NvY2NsayhzdHJ1
Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5y
ZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQlzaXplID0gc211
X3ByaW50X2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1NPQ0NMSywgYnVmKTsKIAllbHNlIGlm
IChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50X2Nsb2NrX2xldmVscykKQEAgLTEyMTEs
NiArMTI3OCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX3NvY2NsayhzdHJ1
Y3QgZGV2aWNlICpkZXYsCiAJZWxzZQogCQlzaXplID0gc25wcmludGYoYnVmLCBQQUdFX1NJWkUs
ICJcbiIpOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVfbWFy
a19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2
LT5kZXYpOwogCkBAIC0xMjI3LDcgKzEyOTYsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0
X3BwX2RwbV9zb2NjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWludCByZXQ7CiAJdWludDMyX3Qg
bWFzayA9IDA7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVz
ZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1
ZiwgY291bnQsICZtYXNrKTsKQEAgLTEyNDAsNiArMTMwOSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9zZXRfcHBfZHBtX3NvY2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7
CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRf
c3dfc211KGFkZXYpKQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBT
TVVfU09DQ0xLLCBtYXNrLCB0cnVlKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVu
Y3MtPmZvcmNlX2Nsb2NrX2xldmVsKQpAQCAtMTI0Nyw2ICsxMzE4LDggQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X3NldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJ
CXJldCA9IDA7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9t
YXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRk
ZXYtPmRldik7CiAKQEAgLTEyNjUsNyArMTMzOCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9n
ZXRfcHBfZHBtX2ZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsKIAlpbnQg
cmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFk
ZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2
LT5kZXYpOwpAQCAtMTI3NCw2ICsxMzQ3LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9w
cF9kcG1fZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93
bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYp
KQogCQlzaXplID0gc211X3ByaW50X2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX0ZDTEssIGJ1
Zik7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5wcmludF9jbG9ja19sZXZl
bHMpCkBAIC0xMjgxLDYgKzEzNTYsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2Rw
bV9mY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCXNpemUgPSBzbnByaW50ZihidWYs
IFBBR0VfU0laRSwgIlxuIik7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1f
cnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9z
dXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTEyOTcsNyArMTM3NCw3IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9zZXRfcHBfZHBtX2ZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWludCByZXQ7CiAJ
dWludDMyX3QgbWFzayA9IDA7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRn
cHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBhbWRncHVfcmVh
ZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsKQEAgLTEzMTAsNiArMTM4Nyw4IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2ZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1
cm4gcmV0OwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChpc19z
dXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYt
PnNtdSwgU01VX0ZDTEssIG1hc2ssIHRydWUpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5w
cF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpCkBAIC0xMzE3LDYgKzEzOTYsOCBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9mY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNl
CiAJCXJldCA9IDA7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGlt
ZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5k
KGRkZXYtPmRldik7CiAKQEAgLTEzMzUsNyArMTQxNiw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdw
dV9nZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsK
IAlpbnQgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3lu
YyhkZGV2LT5kZXYpOwpAQCAtMTM0NCw2ICsxNDI1LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2dldF9wcF9kcG1fZGNlZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJ
fQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3df
c211KGFkZXYpKQogCQlzaXplID0gc211X3ByaW50X2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01V
X0RDRUZDTEssIGJ1Zik7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5wcmlu
dF9jbG9ja19sZXZlbHMpCkBAIC0xMzUxLDYgKzE0MzQsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfZ2V0X3BwX2RwbV9kY2VmY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCXNpemUg
PSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1
bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTEzNjcsNyArMTQ1Miw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0IGRldmljZSAq
ZGV2LAogCWludCByZXQ7CiAJdWludDMyX3QgbWFzayA9IDA7CiAKLQlpZiAoYWRldi0+aW5fZ3B1
X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAK
IAlyZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsKQEAgLTEzODAsNiAr
MTQ2NSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0
IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJcmV0ID0gc211X2Zv
cmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX0RDRUZDTEssIG1hc2ssIHRydWUpOwogCWVs
c2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpCkBAIC0x
Mzg3LDYgKzE0NzQsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9kY2VmY2xr
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCXJldCA9IDA7CiAKKwl1cF9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwog
CXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTE0MDUsNyArMTQ5
NCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX3BjaWUoc3RydWN0IGRldmlj
ZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsKIAlpbnQgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9y
ZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJ
cmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtMTQxNCw2ICsxNTAzLDgg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwor
CiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQlzaXplID0gc211X3ByaW50X2Nsa19s
ZXZlbHMoJmFkZXYtPnNtdSwgU01VX1BDSUUsIGJ1Zik7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJw
bGF5LnBwX2Z1bmNzLT5wcmludF9jbG9ja19sZXZlbHMpCkBAIC0xNDIxLDYgKzE1MTIsOCBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwK
IAllbHNlCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7CiAKKwl1cF9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2
LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTE0
MzcsNyArMTUzMCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3BjaWUoc3Ry
dWN0IGRldmljZSAqZGV2LAogCWludCByZXQ7CiAJdWludDMyX3QgbWFzayA9IDA7CiAKLQlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVy
biAtRVBFUk07CiAKIAlyZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsK
QEAgLTE0NTAsNiArMTU0Myw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3Bj
aWUoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAorCWRvd25fcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJcmV0
ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1BDSUUsIG1hc2ssIHRydWUp
OwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwp
CkBAIC0xNDU3LDYgKzE1NTIsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9w
Y2llKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCXJldCA9IDA7CiAKKwl1cF9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYp
OwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTE0NzUsNyAr
MTU3Miw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfc2Nsa19vZChzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJdWludDMyX3QgdmFsdWUgPSAwOwogCWludCByZXQ7CiAKLQlpZiAoYWRldi0+
aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBF
Uk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0xNDg0LDEx
ICsxNTgxLDE1IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfc2Nsa19vZChzdHJ1Y3Qg
ZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQl2YWx1ZSA9IHNtdV9n
ZXRfb2RfcGVyY2VudGFnZSgmKGFkZXYtPnNtdSksIFNNVV9PRF9TQ0xLKTsKIAllbHNlIGlmIChh
ZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9zY2xrX29kKQogCQl2YWx1ZSA9IGFtZGdwdV9k
cG1fZ2V0X3NjbGtfb2QoYWRldik7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJ
cG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTE1MDUsNyArMTYwNiw3IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9zZXRfcHBfc2Nsa19vZChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IHJldDsK
IAlsb25nIGludCB2YWx1ZTsKIAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdw
dV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IGtzdHJ0b2woYnVm
LCAwLCAmdmFsdWUpOwpAQCAtMTUxOSw2ICsxNjIwLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X3NldF9wcF9zY2xrX29kKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAK
Kwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUo
YWRldikpIHsKIAkJdmFsdWUgPSBzbXVfc2V0X29kX3BlcmNlbnRhZ2UoJihhZGV2LT5zbXUpLCBT
TVVfT0RfU0NMSywgKHVpbnQzMl90KXZhbHVlKTsKIAl9IGVsc2UgewpAQCAtMTUzMyw2ICsxNjM2
LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9zY2xrX29kKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJfQogCX0KIAorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50
aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3Bl
bmQoZGRldi0+ZGV2KTsKIApAQCAtMTU0OCw3ICsxNjUzLDcgQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X2dldF9wcF9tY2xrX29kKHN0cnVjdCBkZXZpY2UgKmRldiwKIAl1aW50MzJfdCB2YWx1ZSA9
IDA7CiAJaW50IHJldDsKIAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9p
bl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0
X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTE1NTcsMTEgKzE2NjIsMTUgQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X2dldF9wcF9tY2xrX29kKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsK
IAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlpZiAoaXNfc3VwcG9ydF9z
d19zbXUoYWRldikpCiAJCXZhbHVlID0gc211X2dldF9vZF9wZXJjZW50YWdlKCYoYWRldi0+c211
KSwgU01VX09EX01DTEspOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0
X21jbGtfb2QpCiAJCXZhbHVlID0gYW1kZ3B1X2RwbV9nZXRfbWNsa19vZChhZGV2KTsKIAorCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRk
ZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAt
MTU3OCw3ICsxNjg3LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9tY2xrX29kKHN0
cnVjdCBkZXZpY2UgKmRldiwKIAlpbnQgcmV0OwogCWxvbmcgaW50IHZhbHVlOwogCi0JaWYgKGFk
ZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4g
LUVQRVJNOwogCiAJcmV0ID0ga3N0cnRvbChidWYsIDAsICZ2YWx1ZSk7CkBAIC0xNTkyLDYgKzE3
MDEsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmlj
ZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewogCQl2YWx1ZSA9IHNtdV9zZXRf
b2RfcGVyY2VudGFnZSgmKGFkZXYtPnNtdSksIFNNVV9PRF9NQ0xLLCAodWludDMyX3QpdmFsdWUp
OwogCX0gZWxzZSB7CkBAIC0xNjA2LDYgKzE3MTcsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVf
c2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LAogCQl9CiAJfQogCisJdXBfcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2
KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0xNjQxLDcg
KzE3NTQsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX3Bvd2VyX3Byb2ZpbGVfbW9k
ZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBzaXplOwogCWludCByZXQ7CiAKLQlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVy
biAtRVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0x
NjUwLDYgKzE3NjMsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX3Bvd2VyX3Byb2Zp
bGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCisJZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQog
CQlzaXplID0gc211X2dldF9wb3dlcl9wcm9maWxlX21vZGUoJmFkZXYtPnNtdSwgYnVmKTsKIAll
bHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9wb3dlcl9wcm9maWxlX21vZGUp
CkBAIC0xNjU3LDYgKzE3NzIsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX3Bvd2Vy
X3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJZWxzZQogCQlzaXplID0gc25wcmlu
dGYoYnVmLCBQQUdFX1NJWkUsICJcbiIpOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsK
KwogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1
dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0xNjgxLDcgKzE3OTgsNyBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfc2V0X3BwX3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsCiAJbG9uZyBpbnQgcHJvZmlsZV9tb2RlID0gMDsKIAljb25zdCBjaGFyIGRlbGltaXRlclsz
XSA9IHsnICcsICdcbicsICdcMCd9OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAo
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJdG1wWzBdID0gKihi
dWYpOwpAQCAtMTcxNSwxMSArMTgzMiwxNSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bw
X3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJ
fQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3df
c211KGFkZXYpKQogCQlyZXQgPSBzbXVfc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSgmYWRldi0+c211
LCBwYXJhbWV0ZXIsIHBhcmFtZXRlcl9zaXplLCB0cnVlKTsKIAllbHNlIGlmIChhZGV2LT5wb3dl
cnBsYXkucHBfZnVuY3MtPnNldF9wb3dlcl9wcm9maWxlX21vZGUpCiAJCXJldCA9IGFtZGdwdV9k
cG1fc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShhZGV2LCBwYXJhbWV0ZXIsIHBhcmFtZXRlcl9zaXpl
KTsKIAorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFz
dF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2
KTsKIApAQCAtMTc0NSw3ICsxODY2LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9ncHVf
YnVzeV9wZXJjZW50KHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiA9IGRkZXYtPmRldl9wcml2YXRlOwogCWludCByLCB2YWx1ZSwgc2l6ZSA9IHNpemVvZih2
YWx1ZSk7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQo
YWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2
LT5kZXYpOwpAQCAtMTc1NCw5ICsxODc1LDExIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRf
Z3B1X2J1c3lfcGVyY2VudChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByOwogCX0KIAor
CWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkvKiByZWFkIHRoZSBJUCBidXN5IHNlbnNv
ciAqLwogCXIgPSBhbWRncHVfZHBtX3JlYWRfc2Vuc29yKGFkZXYsIEFNREdQVV9QUF9TRU5TT1Jf
R1BVX0xPQUQsCiAJCQkJICAgKHZvaWQgKikmdmFsdWUsICZzaXplKTsKKwl1cF9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOwogCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwog
CXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CkBAIC0xNzgzLDcgKzE5MDYs
NyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X21lbV9idXN5X3BlcmNlbnQoc3RydWN0IGRl
dmljZSAqZGV2LAogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZh
dGU7CiAJaW50IHIsIHZhbHVlLCBzaXplID0gc2l6ZW9mKHZhbHVlKTsKIAotCWlmIChhZGV2LT5p
bl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVS
TTsKIAogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0xNzkyLDEwICsx
OTE1LDE0IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfbWVtX2J1c3lfcGVyY2VudChzdHJ1
Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByOwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKKwogCS8qIHJlYWQgdGhlIElQIGJ1c3kgc2Vuc29yICovCiAJciA9IGFtZGdwdV9k
cG1fcmVhZF9zZW5zb3IoYWRldiwgQU1ER1BVX1BQX1NFTlNPUl9NRU1fTE9BRCwKIAkJCQkgICAo
dm9pZCAqKSZ2YWx1ZSwgJnNpemUpOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwog
CXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0xODI2LDcgKzE5NTMsNyBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfZ2V0X3BjaWVfYncoc3RydWN0IGRldmljZSAqZGV2LAogCXVpbnQ2NF90IGNv
dW50MCA9IDAsIGNvdW50MSA9IDA7CiAJaW50IHJldDsKIAotCWlmIChhZGV2LT5pbl9ncHVfcmVz
ZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCWlm
IChhZGV2LT5mbGFncyAmIEFNRF9JU19BUFUpCkBAIC0xODQxLDggKzE5NjgsMTIgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X2dldF9wY2llX2J3KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJu
IHJldDsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlhbWRncHVfYXNp
Y19nZXRfcGNpZV91c2FnZShhZGV2LCAmY291bnQwLCAmY291bnQxKTsKIAorCXVwX3JlYWQoJmFk
ZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7
CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTg2Nyw3ICsx
OTk4LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF91bmlxdWVfaWQoc3RydWN0IGRldmlj
ZSAqZGV2LAogCXN0cnVjdCBkcm1fZGV2aWNlICpkZGV2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7
CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsKIAotCWlm
IChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0
dXJuIC1FUEVSTTsKIAogCWlmIChhZGV2LT51bmlxdWVfaWQpCkBAIC0yMTM0LDcgKzIyNjUsNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd190ZW1wKHN0cnVjdCBkZXZpY2UgKmRl
diwKIAlpbnQgY2hhbm5lbCA9IHRvX3NlbnNvcl9kZXZfYXR0cihhdHRyKS0+aW5kZXg7CiAJaW50
IHIsIHRlbXAgPSAwLCBzaXplID0gc2l6ZW9mKHRlbXApOwogCi0JaWYgKGFkZXYtPmluX2dwdV9y
ZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJ
aWYgKGNoYW5uZWwgPj0gUFBfVEVNUF9NQVgpCkBAIC0yMTQ2LDYgKzIyNzcsOCBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfaHdtb25fc2hvd190ZW1wKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0
dXJuIHI7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJc3dpdGNoIChj
aGFubmVsKSB7CiAJY2FzZSBQUF9URU1QX0pVTkNUSU9OOgogCQkvKiBnZXQgY3VycmVudCBqdW5j
dGlvbiB0ZW1wZXJhdHVyZSAqLwpAQCAtMjE2Nyw2ICsyMzAwLDggQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X2h3bW9uX3Nob3dfdGVtcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCWJyZWFrOwogCX0K
IAorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9i
dXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+
ZGRldi0+ZGV2KTsKIApAQCAtMjI3MCw3ICsyNDA1LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2h3bW9uX2dldF9wd20xX2VuYWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdTMyIHB3bV9tb2Rl
ID0gMDsKIAlpbnQgcmV0OwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1
X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9n
ZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMjI3OSwxOCArMjQxNCwyMyBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X3B3bTFfZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwK
IAkJcmV0dXJuIHJldDsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlp
ZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsKIAkJcHdtX21vZGUgPSBzbXVfZ2V0X2Zhbl9j
b250cm9sX21vZGUoJmFkZXYtPnNtdSk7CiAJfSBlbHNlIHsKIAkJaWYgKCFhZGV2LT5wb3dlcnBs
YXkucHBfZnVuY3MtPmdldF9mYW5fY29udHJvbF9tb2RlKSB7CiAJCQlwbV9ydW50aW1lX21hcmtf
bGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVu
ZChhZGV2LT5kZGV2LT5kZXYpOworCQkJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkJCXJl
dHVybiAtRUlOVkFMOwogCQl9CiAKIAkJcHdtX21vZGUgPSBhbWRncHVfZHBtX2dldF9mYW5fY29u
dHJvbF9tb2RlKGFkZXYpOwogCX0KIAorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9w
dXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKIApAQCAtMjMwNiw3ICsyNDQ2LDcgQEAg
c3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9wd20xX2VuYWJsZShzdHJ1Y3QgZGV2aWNl
ICpkZXYsCiAJaW50IGVyciwgcmV0OwogCWludCB2YWx1ZTsKIAotCWlmIChhZGV2LT5pbl9ncHVf
cmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAog
CWVyciA9IGtzdHJ0b2ludChidWYsIDEwLCAmdmFsdWUpOwpAQCAtMjMxOSwxOCArMjQ1OSwyMyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X3B3bTFfZW5hYmxlKHN0cnVjdCBkZXZp
Y2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsKIAkJc211X3NldF9mYW5fY29u
dHJvbF9tb2RlKCZhZGV2LT5zbXUsIHZhbHVlKTsKIAl9IGVsc2UgewogCQlpZiAoIWFkZXYtPnBv
d2VycGxheS5wcF9mdW5jcy0+c2V0X2Zhbl9jb250cm9sX21vZGUpIHsKIAkJCXBtX3J1bnRpbWVf
bWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9z
dXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CisJCQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwog
CQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0KIAogCQlhbWRncHVfZHBtX3NldF9mYW5fY29udHJvbF9t
b2RlKGFkZXYsIHZhbHVlKTsKIAl9CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJ
cG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVf
cHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CiAKQEAgLTIzNjAsNyArMjUwNSw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zZXRfcHdtMShzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJdTMyIHZhbHVlOwogCXUzMiBwd21fbW9kZTsKIAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQp
CisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCWVyciA9
IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTIzNjksMTEgKzI1MTQs
MTUgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9wd20xKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJcmV0dXJuIGVycjsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXB3bV9tb2RlID0gc211X2dldF9m
YW5fY29udHJvbF9tb2RlKCZhZGV2LT5zbXUpOwogCWVsc2UKIAkJcHdtX21vZGUgPSBhbWRncHVf
ZHBtX2dldF9mYW5fY29udHJvbF9tb2RlKGFkZXYpOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsKKwogCWlmIChwd21fbW9kZSAhPSBBTURfRkFOX0NUUkxfTUFOVUFMKSB7CiAJCXByX2lu
Zm8oIm1hbnVhbCBmYW4gc3BlZWQgY29udHJvbCBzaG91bGQgYmUgZW5hYmxlZCBmaXJzdFxuIik7
CiAJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI0MTQs
NyArMjU2Myw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfcHdtMShzdHJ1Y3Qg
ZGV2aWNlICpkZXYsCiAJaW50IGVycjsKIAl1MzIgc3BlZWQgPSAwOwogCi0JaWYgKGFkZXYtPmlu
X2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJN
OwogCiAJZXJyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMjQy
Myw2ICsyNTcyLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9wd20xKHN0cnVj
dCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIGVycjsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCWVyciA9IHNtdV9n
ZXRfZmFuX3NwZWVkX3BlcmNlbnQoJmFkZXYtPnNtdSwgJnNwZWVkKTsKIAllbHNlIGlmIChhZGV2
LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9mYW5fc3BlZWRfcGVyY2VudCkKQEAgLTI0MzAsNiAr
MjU4MSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfcHdtMShzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJZWxzZQogCQllcnIgPSAtRUlOVkFMOwogCisJdXBfcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsK
IAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwogCkBAIC0yNDQ5
LDcgKzI2MDIsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X2ZhbjFfaW5wdXQo
c3RydWN0IGRldmljZSAqZGV2LAogCWludCBlcnI7CiAJdTMyIHNwZWVkID0gMDsKIAotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJu
IC1FUEVSTTsKIAogCWVyciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsK
QEAgLTI0NTgsNiArMjYxMSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFu
MV9pbnB1dChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiBlcnI7CiAJfQogCisJZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQog
CQllcnIgPSBzbXVfZ2V0X2Zhbl9zcGVlZF9ycG0oJmFkZXYtPnNtdSwgJnNwZWVkKTsKIAllbHNl
IGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9mYW5fc3BlZWRfcnBtKQpAQCAtMjQ2
NSw2ICsyNjIwLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX2lucHV0
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCWVyciA9IC1FSU5WQUw7CiAKKwl1cF9yZWFk
KCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5k
ZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7
CiAKQEAgLTI0ODMsNyArMjY0MCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRf
ZmFuMV9taW4oc3RydWN0IGRldmljZSAqZGV2LAogCXUzMiBzaXplID0gc2l6ZW9mKG1pbl9ycG0p
OwogCWludCByOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMo
YWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI0OTIsOSArMjY0OSwxMyBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfaHdtb25fZ2V0X2ZhbjFfbWluKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7
CiAJfQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJciA9IGFtZGdwdV9kcG1f
cmVhZF9zZW5zb3IoYWRldiwgQU1ER1BVX1BQX1NFTlNPUl9NSU5fRkFOX1JQTSwKIAkJCQkgICAo
dm9pZCAqKSZtaW5fcnBtLCAmc2l6ZSk7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwor
CiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRp
bWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CiAKQEAgLTI1MTMsNyArMjY3NCw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV9tYXgoc3RydWN0IGRldmlj
ZSAqZGV2LAogCXUzMiBzaXplID0gc2l6ZW9mKG1heF9ycG0pOwogCWludCByOwogCi0JaWYgKGFk
ZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4g
LUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsKQEAg
LTI1MjIsOSArMjY4MywxMyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X2ZhbjFf
bWF4KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJfQogCisJZG93bl9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOworCiAJciA9IGFtZGdwdV9kcG1fcmVhZF9zZW5zb3IoYWRldiwgQU1E
R1BVX1BQX1NFTlNPUl9NQVhfRkFOX1JQTSwKIAkJCQkgICAodm9pZCAqKSZtYXhfcnBtLCAmc2l6
ZSk7CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xh
c3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFk
ZXYtPmRkZXYtPmRldik7CiAKQEAgLTI1NDIsNyArMjcwNyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9od21vbl9nZXRfZmFuMV90YXJnZXQoc3RydWN0IGRldmljZSAqZGV2LAogCWludCBlcnI7
CiAJdTMyIHJwbSA9IDA7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVf
aW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAllcnIgPSBwbV9ydW50aW1lX2dl
dF9zeW5jKGFkZXYtPmRkZXYtPmRldik7CkBAIC0yNTUxLDYgKzI3MTYsOCBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfaHdtb25fZ2V0X2ZhbjFfdGFyZ2V0KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJ
cmV0dXJuIGVycjsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlpZiAo
aXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCWVyciA9IHNtdV9nZXRfZmFuX3NwZWVkX3JwbSgm
YWRldi0+c211LCAmcnBtKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdl
dF9mYW5fc3BlZWRfcnBtKQpAQCAtMjU1OCw2ICsyNzI1LDggQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X2h3bW9uX2dldF9mYW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJZWxzZQogCQll
cnIgPSAtRUlOVkFMOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRp
bWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRv
c3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwogCkBAIC0yNTc2LDcgKzI3NDUsNyBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfaHdtb25fc2V0X2ZhbjFfdGFyZ2V0KHN0cnVjdCBkZXZpY2UgKmRldiwK
IAl1MzIgdmFsdWU7CiAJdTMyIHB3bV9tb2RlOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkK
KwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJZXJyID0g
cG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMjU4NSwxMSArMjc1NCwx
NSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X2ZhbjFfdGFyZ2V0KHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAkJcmV0dXJuIGVycjsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0
X3NlbSk7CisKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXB3bV9tb2RlID0gc211
X2dldF9mYW5fY29udHJvbF9tb2RlKCZhZGV2LT5zbXUpOwogCWVsc2UKIAkJcHdtX21vZGUgPSBh
bWRncHVfZHBtX2dldF9mYW5fY29udHJvbF9tb2RlKGFkZXYpOwogCisJdXBfcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKKwogCWlmIChwd21fbW9kZSAhPSBBTURfRkFOX0NUUkxfTUFOVUFMKSB7CiAJ
CXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAkJcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI2MDMsNiArMjc3Niw4IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zZXRfZmFuMV90YXJnZXQoc3RydWN0IGRldmlj
ZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJZXJyID0gc211X3NldF9mYW5f
c3BlZWRfcnBtKCZhZGV2LT5zbXUsIHZhbHVlKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPnNldF9mYW5fc3BlZWRfcnBtKQpAQCAtMjYxMCw2ICsyNzg1LDggQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9mYW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJZWxzZQogCQllcnIgPSAtRUlOVkFMOwogCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsK
KwogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50
aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwogCkBAIC0yNjI3LDcgKzI4MDQs
NyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X2ZhbjFfZW5hYmxlKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAl1MzIgcHdtX21vZGUgPSAwOwogCWludCByZXQ7CiAKLQlpZiAoYWRldi0+
aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBF
Uk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7CkBAIC0y
NjM2LDE4ICsyODEzLDIzIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV9l
bmFibGUoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAorCWRvd25fcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewog
CQlwd21fbW9kZSA9IHNtdV9nZXRfZmFuX2NvbnRyb2xfbW9kZSgmYWRldi0+c211KTsKIAl9IGVs
c2UgewogCQlpZiAoIWFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X2Zhbl9jb250cm9sX21v
ZGUpIHsKIAkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAkJ
CXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CisJCQl1cF9yZWFk
KCZhZGV2LT5yZXNldF9zZW0pOwogCQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0KIAogCQlwd21fbW9k
ZSA9IGFtZGdwdV9kcG1fZ2V0X2Zhbl9jb250cm9sX21vZGUoYWRldik7CiAJfQogCisJdXBfcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+
ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYp
OwogCkBAIC0yNjY0LDcgKzI4NDYsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0
X2ZhbjFfZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlpbnQgdmFsdWU7CiAJdTMyIHB3bV9t
b2RlOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFk
ZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJZXJyID0ga3N0cnRvaW50KGJ1ZiwgMTAsICZ2YWx1
ZSk7CkBAIC0yNjg0LDE3ICsyODY2LDIyIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9z
ZXRfZmFuMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0KIAor
CWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShh
ZGV2KSkgewogCQlzbXVfc2V0X2Zhbl9jb250cm9sX21vZGUoJmFkZXYtPnNtdSwgcHdtX21vZGUp
OwogCX0gZWxzZSB7CiAJCWlmICghYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5zZXRfZmFuX2Nv
bnRyb2xfbW9kZSkgewogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5k
ZXYpOwogCQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKKwkJ
CXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQogCQlh
bWRncHVfZHBtX3NldF9mYW5fY29udHJvbF9tb2RlKGFkZXYsIHB3bV9tb2RlKTsKIAl9CiAKKwl1
cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShh
ZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYt
PmRldik7CiAKQEAgLTI3MDksNyArMjg5Niw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21v
bl9zaG93X3ZkZGdmeChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdTMyIHZkZGdmeDsKIAlpbnQgciwg
c2l6ZSA9IHNpemVvZih2ZGRnZngpOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAo
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRp
bWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI3MTgsOSArMjkwNSwxMSBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd192ZGRnZngoc3RydWN0IGRldmljZSAqZGV2LAog
CQlyZXR1cm4gcjsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJLyogZ2V0
IHRoZSB2b2x0YWdlICovCiAJciA9IGFtZGdwdV9kcG1fcmVhZF9zZW5zb3IoYWRldiwgQU1ER1BV
X1BQX1NFTlNPUl9WRERHRlgsCiAJCQkJICAgKHZvaWQgKikmdmRkZ2Z4LCAmc2l6ZSk7CisJdXBf
cmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRl
di0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5k
ZXYpOwpAQCAtMjc0Niw3ICsyOTM1LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3No
b3dfdmRkbmIoc3RydWN0IGRldmljZSAqZGV2LAogCXUzMiB2ZGRuYjsKIAlpbnQgciwgc2l6ZSA9
IHNpemVvZih2ZGRuYik7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVf
aW5fcmVzZXQoYWRldikpCiAJCXJldHVybiAtRVBFUk07CiAKIAkvKiBvbmx5IEFQVXMgaGF2ZSB2
ZGRuYiAqLwpAQCAtMjc1OSw5ICsyOTQ4LDExIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21v
bl9zaG93X3ZkZG5iKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJfQogCisJZG93
bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCS8qIGdldCB0aGUgdm9sdGFnZSAqLwogCXIgPSBh
bWRncHVfZHBtX3JlYWRfc2Vuc29yKGFkZXYsIEFNREdQVV9QUF9TRU5TT1JfVkRETkIsCiAJCQkJ
ICAgKHZvaWQgKikmdmRkbmIsICZzaXplKTsKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwog
CiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRp
bWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CkBAIC0yNzg4LDcgKzI5NzksNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19wb3dlcl9hdmcoc3RydWN0IGRldmlj
ZSAqZGV2LAogCWludCByLCBzaXplID0gc2l6ZW9mKHUzMik7CiAJdW5zaWduZWQgdXc7CiAKLQlp
ZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJl
dHVybiAtRVBFUk07CiAKIAlyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYp
OwpAQCAtMjc5Nyw5ICsyOTg4LDExIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93
X3Bvd2VyX2F2ZyhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByOwogCX0KIAorCWRvd25f
cmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkvKiBnZXQgdGhlIHZvbHRhZ2UgKi8KIAlyID0gYW1k
Z3B1X2RwbV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX0dQVV9QT1dFUiwKIAkJ
CQkgICAodm9pZCAqKSZxdWVyeSwgJnNpemUpOworCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
CiAKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVu
dGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI4MjksNyArMzAyMiw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X3Bvd2VyX2NhcF9tYXgoc3RydWN0
IGRldmljZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsKIAlpbnQgcjsKIAotCWlmIChhZGV2LT5pbl9n
cHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsK
IAogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7CkBAIC0yODM4LDYg
KzMwMzEsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19wb3dlcl9jYXBfbWF4
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJfQogCisJZG93bl9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOworCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7CiAJCXNtdV9n
ZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCB0cnVlKTsKIAkJc2l6ZSA9IHNucHJp
bnRmKGJ1ZiwgUEFHRV9TSVpFLCAiJXVcbiIsIGxpbWl0ICogMTAwMDAwMCk7CkBAIC0yODQ4LDYg
KzMwNDMsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19wb3dlcl9jYXBfbWF4
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAi
XG4iKTsKIAl9CiAKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJcG1fcnVudGltZV9t
YXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNw
ZW5kKGFkZXYtPmRkZXYtPmRldik7CiAKQEAgLTI4NjMsNyArMzA2MCw3IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9od21vbl9zaG93X3Bvd2VyX2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3Np
emVfdCBzaXplOwogCWludCByOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVf
Z2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI4NzIsNiArMzA2OSw4IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9od21vbl9zaG93X3Bvd2VyX2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJ
CXJldHVybiByOwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwogCWlmIChp
c19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewogCQlzbXVfZ2V0X3Bvd2VyX2xpbWl0KCZhZGV2LT5z
bXUsICZsaW1pdCwgZmFsc2UpOwogCQlzaXplID0gc25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIl
dVxuIiwgbGltaXQgKiAxMDAwMDAwKTsKQEAgLTI4ODIsNiArMzA4MSw4IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9od21vbl9zaG93X3Bvd2VyX2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXNp
emUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7CiAJfQogCisJdXBfcmVhZCgmYWRl
di0+cmVzZXRfc2VtKTsKKwogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+
ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwogCkBA
IC0yODk4LDcgKzMwOTksNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X3Bvd2Vy
X2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IGVycjsKIAl1MzIgdmFsdWU7CiAKLQlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0KQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCiAJCXJldHVy
biAtRVBFUk07CiAKIAlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpKQpAQCAtMjkxNyw2ICszMTE4
LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9wb3dlcl9jYXAoc3RydWN0IGRl
dmljZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsKKwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJZXJyID0gc211X3NldF9w
b3dlcl9saW1pdCgmYWRldi0+c211LCB2YWx1ZSk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5
LnBwX2Z1bmNzICYmIGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3Bvd2VyX2xpbWl0KQpA
QCAtMjkyNCw2ICszMTI3LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9wb3dl
cl9jYXAoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJZXJyID0gLUVJTlZBTDsKIAorCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFk
ZXYtPmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+
ZGV2KTsKIApAQCAtMjk0MSw3ICszMTQ2LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9u
X3Nob3dfc2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdWludDMyX3Qgc2NsazsKIAlpbnQgciwg
c2l6ZSA9IHNpemVvZihzY2xrKTsKIAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFt
ZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXIgPSBwbV9ydW50aW1l
X2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7CkBAIC0yOTUwLDkgKzMxNTUsMTEgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfc2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJl
dHVybiByOwogCX0KIAorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkvKiBnZXQgdGhl
IHNjbGsgKi8KIAlyID0gYW1kZ3B1X2RwbV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VO
U09SX0dGWF9TQ0xLLAogCQkJCSAgICh2b2lkICopJnNjbGssICZzaXplKTsKKwl1cF9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOwogCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2
LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CkBA
IC0yOTc4LDcgKzMxODUsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19tY2xr
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAl1aW50MzJfdCBtY2xrOwogCWludCByLCBzaXplID0gc2l6
ZW9mKG1jbGspOwogCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMo
YWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI5ODcsOSArMzE5NCwxMSBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfaHdtb25fc2hvd19tY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJ
fQogCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCS8qIGdldCB0aGUgc2NsayAqLwog
CXIgPSBhbWRncHVfZHBtX3JlYWRfc2Vuc29yKGFkZXYsIEFNREdQVV9QUF9TRU5TT1JfR0ZYX01D
TEssCiAJCQkJICAgKHZvaWQgKikmbWNsaywgJnNpemUpOworCXVwX3JlYWQoJmFkZXYtPnJlc2V0
X3NlbSk7CiAKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJ
cG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTM4NzAsNyAr
NDA3OSw3IEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2RlYnVnZnNfcG1faW5mbyhzdHJ1Y3Qgc2VxX2Zp
bGUgKm0sIHZvaWQgKmRhdGEpCiAJdTMyIGZsYWdzID0gMDsKIAlpbnQgcjsKIAotCWlmIChhZGV2
LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1F
UEVSTTsKIAogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRldi0+ZGV2KTsKQEAgLTM4NzksNyAr
NDA4OCwxMCBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3BtX2luZm8oc3RydWN0IHNlcV9m
aWxlICptLCB2b2lkICpkYXRhKQogCQlyZXR1cm4gcjsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7CiAJYW1kZ3B1X2RldmljZV9pcF9nZXRfY2xvY2tnYXRpbmdfc3RhdGUoYWRl
diwgJmZsYWdzKTsKKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCiAJc2VxX3ByaW50Ziht
LCAiQ2xvY2sgR2F0aW5nIEZsYWdzIE1hc2s6IDB4JXhcbiIsIGZsYWdzKTsKIAlhbWRncHVfcGFy
c2VfY2dfc3RhdGUobSwgZmxhZ3MpOwogCXNlcV9wcmludGYobSwgIlxuIik7CkBAIC0zODkxLDYg
KzQxMDMsNyBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3BtX2luZm8oc3RydWN0IHNlcV9m
aWxlICptLCB2b2lkICpkYXRhKQogCQlyZXR1cm4gMDsKIAl9CiAKKwlkb3duX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7CiAJaWYgKCFpc19zdXBwb3J0X3N3X3NtdShhZGV2KSAmJgogCSAgICBhZGV2
LT5wb3dlcnBsYXkucHBfZnVuY3MtPmRlYnVnZnNfcHJpbnRfY3VycmVudF9wZXJmb3JtYW5jZV9s
ZXZlbCkgewogCQltdXRleF9sb2NrKCZhZGV2LT5wbS5tdXRleCk7CkBAIC0zOTAzLDYgKzQxMTYs
NyBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3BtX2luZm8oc3RydWN0IHNlcV9maWxlICpt
LCB2b2lkICpkYXRhKQogCX0gZWxzZSB7CiAJCXIgPSBhbWRncHVfZGVidWdmc19wbV9pbmZvX3Bw
KG0sIGFkZXYpOwogCX0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCiAJcG1fcnVudGlt
ZV9tYXJrX2xhc3RfYnVzeShkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQo
ZGV2LT5kZXYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X3BzcC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BzcC5jCmluZGV4IGUy
MDY5NWI0NGRiZS4uOWY0MWRlODBjYTdmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfcHNwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X3BzcC5jCkBAIC0xNjgyLDcgKzE2ODIsNyBAQCBzdGF0aWMgaW50IHBzcF9sb2FkX3NtdV9m
dyhzdHJ1Y3QgcHNwX2NvbnRleHQgKnBzcCkKIAkJcmV0dXJuIDA7CiAKIAotCWlmIChhZGV2LT5p
bl9ncHVfcmVzZXQgJiYgcmFzICYmIHJhcy0+c3VwcG9ydGVkKSB7CisJaWYgKGFtZGdwdV9pbl9y
ZXNldChhZGV2KSAmJiByYXMgJiYgcmFzLT5zdXBwb3J0ZWQpIHsKIAkJcmV0ID0gYW1kZ3B1X2Rw
bV9zZXRfbXAxX3N0YXRlKGFkZXYsIFBQX01QMV9TVEFURV9VTkxPQUQpOwogCQlpZiAocmV0KSB7
CiAJCQlEUk1fV0FSTigiRmFpbGVkIHRvIHNldCBNUDEgc3RhdGUgcHJlcGFyZSBmb3IgcmVsb2Fk
XG4iKTsKQEAgLTE3OTYsNyArMTc5Niw3IEBAIHN0YXRpYyBpbnQgcHNwX2xvYWRfZncoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJaW50IHJldDsKIAlzdHJ1Y3QgcHNwX2NvbnRleHQgKnBz
cCA9ICZhZGV2LT5wc3A7CiAKLQlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIGFkZXYtPmlu
X2dwdV9yZXNldCkgeworCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKSB7CiAJCXBzcF9yaW5nX3N0b3AocHNwLCBQU1BfUklOR19UWVBFX19LTSk7IC8q
IHNob3VsZCBub3QgZGVzdHJveSByaW5nLCBvbmx5IHN0b3AgKi8KIAkJZ290byBza2lwX21lbWFs
bG9jOwogCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9y
YXMuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9yYXMuYwppbmRleCBhYjhl
N2M5MWM2NDUuLjEwMDhmZDNlZjVmMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X3Jhcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9yYXMuYwpAQCAtMTk3NSw3ICsxOTc1LDcgQEAgaW50IGFtZGdwdV9yYXNfbGF0ZV9pbml0KHN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCQkJYW1kZ3B1X3Jhc19yZXF1ZXN0X3Jlc2V0X29u
X2Jvb3QoYWRldiwKIAkJCQkJcmFzX2Jsb2NrLT5ibG9jayk7CiAJCQlyZXR1cm4gMDsKLQkJfSBl
bHNlIGlmIChhZGV2LT5pbl9zdXNwZW5kIHx8IGFkZXYtPmluX2dwdV9yZXNldCkgeworCQl9IGVs
c2UgaWYgKGFkZXYtPmluX3N1c3BlbmQgfHwgYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7CiAJCQkv
KiBpbiByZXN1bWUgcGhhc2UsIGlmIGZhaWwgdG8gZW5hYmxlIHJhcywKIAkJCSAqIGNsZWFuIHVw
IGFsbCByYXMgZnMgbm9kZXMsIGFuZCBkaXNhYmxlIHJhcyAqLwogCQkJZ290byBjbGVhbnVwOwpA
QCAtMTk4NCw3ICsxOTg0LDcgQEAgaW50IGFtZGdwdV9yYXNfbGF0ZV9pbml0KHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LAogCX0KIAogCS8qIGluIHJlc3VtZSBwaGFzZSwgbm8gbmVlZCB0byBj
cmVhdGUgcmFzIGZzIG5vZGUgKi8KLQlpZiAoYWRldi0+aW5fc3VzcGVuZCB8fCBhZGV2LT5pbl9n
cHVfcmVzZXQpCisJaWYgKGFkZXYtPmluX3N1c3BlbmQgfHwgYW1kZ3B1X2luX3Jlc2V0KGFkZXYp
KQogCQlyZXR1cm4gMDsKIAogCWlmIChpaF9pbmZvLT5jYikgewpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3R0bS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X3R0bS5jCmluZGV4IDU2YmVhZmJkM2FiOS4uOGJjMzI2YWMwOTM4IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3R0bS5jCkBAIC0yMDkzLDcgKzIwOTMsNyBA
QCB2b2lkIGFtZGdwdV90dG1fc2V0X2J1ZmZlcl9mdW5jc19zdGF0dXMoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsIGJvb2wgZW5hYmxlKQogCXVpbnQ2NF90IHNpemU7CiAJaW50IHI7CiAKLQlp
ZiAoIWFkZXYtPm1tYW4uaW5pdGlhbGl6ZWQgfHwgYWRldi0+aW5fZ3B1X3Jlc2V0IHx8CisJaWYg
KCFhZGV2LT5tbWFuLmluaXRpYWxpemVkIHx8IGFtZGdwdV9pbl9yZXNldChhZGV2KSB8fAogCSAg
ICBhZGV2LT5tbWFuLmJ1ZmZlcl9mdW5jc19lbmFibGVkID09IGVuYWJsZSkKIAkJcmV0dXJuOwog
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdWNvZGUuYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV91Y29kZS5jCmluZGV4IDc0NDQwNGEw
NWZlZS4uN2IwYTA0MjE2ZTY4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfdWNvZGUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
dWNvZGUuYwpAQCAtNjI4LDcgKzYyOCw4IEBAIGludCBhbWRncHVfdWNvZGVfaW5pdF9ibyhzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAlzdHJ1Y3QgYW1kZ3B1X2Zpcm13YXJlX2luZm8gKnVj
b2RlID0gTlVMTDsKIAogIC8qIGZvciBiYXJlbWV0YWwsIHRoZSB1Y29kZSBpcyBhbGxvY2F0ZWQg
aW4gZ3R0LCBzbyBkb24ndCBuZWVkIHRvIGZpbGwgdGhlIGJvIHdoZW4gcmVzZXQvc3VzcGVuZCAq
LwotCWlmICghYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIChhZGV2LT5pbl9ncHVfcmVzZXQgfHwg
YWRldi0+aW5fc3VzcGVuZCkpCisJaWYgKCFhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYKKwkJKGFt
ZGdwdV9pbl9yZXNldChhZGV2KSB8fCBhZGV2LT5pbl9zdXNwZW5kKSkKIAkJcmV0dXJuIDA7CiAJ
LyoKIAkgKiBpZiBTTVUgbG9hZGVkIGZpcm13YXJlLCBpdCBuZWVkbid0IGFkZCBTTUMsIFVWRCwg
YW5kIFZDRQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Zp
cnQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmMKaW5kZXggMTIw
M2MyMDQ5MWU2Li41Y2FlMzlkMzVjMDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV92aXJ0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X3ZpcnQuYwpAQCAtOTMsNyArOTMsNyBAQCB2b2lkIGFtZGdwdV92aXJ0X2tpcV9yZWdfd3Jp
dGVfcmVnX3dhaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJYW1kZ3B1X3JpbmdfdW5k
byhyaW5nKTsKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZraXEtPnJpbmdfbG9jaywgZmxhZ3Mp
OwogZmFpbGVkX2tpcToKLQlwcl9lcnIoImZhaWxlZCB0byB3cml0ZSByZWcgJXggd2FpdCByZWcg
JXhcbiIsIHJlZzAsIHJlZzEpOworCWRldl93YXJuKGFkZXYtPmRldiwgImZhaWxlZCB0byB3cml0
ZSByZWcgJXggd2FpdCByZWcgJXhcbiIsIHJlZzAsIHJlZzEpOwogfQogCiAvKioKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmggYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmlydC5oCmluZGV4IGY4MjY5NDU5ODljNy4uYjIwNDZj
M2E0MDRkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmly
dC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmgKQEAgLTMy
NSw5ICszMjUsOSBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaXNfdmlydHVhbF9tYWNoaW5lKHZvaWQp
CiAjZGVmaW5lIGFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikgXAogCSgoYWRldiktPnZp
cnQuZ2ltX2ZlYXR1cmUgJiBBTURHSU1fRkVBVFVSRV9QUF9PTkVfVkYpCiAjZGVmaW5lIGFtZGdw
dV9zcmlvdl9pc19kZWJ1ZyhhZGV2KSBcCi0JKCghYWRldi0+aW5fZ3B1X3Jlc2V0KSAmJiBhZGV2
LT52aXJ0LnRkcl9kZWJ1ZykKKwkoKCFhbWRncHVfaW5fcmVzZXQoYWRldikpICYmIGFkZXYtPnZp
cnQudGRyX2RlYnVnKQogI2RlZmluZSBhbWRncHVfc3Jpb3ZfaXNfbm9ybWFsKGFkZXYpIFwKLQko
KCFhZGV2LT5pbl9ncHVfcmVzZXQpICYmICghYWRldi0+dmlydC50ZHJfZGVidWcpKQorCSgoIWFt
ZGdwdV9pbl9yZXNldChhZGV2KSkgJiYgKCFhZGV2LT52aXJ0LnRkcl9kZWJ1ZykpCiAKIGJvb2wg
YW1kZ3B1X3ZpcnRfbW1pb19ibG9ja2VkKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KTsKIHZv
aWQgYW1kZ3B1X3ZpcnRfaW5pdF9zZXR0aW5nKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV94Z21pLmMgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfeGdtaS5jCmluZGV4IGUzYTM3NTVjYjk5
OS4uNGUwMTdmMzc5ZWI2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfeGdtaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV94Z21p
LmMKQEAgLTM3Miw3ICszNzIsNyBAQCBzdHJ1Y3QgYW1kZ3B1X2hpdmVfaW5mbyAqYW1kZ3B1X2dl
dF94Z21pX2hpdmUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIGludCBsbwogCXRtcC0+aGl2
ZV9pZCA9IGFkZXYtPmdtYy54Z21pLmhpdmVfaWQ7CiAJSU5JVF9MSVNUX0hFQUQoJnRtcC0+ZGV2
aWNlX2xpc3QpOwogCW11dGV4X2luaXQoJnRtcC0+aGl2ZV9sb2NrKTsKLQltdXRleF9pbml0KCZ0
bXAtPnJlc2V0X2xvY2spOworCWF0b21pY19zZXQoJnRtcC0+aW5fcmVzZXQsIDApOwogCXRhc2tf
YmFycmllcl9pbml0KCZ0bXAtPnRiKTsKIAogCWlmIChsb2NrKQpAQCAtMzk3LDYgKzM5Nyw3IEBA
IGludCBhbWRncHVfeGdtaV9zZXRfcHN0YXRlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBp
bnQgcHN0YXRlKQogCQkJCQkJaGl2ZS0+aGlfcmVxX2dwdSA6IGFkZXY7CiAJYm9vbCBpc19oaV9y
ZXEgPSBwc3RhdGUgPT0gQU1ER1BVX1hHTUlfUFNUQVRFX01BWF9WRUdBMjA7CiAJYm9vbCBpbml0
X2xvdyA9IGhpdmUtPnBzdGF0ZSA9PSBBTURHUFVfWEdNSV9QU1RBVEVfVU5LTk9XTjsKKwlib29s
IGxvY2tlZDsKIAogCS8qIGZ3IGJ1ZyBzbyB0ZW1wb3JhcmlseSBkaXNhYmxlIHBzdGF0ZSBzd2l0
Y2hpbmcgKi8KIAlyZXR1cm4gMDsKQEAgLTQwNCw3ICs0MDUsOSBAQCBpbnQgYW1kZ3B1X3hnbWlf
c2V0X3BzdGF0ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgaW50IHBzdGF0ZSkKIAlpZiAo
IWhpdmUgfHwgYWRldi0+YXNpY190eXBlICE9IENISVBfVkVHQTIwKQogCQlyZXR1cm4gMDsKIAot
CW11dGV4X2xvY2soJmhpdmUtPmhpdmVfbG9jayk7CisJbG9ja2VkID0gYXRvbWljX3JlYWQoJmhp
dmUtPmluX3Jlc2V0KSA/IGZhbHNlIDogdHJ1ZTsKKwlpZiAobG9ja2VkKQorCQltdXRleF9sb2Nr
KCZoaXZlLT5oaXZlX2xvY2spOwogCiAJaWYgKGlzX2hpX3JlcSkKIAkJaGl2ZS0+aGlfcmVxX2Nv
dW50Kys7CkBAIC00MzksNyArNDQyLDggQEAgaW50IGFtZGdwdV94Z21pX3NldF9wc3RhdGUoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIGludCBwc3RhdGUpCiAJCQkJCQkJYWRldiA6IE5VTEw7
CiAJfQogb3V0OgotCW11dGV4X3VubG9jaygmaGl2ZS0+aGl2ZV9sb2NrKTsKKwlpZiAobG9ja2Vk
KQorCQltdXRleF91bmxvY2soJmhpdmUtPmhpdmVfbG9jayk7CiAJcmV0dXJuIHJldDsKIH0KIApA
QCAtNTk0LDcgKzU5OCw2IEBAIGludCBhbWRncHVfeGdtaV9yZW1vdmVfZGV2aWNlKHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2KQogCWlmKCEoLS1oaXZlLT5udW1iZXJfZGV2aWNlcykpewogCQlh
bWRncHVfeGdtaV9zeXNmc19kZXN0cm95KGFkZXYsIGhpdmUpOwogCQltdXRleF9kZXN0cm95KCZo
aXZlLT5oaXZlX2xvY2spOwotCQltdXRleF9kZXN0cm95KCZoaXZlLT5yZXNldF9sb2NrKTsKIAl9
CiAKIAlyZXR1cm4gcHNwX3hnbWlfdGVybWluYXRlKCZhZGV2LT5wc3ApOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV94Z21pLmgKaW5kZXggNjk5OWVhYjE2YTcyLi42MTcyMGNkNGEx
ZWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV94Z21pLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuaApAQCAtMzAsNyAr
MzAsOCBAQCBzdHJ1Y3QgYW1kZ3B1X2hpdmVfaW5mbyB7CiAJdWludDY0X3QJCWhpdmVfaWQ7CiAJ
c3RydWN0IGxpc3RfaGVhZAlkZXZpY2VfbGlzdDsKIAlpbnQgbnVtYmVyX2RldmljZXM7Ci0Jc3Ry
dWN0IG11dGV4IGhpdmVfbG9jaywgcmVzZXRfbG9jazsKKwlzdHJ1Y3QgbXV0ZXggaGl2ZV9sb2Nr
OworCWF0b21pY190IGluX3Jlc2V0OwogCXN0cnVjdCBrb2JqZWN0ICprb2JqOwogCXN0cnVjdCBk
ZXZpY2VfYXR0cmlidXRlIGRldl9hdHRyOwogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2Owpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYXRvbS5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYXRvbS5jCmluZGV4IDRjZmM3ODY2OTljNy4uODM0MWJkOTY1MjAy
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hdG9tLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYXRvbS5jCkBAIC03NTUsNiArNzU1LDcgQEAgc3RhdGlj
IHZvaWQgYXRvbV9vcF9qdW1wKGF0b21fZXhlY19jb250ZXh0ICpjdHgsIGludCAqcHRyLCBpbnQg
YXJnKQogCQkJCS8qIGppZmZpZXMgd3JhcCBhcm91bmQgd2Ugd2lsbCBqdXN0IHdhaXQgYSBsaXR0
bGUgbG9uZ2VyICovCiAJCQkJY3R4LT5sYXN0X2p1bXBfamlmZmllcyA9IGppZmZpZXM7CiAJCQl9
CisJCQlzY2hlZHVsZSgpOwogCQl9IGVsc2UgewogCQkJY3R4LT5sYXN0X2p1bXAgPSBjdHgtPnN0
YXJ0ICsgdGFyZ2V0OwogCQkJY3R4LT5sYXN0X2p1bXBfamlmZmllcyA9IGppZmZpZXM7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jCmluZGV4IGE2MTcwYTM0NmIzOS4uZDVlZmVm
YzgwZGFkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAuYwpAQCAtNjEwMiw3
ICs2MTAyLDcgQEAgc3RhdGljIGludCBnZnhfdjEwXzBfZ2Z4X2luaXRfcXVldWUoc3RydWN0IGFt
ZGdwdV9yaW5nICpyaW5nKQogCXN0cnVjdCB2MTBfZ2Z4X21xZCAqbXFkID0gcmluZy0+bXFkX3B0
cjsKIAlpbnQgbXFkX2lkeCA9IHJpbmcgLSAmYWRldi0+Z2Z4LmdmeF9yaW5nWzBdOwogCi0JaWYg
KCFhZGV2LT5pbl9ncHVfcmVzZXQgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKKwlpZiAoIWFtZGdw
dV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgewogCQltZW1zZXQoKHZvaWQg
KiltcWQsIDAsIHNpemVvZigqbXFkKSk7CiAJCW11dGV4X2xvY2soJmFkZXYtPnNyYm1fbXV0ZXgp
OwogCQludl9ncmJtX3NlbGVjdChhZGV2LCByaW5nLT5tZSwgcmluZy0+cGlwZSwgcmluZy0+cXVl
dWUsIDApOwpAQCAtNjExNCw3ICs2MTE0LDcgQEAgc3RhdGljIGludCBnZnhfdjEwXzBfZ2Z4X2lu
aXRfcXVldWUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCQltdXRleF91bmxvY2soJmFkZXYt
PnNyYm1fbXV0ZXgpOwogCQlpZiAoYWRldi0+Z2Z4Lm1lLm1xZF9iYWNrdXBbbXFkX2lkeF0pCiAJ
CQltZW1jcHkoYWRldi0+Z2Z4Lm1lLm1xZF9iYWNrdXBbbXFkX2lkeF0sIG1xZCwgc2l6ZW9mKCpt
cWQpKTsKLQl9IGVsc2UgaWYgKGFkZXYtPmluX2dwdV9yZXNldCkgeworCX0gZWxzZSBpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKSB7CiAJCS8qIHJlc2V0IG1xZCB3aXRoIHRoZSBiYWNrdXAgY29w
eSAqLwogCQlpZiAoYWRldi0+Z2Z4Lm1lLm1xZF9iYWNrdXBbbXFkX2lkeF0pCiAJCQltZW1jcHko
bXFkLCBhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6ZW9mKCptcWQpKTsKQEAg
LTY0NjMsNyArNjQ2Myw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3YxMF8wX2tpcV9pbml0X3F1ZXVlKHN0
cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCWdmeF92MTBfMF9raXFfc2V0dGluZyhyaW5nKTsK
IAotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCisJ
aWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkgeyAvKiBmb3IgR1BVX1JFU0VUIGNhc2UgKi8KIAkJ
LyogcmVzZXQgTVFEIHRvIGEgY2xlYW4gc3RhdHVzICovCiAJCWlmIChhZGV2LT5nZngubWVjLm1x
ZF9iYWNrdXBbbXFkX2lkeF0pCiAJCQltZW1jcHkobXFkLCBhZGV2LT5nZngubWVjLm1xZF9iYWNr
dXBbbXFkX2lkeF0sIHNpemVvZigqbXFkKSk7CkBAIC02NDk5LDcgKzY0OTksNyBAQCBzdGF0aWMg
aW50IGdmeF92MTBfMF9rY3FfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJ
c3RydWN0IHYxMF9jb21wdXRlX21xZCAqbXFkID0gcmluZy0+bXFkX3B0cjsKIAlpbnQgbXFkX2lk
eCA9IHJpbmcgLSAmYWRldi0+Z2Z4LmNvbXB1dGVfcmluZ1swXTsKIAotCWlmICghYWRldi0+aW5f
Z3B1X3Jlc2V0ICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7CisJaWYgKCFhbWRncHVfaW5fcmVzZXQo
YWRldikgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKIAkJbWVtc2V0KCh2b2lkICopbXFkLCAwLCBz
aXplb2YoKm1xZCkpOwogCQltdXRleF9sb2NrKCZhZGV2LT5zcmJtX211dGV4KTsKIAkJbnZfZ3Ji
bV9zZWxlY3QoYWRldiwgcmluZy0+bWUsIHJpbmctPnBpcGUsIHJpbmctPnF1ZXVlLCAwKTsKQEAg
LTY1MDksNyArNjUwOSw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3YxMF8wX2tjcV9pbml0X3F1ZXVlKHN0
cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3Vw
W21xZF9pZHhdKQogCQkJbWVtY3B5KGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSwg
bXFkLCBzaXplb2YoKm1xZCkpOwotCX0gZWxzZSBpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7IC8q
IGZvciBHUFVfUkVTRVQgY2FzZSAqLworCX0gZWxzZSBpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYp
KSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLwogCQkvKiByZXNldCBNUUQgdG8gYSBjbGVhbiBz
dGF0dXMgKi8KIAkJaWYgKGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSkKIAkJCW1l
bWNweShtcWQsIGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6ZW9mKCptcWQp
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OF8wLmMgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhfMC5jCmluZGV4IDMzZjFjNGE0NmViZS4u
OGQ3MjA4OTU5Yzk1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhf
djhfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OF8wLmMKQEAgLTQ2
MzIsNyArNDYzMiw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y4XzBfa2lxX2luaXRfcXVldWUoc3RydWN0
IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJZ2Z4X3Y4XzBfa2lxX3NldHRpbmcocmluZyk7CiAKLQlp
ZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLworCWlmIChh
bWRncHVfaW5fcmVzZXQoYWRldikpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCiAJCS8qIHJl
c2V0IE1RRCB0byBhIGNsZWFuIHN0YXR1cyAqLwogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFj
a3VwW21xZF9pZHhdKQogCQkJbWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21x
ZF9pZHhdLCBzaXplb2Yoc3RydWN0IHZpX21xZF9hbGxvY2F0aW9uKSk7CkBAIC00NjY5LDcgKzQ2
NjksNyBAQCBzdGF0aWMgaW50IGdmeF92OF8wX2tjcV9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVf
cmluZyAqcmluZykKIAlzdHJ1Y3QgdmlfbXFkICptcWQgPSByaW5nLT5tcWRfcHRyOwogCWludCBt
cWRfaWR4ID0gcmluZyAtICZhZGV2LT5nZnguY29tcHV0ZV9yaW5nWzBdOwogCi0JaWYgKCFhZGV2
LT5pbl9ncHVfcmVzZXQgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKKwlpZiAoIWFtZGdwdV9pbl9y
ZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgewogCQltZW1zZXQoKHZvaWQgKiltcWQs
IDAsIHNpemVvZihzdHJ1Y3QgdmlfbXFkX2FsbG9jYXRpb24pKTsKIAkJKChzdHJ1Y3QgdmlfbXFk
X2FsbG9jYXRpb24gKiltcWQpLT5keW5hbWljX2N1X21hc2sgPSAweEZGRkZGRkZGOwogCQkoKHN0
cnVjdCB2aV9tcWRfYWxsb2NhdGlvbiAqKW1xZCktPmR5bmFtaWNfcmJfbWFzayA9IDB4RkZGRkZG
RkY7CkBAIC00NjgxLDcgKzQ2ODEsNyBAQCBzdGF0aWMgaW50IGdmeF92OF8wX2tjcV9pbml0X3F1
ZXVlKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRf
YmFja3VwW21xZF9pZHhdKQogCQkJbWVtY3B5KGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRf
aWR4XSwgbXFkLCBzaXplb2Yoc3RydWN0IHZpX21xZF9hbGxvY2F0aW9uKSk7Ci0JfSBlbHNlIGlm
IChhZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCisJfSBlbHNl
IGlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCiAJ
CS8qIHJlc2V0IE1RRCB0byBhIGNsZWFuIHN0YXR1cyAqLwogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5t
cWRfYmFja3VwW21xZF9pZHhdKQogCQkJbWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1lYy5tcWRfYmFj
a3VwW21xZF9pZHhdLCBzaXplb2Yoc3RydWN0IHZpX21xZF9hbGxvY2F0aW9uKSk7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjlfMC5jIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvZ2Z4X3Y5XzAuYwppbmRleCBjYjlkNjBhNGUwNWUuLmU0ZTc1MWY4NzA5
MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3Y5XzAuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjlfMC5jCkBAIC0zNjg0LDcgKzM2ODQs
NyBAQCBzdGF0aWMgaW50IGdmeF92OV8wX2tpcV9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVfcmlu
ZyAqcmluZykKIAogCWdmeF92OV8wX2tpcV9zZXR0aW5nKHJpbmcpOwogCi0JaWYgKGFkZXYtPmlu
X2dwdV9yZXNldCkgeyAvKiBmb3IgR1BVX1JFU0VUIGNhc2UgKi8KKwlpZiAoYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLwogCQkvKiByZXNldCBNUUQgdG8g
YSBjbGVhbiBzdGF0dXMgKi8KIAkJaWYgKGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4
XSkKIAkJCW1lbWNweShtcWQsIGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6
ZW9mKHN0cnVjdCB2OV9tcWRfYWxsb2NhdGlvbikpOwpAQCAtMzcyMiw3ICszNzIyLDcgQEAgc3Rh
dGljIGludCBnZnhfdjlfMF9rY3FfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcp
CiAJc3RydWN0IHY5X21xZCAqbXFkID0gcmluZy0+bXFkX3B0cjsKIAlpbnQgbXFkX2lkeCA9IHJp
bmcgLSAmYWRldi0+Z2Z4LmNvbXB1dGVfcmluZ1swXTsKIAotCWlmICghYWRldi0+aW5fZ3B1X3Jl
c2V0ICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7CisJaWYgKCFhbWRncHVfaW5fcmVzZXQoYWRldikg
JiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKIAkJbWVtc2V0KCh2b2lkICopbXFkLCAwLCBzaXplb2Yo
c3RydWN0IHY5X21xZF9hbGxvY2F0aW9uKSk7CiAJCSgoc3RydWN0IHY5X21xZF9hbGxvY2F0aW9u
ICopbXFkKS0+ZHluYW1pY19jdV9tYXNrID0gMHhGRkZGRkZGRjsKIAkJKChzdHJ1Y3QgdjlfbXFk
X2FsbG9jYXRpb24gKiltcWQpLT5keW5hbWljX3JiX21hc2sgPSAweEZGRkZGRkZGOwpAQCAtMzcz
NCw3ICszNzM0LDcgQEAgc3RhdGljIGludCBnZnhfdjlfMF9rY3FfaW5pdF9xdWV1ZShzdHJ1Y3Qg
YW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAkJaWYgKGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRf
aWR4XSkKIAkJCW1lbWNweShhZGV2LT5nZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0sIG1xZCwg
c2l6ZW9mKHN0cnVjdCB2OV9tcWRfYWxsb2NhdGlvbikpOwotCX0gZWxzZSBpZiAoYWRldi0+aW5f
Z3B1X3Jlc2V0KSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLworCX0gZWxzZSBpZiAoYW1kZ3B1
X2luX3Jlc2V0KGFkZXYpKSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLwogCQkvKiByZXNldCBN
UUQgdG8gYSBjbGVhbiBzdGF0dXMgKi8KIAkJaWYgKGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFtt
cWRfaWR4XSkKIAkJCW1lbWNweShtcWQsIGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4
XSwgc2l6ZW9mKHN0cnVjdCB2OV9tcWRfYWxsb2NhdGlvbikpOwpAQCAtMzkyOCw3ICszOTI4LDcg
QEAgc3RhdGljIGludCBnZnhfdjlfMF9od19maW5pKHZvaWQgKmhhbmRsZSkKIAkvKiBVc2UgZGVp
bml0aWFsaXplIHNlcXVlbmNlIGZyb20gQ0FJTCB3aGVuIHVuYmluZGluZyBkZXZpY2UgZnJvbSBk
cml2ZXIsCiAJICogb3RoZXJ3aXNlIEtJUSBpcyBoYW5naW5nIHdoZW4gYmluZGluZyBiYWNrCiAJ
ICovCi0JaWYgKCFhZGV2LT5pbl9ncHVfcmVzZXQgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKKwlp
ZiAoIWFtZGdwdV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgewogCQltdXRl
eF9sb2NrKCZhZGV2LT5zcmJtX211dGV4KTsKIAkJc29jMTVfZ3JibV9zZWxlY3QoYWRldiwgYWRl
di0+Z2Z4LmtpcS5yaW5nLm1lLAogCQkJCWFkZXYtPmdmeC5raXEucmluZy5waXBlLApAQCAtNDA4
Niw3ICs0MDg2LDcgQEAgc3RhdGljIHVpbnQ2NF90IGdmeF92OV8wX2tpcV9yZWFkX2Nsb2NrKHN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCSAqCiAJICogYWxzbyBkb24ndCB3YWl0IGFueW1v
cmUgZm9yIElSUSBjb250ZXh0CiAJICogKi8KLQlpZiAociA8IDEgJiYgKGFkZXYtPmluX2dwdV9y
ZXNldCB8fCBpbl9pbnRlcnJ1cHQoKSkpCisJaWYgKHIgPCAxICYmIChhbWRncHVfaW5fcmVzZXQo
YWRldikgfHwgaW5faW50ZXJydXB0KCkpKQogCQlnb3RvIGZhaWxlZF9raXFfcmVhZDsKIAogCW1p
Z2h0X3NsZWVwKCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNf
djEwXzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jCmluZGV4IDhm
MjlmNzlmODIwZC4uMDNiOTNlNjI4NTgwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9nbWNfdjEwXzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNf
djEwXzAuYwpAQCAtMzU2LDcgKzM1Niw3IEBAIHN0YXRpYyB2b2lkIGdtY192MTBfMF9mbHVzaF9n
cHVfdGxiKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1aW50MzJfdCB2bWlkLAogCSAqLwog
CWlmIChhZGV2LT5nZngua2lxLnJpbmcuc2NoZWQucmVhZHkgJiYKIAkgICAgKGFtZGdwdV9zcmlv
dl9ydW50aW1lKGFkZXYpIHx8ICFhbWRncHVfc3Jpb3ZfdmYoYWRldikpICYmCi0JICAgICFhZGV2
LT5pbl9ncHVfcmVzZXQpIHsKKwkgICAgIWFtZGdwdV9pbl9yZXNldChhZGV2KSkgewogCiAJCXN0
cnVjdCBhbWRncHVfdm1odWIgKmh1YiA9ICZhZGV2LT52bWh1Ylt2bWh1Yl07CiAJCWNvbnN0IHVu
c2lnbmVkIGVuZyA9IDE3OwpAQCAtMzgxLDcgKzM4MSw3IEBAIHN0YXRpYyB2b2lkIGdtY192MTBf
MF9mbHVzaF9ncHVfdGxiKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1aW50MzJfdCB2bWlk
LAogCiAJaWYgKCFhZGV2LT5tbWFuLmJ1ZmZlcl9mdW5jc19lbmFibGVkIHx8CiAJICAgICFhZGV2
LT5pYl9wb29sX3JlYWR5IHx8Ci0JICAgIGFkZXYtPmluX2dwdV9yZXNldCB8fAorCSAgICBhbWRn
cHVfaW5fcmVzZXQoYWRldikgfHwKIAkgICAgcmluZy0+c2NoZWQucmVhZHkgPT0gZmFsc2UpIHsK
IAkJZ21jX3YxMF8wX2ZsdXNoX3ZtX2h1YihhZGV2LCB2bWlkLCBBTURHUFVfR0ZYSFVCXzAsIDAp
OwogCQltdXRleF91bmxvY2soJmFkZXYtPm1tYW4uZ3R0X3dpbmRvd19sb2NrKTsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192N18wLmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9nbWNfdjdfMC5jCmluZGV4IGUxODI5NmRjMTM4Ni4uMGY4ZThhZmY5MTE0
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjdfMC5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192N18wLmMKQEAgLTQzNCw3ICs0MzQsNyBA
QCBzdGF0aWMgaW50IGdtY192N18wX2ZsdXNoX2dwdV90bGJfcGFzaWQoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsCiAJaW50IHZtaWQ7CiAJdW5zaWduZWQgaW50IHRtcDsKIAotCWlmIChhZGV2
LT5pbl9ncHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1F
SU87CiAKIAlmb3IgKHZtaWQgPSAxOyB2bWlkIDwgMTY7IHZtaWQrKykgewpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y4XzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dtY192OF8wLmMKaW5kZXggYTllNzIyYjhhNDU4Li5hYmU2NDAxMGYwZDUgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192OF8wLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y4XzAuYwpAQCAtNjM1LDcgKzYzNSw3IEBAIHN0
YXRpYyBpbnQgZ21jX3Y4XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiwKIAlpbnQgdm1pZDsKIAl1bnNpZ25lZCBpbnQgdG1wOwogCi0JaWYgKGFkZXYtPmlu
X2dwdV9yZXNldCkKKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQogCQlyZXR1cm4gLUVJTzsK
IAogCWZvciAodm1pZCA9IDE7IHZtaWQgPCAxNjsgdm1pZCsrKSB7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvZ21jX3Y5XzAuYwppbmRleCA2ZTRmM2ZmNDgxMGYuLmM1Zjk0YmFiNGEwMSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jCkBAIC01MDEsNyArNTAxLDcgQEAgc3RhdGlj
IHZvaWQgZ21jX3Y5XzBfZmx1c2hfZ3B1X3RsYihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwg
dWludDMyX3Qgdm1pZCwKIAkgKi8KIAlpZiAoYWRldi0+Z2Z4LmtpcS5yaW5nLnNjaGVkLnJlYWR5
ICYmCiAJCQkoYW1kZ3B1X3NyaW92X3J1bnRpbWUoYWRldikgfHwgIWFtZGdwdV9zcmlvdl92Zihh
ZGV2KSkgJiYKLQkJCSFhZGV2LT5pbl9ncHVfcmVzZXQpIHsKKwkJCSFhbWRncHVfaW5fcmVzZXQo
YWRldikpIHsKIAkJdWludDMyX3QgcmVxID0gaHViLT52bV9pbnZfZW5nMF9yZXEgKyBodWItPmVu
Z19kaXN0YW5jZSAqIGVuZzsKIAkJdWludDMyX3QgYWNrID0gaHViLT52bV9pbnZfZW5nMF9hY2sg
KyBodWItPmVuZ19kaXN0YW5jZSAqIGVuZzsKIApAQCAtNTk2LDcgKzU5Niw3IEBAIHN0YXRpYyBp
bnQgZ21jX3Y5XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRl
diwKIAlzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcgPSAmYWRldi0+Z2Z4LmtpcS5yaW5nOwogCXN0
cnVjdCBhbWRncHVfa2lxICpraXEgPSAmYWRldi0+Z2Z4LmtpcTsKIAotCWlmIChhZGV2LT5pbl9n
cHVfcmVzZXQpCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKIAkJcmV0dXJuIC1FSU87CiAK
IAlpZiAocmluZy0+c2NoZWQucmVhZHkpIHsKQEAgLTYzMyw3ICs2MzMsOCBAQCBzdGF0aWMgaW50
IGdtY192OV8wX2ZsdXNoX2dwdV90bGJfcGFzaWQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYs
CiAJCXNwaW5fdW5sb2NrKCZhZGV2LT5nZngua2lxLnJpbmdfbG9jayk7CiAJCXIgPSBhbWRncHVf
ZmVuY2Vfd2FpdF9wb2xsaW5nKHJpbmcsIHNlcSwgYWRldi0+dXNlY190aW1lb3V0KTsKIAkJaWYg
KHIgPCAxKSB7Ci0JCQlEUk1fRVJST1IoIndhaXQgZm9yIGtpcSBmZW5jZSBlcnJvcjogJWxkLlxu
Iiwgcik7CisJCQlkZXZfaW5mbyhhZGV2LT5kZXYsCisJCQkJIndhaXQgZm9yIGtpcSBmZW5jZSBl
cnJvcjogJWxkXG4iLCByKTsKIAkJCXJldHVybiAtRVRJTUU7CiAJCX0KIApkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfYWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L214Z3B1X2FpLmMKaW5kZXggNWZkNjdlMWNjMmEwLi5mZTMxY2JlY2NmZTkgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1X2FpLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfYWkuYwpAQCAtMjM4LDIwICsyMzgsMTYgQEAg
c3RhdGljIHZvaWQgeGdwdV9haV9tYWlsYm94X2Zscl93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAq
d29yaykKIAlzdHJ1Y3QgYW1kZ3B1X3ZpcnQgKnZpcnQgPSBjb250YWluZXJfb2Yod29yaywgc3Ry
dWN0IGFtZGdwdV92aXJ0LCBmbHJfd29yayk7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYg
PSBjb250YWluZXJfb2YodmlydCwgc3RydWN0IGFtZGdwdV9kZXZpY2UsIHZpcnQpOwogCWludCB0
aW1lb3V0ID0gQUlfTUFJTEJPWF9QT0xMX0ZMUl9USU1FRE9VVDsKLQlpbnQgbG9ja2VkOwogCiAJ
LyogYmxvY2sgYW1kZ3B1X2dwdV9yZWNvdmVyIHRpbGwgbXNnIEZMUiBDT01QTEVURSByZWNlaXZl
ZCwKIAkgKiBvdGhlcndpc2UgdGhlIG1haWxib3ggbXNnIHdpbGwgYmUgcnVpbmVkL3Jlc2V0ZWQg
YnkKIAkgKiB0aGUgVkYgRkxSLgogCSAqCi0JICogd2UgY2FuIHVubG9jayB0aGUgbG9ja19yZXNl
dCB0byBhbGxvdyAiYW1kZ3B1X2pvYl90aW1lZG91dCIKKwkgKiB3ZSBjYW4gdW5sb2NrIHRoZSBy
ZXNldF9zZW0gdG8gYWxsb3cgImFtZGdwdV9qb2JfdGltZWRvdXQiCiAJICogdG8gcnVuIGdwdV9y
ZWNvdmVyKCkgYWZ0ZXIgRkxSX05PVElGSUNBVElPTl9DTVBMIHJlY2VpdmVkCiAJICogd2hpY2gg
bWVhbnMgaG9zdCBzaWRlIGhhZCBmaW5pc2hlZCB0aGlzIFZGJ3MgRkxSLgogCSAqLwotCWxvY2tl
ZCA9IG11dGV4X3RyeWxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOwotCWlmIChsb2NrZWQpCi0JCWFk
ZXYtPmluX2dwdV9yZXNldCA9IHRydWU7Ci0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
CiAJZG8gewogCQlpZiAoeGdwdV9haV9tYWlsYm94X3BlZWtfbXNnKGFkZXYpID09IElESF9GTFJf
Tk9USUZJQ0FUSU9OX0NNUEwpCiAJCQlnb3RvIGZscl9kb25lOwpAQCAtMjYxLDEwICsyNTcsNyBA
QCBzdGF0aWMgdm9pZCB4Z3B1X2FpX21haWxib3hfZmxyX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0
ICp3b3JrKQogCX0gd2hpbGUgKHRpbWVvdXQgPiAxKTsKIAogZmxyX2RvbmU6Ci0JaWYgKGxvY2tl
ZCkgewotCQlhZGV2LT5pbl9ncHVfcmVzZXQgPSBmYWxzZTsKLQkJbXV0ZXhfdW5sb2NrKCZhZGV2
LT5sb2NrX3Jlc2V0KTsKLQl9CisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAogCS8qIFRy
aWdnZXIgcmVjb3ZlcnkgZm9yIHdvcmxkIHN3aXRjaCBmYWlsdXJlIGlmIG5vIFREUiAqLwogCWlm
IChhbWRncHVfZGV2aWNlX3Nob3VsZF9yZWNvdmVyX2dwdShhZGV2KQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfbnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L214Z3B1X252LmMKaW5kZXggY2UyYmYxZmI3OWVkLi42ZjU1MTcyZTgzMzcgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1X252LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfbnYuYwpAQCAtMjU5LDIwICsyNTksMTYgQEAgc3Rh
dGljIHZvaWQgeGdwdV9udl9tYWlsYm94X2Zscl93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29y
aykKIAlzdHJ1Y3QgYW1kZ3B1X3ZpcnQgKnZpcnQgPSBjb250YWluZXJfb2Yod29yaywgc3RydWN0
IGFtZGdwdV92aXJ0LCBmbHJfd29yayk7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBj
b250YWluZXJfb2YodmlydCwgc3RydWN0IGFtZGdwdV9kZXZpY2UsIHZpcnQpOwogCWludCB0aW1l
b3V0ID0gTlZfTUFJTEJPWF9QT0xMX0ZMUl9USU1FRE9VVDsKLQlpbnQgbG9ja2VkOwogCiAJLyog
YmxvY2sgYW1kZ3B1X2dwdV9yZWNvdmVyIHRpbGwgbXNnIEZMUiBDT01QTEVURSByZWNlaXZlZCwK
IAkgKiBvdGhlcndpc2UgdGhlIG1haWxib3ggbXNnIHdpbGwgYmUgcnVpbmVkL3Jlc2V0ZWQgYnkK
IAkgKiB0aGUgVkYgRkxSLgogCSAqCi0JICogd2UgY2FuIHVubG9jayB0aGUgbG9ja19yZXNldCB0
byBhbGxvdyAiYW1kZ3B1X2pvYl90aW1lZG91dCIKKwkgKiB3ZSBjYW4gdW5sb2NrIHRoZSByZXNl
dF9zZW0gdG8gYWxsb3cgImFtZGdwdV9qb2JfdGltZWRvdXQiCiAJICogdG8gcnVuIGdwdV9yZWNv
dmVyKCkgYWZ0ZXIgRkxSX05PVElGSUNBVElPTl9DTVBMIHJlY2VpdmVkCiAJICogd2hpY2ggbWVh
bnMgaG9zdCBzaWRlIGhhZCBmaW5pc2hlZCB0aGlzIFZGJ3MgRkxSLgogCSAqLwotCWxvY2tlZCA9
IG11dGV4X3RyeWxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOwotCWlmIChsb2NrZWQpCi0JCWFkZXYt
PmluX2dwdV9yZXNldCA9IHRydWU7Ci0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJ
ZG8gewogCQlpZiAoeGdwdV9udl9tYWlsYm94X3BlZWtfbXNnKGFkZXYpID09IElESF9GTFJfTk9U
SUZJQ0FUSU9OX0NNUEwpCiAJCQlnb3RvIGZscl9kb25lOwpAQCAtMjgyLDEwICsyNzgsNyBAQCBz
dGF0aWMgdm9pZCB4Z3B1X252X21haWxib3hfZmxyX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3
b3JrKQogCX0gd2hpbGUgKHRpbWVvdXQgPiAxKTsKIAogZmxyX2RvbmU6Ci0JaWYgKGxvY2tlZCkg
ewotCQlhZGV2LT5pbl9ncHVfcmVzZXQgPSBmYWxzZTsKLQkJbXV0ZXhfdW5sb2NrKCZhZGV2LT5s
b2NrX3Jlc2V0KTsKLQl9CisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAogCS8qIFRyaWdn
ZXIgcmVjb3ZlcnkgZm9yIHdvcmxkIHN3aXRjaCBmYWlsdXJlIGlmIG5vIFREUiAqLwogCWlmIChh
bWRncHVfZGV2aWNlX3Nob3VsZF9yZWNvdmVyX2dwdShhZGV2KQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRrZmQva2ZkX2RldmljZV9xdWV1ZV9tYW5hZ2VyLmMgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGtmZC9rZmRfZGV2aWNlX3F1ZXVlX21hbmFnZXIuYwppbmRleCBkZDU1
MDAyNWQxYzEuLjBiNTQwOWNlZGU1MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRrZmQva2ZkX2RldmljZV9xdWV1ZV9tYW5hZ2VyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRrZmQva2ZkX2RldmljZV9xdWV1ZV9tYW5hZ2VyLmMKQEAgLTMwNCwxNSArMzA0LDE3IEBA
IHN0YXRpYyB2b2lkIGRlYWxsb2NhdGVfdm1pZChzdHJ1Y3QgZGV2aWNlX3F1ZXVlX21hbmFnZXIg
KmRxbSwKIAkJCQlzdHJ1Y3QgcWNtX3Byb2Nlc3NfZGV2aWNlICpxcGQsCiAJCQkJc3RydWN0IHF1
ZXVlICpxKQogewotCS8qIE9uIEdGWCB2NywgQ1AgZG9lc24ndCBmbHVzaCBUQyBhdCBkZXF1ZXVl
ICovCi0JaWYgKHEtPmRldmljZS0+ZGV2aWNlX2luZm8tPmFzaWNfZmFtaWx5ID09IENISVBfSEFX
QUlJKQotCQlpZiAoZmx1c2hfdGV4dHVyZV9jYWNoZV9ub2Nwc2NoKHEtPmRldmljZSwgcXBkKSkK
LQkJCXByX2VycigiRmFpbGVkIHRvIGZsdXNoIFRDXG4iKTsKKwlpZiAoIWRxbS0+aXNfcmVzZXR0
aW5nKSB7CisJCS8qIE9uIEdGWCB2NywgQ1AgZG9lc24ndCBmbHVzaCBUQyBhdCBkZXF1ZXVlICov
CisJCWlmIChxLT5kZXZpY2UtPmRldmljZV9pbmZvLT5hc2ljX2ZhbWlseSA9PSBDSElQX0hBV0FJ
SSkKKwkJCWlmIChmbHVzaF90ZXh0dXJlX2NhY2hlX25vY3BzY2gocS0+ZGV2aWNlLCBxcGQpKQor
CQkJCXByX2VycigiRmFpbGVkIHRvIGZsdXNoIFRDXG4iKTsKIAotCWtmZF9mbHVzaF90bGIocXBk
X3RvX3BkZChxcGQpKTsKKwkJa2ZkX2ZsdXNoX3RsYihxcGRfdG9fcGRkKHFwZCkpOwogCi0JLyog
UmVsZWFzZSB0aGUgdm1pZCBtYXBwaW5nICovCi0Jc2V0X3Bhc2lkX3ZtaWRfbWFwcGluZyhkcW0s
IDAsIHFwZC0+dm1pZCk7CisJCS8qIFJlbGVhc2UgdGhlIHZtaWQgbWFwcGluZyAqLworCQlzZXRf
cGFzaWRfdm1pZF9tYXBwaW5nKGRxbSwgMCwgcXBkLT52bWlkKTsKKwl9CiAJZHFtLT52bWlkX3Bh
c2lkW3FwZC0+dm1pZF0gPSAwOwogCiAJcXBkLT52bWlkID0gMDsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1ka2ZkL2tmZF9wcm9jZXNzLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGtmZC9rZmRfcHJvY2Vzcy5jCmluZGV4IDAxM2MyYjAxOGVkYy4uNzFiZTg5N2Q0YzJhIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGtmZC9rZmRfcHJvY2Vzcy5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1ka2ZkL2tmZF9wcm9jZXNzLmMKQEAgLTE1NTEsNiArMTU1
MSwxMCBAQCBpbnQga2ZkX3Jlc2VydmVkX21lbV9tbWFwKHN0cnVjdCBrZmRfZGV2ICpkZXYsIHN0
cnVjdCBrZmRfcHJvY2VzcyAqcHJvY2VzcywKIHZvaWQga2ZkX2ZsdXNoX3RsYihzdHJ1Y3Qga2Zk
X3Byb2Nlc3NfZGV2aWNlICpwZGQpCiB7CiAJc3RydWN0IGtmZF9kZXYgKmRldiA9IHBkZC0+ZGV2
OworCXN0cnVjdCBkZXZpY2VfcXVldWVfbWFuYWdlciAqZHFtID0gZGV2LT5kcW07CisKKwlpZiAo
ZHFtLT5pc19yZXNldHRpbmcpCisJCXJldHVybjsKIAogCWlmIChkZXYtPmRxbS0+c2NoZWRfcG9s
aWN5ID09IEtGRF9TQ0hFRF9QT0xJQ1lfTk9fSFdTKSB7CiAJCS8qIE5vdGhpbmcgdG8gZmx1c2gg
dW50aWwgYSBWTUlEIGlzIGFzc2lnbmVkLCB3aGljaApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMKaW5kZXggYjRlMTIwZTk1NDM4Li40MjYz
NGZmYjljNjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVf
ZG0vYW1kZ3B1X2RtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9k
bS9hbWRncHVfZG0uYwpAQCAtMTY0MCw3ICsxNjQwLDcgQEAgc3RhdGljIGludCBkbV9zdXNwZW5k
KHZvaWQgKmhhbmRsZSkKIAlzdHJ1Y3QgYW1kZ3B1X2Rpc3BsYXlfbWFuYWdlciAqZG0gPSAmYWRl
di0+ZG07CiAJaW50IHJldCA9IDA7CiAKLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7CisJaWYg
KGFtZGdwdV9pbl9yZXNldChhZGV2KSkgewogCQltdXRleF9sb2NrKCZkbS0+ZGNfbG9jayk7CiAJ
CWRtLT5jYWNoZWRfZGNfc3RhdGUgPSBkY19jb3B5X3N0YXRlKGRtLT5kYy0+Y3VycmVudF9zdGF0
ZSk7CiAKQEAgLTE4MjYsNyArMTgyNiw3IEBAIHN0YXRpYyBpbnQgZG1fcmVzdW1lKHZvaWQgKmhh
bmRsZSkKIAlzdHJ1Y3QgZGNfc3RhdGUgKmRjX3N0YXRlOwogCWludCBpLCByLCBqOwogCi0JaWYg
KGFkZXYtPmluX2dwdV9yZXNldCkgeworCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpIHsKIAkJ
ZGNfc3RhdGUgPSBkbS0+Y2FjaGVkX2RjX3N0YXRlOwogCiAJCXIgPSBkbV9kbXViX2h3X2luaXQo
YWRldik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hbWRncHVf
c211LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hbWRncHVfc211LmMKaW5kZXgg
ZmU0OTQ4YWE2NjJmLi5kZDA4MjBlZjBmNWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2Vy
cGxheS9hbWRncHVfc211LmMKQEAgLTEzNDEsNyArMTM0MSw3IEBAIHN0YXRpYyBpbnQgc211X2Rp
c2FibGVfZHBtcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAl1aW50NjRfdCBmZWF0dXJlc190
b19kaXNhYmxlOwogCWludCByZXQgPSAwOwogCWJvb2wgdXNlX2JhY28gPSAhc211LT5pc19hcHUg
JiYKLQkJKChhZGV2LT5pbl9ncHVfcmVzZXQgJiYKKwkJKChhbWRncHVfaW5fcmVzZXQoYWRldikg
JiYKIAkJICAoYW1kZ3B1X2FzaWNfcmVzZXRfbWV0aG9kKGFkZXYpID09IEFNRF9SRVNFVF9NRVRI
T0RfQkFDTykpIHx8CiAJCSAoKGFkZXYtPmluX3J1bnBtIHx8IGFkZXYtPmluX2hpYmVybmF0ZSkg
JiYgYW1kZ3B1X2FzaWNfc3VwcG9ydHNfYmFjbyhhZGV2KSkpOwogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMjBfaHdtZ3IuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL3ZlZ2EyMF9od21nci5jCmluZGV4IDNiODgzOTY0
MTc3MC4uYmFjYmUyZmExZjlhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2Vy
cGxheS9od21nci92ZWdhMjBfaHdtZ3IuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2Vy
cGxheS9od21nci92ZWdhMjBfaHdtZ3IuYwpAQCAtNDg0LDcgKzQ4NCw3IEBAIHN0YXRpYyBpbnQg
dmVnYTIwX3NldHVwX2FzaWNfdGFzayhzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyKQogewogCXN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2ID0gKHN0cnVjdCBhbWRncHVfZGV2aWNlICopKGh3bWdyLT5h
ZGV2KTsKIAlpbnQgcmV0ID0gMDsKLQlib29sIHVzZV9iYWNvID0gKGFkZXYtPmluX2dwdV9yZXNl
dCAmJgorCWJvb2wgdXNlX2JhY28gPSAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpICYmCiAJCQkgKGFt
ZGdwdV9hc2ljX3Jlc2V0X21ldGhvZChhZGV2KSA9PSBBTURfUkVTRVRfTUVUSE9EX0JBQ08pKSB8
fAogCQkoYWRldi0+aW5fcnVucG0gJiYgYW1kZ3B1X2FzaWNfc3VwcG9ydHNfYmFjbyhhZGV2KSk7
CiAKLS0gCjIuMTcuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KYW1kLWdmeCBtYWlsaW5nIGxpc3QKYW1kLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcK
aHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4Cg==
