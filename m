Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8A533DD733
	for <lists+amd-gfx@lfdr.de>; Sat, 19 Oct 2019 10:00:57 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0D69589F08;
	Sat, 19 Oct 2019 08:00:56 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM04-BN3-obe.outbound.protection.outlook.com
 (mail-eopbgr680066.outbound.protection.outlook.com [40.107.68.66])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9CD5F89F08
 for <amd-gfx@lists.freedesktop.org>; Sat, 19 Oct 2019 08:00:54 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Z9N+wMDUKo2sIUxu7qy8E2uGILAhjW8DFXKpAt6dXcl1xmRLVVVh5vkAJjDEdno0fKAddoDredAb8Kyan1fHOYDOSXoL0EGSQ0L0gYb8jZnifiOL+TLEgrAbw32Xs7B4ZALIBPk1ynguRv+ZljGOPNSt726hYZLp9wt9Q8pK1KASL3EjEunsIF6ozQ9LILaL/NV9i5Ro+og2LrhYlT9S01643bgoezKSGchFiZbU4z7oT97IliKUsoREPC2m4qD+05iF6DScxcl5c8yeax/39tqUSwBBdRxAfk0Q1bwvg19jdDExmsFWU+/LncNLkCbgGR6i+ohINtVAF2TWrpRwLw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=cNPY37Z7mY/72EtlG9pogtsJeiFQT6aaCYDRBqc7+4Y=;
 b=k0Jc4yvJopZc1fz88MHfrZIOO0TcjedF79C/YMpyQY1V8HENrC9Lka/ESoG2X6KX8K6MS4BP5M7aMreOg2lZZRMhO2SD3ZSs9qaK9EaZpv/p1M+XV5CiwNoA6K5EIWfBr0Mtc81aRLwFauLYkKBgIGWu4onc3sxkTFR/Q+h0vIQYA9QScqUI1w717ZjOb1Lwy9MGcxtm6QznGOT7E+zs0m0MBciWdADbNsYL4O/WCdFioXIrPLNuFG9iLaH4XXwzScUvdRfzq9kOGKRBuR001xq9TiAlSJrgx5Qjw1Wr+DFbBUzWulh7GavWYjPVH2aJAl//HgvbDjpojoPl7L/CkQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from CH2PR12MB3767.namprd12.prod.outlook.com (52.132.244.213) by
 CH2PR12MB3720.namprd12.prod.outlook.com (52.132.245.143) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2347.17; Sat, 19 Oct 2019 08:00:49 +0000
Received: from CH2PR12MB3767.namprd12.prod.outlook.com
 ([fe80::b528:bdc9:94c9:ff0]) by CH2PR12MB3767.namprd12.prod.outlook.com
 ([fe80::b528:bdc9:94c9:ff0%6]) with mapi id 15.20.2367.019; Sat, 19 Oct 2019
 08:00:49 +0000
From: "Xu, Feifei" <Feifei.Xu@amd.com>
To: "Quan, Evan" <Evan.Quan@amd.com>, "amd-gfx@lists.freedesktop.org"
 <amd-gfx@lists.freedesktop.org>
Subject: RE: [PATCH 1/3] drm/amd/powerplay: add lock protection for swSMU APIs
 V2
Thread-Topic: [PATCH 1/3] drm/amd/powerplay: add lock protection for swSMU
 APIs V2
Thread-Index: AQHVhcRUn020zu7xuU2OeAHRCXD7K6dhmwaw
Date: Sat, 19 Oct 2019 08:00:49 +0000
Message-ID: <CH2PR12MB3767BDA9C2197BF24EF6B3F5FE6F0@CH2PR12MB3767.namprd12.prod.outlook.com>
References: <20191018145651.10987-1-evan.quan@amd.com>
In-Reply-To: <20191018145651.10987-1-evan.quan@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 27213128-f180-4bab-73ca-08d7546a7487
x-ms-office365-filtering-ht: Tenant
x-ms-traffictypediagnostic: CH2PR12MB3720:
x-ms-exchange-purlcount: 1
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <CH2PR12MB3720D59D00D7093B935CC802FE6F0@CH2PR12MB3720.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:4941;
x-forefront-prvs: 01952C6E96
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(376002)(346002)(366004)(396003)(39860400002)(136003)(13464003)(199004)(189003)(7736002)(64756008)(66476007)(66446008)(66556008)(76116006)(54906003)(81166006)(66946007)(74316002)(2501003)(110136005)(33656002)(186003)(8936002)(81156014)(316002)(305945005)(8676002)(26005)(229853002)(53546011)(102836004)(9686003)(5660300002)(486006)(71190400001)(71200400001)(6306002)(478600001)(966005)(7696005)(52536014)(446003)(256004)(14454004)(6246003)(25786009)(66574012)(6506007)(6436002)(30864003)(476003)(66066001)(99286004)(3846002)(6116002)(2906002)(55016002)(11346002)(86362001)(4326008)(76176011)(14444005)(569006);
 DIR:OUT; SFP:1101; SCL:1; SRVR:CH2PR12MB3720;
 H:CH2PR12MB3767.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; A:1; MX:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: egDiOtXiJXM73Wu3drIp00xc1ngSE0yECEjq/WmthsswypWV0l4fnHkTISQT/ZpomWQYmliCSiohHj4HP43LUnLbDLnHs+5yQh8fiErEcRwTP/CqXbaxqrlkSyG32+GRify2XT0BzpmnUk2bcfkXCRNn6Kq1i8S99R2xInMR4OWiWNVisJM0+ZjG8sQClSEWZIinCABLguWVFtKAHjbIDfYghx2/Ngq6LUnAIFoN8Gcj6bKLQi/TXpSosxVtps3MbDXaLkuut3mT9btZMT3ORnC2fbTajx46VYtEhpzfFja3ZWOnDCtzU4sHx6WT6TEDmzqCCCyjoi/8YhD9hAeXe0Hqp1iYhZs8gTlehQup+Xhbb7MNvmX+Q2H5VszfYg4YuAaZJWiyiTFepOJEQB+jRV3cYGztgTzj3uOMAQ34mydEVMLJRgDcoRLja3raFWMv2YzeGSQ5XuI7osUdg+sESw==
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 27213128-f180-4bab-73ca-08d7546a7487
X-MS-Exchange-CrossTenant-originalarrivaltime: 19 Oct 2019 08:00:49.2066 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: E5D0+aQNaXxDrqEN4RfzFCE9e/BFYpYQx+NTTh0aZ7jp5Sc5o+6ozoctc8mP+aUl
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH2PR12MB3720
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=cNPY37Z7mY/72EtlG9pogtsJeiFQT6aaCYDRBqc7+4Y=;
 b=u1+8GK3ubzC8cvqeJ7kjynVmGpgNOpVmmHWzYIHVhvmiPJUgsvmVNyGAAsSdPQiZ98asIEI4eJZafF134zcyxJ0jae6PcVtpUHajgVkjlK9sH6MUTf3G3Ll7T6T9t/f1TCZ8SOKE5vrH+qF7dQ19W0sFIkq8zLqWmETBaNA9k0k=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Feifei.Xu@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Deucher, Alexander" <Alexander.Deucher@amd.com>, "Grodzovsky,
 Andrey" <Andrey.Grodzovsky@amd.com>, "Quan, Evan" <Evan.Quan@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

QWNrZWQtYnk6IEZlaWZlaSBYdSA8RmVpZmVpLlh1QGFtZC5jb20+DQoNClRoYW5rcywNCkZlaWZl
aQ0KDQotLS0tLU9yaWdpbmFsIE1lc3NhZ2UtLS0tLQ0KRnJvbTogYW1kLWdmeCA8YW1kLWdmeC1i
b3VuY2VzQGxpc3RzLmZyZWVkZXNrdG9wLm9yZz4gT24gQmVoYWxmIE9mIFF1YW4sIEV2YW4NClNl
bnQ6IEZyaWRheSwgT2N0b2JlciAxOCwgMjAxOSAxMDo1NyBQTQ0KVG86IGFtZC1nZnhAbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnDQpDYzogRGV1Y2hlciwgQWxleGFuZGVyIDxBbGV4YW5kZXIuRGV1Y2hl
ckBhbWQuY29tPjsgR3JvZHpvdnNreSwgQW5kcmV5IDxBbmRyZXkuR3JvZHpvdnNreUBhbWQuY29t
PjsgUXVhbiwgRXZhbiA8RXZhbi5RdWFuQGFtZC5jb20+DQpTdWJqZWN0OiBbUEFUQ0ggMS8zXSBk
cm0vYW1kL3Bvd2VycGxheTogYWRkIGxvY2sgcHJvdGVjdGlvbiBmb3Igc3dTTVUgQVBJcyBWMg0K
DQpUaGlzIGlzIGEgcXVpY2sgYW5kIGxvdyByaXNrIGZpeC4gVGhvc2UgQVBJcyB3aGljaA0KYXJl
IGV4cG9zZWQgdG8gb3RoZXIgSVBzIG9yIHRvIHN1cHBvcnQgc3lzZnMvaHdtb24NCmludGVyZmFj
ZXMgb3IgREFMIHdpbGwgaGF2ZSBsb2NrIHByb3RlY3Rpb24uIE1lYW53aGlsZQ0Kbm8gbG9jayBw
cm90ZWN0aW9uIGlzIGVuZm9yY2VkIGZvciBzd1NNVSBpbnRlcm5hbCB1c2VkDQpBUElzLiBGdXR1
cmUgb3B0aW1pemF0aW9uIGlzIG5lZWRlZC4NCg0KVjI6IHN0cmlwIHRoZSBsb2NrIHByb3RlY3Rp
b24gZm9yIGFsbCBzd1NNVSBpbnRlcm5hbCBBUElzDQoNCkNoYW5nZS1JZDogSTgzOTI2NTJjOWRh
MTU3NGE4NWFjZDliMTcxZjA0MzgwZjM2MzA4NTINClNpZ25lZC1vZmYtYnk6IEV2YW4gUXVhbiA8
ZXZhbi5xdWFuQGFtZC5jb20+DQotLS0NCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfZHBtLmMgICAgICAgfCAgIDYgKy0NCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfZHBtLmggICAgICAgfCAgIDYgLQ0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9wbS5jICAgICAgICB8ICAyMyArLQ0KIC4uLi9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1
X2RtX3BwX3NtdS5jICB8ICAgNCArLQ0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2Ft
ZGdwdV9zbXUuYyAgICB8IDY5NiArKysrKysrKysrKysrKysrLS0NCiBkcml2ZXJzL2dwdS9kcm0v
YW1kL3Bvd2VycGxheS9hcmN0dXJ1c19wcHQuYyAgfCAgIDMgLQ0KIC4uLi9ncHUvZHJtL2FtZC9w
b3dlcnBsYXkvaW5jL2FtZGdwdV9zbXUuaCAgICB8IDE2MyArKy0tDQogZHJpdmVycy9ncHUvZHJt
L2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5jICAgIHwgIDE1ICstDQogZHJpdmVycy9ncHUvZHJt
L2FtZC9wb3dlcnBsYXkvcmVub2lyX3BwdC5jICAgIHwgIDE0ICstDQogZHJpdmVycy9ncHUvZHJt
L2FtZC9wb3dlcnBsYXkvc211X3YxMV8wLmMgICAgIHwgIDIyICstDQogZHJpdmVycy9ncHUvZHJt
L2FtZC9wb3dlcnBsYXkvc211X3YxMl8wLmMgICAgIHwgICAzIC0NCiBkcml2ZXJzL2dwdS9kcm0v
YW1kL3Bvd2VycGxheS92ZWdhMjBfcHB0LmMgICAgfCAgMjAgKy0NCiAxMiBmaWxlcyBjaGFuZ2Vk
LCA3NzcgaW5zZXJ0aW9ucygrKSwgMTk4IGRlbGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5jIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X2RwbS5jDQppbmRleCAyNjMyNjUyNDVlMTkuLjI4ZDMyNzI1Mjg1YiAx
MDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kcG0uYw0KKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5jDQpAQCAtOTEyLDcgKzkx
Miw4IEBAIGludCBhbWRncHVfZHBtX2dldF9zY2xrKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
LCBib29sIGxvdykNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7DQogCQlyZXQgPSBz
bXVfZ2V0X2RwbV9mcmVxX3JhbmdlKCZhZGV2LT5zbXUsIFNNVV9HRlhDTEssDQogCQkJCQkgICAg
IGxvdyA/ICZjbGtfZnJlcSA6IE5VTEwsDQotCQkJCQkgICAgICFsb3cgPyAmY2xrX2ZyZXEgOiBO
VUxMKTsNCisJCQkJCSAgICAgIWxvdyA/ICZjbGtfZnJlcSA6IE5VTEwsDQorCQkJCQkgICAgIHRy
dWUpOw0KIAkJaWYgKHJldCkNCiAJCQlyZXR1cm4gMDsNCiAJCXJldHVybiBjbGtfZnJlcSAqIDEw
MDsNCkBAIC05MzAsNyArOTMxLDggQEAgaW50IGFtZGdwdV9kcG1fZ2V0X21jbGsoc3RydWN0IGFt
ZGdwdV9kZXZpY2UgKmFkZXYsIGJvb2wgbG93KQ0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRl
dikpIHsNCiAJCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2UoJmFkZXYtPnNtdSwgU01VX1VD
TEssDQogCQkJCQkgICAgIGxvdyA/ICZjbGtfZnJlcSA6IE5VTEwsDQotCQkJCQkgICAgICFsb3cg
PyAmY2xrX2ZyZXEgOiBOVUxMKTsNCisJCQkJCSAgICAgIWxvdyA/ICZjbGtfZnJlcSA6IE5VTEws
DQorCQkJCQkgICAgIHRydWUpOw0KIAkJaWYgKHJldCkNCiAJCQlyZXR1cm4gMDsNCiAJCXJldHVy
biBjbGtfZnJlcSAqIDEwMDsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfZHBtLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZHBtLmgN
CmluZGV4IDFjNWMwZmQ3NmRiZi4uMmNmYjY3NzI3MmFmIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5oDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfZHBtLmgNCkBAIC0yOTgsMTIgKzI5OCw2IEBAIGVudW0gYW1kZ3B1X3Bj
aWVfZ2VuIHsNCiAjZGVmaW5lIGFtZGdwdV9kcG1fZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoYWRl
dikgXA0KIAkJKChhZGV2KS0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfY3VycmVudF9wb3dlcl9z
dGF0ZSgoYWRldiktPnBvd2VycGxheS5wcF9oYW5kbGUpKQ0KIA0KLSNkZWZpbmUgYW1kZ3B1X3Nt
dV9nZXRfY3VycmVudF9wb3dlcl9zdGF0ZShhZGV2KSBcDQotCQkoKGFkZXYpLT5zbXUucHB0X2Z1
bmNzLT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZSgmKChhZGV2KS0+c211KSkpDQotDQotI2RlZmlu
ZSBhbWRncHVfc211X3NldF9wb3dlcl9zdGF0ZShhZGV2KSBcDQotCQkoKGFkZXYpLT5zbXUucHB0
X2Z1bmNzLT5zZXRfcG93ZXJfc3RhdGUoJigoYWRldiktPnNtdSkpKQ0KLQ0KICNkZWZpbmUgYW1k
Z3B1X2RwbV9nZXRfcHBfbnVtX3N0YXRlcyhhZGV2LCBkYXRhKSBcDQogCQkoKGFkZXYpLT5wb3dl
cnBsYXkucHBfZnVuY3MtPmdldF9wcF9udW1fc3RhdGVzKChhZGV2KS0+cG93ZXJwbGF5LnBwX2hh
bmRsZSwgZGF0YSkpDQogDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfcG0uYw0KaW5k
ZXggYzUwZDVmMWU3NWU1Li4zNmYzNmIzNTAwMGQgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfcG0uYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X3BtLmMNCkBAIC0yMTEsNyArMjExLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2dldF9kcG1fc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIA0KIAlpZiAoaXNfc3VwcG9ydF9z
d19zbXUoYWRldikpIHsNCiAJCWlmIChhZGV2LT5zbXUucHB0X2Z1bmNzLT5nZXRfY3VycmVudF9w
b3dlcl9zdGF0ZSkNCi0JCQlwbSA9IGFtZGdwdV9zbXVfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUo
YWRldik7DQorCQkJcG0gPSBzbXVfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoJmFkZXYtPnNtdSk7
DQogCQllbHNlDQogCQkJcG0gPSBhZGV2LT5wbS5kcG0udXNlcl9zdGF0ZTsNCiAJfSBlbHNlIGlm
IChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9jdXJyZW50X3Bvd2VyX3N0YXRlKSB7DQpA
QCAtOTU3LDcgKzk1Nyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3NjbGso
c3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiANCiAJaWYgKGlzX3N1cHBvcnRf
c3dfc211KGFkZXYpKQ0KLQkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwg
U01VX1NDTEssIG1hc2spOw0KKwkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNt
dSwgU01VX1NDTEssIG1hc2ssIHRydWUpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBf
ZnVuY3MtPmZvcmNlX2Nsb2NrX2xldmVsKQ0KIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9j
a19sZXZlbChhZGV2LCBQUF9TQ0xLLCBtYXNrKTsNCiANCkBAIC0xMDA0LDcgKzEwMDQsNyBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9tY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwN
CiAJCXJldHVybiByZXQ7DQogDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCi0JCXJl
dCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9NQ0xLLCBtYXNrKTsNCisJ
CXJldCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9NQ0xLLCBtYXNrLCB0
cnVlKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9jbG9ja19s
ZXZlbCkNCiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfY2xvY2tfbGV2ZWwoYWRldiwgUFBfTUNM
SywgbWFzayk7DQogDQpAQCAtMTA0NCw3ICsxMDQ0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X3NldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByZXQ7DQog
DQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCi0JCXJldCA9IHNtdV9mb3JjZV9jbGtf
bGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TT0NDTEssIG1hc2spOw0KKwkJcmV0ID0gc211X2ZvcmNl
X2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1NPQ0NMSywgbWFzaywgdHJ1ZSk7DQogCWVsc2Ug
aWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpDQogCQlyZXQg
PSBhbWRncHVfZHBtX2ZvcmNlX2Nsb2NrX2xldmVsKGFkZXYsIFBQX1NPQ0NMSywgbWFzayk7DQog
DQpAQCAtMTA4NCw3ICsxMDg0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1f
ZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0KIA0KIAlpZiAoaXNfc3Vw
cG9ydF9zd19zbXUoYWRldikpDQotCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+
c211LCBTTVVfRkNMSywgbWFzayk7DQorCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRl
di0+c211LCBTTVVfRkNMSywgbWFzaywgdHJ1ZSk7DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxh
eS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpDQogCQlyZXQgPSBhbWRncHVfZHBtX2ZvcmNl
X2Nsb2NrX2xldmVsKGFkZXYsIFBQX0ZDTEssIG1hc2spOw0KIA0KQEAgLTExMjQsNyArMTEyNCw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0IGRldmlj
ZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiANCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYp
KQ0KLQkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX0RDRUZDTEss
IG1hc2spOw0KKwkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX0RD
RUZDTEssIG1hc2ssIHRydWUpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3Mt
PmZvcmNlX2Nsb2NrX2xldmVsKQ0KIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9ja19sZXZl
bChhZGV2LCBQUF9EQ0VGQ0xLLCBtYXNrKTsNCiANCkBAIC0xMTY0LDcgKzExNjQsNyBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJ
CXJldHVybiByZXQ7DQogDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCi0JCXJldCA9
IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9QQ0lFLCBtYXNrKTsNCisJCXJl
dCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9QQ0lFLCBtYXNrLCB0cnVl
KTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9jbG9ja19sZXZl
bCkNCiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfY2xvY2tfbGV2ZWwoYWRldiwgUFBfUENJRSwg
bWFzayk7DQogDQpAQCAtMTM1Niw3ICsxMzU2LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3Nl
dF9wcF9wb3dlcl9wcm9maWxlX21vZGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAl9DQogCXBhcmFt
ZXRlcltwYXJhbWV0ZXJfc2l6ZV0gPSBwcm9maWxlX21vZGU7DQogCWlmIChpc19zdXBwb3J0X3N3
X3NtdShhZGV2KSkNCi0JCXJldCA9IHNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKCZhZGV2LT5z
bXUsIHBhcmFtZXRlciwgcGFyYW1ldGVyX3NpemUpOw0KKwkJcmV0ID0gc211X3NldF9wb3dlcl9w
cm9maWxlX21vZGUoJmFkZXYtPnNtdSwgcGFyYW1ldGVyLCBwYXJhbWV0ZXJfc2l6ZSwgdHJ1ZSk7
DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVf
bW9kZSkNCiAJCXJldCA9IGFtZGdwdV9kcG1fc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShhZGV2LCBw
YXJhbWV0ZXIsIHBhcmFtZXRlcl9zaXplKTsNCiAJaWYgKCFyZXQpDQpAQCAtMjA2NSw3ICsyMDY1
LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2FwX21heChzdHJ1
Y3QgZGV2aWNlICpkZXYsDQogCXVpbnQzMl90IGxpbWl0ID0gMDsNCiANCiAJaWYgKGlzX3N1cHBv
cnRfc3dfc211KGFkZXYpKSB7DQotCQlzbXVfZ2V0X3Bvd2VyX2xpbWl0KCZhZGV2LT5zbXUsICZs
aW1pdCwgdHJ1ZSk7DQorCQlzbXVfZ2V0X3Bvd2VyX2xpbWl0KCZhZGV2LT5zbXUsICZsaW1pdCwg
dHJ1ZSwgdHJ1ZSk7DQogCQlyZXR1cm4gc25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIldVxuIiwg
bGltaXQgKiAxMDAwMDAwKTsNCiAJfSBlbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3Mg
JiYgYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfcG93ZXJfbGltaXQpIHsNCiAJCWFkZXYt
PnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X3Bvd2VyX2xpbWl0KGFkZXYtPnBvd2VycGxheS5wcF9o
YW5kbGUsICZsaW1pdCwgdHJ1ZSk7DQpAQCAtMjA4Myw3ICsyMDgzLDcgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2FwKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJdWlu
dDMyX3QgbGltaXQgPSAwOw0KIA0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsNCi0J
CXNtdV9nZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCBmYWxzZSk7DQorCQlzbXVf
Z2V0X3Bvd2VyX2xpbWl0KCZhZGV2LT5zbXUsICZsaW1pdCwgZmFsc2UsICB0cnVlKTsNCiAJCXJl
dHVybiBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIiV1XG4iLCBsaW1pdCAqIDEwMDAwMDApOw0K
IAl9IGVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcyAmJiBhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPmdldF9wb3dlcl9saW1pdCkgew0KIAkJYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNz
LT5nZXRfcG93ZXJfbGltaXQoYWRldi0+cG93ZXJwbGF5LnBwX2hhbmRsZSwgJmxpbWl0LCBmYWxz
ZSk7DQpAQCAtMzA2NCw3ICszMDY0LDggQEAgdm9pZCBhbWRncHVfcG1fY29tcHV0ZV9jbG9ja3Mo
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpDQogCQlzdHJ1Y3Qgc211X2RwbV9jb250ZXh0ICpz
bXVfZHBtID0gJmFkZXYtPnNtdS5zbXVfZHBtOw0KIAkJc211X2hhbmRsZV90YXNrKCZhZGV2LT5z
bXUsDQogCQkJCXNtdV9kcG0tPmRwbV9sZXZlbCwNCi0JCQkJQU1EX1BQX1RBU0tfRElTUExBWV9D
T05GSUdfQ0hBTkdFKTsNCisJCQkJQU1EX1BQX1RBU0tfRElTUExBWV9DT05GSUdfQ0hBTkdFLA0K
KwkJCQl0cnVlKTsNCiAJfSBlbHNlIHsNCiAJCWlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3Mt
PmRpc3BhdGNoX3Rhc2tzKSB7DQogCQkJaWYgKCFhbWRncHVfZGV2aWNlX2hhc19kY19zdXBwb3J0
KGFkZXYpKSB7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdw
dV9kbS9hbWRncHVfZG1fcHBfc211LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1k
Z3B1X2RtL2FtZGdwdV9kbV9wcF9zbXUuYw0KaW5kZXggMTM1MjAxOTY0OGMwLi5lZTk5MTVkNjFj
ZjEgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2Ft
ZGdwdV9kbV9wcF9zbXUuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdw
dV9kbS9hbWRncHVfZG1fcHBfc211LmMNCkBAIC04NzYsNyArODc2LDcgQEAgZW51bSBwcF9zbXVf
c3RhdHVzIHBwX252X2dldF9tYXhpbXVtX3N1c3RhaW5hYmxlX2Nsb2NrcygNCiAJaWYgKCFzbXUt
PmZ1bmNzLT5nZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYykNCiAJCXJldHVybiBQUF9T
TVVfUkVTVUxUX1VOU1VQUE9SVEVEOw0KIA0KLQlpZiAoIXNtdS0+ZnVuY3MtPmdldF9tYXhfc3Vz
dGFpbmFibGVfY2xvY2tzX2J5X2RjKHNtdSwgbWF4X2Nsb2NrcykpDQorCWlmICghc211X2dldF9t
YXhfc3VzdGFpbmFibGVfY2xvY2tzX2J5X2RjKHNtdSwgbWF4X2Nsb2NrcykpDQogCQlyZXR1cm4g
UFBfU01VX1JFU1VMVF9PSzsNCiANCiAJcmV0dXJuIFBQX1NNVV9SRVNVTFRfRkFJTDsNCkBAIC04
OTUsNyArODk1LDcgQEAgZW51bSBwcF9zbXVfc3RhdHVzIHBwX252X2dldF91Y2xrX2RwbV9zdGF0
ZXMoc3RydWN0IHBwX3NtdSAqcHAsDQogCWlmICghc211LT5wcHRfZnVuY3MtPmdldF91Y2xrX2Rw
bV9zdGF0ZXMpDQogCQlyZXR1cm4gUFBfU01VX1JFU1VMVF9VTlNVUFBPUlRFRDsNCiANCi0JaWYg
KCFzbXUtPnBwdF9mdW5jcy0+Z2V0X3VjbGtfZHBtX3N0YXRlcyhzbXUsDQorCWlmICghc211X2dl
dF91Y2xrX2RwbV9zdGF0ZXMoc211LA0KIAkJCWNsb2NrX3ZhbHVlc19pbl9raHosIG51bV9zdGF0
ZXMpKQ0KIAkJcmV0dXJuIFBQX1NNVV9SRVNVTFRfT0s7DQogDQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jDQppbmRleCAyNmNhY2M4OTlkZmUuLjA4NDFkOGM3OWU1
YiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUu
Yw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jDQpAQCAt
NjcsNiArNjcsOCBAQCBzaXplX3Qgc211X3N5c19nZXRfcHBfZmVhdHVyZV9tYXNrKHN0cnVjdCBz
bXVfY29udGV4dCAqc211LCBjaGFyICpidWYpDQogCXVpbnQzMl90IHNvcnRfZmVhdHVyZVtTTVVf
RkVBVFVSRV9DT1VOVF07DQogCXVpbnQ2NF90IGh3X2ZlYXR1cmVfY291bnQgPSAwOw0KIA0KKwlt
dXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCiAJcmV0ID0gc211X2ZlYXR1cmVfZ2V0X2VuYWJs
ZWRfbWFzayhzbXUsIGZlYXR1cmVfbWFzaywgMik7DQogCWlmIChyZXQpDQogCQlnb3RvIGZhaWxl
ZDsNCkBAIC05Miw2ICs5NCw4IEBAIHNpemVfdCBzbXVfc3lzX2dldF9wcF9mZWF0dXJlX21hc2so
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNoYXIgKmJ1ZikNCiAJfQ0KIA0KIGZhaWxlZDoNCisJ
bXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCiAJcmV0dXJuIHNpemU7DQogfQ0KIA0KQEAg
LTE0OSw5ICsxNTMsMTEgQEAgaW50IHNtdV9zeXNfc2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwgdWludDY0X3QgbmV3X21hc2spDQogCXVpbnQ2NF90IGZlYXR1cmVf
Ml9kaXNhYmxlZCA9IDA7DQogCXVpbnQ2NF90IGZlYXR1cmVfZW5hYmxlcyA9IDA7DQogDQorCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KIAlyZXQgPSBzbXVfZmVhdHVyZV9nZXRfZW5hYmxl
ZF9tYXNrKHNtdSwgZmVhdHVyZV9tYXNrLCAyKTsNCiAJaWYgKHJldCkNCi0JCXJldHVybiByZXQ7
DQorCQlnb3RvIG91dDsNCiANCiAJZmVhdHVyZV9lbmFibGVzID0gKCh1aW50NjRfdClmZWF0dXJl
X21hc2tbMV0gPDwgMzIgfCAodWludDY0X3QpZmVhdHVyZV9tYXNrWzBdKTsNCiANCkBAIC0xNjEs
MTQgKzE2NywxNyBAQCBpbnQgc211X3N5c19zZXRfcHBfZmVhdHVyZV9tYXNrKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCB1aW50NjRfdCBuZXdfbWFzaykNCiAJaWYgKGZlYXR1cmVfMl9lbmFibGVk
KSB7DQogCQlyZXQgPSBzbXVfZmVhdHVyZV91cGRhdGVfZW5hYmxlX3N0YXRlKHNtdSwgZmVhdHVy
ZV8yX2VuYWJsZWQsIHRydWUpOw0KIAkJaWYgKHJldCkNCi0JCQlyZXR1cm4gcmV0Ow0KKwkJCWdv
dG8gb3V0Ow0KIAl9DQogCWlmIChmZWF0dXJlXzJfZGlzYWJsZWQpIHsNCiAJCXJldCA9IHNtdV9m
ZWF0dXJlX3VwZGF0ZV9lbmFibGVfc3RhdGUoc211LCBmZWF0dXJlXzJfZGlzYWJsZWQsIGZhbHNl
KTsNCiAJCWlmIChyZXQpDQotCQkJcmV0dXJuIHJldDsNCisJCQlnb3RvIG91dDsNCiAJfQ0KIA0K
K291dDoNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCiAJcmV0dXJuIHJldDsNCiB9
DQogDQpAQCAtMjU0LDcgKzI2Myw3IEBAIGludCBzbXVfc2V0X2hhcmRfZnJlcV9yYW5nZShzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsDQogfQ0KIA0K
IGludCBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVt
IHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwNCi0JCQkgICB1aW50MzJfdCAqbWluLCB1aW50MzJfdCAq
bWF4KQ0KKwkJCSAgIHVpbnQzMl90ICptaW4sIHVpbnQzMl90ICptYXgsIGJvb2wgbG9ja19uZWVk
ZWQpDQogew0KIAl1aW50MzJfdCBjbG9ja19saW1pdDsNCiAJaW50IHJldCA9IDA7DQpAQCAtMjYy
LDYgKzI3MSw5IEBAIGludCBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwNCiAJaWYgKCFtaW4gJiYgIW1heCkN
CiAJCXJldHVybiAtRUlOVkFMOw0KIA0KKwlpZiAobG9ja19uZWVkZWQpDQorCQltdXRleF9sb2Nr
KCZzbXUtPm11dGV4KTsNCisNCiAJaWYgKCFzbXVfY2xrX2RwbV9pc19lbmFibGVkKHNtdSwgY2xr
X3R5cGUpKSB7DQogCQlzd2l0Y2ggKGNsa190eXBlKSB7DQogCQljYXNlIFNNVV9NQ0xLOg0KQEAg
LTI4NSwxNCArMjk3LDE3IEBAIGludCBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwNCiAJCQkqbWluID0gY2xv
Y2tfbGltaXQgLyAxMDA7DQogCQlpZiAobWF4KQ0KIAkJCSptYXggPSBjbG9ja19saW1pdCAvIDEw
MDsNCi0NCi0JCXJldHVybiAwOw0KKwl9IGVsc2Ugew0KKwkJLyoNCisJCSAqIFRvZG86IFVzZSBl
YWNoIGFzaWMoQVNJQ19wcHQgZnVuY3MpIGNvbnRyb2wgdGhlIGNhbGxiYWNrcyBleHBvc2VkIHRv
IHRoZQ0KKwkJICogY29yZSBkcml2ZXIgYW5kIHRoZW4gaGF2ZSBoZWxwZXJzIGZvciBzdHVmZiB0
aGF0IGlzIGNvbW1vbihTTVVfdjExX3ggfCBTTVVfdjEyX3ggZnVuY3MpLg0KKwkJICovDQorCQly
ZXQgPSBzbXVfZ2V0X2RwbV91bHRpbWF0ZV9mcmVxKHNtdSwgY2xrX3R5cGUsIG1pbiwgbWF4KTsN
CiAJfQ0KLQkvKg0KLQkgKiBUb2RvOiBVc2UgZWFjaCBhc2ljKEFTSUNfcHB0IGZ1bmNzKSBjb250
cm9sIHRoZSBjYWxsYmFja3MgZXhwb3NlZCB0byB0aGUNCi0JICogY29yZSBkcml2ZXIgYW5kIHRo
ZW4gaGF2ZSBoZWxwZXJzIGZvciBzdHVmZiB0aGF0IGlzIGNvbW1vbihTTVVfdjExX3ggfCBTTVVf
djEyX3ggZnVuY3MpLg0KLQkgKi8NCi0JcmV0ID0gc211X2dldF9kcG1fdWx0aW1hdGVfZnJlcShz
bXUsIGNsa190eXBlLCBtaW4sIG1heCk7DQorDQorCWlmIChsb2NrX25lZWRlZCkNCisJCW11dGV4
X3VubG9jaygmc211LT5tdXRleCk7DQorDQogCXJldHVybiByZXQ7DQogfQ0KIA0KQEAgLTM2OSw2
ICszODQsOCBAQCBpbnQgc211X2RwbV9zZXRfcG93ZXJfZ2F0ZShzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgdWludDMyX3QgYmxvY2tfdHlwZSwNCiB7DQogCWludCByZXQgPSAwOw0KIA0KKwltdXRl
eF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCiAJc3dpdGNoIChibG9ja190eXBlKSB7DQogCWNhc2Ug
QU1EX0lQX0JMT0NLX1RZUEVfVVZEOg0KIAkJcmV0ID0gc211X2RwbV9zZXRfdXZkX2VuYWJsZShz
bXUsIGdhdGUpOw0KQEAgLTM4NiwxMyArNDAzLDkgQEAgaW50IHNtdV9kcG1fc2V0X3Bvd2VyX2dh
dGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGJsb2NrX3R5cGUsDQogCQlicmVh
azsNCiAJfQ0KIA0KLQlyZXR1cm4gcmV0Ow0KLX0NCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4
KTsNCiANCi1lbnVtIGFtZF9wbV9zdGF0ZV90eXBlIHNtdV9nZXRfY3VycmVudF9wb3dlcl9zdGF0
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCi17DQotCS8qIG5vdCBzdXBwb3J0IHBvd2VyIHN0
YXRlICovDQotCXJldHVybiBQT1dFUl9TVEFURV9UWVBFX0RFRkFVTFQ7DQorCXJldHVybiByZXQ7
DQogfQ0KIA0KIGludCBzbXVfZ2V0X3Bvd2VyX251bV9zdGF0ZXMoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsDQpAQCAtNTIwLDE2ICs1MzMsMjMgQEAgYm9vbCBpc19zdXBwb3J0X3N3X3NtdV94Z21p
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQ0KIGludCBzbXVfc3lzX2dldF9wcF90YWJsZShz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdm9pZCAqKnRhYmxlKQ0KIHsNCiAJc3RydWN0IHNtdV90
YWJsZV9jb250ZXh0ICpzbXVfdGFibGUgPSAmc211LT5zbXVfdGFibGU7DQorCXVpbnQzMl90IHBv
d2VycGxheV90YWJsZV9zaXplOw0KIA0KIAlpZiAoIXNtdV90YWJsZS0+cG93ZXJfcGxheV90YWJs
ZSAmJiAhc211X3RhYmxlLT5oYXJkY29kZV9wcHRhYmxlKQ0KIAkJcmV0dXJuIC1FSU5WQUw7DQog
DQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KIAlpZiAoc211X3RhYmxlLT5oYXJkY29k
ZV9wcHRhYmxlKQ0KIAkJKnRhYmxlID0gc211X3RhYmxlLT5oYXJkY29kZV9wcHRhYmxlOw0KIAll
bHNlDQogCQkqdGFibGUgPSBzbXVfdGFibGUtPnBvd2VyX3BsYXlfdGFibGU7DQogDQotCXJldHVy
biBzbXVfdGFibGUtPnBvd2VyX3BsYXlfdGFibGVfc2l6ZTsNCisJcG93ZXJwbGF5X3RhYmxlX3Np
emUgPSBzbXVfdGFibGUtPnBvd2VyX3BsYXlfdGFibGVfc2l6ZTsNCisNCisJbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHBvd2VycGxheV90YWJsZV9zaXplOw0KIH0NCiAN
CiBpbnQgc211X3N5c19zZXRfcHBfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsICB2b2lk
ICpidWYsIHNpemVfdCBzaXplKQ0KQEAgLTU1NiwxNCArNTc2LDExIEBAIGludCBzbXVfc3lzX3Nl
dF9wcF90YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgIHZvaWQgKmJ1Ziwgc2l6ZV90IHNp
emUpDQogCW1lbWNweShzbXVfdGFibGUtPmhhcmRjb2RlX3BwdGFibGUsIGJ1Ziwgc2l6ZSk7DQog
CXNtdV90YWJsZS0+cG93ZXJfcGxheV90YWJsZSA9IHNtdV90YWJsZS0+aGFyZGNvZGVfcHB0YWJs
ZTsNCiAJc211X3RhYmxlLT5wb3dlcl9wbGF5X3RhYmxlX3NpemUgPSBzaXplOw0KLQltdXRleF91
bmxvY2soJnNtdS0+bXV0ZXgpOw0KIA0KIAlyZXQgPSBzbXVfcmVzZXQoc211KTsNCiAJaWYgKHJl
dCkNCiAJCXByX2luZm8oInNtdSByZXNldCBmYWlsZWQsIHJldCA9ICVkXG4iLCByZXQpOw0KIA0K
LQlyZXR1cm4gcmV0Ow0KLQ0KIGZhaWxlZDoNCiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsN
CiAJcmV0dXJuIHJldDsNCkBAIC03MjYsMTEgKzc0MywxMCBAQCBzdGF0aWMgaW50IHNtdV9sYXRl
X2luaXQodm9pZCAqaGFuZGxlKQ0KIAlpZiAoIXNtdS0+cG1fZW5hYmxlZCkNCiAJCXJldHVybiAw
Ow0KIA0KLQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCiAJc211X2hhbmRsZV90YXNrKCZhZGV2
LT5zbXUsDQogCQkJc211LT5zbXVfZHBtLmRwbV9sZXZlbCwNCi0JCQlBTURfUFBfVEFTS19DT01Q
TEVURV9JTklUKTsNCi0JbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisJCQlBTURfUFBfVEFT
S19DT01QTEVURV9JTklULA0KKwkJCWZhbHNlKTsNCiANCiAJcmV0dXJuIDA7DQogfQ0KQEAgLTEw
NzQsNyArMTA5MCw3IEBAIHN0YXRpYyBpbnQgc211X3NtY190YWJsZV9od19pbml0KHN0cnVjdCBz
bXVfY29udGV4dCAqc211LA0KIAkJaWYgKHJldCkNCiAJCQlyZXR1cm4gcmV0Ow0KIA0KLQkJcmV0
ID0gc211X2dldF9wb3dlcl9saW1pdChzbXUsICZzbXUtPmRlZmF1bHRfcG93ZXJfbGltaXQsIHRy
dWUpOw0KKwkJcmV0ID0gc211X2dldF9wb3dlcl9saW1pdChzbXUsICZzbXUtPmRlZmF1bHRfcG93
ZXJfbGltaXQsIHRydWUsIGZhbHNlKTsNCiAJCWlmIChyZXQpDQogCQkJcmV0dXJuIHJldDsNCiAJ
fQ0KQEAgLTExNjAsMTUgKzExNzYsMTkgQEAgc3RhdGljIGludCBzbXVfc3RhcnRfc21jX2VuZ2lu
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCiANCiAJaWYgKGFkZXYtPmZpcm13YXJlLmxvYWRf
dHlwZSAhPSBBTURHUFVfRldfTE9BRF9QU1ApIHsNCiAJCWlmIChhZGV2LT5hc2ljX3R5cGUgPCBD
SElQX05BVkkxMCkgew0KLQkJCXJldCA9IHNtdV9sb2FkX21pY3JvY29kZShzbXUpOw0KLQkJCWlm
IChyZXQpDQotCQkJCXJldHVybiByZXQ7DQorCQkJaWYgKHNtdS0+ZnVuY3MtPmxvYWRfbWljcm9j
b2RlKSB7DQorCQkJCXJldCA9IHNtdS0+ZnVuY3MtPmxvYWRfbWljcm9jb2RlKHNtdSk7DQorCQkJ
CWlmIChyZXQpDQorCQkJCQlyZXR1cm4gcmV0Ow0KKwkJCX0NCiAJCX0NCiAJfQ0KIA0KLQlyZXQg
PSBzbXVfY2hlY2tfZndfc3RhdHVzKHNtdSk7DQotCWlmIChyZXQpDQotCQlwcl9lcnIoIlNNQyBp
cyBub3QgcmVhZHlcbiIpOw0KKwlpZiAoc211LT5mdW5jcy0+Y2hlY2tfZndfc3RhdHVzKSB7DQor
CQlyZXQgPSBzbXUtPmZ1bmNzLT5jaGVja19md19zdGF0dXMoc211KTsNCisJCWlmIChyZXQpDQor
CQkJcHJfZXJyKCJTTUMgaXMgbm90IHJlYWR5XG4iKTsNCisJfQ0KIA0KIAlyZXR1cm4gcmV0Ow0K
IH0NCkBAIC0xMzM0LDggKzEzNTQsNiBAQCBzdGF0aWMgaW50IHNtdV9yZXN1bWUodm9pZCAqaGFu
ZGxlKQ0KIA0KIAlwcl9pbmZvKCJTTVUgaXMgcmVzdW1pbmcuLi5cbiIpOw0KIA0KLQltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsNCi0NCiAJcmV0ID0gc211X3N0YXJ0X3NtY19lbmdpbmUoc211KTsN
CiAJaWYgKHJldCkgew0KIAkJcHJfZXJyKCJTTVUgaXMgbm90IHJlYWR5IHlldCFcbiIpOw0KQEAg
LTEzNTAsMTMgKzEzNjgsMTEgQEAgc3RhdGljIGludCBzbXVfcmVzdW1lKHZvaWQgKmhhbmRsZSkN
CiAJaWYgKHJldCkNCiAJCWdvdG8gZmFpbGVkOw0KIA0KLQltdXRleF91bmxvY2soJnNtdS0+bXV0
ZXgpOw0KLQ0KIAlwcl9pbmZvKCJTTVUgaXMgcmVzdW1lZCBzdWNjZXNzZnVsbHkhXG4iKTsNCiAN
CiAJcmV0dXJuIDA7DQorDQogZmFpbGVkOg0KLQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0K
IAlyZXR1cm4gcmV0Ow0KIH0NCiANCkBAIC0xMzc0LDggKzEzOTAsOSBAQCBpbnQgc211X2Rpc3Bs
YXlfY29uZmlndXJhdGlvbl9jaGFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQogDQogCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KIA0KLQlzbXVfc2V0X2RlZXBfc2xlZXBfZGNlZmNsayhz
bXUsDQotCQkJCSAgIGRpc3BsYXlfY29uZmlnLT5taW5fZGNlZl9kZWVwX3NsZWVwX3NldF9jbGsg
LyAxMDApOw0KKwlpZiAoc211LT5mdW5jcy0+c2V0X2RlZXBfc2xlZXBfZGNlZmNsaykNCisJCXNt
dS0+ZnVuY3MtPnNldF9kZWVwX3NsZWVwX2RjZWZjbGsoc211LA0KKwkJCQlkaXNwbGF5X2NvbmZp
Zy0+bWluX2RjZWZfZGVlcF9zbGVlcF9zZXRfY2xrIC8gMTAwKTsNCiANCiAJZm9yIChpbmRleCA9
IDA7IGluZGV4IDwgZGlzcGxheV9jb25maWctPm51bV9wYXRoX2luY2x1ZGluZ19ub25fZGlzcGxh
eTsgaW5kZXgrKykgew0KIAkJaWYgKGRpc3BsYXlfY29uZmlnLT5kaXNwbGF5c1tpbmRleF0uY29u
dHJvbGxlcl9pZCAhPSAwKQ0KQEAgLTE1NTMsOSArMTU3MCw5IEBAIHN0YXRpYyBpbnQgc211X2Rl
ZmF1bHRfc2V0X3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVt
IGFtZF9kDQogCQkJCQkJICZzb2NfbWFzayk7DQogCQlpZiAocmV0KQ0KIAkJCXJldHVybiByZXQ7
DQotCQlzbXVfZm9yY2VfY2xrX2xldmVscyhzbXUsIFNNVV9TQ0xLLCAxIDw8IHNjbGtfbWFzayk7
DQotCQlzbXVfZm9yY2VfY2xrX2xldmVscyhzbXUsIFNNVV9NQ0xLLCAxIDw8IG1jbGtfbWFzayk7
DQotCQlzbXVfZm9yY2VfY2xrX2xldmVscyhzbXUsIFNNVV9TT0NDTEssIDEgPDwgc29jX21hc2sp
Ow0KKwkJc211X2ZvcmNlX2Nsa19sZXZlbHMoc211LCBTTVVfU0NMSywgMSA8PCBzY2xrX21hc2ss
IGZhbHNlKTsNCisJCXNtdV9mb3JjZV9jbGtfbGV2ZWxzKHNtdSwgU01VX01DTEssIDEgPDwgbWNs
a19tYXNrLCBmYWxzZSk7DQorCQlzbXVfZm9yY2VfY2xrX2xldmVscyhzbXUsIFNNVV9TT0NDTEss
IDEgPDwgc29jX21hc2ssIGZhbHNlKTsNCiAJCWJyZWFrOw0KIAljYXNlIEFNRF9EUE1fRk9SQ0VE
X0xFVkVMX01BTlVBTDoNCiAJY2FzZSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX0VYSVQ6
DQpAQCAtMTYxOSw3ICsxNjM2LDcgQEAgaW50IHNtdV9hZGp1c3RfcG93ZXJfc3RhdGVfZHluYW1p
YyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCXdvcmtsb2FkID0gc211LT53b3JrbG9hZF9z
ZXR0aW5nW2luZGV4XTsNCiANCiAJCWlmIChzbXUtPnBvd2VyX3Byb2ZpbGVfbW9kZSAhPSB3b3Jr
bG9hZCkNCi0JCQlzbXVfc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzbXUsICZ3b3JrbG9hZCwgMCk7
DQorCQkJc211X3NldF9wb3dlcl9wcm9maWxlX21vZGUoc211LCAmd29ya2xvYWQsIDAsIGZhbHNl
KTsNCiAJfQ0KIA0KIAlyZXR1cm4gcmV0Ow0KQEAgLTE2MjcsMTggKzE2NDQsMjIgQEAgaW50IHNt
dV9hZGp1c3RfcG93ZXJfc3RhdGVfZHluYW1pYyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAN
CiBpbnQgc211X2hhbmRsZV90YXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIAkJICAgIGVu
dW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWwsDQotCQkgICAgZW51bSBhbWRfcHBfdGFzayB0
YXNrX2lkKQ0KKwkJICAgIGVudW0gYW1kX3BwX3Rhc2sgdGFza19pZCwNCisJCSAgICBib29sIGxv
Y2tfbmVlZGVkKQ0KIHsNCiAJaW50IHJldCA9IDA7DQogDQorCWlmIChsb2NrX25lZWRlZCkNCisJ
CW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KIAlzd2l0Y2ggKHRhc2tfaWQpIHsNCiAJY2Fz
ZSBBTURfUFBfVEFTS19ESVNQTEFZX0NPTkZJR19DSEFOR0U6DQogCQlyZXQgPSBzbXVfcHJlX2Rp
c3BsYXlfY29uZmlnX2NoYW5nZWQoc211KTsNCiAJCWlmIChyZXQpDQotCQkJcmV0dXJuIHJldDsN
CisJCQlnb3RvIG91dDsNCiAJCXJldCA9IHNtdV9zZXRfY3B1X3Bvd2VyX3N0YXRlKHNtdSk7DQog
CQlpZiAocmV0KQ0KLQkJCXJldHVybiByZXQ7DQorCQkJZ290byBvdXQ7DQogCQlyZXQgPSBzbXVf
YWRqdXN0X3Bvd2VyX3N0YXRlX2R5bmFtaWMoc211LCBsZXZlbCwgZmFsc2UpOw0KIAkJYnJlYWs7
DQogCWNhc2UgQU1EX1BQX1RBU0tfQ09NUExFVEVfSU5JVDoNCkBAIC0xNjQ5LDYgKzE2NzAsMTAg
QEAgaW50IHNtdV9oYW5kbGVfdGFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCWJyZWFr
Ow0KIAl9DQogDQorb3V0Og0KKwlpZiAobG9ja19uZWVkZWQpDQorCQltdXRleF91bmxvY2soJnNt
dS0+bXV0ZXgpOw0KKw0KIAlyZXR1cm4gcmV0Ow0KIH0NCiANCkBAIC0xNjgxLDcgKzE3MDYsNyBA
QCBpbnQgc211X3N3aXRjaF9wb3dlcl9wcm9maWxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0K
IAl9DQogDQogCWlmIChzbXVfZHBtX2N0eC0+ZHBtX2xldmVsICE9IEFNRF9EUE1fRk9SQ0VEX0xF
VkVMX01BTlVBTCkNCi0JCXNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2Fk
LCAwKTsNCisJCXNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2FkLCAwLCBm
YWxzZSk7DQogDQogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQogDQpAQCAtMTcxMSwxMiAr
MTczNiwxOSBAQCBpbnQgc211X2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCBlbnVtIGFtZF9kcG1fZm9yY2VkX2xldg0KIAlpZiAoIXNtdS0+aXNfYXB1ICYm
ICFzbXVfZHBtX2N0eC0+ZHBtX2NvbnRleHQpDQogCQlyZXR1cm4gLUVJTlZBTDsNCiANCisJbXV0
ZXhfbG9jaygmc211LT5tdXRleCk7DQorDQogCXJldCA9IHNtdV9lbmFibGVfdW1kX3BzdGF0ZShz
bXUsICZsZXZlbCk7DQotCWlmIChyZXQpDQorCWlmIChyZXQpIHsNCisJCW11dGV4X3VubG9jaygm
c211LT5tdXRleCk7DQogCQlyZXR1cm4gcmV0Ow0KKwl9DQogDQogCXJldCA9IHNtdV9oYW5kbGVf
dGFzayhzbXUsIGxldmVsLA0KLQkJCSAgICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VSX1NU
QVRFKTsNCisJCQkgICAgICBBTURfUFBfVEFTS19SRUFESlVTVF9QT1dFUl9TVEFURSwNCisJCQkg
ICAgICBmYWxzZSk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQogDQogCXJldHVy
biByZXQ7DQogfQ0KQEAgLTE3MzQsNyArMTc2Niw4IEBAIGludCBzbXVfc2V0X2Rpc3BsYXlfY291
bnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGNvdW50KQ0KIA0KIGludCBzbXVf
Zm9yY2VfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCQkgZW51bSBzbXVf
Y2xrX3R5cGUgY2xrX3R5cGUsDQotCQkJIHVpbnQzMl90IG1hc2spDQorCQkJIHVpbnQzMl90IG1h
c2ssDQorCQkJIGJvb2wgbG9ja19uZWVkZWQpDQogew0KIAlzdHJ1Y3Qgc211X2RwbV9jb250ZXh0
ICpzbXVfZHBtX2N0eCA9ICYoc211LT5zbXVfZHBtKTsNCiAJaW50IHJldCA9IDA7DQpAQCAtMTc0
NCw5ICsxNzc3LDE1IEBAIGludCBzbXVfZm9yY2VfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwNCiAJCXJldHVybiAtRUlOVkFMOw0KIAl9DQogDQorCWlmIChsb2NrX25lZWRlZCkN
CisJCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KIAlpZiAoc211LT5wcHRfZnVuY3MgJiYg
c211LT5wcHRfZnVuY3MtPmZvcmNlX2Nsa19sZXZlbHMpDQogCQlyZXQgPSBzbXUtPnBwdF9mdW5j
cy0+Zm9yY2VfY2xrX2xldmVscyhzbXUsIGNsa190eXBlLCBtYXNrKTsNCiANCisJaWYgKGxvY2tf
bmVlZGVkKQ0KKwkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCiAJcmV0dXJuIHJldDsN
CiB9DQogDQpAQCAtMTc2NCw2ICsxODAzLDggQEAgaW50IHNtdV9zZXRfbXAxX3N0YXRlKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LA0KIAlpZiAoIXNtdS0+cG1fZW5hYmxlZCkNCiAJCXJldHVybiAw
Ow0KIA0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCiAJc3dpdGNoIChtcDFfc3RhdGUp
IHsNCiAJY2FzZSBQUF9NUDFfU1RBVEVfU0hVVERPV046DQogCQltc2cgPSBTTVVfTVNHX1ByZXBh
cmVNcDFGb3JTaHV0ZG93bjsNCkBAIC0xNzc2LDE3ICsxODE3LDIyIEBAIGludCBzbXVfc2V0X21w
MV9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCWJyZWFrOw0KIAljYXNlIFBQX01Q
MV9TVEFURV9OT05FOg0KIAlkZWZhdWx0Og0KKwkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsN
CiAJCXJldHVybiAwOw0KIAl9DQogDQogCS8qIHNvbWUgYXNpY3MgbWF5IG5vdCBzdXBwb3J0IHRo
b3NlIG1lc3NhZ2VzICovDQotCWlmIChzbXVfbXNnX2dldF9pbmRleChzbXUsIG1zZykgPCAwKQ0K
KwlpZiAoc211X21zZ19nZXRfaW5kZXgoc211LCBtc2cpIDwgMCkgew0KKwkJbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsNCiAJCXJldHVybiAwOw0KKwl9DQogDQogCXJldCA9IHNtdV9zZW5kX3Nt
Y19tc2coc211LCBtc2cpOw0KIAlpZiAocmV0KQ0KIAkJcHJfZXJyKCJbUHJlcGFyZU1wMV0gRmFp
bGVkIVxuIik7DQogDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQogCXJldHVybiBy
ZXQ7DQogfQ0KIA0KQEAgLTE4MDYsMTAgKzE4NTIsMTQgQEAgaW50IHNtdV9zZXRfZGZfY3N0YXRl
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIAlpZiAoIXNtdS0+cHB0X2Z1bmNzIHx8ICFzbXUt
PnBwdF9mdW5jcy0+c2V0X2RmX2NzdGF0ZSkNCiAJCXJldHVybiAwOw0KIA0KKwltdXRleF9sb2Nr
KCZzbXUtPm11dGV4KTsNCisNCiAJcmV0ID0gc211LT5wcHRfZnVuY3MtPnNldF9kZl9jc3RhdGUo
c211LCBzdGF0ZSk7DQogCWlmIChyZXQpDQogCQlwcl9lcnIoIltTZXREZkNzdGF0ZV0gZmFpbGVk
IVxuIik7DQogDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQogCXJldHVybiByZXQ7
DQogfQ0KIA0KQEAgLTE4NDksMyArMTg5OSw1NDkgQEAgY29uc3Qgc3RydWN0IGFtZGdwdV9pcF9i
bG9ja192ZXJzaW9uIHNtdV92MTJfMF9pcF9ibG9jayA9DQogCS5yZXYgPSAwLA0KIAkuZnVuY3Mg
PSAmc211X2lwX2Z1bmNzLA0KIH07DQorDQoraW50IHNtdV9sb2FkX21pY3JvY29kZShzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSkNCit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZz
bXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+ZnVuY3MtPmxvYWRfbWljcm9jb2RlKQ0KKwkJcmV0
ID0gc211LT5mdW5jcy0+bG9hZF9taWNyb2NvZGUoc211KTsNCisNCisJbXV0ZXhfdW5sb2NrKCZz
bXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQoraW50IHNtdV9jaGVja19md19z
dGF0dXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJ
bXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQorDQorCWlmIChzbXUtPmZ1bmNzLT5jaGVja19md19z
dGF0dXMpDQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5jaGVja19md19zdGF0dXMoc211KTsNCisNCisJ
bXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQoraW50
IHNtdV9zZXRfZ2Z4X2NncGcoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGJvb2wgZW5hYmxlZCkN
Cit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJ
aWYgKHNtdS0+ZnVuY3MtPnNldF9nZnhfY2dwZykNCisJCXJldCA9IHNtdS0+ZnVuY3MtPnNldF9n
ZnhfY2dwZyhzbXUsIGVuYWJsZWQpOw0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0K
Kw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCitpbnQgc211X3NldF9mYW5fc3BlZWRfcnBtKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBzcGVlZCkNCit7DQorCWludCByZXQgPSAwOw0K
Kw0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+ZnVuY3MtPnNldF9m
YW5fc3BlZWRfcnBtKQ0KKwkJcmV0ID0gc211LT5mdW5jcy0+c2V0X2Zhbl9zcGVlZF9ycG0oc211
LCBzcGVlZCk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiBy
ZXQ7DQorfQ0KKw0KK2ludCBzbXVfZ2V0X3Bvd2VyX2xpbWl0KHN0cnVjdCBzbXVfY29udGV4dCAq
c211LA0KKwkJCXVpbnQzMl90ICpsaW1pdCwNCisJCQlib29sIGRlZiwNCisJCQlib29sIGxvY2tf
bmVlZGVkKQ0KK3sNCisJaW50IHJldCA9IDA7DQorDQorCWlmIChsb2NrX25lZWRlZCkNCisJCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9wb3dl
cl9saW1pdCkNCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJfbGltaXQoc211LCBs
aW1pdCwgZGVmKTsNCisNCisJaWYgKGxvY2tfbmVlZGVkKQ0KKwkJbXV0ZXhfdW5sb2NrKCZzbXUt
Pm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQoraW50IHNtdV9zZXRfcG93ZXJfbGlt
aXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGxpbWl0KQ0KK3sNCisJaW50IHJl
dCA9IDA7DQorDQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5mdW5j
cy0+c2V0X3Bvd2VyX2xpbWl0KQ0KKwkJcmV0ID0gc211LT5mdW5jcy0+c2V0X3Bvd2VyX2xpbWl0
KHNtdSwgbGltaXQpOw0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1
cm4gcmV0Ow0KK30NCisNCitpbnQgc211X3ByaW50X2Nsa19sZXZlbHMoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLCBjaGFyICpidWYpDQorew0KKwlp
bnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQorDQorCWlmIChzbXUt
PnBwdF9mdW5jcy0+cHJpbnRfY2xrX2xldmVscykNCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5w
cmludF9jbGtfbGV2ZWxzKHNtdSwgY2xrX3R5cGUsIGJ1Zik7DQorDQorCW11dGV4X3VubG9jaygm
c211LT5tdXRleCk7DQorDQorCXJldHVybiByZXQ7DQorfQ0KKw0KK2ludCBzbXVfZ2V0X29kX3Bl
cmNlbnRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIHR5cGUp
DQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQorDQor
CWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X29kX3BlcmNlbnRhZ2UpDQorCQlyZXQgPSBzbXUtPnBw
dF9mdW5jcy0+Z2V0X29kX3BlcmNlbnRhZ2Uoc211LCB0eXBlKTsNCisNCisJbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQoraW50IHNtdV9zZXRfb2Rf
cGVyY2VudGFnZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgdHlw
ZSwgdWludDMyX3QgdmFsdWUpDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygm
c211LT5tdXRleCk7DQorDQorCWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X29kX3BlcmNlbnRhZ2Up
DQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+c2V0X29kX3BlcmNlbnRhZ2Uoc211LCB0eXBlLCB2
YWx1ZSk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiByZXQ7
DQorfQ0KKw0KK2ludCBzbXVfb2RfZWRpdF9kcG1fdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsDQorCQkJICBlbnVtIFBQX09EX0RQTV9UQUJMRV9DT01NQU5EIHR5cGUsDQorCQkJICBsb25n
ICppbnB1dCwgdWludDMyX3Qgc2l6ZSkNCit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5vZF9lZGl0X2RwbV90
YWJsZSkNCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5vZF9lZGl0X2RwbV90YWJsZShzbXUsIHR5
cGUsIGlucHV0LCBzaXplKTsNCisNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJ
cmV0dXJuIHJldDsNCit9DQorDQoraW50IHNtdV9yZWFkX3NlbnNvcihzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwNCisJCSAgICBlbnVtIGFtZF9wcF9zZW5zb3JzIHNlbnNvciwNCisJCSAgICB2b2lk
ICpkYXRhLCB1aW50MzJfdCAqc2l6ZSkNCit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5yZWFkX3NlbnNvcikN
CisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5yZWFkX3NlbnNvcihzbXUsIHNlbnNvciwgZGF0YSwg
c2l6ZSk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiByZXQ7
DQorfQ0KKw0KK2ludCBzbXVfZ2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwgY2hhciAqYnVmKQ0KK3sNCisJaW50IHJldCA9IDA7DQorDQorCW11dGV4X2xvY2so
JnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9wb3dlcl9wcm9maWxl
X21vZGUpDQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShz
bXUsIGJ1Zik7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiBy
ZXQ7DQorfQ0KKw0KK2ludCBzbXVfc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwNCisJCQkgICAgICAgbG9uZyAqcGFyYW0sDQorCQkJICAgICAgIHVpbnQzMl90
IHBhcmFtX3NpemUsDQorCQkJICAgICAgIGJvb2wgbG9ja19uZWVkZWQpDQorew0KKwlpbnQgcmV0
ID0gMDsNCisNCisJaWYgKGxvY2tfbmVlZGVkKQ0KKwkJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7
DQorDQorCWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkNCisJCXJl
dCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgcGFyYW0sIHBh
cmFtX3NpemUpOw0KKw0KKwlpZiAobG9ja19uZWVkZWQpDQorCQltdXRleF91bmxvY2soJnNtdS0+
bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCisNCitpbnQgc211X2dldF9mYW5fY29u
dHJvbF9tb2RlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQ0KK3sNCisJaW50IHJldCA9IDA7DQor
DQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5mdW5jcy0+Z2V0X2Zh
bl9jb250cm9sX21vZGUpDQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5nZXRfZmFuX2NvbnRyb2xfbW9k
ZShzbXUpOw0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0
Ow0KK30NCisNCitpbnQgc211X3NldF9mYW5fY29udHJvbF9tb2RlKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBpbnQgdmFsdWUpDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygm
c211LT5tdXRleCk7DQorDQorCWlmIChzbXUtPmZ1bmNzLT5zZXRfZmFuX2NvbnRyb2xfbW9kZSkN
CisJCXJldCA9IHNtdS0+ZnVuY3MtPnNldF9mYW5fY29udHJvbF9tb2RlKHNtdSwgdmFsdWUpOw0K
Kw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisN
CitpbnQgc211X2dldF9mYW5fc3BlZWRfcGVyY2VudChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwg
dWludDMyX3QgKnNwZWVkKQ0KK3sNCisJaW50IHJldCA9IDA7DQorDQorCW11dGV4X2xvY2soJnNt
dS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcGVyY2Vu
dCkNCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfZmFuX3NwZWVkX3BlcmNlbnQoc211LCBz
cGVlZCk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiByZXQ7
DQorfQ0KKw0KK2ludCBzbXVfc2V0X2Zhbl9zcGVlZF9wZXJjZW50KHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCB1aW50MzJfdCBzcGVlZCkNCit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+ZnVuY3MtPnNldF9mYW5fc3BlZWRfcGVy
Y2VudCkNCisJCXJldCA9IHNtdS0+ZnVuY3MtPnNldF9mYW5fc3BlZWRfcGVyY2VudChzbXUsIHNw
ZWVkKTsNCisNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsN
Cit9DQorDQoraW50IHNtdV9nZXRfZmFuX3NwZWVkX3JwbShzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwgdWludDMyX3QgKnNwZWVkKQ0KK3sNCisJaW50IHJldCA9IDA7DQorDQorCW11dGV4X2xvY2so
JnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcnBt
KQ0KKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcnBtKHNtdSwgc3BlZWQp
Ow0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30N
CisNCitpbnQgc211X3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIGludCBjbGspDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5t
dXRleCk7DQorDQorCWlmIChzbXUtPmZ1bmNzLT5zZXRfZGVlcF9zbGVlcF9kY2VmY2xrKQ0KKwkJ
cmV0ID0gc211LT5mdW5jcy0+c2V0X2RlZXBfc2xlZXBfZGNlZmNsayhzbXUsIGNsayk7DQorDQor
CW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiByZXQ7DQorfQ0KKw0KK2lu
dCBzbXVfc2V0X2FjdGl2ZV9kaXNwbGF5X2NvdW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1
aW50MzJfdCBjb3VudCkNCit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZzbXUt
Pm11dGV4KTsNCisNCisJaWYgKHNtdS0+ZnVuY3MtPnNldF9hY3RpdmVfZGlzcGxheV9jb3VudCkN
CisJCXJldCA9IHNtdS0+ZnVuY3MtPnNldF9hY3RpdmVfZGlzcGxheV9jb3VudChzbXUsIGNvdW50
KTsNCisNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9
DQorDQoraW50IHNtdV9nZXRfY2xvY2tfYnlfdHlwZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwN
CisJCQkgIGVudW0gYW1kX3BwX2Nsb2NrX3R5cGUgdHlwZSwNCisJCQkgIHN0cnVjdCBhbWRfcHBf
Y2xvY2tzICpjbG9ja3MpDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211
LT5tdXRleCk7DQorDQorCWlmIChzbXUtPmZ1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZSkNCisJCXJl
dCA9IHNtdS0+ZnVuY3MtPmdldF9jbG9ja19ieV90eXBlKHNtdSwgdHlwZSwgY2xvY2tzKTsNCisN
CisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQor
aW50IHNtdV9nZXRfbWF4X2hpZ2hfY2xvY2tzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KKwkJ
CSAgICBzdHJ1Y3QgYW1kX3BwX3NpbXBsZV9jbG9ja19pbmZvICpjbG9ja3MpDQorew0KKwlpbnQg
cmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQorDQorCWlmIChzbXUtPmZ1
bmNzLT5nZXRfbWF4X2hpZ2hfY2xvY2tzKQ0KKwkJcmV0ID0gc211LT5mdW5jcy0+Z2V0X21heF9o
aWdoX2Nsb2NrcyhzbXUsIGNsb2Nrcyk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7
DQorDQorCXJldHVybiByZXQ7DQorfQ0KKw0KK2ludCBzbXVfZ2V0X2Nsb2NrX2J5X3R5cGVfd2l0
aF9sYXRlbmN5KHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KKwkJCQkgICAgICAgZW51bSBzbXVf
Y2xrX3R5cGUgY2xrX3R5cGUsDQorCQkJCSAgICAgICBzdHJ1Y3QgcHBfY2xvY2tfbGV2ZWxzX3dp
dGhfbGF0ZW5jeSAqY2xvY2tzKQ0KK3sNCisJaW50IHJldCA9IDA7DQorDQorCW11dGV4X2xvY2so
JnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9jbG9ja19ieV90eXBl
X3dpdGhfbGF0ZW5jeSkNCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlw
ZV93aXRoX2xhdGVuY3koc211LCBjbGtfdHlwZSwgY2xvY2tzKTsNCisNCisJbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQorDQoraW50IHNtdV9nZXRfY2xv
Y2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQorCQkJCSAg
ICAgICBlbnVtIGFtZF9wcF9jbG9ja190eXBlIHR5cGUsDQorCQkJCSAgICAgICBzdHJ1Y3QgcHBf
Y2xvY2tfbGV2ZWxzX3dpdGhfdm9sdGFnZSAqY2xvY2tzKQ0KK3sNCisJaW50IHJldCA9IDA7DQor
DQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdl
dF9jbG9ja19ieV90eXBlX3dpdGhfdm9sdGFnZSkNCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5n
ZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Uoc211LCB0eXBlLCBjbG9ja3MpOw0KKw0KKwlt
dXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCisNCitp
bnQgc211X2Rpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KHN0cnVjdCBzbXVfY29udGV4dCAq
c211LA0KKwkJCQkgICAgICBzdHJ1Y3QgcHBfZGlzcGxheV9jbG9ja19yZXF1ZXN0ICpjbG9ja19y
ZXEpDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQor
DQorCWlmIChzbXUtPmZ1bmNzLT5kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVxdWVzdCkNCisJCXJl
dCA9IHNtdS0+ZnVuY3MtPmRpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KHNtdSwgY2xvY2tf
cmVxKTsNCisNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsN
Cit9DQorDQorDQoraW50IHNtdV9kaXNwbGF5X2Rpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaChz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgYm9vbCBkaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2gp
DQorew0KKwlpbnQgcmV0ID0gLUVJTlZBTDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7
DQorDQorCWlmIChzbXUtPnBwdF9mdW5jcy0+ZGlzcGxheV9kaXNhYmxlX21lbW9yeV9jbG9ja19z
d2l0Y2gpDQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+ZGlzcGxheV9kaXNhYmxlX21lbW9yeV9j
bG9ja19zd2l0Y2goc211LCBkaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2gpOw0KKw0KKwltdXRl
eF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCitpbnQgc211
X25vdGlmeV9zbXVfZW5hYmxlX3B3ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCit7DQorCWlu
dCByZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+
ZnVuY3MtPm5vdGlmeV9zbXVfZW5hYmxlX3B3ZSkNCisJCXJldCA9IHNtdS0+ZnVuY3MtPm5vdGlm
eV9zbXVfZW5hYmxlX3B3ZShzbXUpOw0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0K
Kw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCitpbnQgc211X3NldF93YXRlcm1hcmtzX2Zvcl9jbG9j
a19yYW5nZXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQorCQkJCQlzdHJ1Y3QgZG1fcHBfd21f
c2V0c193aXRoX2Nsb2NrX3Jhbmdlc19zb2MxNSAqY2xvY2tfcmFuZ2VzKQ0KK3sNCisJaW50IHJl
dCA9IDA7DQorDQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5mdW5j
cy0+c2V0X3dhdGVybWFya3NfZm9yX2Nsb2NrX3JhbmdlcykNCisJCXJldCA9IHNtdS0+ZnVuY3Mt
PnNldF93YXRlcm1hcmtzX2Zvcl9jbG9ja19yYW5nZXMoc211LCBjbG9ja19yYW5nZXMpOw0KKw0K
KwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCitp
bnQgc211X3NldF94Z21pX3BzdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCisJCQl1aW50
MzJfdCBwc3RhdGUpDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5t
dXRleCk7DQorDQorCWlmIChzbXUtPmZ1bmNzLT5zZXRfeGdtaV9wc3RhdGUpDQorCQlyZXQgPSBz
bXUtPmZ1bmNzLT5zZXRfeGdtaV9wc3RhdGUoc211LCBwc3RhdGUpOw0KKw0KKwltdXRleF91bmxv
Y2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCitpbnQgc211X3NldF9h
emFsaWFfZDNfcG1lKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQ0KK3sNCisJaW50IHJldCA9IDA7
DQorDQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlpZiAoc211LT5mdW5jcy0+c2V0
X2F6YWxpYV9kM19wbWUpDQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5zZXRfYXphbGlhX2QzX3BtZShz
bXUpOw0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KKw0KKwlyZXR1cm4gcmV0Ow0K
K30NCisNCitib29sIHNtdV9iYWNvX2lzX3N1cHBvcnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUp
DQorew0KKwlib29sIHJldCA9IGZhbHNlOw0KKw0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsN
CisNCisJaWYgKHNtdS0+ZnVuY3MtPmJhY29faXNfc3VwcG9ydCkNCisJCXJldCA9IHNtdS0+ZnVu
Y3MtPmJhY29faXNfc3VwcG9ydChzbXUpOw0KKw0KKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgp
Ow0KKw0KKwlyZXR1cm4gcmV0Ow0KK30NCisNCitpbnQgc211X2JhY29fZ2V0X3N0YXRlKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9iYWNvX3N0YXRlICpzdGF0ZSkNCit7DQorCWlm
IChzbXUtPmZ1bmNzLT5iYWNvX2dldF9zdGF0ZSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KKwlt
dXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisJKnN0YXRlID0gc211LT5mdW5jcy0+YmFjb19nZXRf
c3RhdGUoc211KTsNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIDA7
DQorfQ0KKw0KK2ludCBzbXVfYmFjb19yZXNldChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCit7
DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYg
KHNtdS0+ZnVuY3MtPmJhY29fcmVzZXQpDQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5iYWNvX3Jlc2V0
KHNtdSk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiByZXQ7
DQorfQ0KKw0KK2ludCBzbXVfbW9kZTJfcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpDQor
ew0KKwlpbnQgcmV0ID0gMDsNCisNCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQorDQorCWlm
IChzbXUtPmZ1bmNzLT5tb2RlMl9yZXNldCkNCisJCXJldCA9IHNtdS0+ZnVuY3MtPm1vZGUyX3Jl
c2V0KHNtdSk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiBy
ZXQ7DQorfQ0KKw0KK2ludCBzbXVfZ2V0X21heF9zdXN0YWluYWJsZV9jbG9ja3NfYnlfZGMoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsDQorCQkJCQkgc3RydWN0IHBwX3NtdV9udl9jbG9ja190YWJs
ZSAqbWF4X2Nsb2NrcykNCit7DQorCWludCByZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZzbXUt
Pm11dGV4KTsNCisNCisJaWYgKHNtdS0+ZnVuY3MtPmdldF9tYXhfc3VzdGFpbmFibGVfY2xvY2tz
X2J5X2RjKQ0KKwkJcmV0ID0gc211LT5mdW5jcy0+Z2V0X21heF9zdXN0YWluYWJsZV9jbG9ja3Nf
YnlfZGMoc211LCBtYXhfY2xvY2tzKTsNCisNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsN
CisNCisJcmV0dXJuIHJldDsNCit9DQorDQoraW50IHNtdV9nZXRfdWNsa19kcG1fc3RhdGVzKHN0
cnVjdCBzbXVfY29udGV4dCAqc211LA0KKwkJCSAgICB1bnNpZ25lZCBpbnQgKmNsb2NrX3ZhbHVl
c19pbl9raHosDQorCQkJICAgIHVuc2lnbmVkIGludCAqbnVtX3N0YXRlcykNCit7DQorCWludCBy
ZXQgPSAwOw0KKw0KKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJaWYgKHNtdS0+cHB0
X2Z1bmNzLT5nZXRfdWNsa19kcG1fc3RhdGVzKQ0KKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdl
dF91Y2xrX2RwbV9zdGF0ZXMoc211LCBjbG9ja192YWx1ZXNfaW5fa2h6LCBudW1fc3RhdGVzKTsN
CisNCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCisNCisJcmV0dXJuIHJldDsNCit9DQor
DQorZW51bSBhbWRfcG1fc3RhdGVfdHlwZSBzbXVfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUpDQorew0KKwllbnVtIGFtZF9wbV9zdGF0ZV90eXBlIHBtX3N0
YXRlID0gUE9XRVJfU1RBVEVfVFlQRV9ERUZBVUxUOw0KKw0KKwltdXRleF9sb2NrKCZzbXUtPm11
dGV4KTsNCisNCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZSkN
CisJCXBtX3N0YXRlID0gc211LT5wcHRfZnVuY3MtPmdldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHNt
dSk7DQorDQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQorDQorCXJldHVybiBwbV9zdGF0
ZTsNCit9DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYXJjdHVy
dXNfcHB0LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hcmN0dXJ1c19wcHQuYw0K
aW5kZXggNjczMWZlZDU0NThlLi4xNDFlNDhjZDFjNWQgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL3Bvd2VycGxheS9hcmN0dXJ1c19wcHQuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9wb3dlcnBsYXkvYXJjdHVydXNfcHB0LmMNCkBAIC03NzIsOCArNzcyLDYgQEAgc3RhdGlj
IGludCBhcmN0dXJ1c19mb3JjZV9jbGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0K
IAl1aW50MzJfdCBzb2Z0X21pbl9sZXZlbCwgc29mdF9tYXhfbGV2ZWw7DQogCWludCByZXQgPSAw
Ow0KIA0KLQltdXRleF9sb2NrKCYoc211LT5tdXRleCkpOw0KLQ0KIAlzb2Z0X21pbl9sZXZlbCA9
IG1hc2sgPyAoZmZzKG1hc2spIC0gMSkgOiAwOw0KIAlzb2Z0X21heF9sZXZlbCA9IG1hc2sgPyAo
ZmxzKG1hc2spIC0gMSkgOiAwOw0KIA0KQEAgLTg5Miw3ICs4OTAsNiBAQCBzdGF0aWMgaW50IGFy
Y3R1cnVzX2ZvcmNlX2Nsa19sZXZlbHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQogCQlicmVh
azsNCiAJfQ0KIA0KLQltdXRleF91bmxvY2soJihzbXUtPm11dGV4KSk7DQogCXJldHVybiByZXQ7
DQogfQ0KIA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2luYy9h
bWRncHVfc211LmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1X3Nt
dS5oDQppbmRleCBjZGI4NDVmNWYyM2UuLjNlMzQ2NGZhMmZmNSAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2luYy9hbWRncHVfc211LmgNCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvcG93ZXJwbGF5L2luYy9hbWRncHVfc211LmgNCkBAIC01NjUsMTggKzU2NSwx
NyBAQCBzdHJ1Y3Qgc211X2Z1bmNzDQogCSgoc211KS0+ZnVuY3MtPmluaXRfcG93ZXIgPyAoc211
KS0+ZnVuY3MtPmluaXRfcG93ZXIoKHNtdSkpIDogMCkNCiAjZGVmaW5lIHNtdV9maW5pX3Bvd2Vy
KHNtdSkgXA0KIAkoKHNtdSktPmZ1bmNzLT5maW5pX3Bvd2VyID8gKHNtdSktPmZ1bmNzLT5maW5p
X3Bvd2VyKChzbXUpKSA6IDApDQotI2RlZmluZSBzbXVfbG9hZF9taWNyb2NvZGUoc211KSBcDQot
CSgoc211KS0+ZnVuY3MtPmxvYWRfbWljcm9jb2RlID8gKHNtdSktPmZ1bmNzLT5sb2FkX21pY3Jv
Y29kZSgoc211KSkgOiAwKQ0KLSNkZWZpbmUgc211X2NoZWNrX2Z3X3N0YXR1cyhzbXUpIFwNCi0J
KChzbXUpLT5mdW5jcy0+Y2hlY2tfZndfc3RhdHVzID8gKHNtdSktPmZ1bmNzLT5jaGVja19md19z
dGF0dXMoKHNtdSkpIDogMCkNCitpbnQgc211X2xvYWRfbWljcm9jb2RlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211KTsNCisNCitpbnQgc211X2NoZWNrX2Z3X3N0YXR1cyhzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSk7DQorDQogI2RlZmluZSBzbXVfc2V0dXBfcHB0YWJsZShzbXUpIFwNCiAJKChzbXUp
LT5mdW5jcy0+c2V0dXBfcHB0YWJsZSA/IChzbXUpLT5mdW5jcy0+c2V0dXBfcHB0YWJsZSgoc211
KSkgOiAwKQ0KICNkZWZpbmUgc211X3Bvd2VyZ2F0ZV9zZG1hKHNtdSwgZ2F0ZSkgXA0KIAkoKHNt
dSktPmZ1bmNzLT5wb3dlcmdhdGVfc2RtYSA/IChzbXUpLT5mdW5jcy0+cG93ZXJnYXRlX3NkbWEo
KHNtdSksIChnYXRlKSkgOiAwKQ0KICNkZWZpbmUgc211X3Bvd2VyZ2F0ZV92Y24oc211LCBnYXRl
KSBcDQogCSgoc211KS0+ZnVuY3MtPnBvd2VyZ2F0ZV92Y24gPyAoc211KS0+ZnVuY3MtPnBvd2Vy
Z2F0ZV92Y24oKHNtdSksIChnYXRlKSkgOiAwKQ0KLSNkZWZpbmUgc211X3NldF9nZnhfY2dwZyhz
bXUsIGVuYWJsZWQpIFwNCi0JKChzbXUpLT5mdW5jcy0+c2V0X2dmeF9jZ3BnID8gKHNtdSktPmZ1
bmNzLT5zZXRfZ2Z4X2NncGcoKHNtdSksIChlbmFibGVkKSkgOiAwKQ0KK2ludCBzbXVfc2V0X2dm
eF9jZ3BnKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGVuYWJsZWQpOw0KICNkZWZpbmUg
c211X2dldF92Ymlvc19ib290dXBfdmFsdWVzKHNtdSkgXA0KIAkoKHNtdSktPmZ1bmNzLT5nZXRf
dmJpb3NfYm9vdHVwX3ZhbHVlcyA/IChzbXUpLT5mdW5jcy0+Z2V0X3ZiaW9zX2Jvb3R1cF92YWx1
ZXMoKHNtdSkpIDogMCkNCiAjZGVmaW5lIHNtdV9nZXRfY2xrX2luZm9fZnJvbV92YmlvcyhzbXUp
IFwNCkBAIC02MTAsOCArNjA5LDggQEAgc3RydWN0IHNtdV9mdW5jcw0KIAkoKHNtdSktPmZ1bmNz
LT5pbml0X21heF9zdXN0YWluYWJsZV9jbG9ja3MgPyAoc211KS0+ZnVuY3MtPmluaXRfbWF4X3N1
c3RhaW5hYmxlX2Nsb2Nrcygoc211KSkgOiAwKQ0KICNkZWZpbmUgc211X3NldF9kZWZhdWx0X29k
X3NldHRpbmdzKHNtdSwgaW5pdGlhbGl6ZSkgXA0KIAkoKHNtdSktPnBwdF9mdW5jcy0+c2V0X2Rl
ZmF1bHRfb2Rfc2V0dGluZ3MgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfZGVmYXVsdF9vZF9zZXR0
aW5ncygoc211KSwgKGluaXRpYWxpemUpKSA6IDApDQotI2RlZmluZSBzbXVfc2V0X2Zhbl9zcGVl
ZF9ycG0oc211LCBzcGVlZCkgXA0KLQkoKHNtdSktPmZ1bmNzLT5zZXRfZmFuX3NwZWVkX3JwbSA/
IChzbXUpLT5mdW5jcy0+c2V0X2Zhbl9zcGVlZF9ycG0oKHNtdSksIChzcGVlZCkpIDogMCkNCitp
bnQgc211X3NldF9mYW5fc3BlZWRfcnBtKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJf
dCBzcGVlZCk7DQorDQogI2RlZmluZSBzbXVfc2VuZF9zbWNfbXNnKHNtdSwgbXNnKSBcDQogCSgo
c211KS0+ZnVuY3MtPnNlbmRfc21jX21zZz8gKHNtdSktPmZ1bmNzLT5zZW5kX3NtY19tc2coKHNt
dSksIChtc2cpKSA6IDApDQogI2RlZmluZSBzbXVfc2VuZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211
LCBtc2csIHBhcmFtKSBcDQpAQCAtNjQyLDIwICs2NDEsMjIgQEAgc3RydWN0IHNtdV9mdW5jcw0K
IAkoKHNtdSktPnBwdF9mdW5jcy0+cG9wdWxhdGVfdW1kX3N0YXRlX2NsayA/IChzbXUpLT5wcHRf
ZnVuY3MtPnBvcHVsYXRlX3VtZF9zdGF0ZV9jbGsoKHNtdSkpIDogMCkNCiAjZGVmaW5lIHNtdV9z
ZXRfZGVmYXVsdF9vZDhfc2V0dGluZ3Moc211KSBcDQogCSgoc211KS0+cHB0X2Z1bmNzLT5zZXRf
ZGVmYXVsdF9vZDhfc2V0dGluZ3MgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfZGVmYXVsdF9vZDhf
c2V0dGluZ3MoKHNtdSkpIDogMCkNCi0jZGVmaW5lIHNtdV9nZXRfcG93ZXJfbGltaXQoc211LCBs
aW1pdCwgZGVmKSBcDQotCSgoc211KS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJfbGltaXQgPyAoc211
KS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJfbGltaXQoKHNtdSksIChsaW1pdCksIChkZWYpKSA6IDAp
DQotI2RlZmluZSBzbXVfc2V0X3Bvd2VyX2xpbWl0KHNtdSwgbGltaXQpIFwNCi0JKChzbXUpLT5m
dW5jcy0+c2V0X3Bvd2VyX2xpbWl0ID8gKHNtdSktPmZ1bmNzLT5zZXRfcG93ZXJfbGltaXQoKHNt
dSksIChsaW1pdCkpIDogMCkNCisNCitpbnQgc211X2dldF9wb3dlcl9saW1pdChzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwNCisJCQl1aW50MzJfdCAqbGltaXQsDQorCQkJYm9vbCBkZWYsDQorCQkJ
Ym9vbCBsb2NrX25lZWRlZCk7DQorDQoraW50IHNtdV9zZXRfcG93ZXJfbGltaXQoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGxpbWl0KTsNCiAjZGVmaW5lIHNtdV9nZXRfY3VycmVu
dF9jbGtfZnJlcShzbXUsIGNsa19pZCwgdmFsdWUpIFwNCiAJKChzbXUpLT5mdW5jcy0+Z2V0X2N1
cnJlbnRfY2xrX2ZyZXE/IChzbXUpLT5mdW5jcy0+Z2V0X2N1cnJlbnRfY2xrX2ZyZXEoKHNtdSks
IChjbGtfaWQpLCAodmFsdWUpKSA6IDApDQotI2RlZmluZSBzbXVfcHJpbnRfY2xrX2xldmVscyhz
bXUsIGNsa190eXBlLCBidWYpIFwNCi0JKChzbXUpLT5wcHRfZnVuY3MtPnByaW50X2Nsa19sZXZl
bHMgPyAoc211KS0+cHB0X2Z1bmNzLT5wcmludF9jbGtfbGV2ZWxzKChzbXUpLCAoY2xrX3R5cGUp
LCAoYnVmKSkgOiAwKQ0KLSNkZWZpbmUgc211X2dldF9vZF9wZXJjZW50YWdlKHNtdSwgdHlwZSkg
XA0KLQkoKHNtdSktPnBwdF9mdW5jcy0+Z2V0X29kX3BlcmNlbnRhZ2UgPyAoc211KS0+cHB0X2Z1
bmNzLT5nZXRfb2RfcGVyY2VudGFnZSgoc211KSwgKHR5cGUpKSA6IDApDQotI2RlZmluZSBzbXVf
c2V0X29kX3BlcmNlbnRhZ2Uoc211LCB0eXBlLCB2YWx1ZSkgXA0KLQkoKHNtdSktPnBwdF9mdW5j
cy0+c2V0X29kX3BlcmNlbnRhZ2UgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfb2RfcGVyY2VudGFn
ZSgoc211KSwgKHR5cGUpLCAodmFsdWUpKSA6IDApDQotI2RlZmluZSBzbXVfb2RfZWRpdF9kcG1f
dGFibGUoc211LCB0eXBlLCBpbnB1dCwgc2l6ZSkgXA0KLQkoKHNtdSktPnBwdF9mdW5jcy0+b2Rf
ZWRpdF9kcG1fdGFibGUgPyAoc211KS0+cHB0X2Z1bmNzLT5vZF9lZGl0X2RwbV90YWJsZSgoc211
KSwgKHR5cGUpLCAoaW5wdXQpLCAoc2l6ZSkpIDogMCkNCitpbnQgc211X3ByaW50X2Nsa19sZXZl
bHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLCBj
aGFyICpidWYpOw0KK2ludCBzbXVfZ2V0X29kX3BlcmNlbnRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsIGVudW0gc211X2Nsa190eXBlIHR5cGUpOw0KK2ludCBzbXVfc2V0X29kX3BlcmNlbnRh
Z2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIHR5cGUsIHVpbnQz
Ml90IHZhbHVlKTsNCisNCitpbnQgc211X29kX2VkaXRfZHBtX3RhYmxlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LA0KKwkJCSAgZW51bSBQUF9PRF9EUE1fVEFCTEVfQ09NTUFORCB0eXBlLA0KKwkJ
CSAgbG9uZyAqaW5wdXQsIHVpbnQzMl90IHNpemUpOw0KICNkZWZpbmUgc211X3RhYmxlc19pbml0
KHNtdSwgdGFiKSBcDQogCSgoc211KS0+cHB0X2Z1bmNzLT50YWJsZXNfaW5pdCA/IChzbXUpLT5w
cHRfZnVuY3MtPnRhYmxlc19pbml0KChzbXUpLCAodGFiKSkgOiAwKQ0KICNkZWZpbmUgc211X3Nl
dF90aGVybWFsX2Zhbl90YWJsZShzbXUpIFwNCkBAIC02NjQsMTQgKzY2NSwxOCBAQCBzdHJ1Y3Qg
c211X2Z1bmNzDQogCSgoc211KS0+ZnVuY3MtPnN0YXJ0X3RoZXJtYWxfY29udHJvbD8gKHNtdSkt
PmZ1bmNzLT5zdGFydF90aGVybWFsX2NvbnRyb2woKHNtdSkpIDogMCkNCiAjZGVmaW5lIHNtdV9z
dG9wX3RoZXJtYWxfY29udHJvbChzbXUpIFwNCiAJKChzbXUpLT5mdW5jcy0+c3RvcF90aGVybWFs
X2NvbnRyb2w/IChzbXUpLT5mdW5jcy0+c3RvcF90aGVybWFsX2NvbnRyb2woKHNtdSkpIDogMCkN
Ci0jZGVmaW5lIHNtdV9yZWFkX3NlbnNvcihzbXUsIHNlbnNvciwgZGF0YSwgc2l6ZSkgXA0KLQko
KHNtdSktPnBwdF9mdW5jcy0+cmVhZF9zZW5zb3I/IChzbXUpLT5wcHRfZnVuY3MtPnJlYWRfc2Vu
c29yKChzbXUpLCAoc2Vuc29yKSwgKGRhdGEpLCAoc2l6ZSkpIDogMCkNCisNCitpbnQgc211X3Jl
YWRfc2Vuc29yKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KKwkJICAgIGVudW0gYW1kX3BwX3Nl
bnNvcnMgc2Vuc29yLA0KKwkJICAgIHZvaWQgKmRhdGEsIHVpbnQzMl90ICpzaXplKTsNCiAjZGVm
aW5lIHNtdV9zbWNfcmVhZF9zZW5zb3Ioc211LCBzZW5zb3IsIGRhdGEsIHNpemUpIFwNCiAJKChz
bXUpLT5mdW5jcy0+cmVhZF9zZW5zb3I/IChzbXUpLT5mdW5jcy0+cmVhZF9zZW5zb3IoKHNtdSks
IChzZW5zb3IpLCAoZGF0YSksIChzaXplKSkgOiAtRUlOVkFMKQ0KLSNkZWZpbmUgc211X2dldF9w
b3dlcl9wcm9maWxlX21vZGUoc211LCBidWYpIFwNCi0JKChzbXUpLT5wcHRfZnVuY3MtPmdldF9w
b3dlcl9wcm9maWxlX21vZGUgPyAoc211KS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJfcHJvZmlsZV9t
b2RlKChzbXUpLCBidWYpIDogMCkNCi0jZGVmaW5lIHNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2Rl
KHNtdSwgcGFyYW0sIHBhcmFtX3NpemUpIFwNCi0JKChzbXUpLT5wcHRfZnVuY3MtPnNldF9wb3dl
cl9wcm9maWxlX21vZGUgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfcG93ZXJfcHJvZmlsZV9tb2Rl
KChzbXUpLCAocGFyYW0pLCAocGFyYW1fc2l6ZSkpIDogMCkNCitpbnQgc211X2dldF9wb3dlcl9w
cm9maWxlX21vZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNoYXIgKmJ1Zik7DQorDQoraW50
IHNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KKwkJ
CSAgICAgICBsb25nICpwYXJhbSwNCisJCQkgICAgICAgdWludDMyX3QgcGFyYW1fc2l6ZSwNCisJ
CQkgICAgICAgYm9vbCBsb2NrX25lZWRlZCk7DQogI2RlZmluZSBzbXVfcHJlX2Rpc3BsYXlfY29u
ZmlnX2NoYW5nZWQoc211KSBcDQogCSgoc211KS0+cHB0X2Z1bmNzLT5wcmVfZGlzcGxheV9jb25m
aWdfY2hhbmdlZCA/IChzbXUpLT5wcHRfZnVuY3MtPnByZV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2Vk
KChzbXUpKSA6IDApDQogI2RlZmluZSBzbXVfZGlzcGxheV9jb25maWdfY2hhbmdlZChzbXUpIFwN
CkBAIC02ODgsMTYgKzY5MywxMSBAQCBzdHJ1Y3Qgc211X2Z1bmNzDQogCSgoc211KS0+cHB0X2Z1
bmNzLT5nZXRfcHJvZmlsaW5nX2Nsa19tYXNrID8gKHNtdSktPnBwdF9mdW5jcy0+Z2V0X3Byb2Zp
bGluZ19jbGtfbWFzaygoc211KSwgKGxldmVsKSwgKHNjbGtfbWFzayksIChtY2xrX21hc2spLCAo
c29jX21hc2spKSA6IDApDQogI2RlZmluZSBzbXVfc2V0X2NwdV9wb3dlcl9zdGF0ZShzbXUpIFwN
CiAJKChzbXUpLT5wcHRfZnVuY3MtPnNldF9jcHVfcG93ZXJfc3RhdGUgPyAoc211KS0+cHB0X2Z1
bmNzLT5zZXRfY3B1X3Bvd2VyX3N0YXRlKChzbXUpKSA6IDApDQotI2RlZmluZSBzbXVfZ2V0X2Zh
bl9jb250cm9sX21vZGUoc211KSBcDQotCSgoc211KS0+ZnVuY3MtPmdldF9mYW5fY29udHJvbF9t
b2RlID8gKHNtdSktPmZ1bmNzLT5nZXRfZmFuX2NvbnRyb2xfbW9kZSgoc211KSkgOiAwKQ0KLSNk
ZWZpbmUgc211X3NldF9mYW5fY29udHJvbF9tb2RlKHNtdSwgdmFsdWUpIFwNCi0JKChzbXUpLT5m
dW5jcy0+c2V0X2Zhbl9jb250cm9sX21vZGUgPyAoc211KS0+ZnVuY3MtPnNldF9mYW5fY29udHJv
bF9tb2RlKChzbXUpLCAodmFsdWUpKSA6IDApDQotI2RlZmluZSBzbXVfZ2V0X2Zhbl9zcGVlZF9w
ZXJjZW50KHNtdSwgc3BlZWQpIFwNCi0JKChzbXUpLT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRf
cGVyY2VudCA/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcGVyY2VudCgoc211KSwg
KHNwZWVkKSkgOiAwKQ0KLSNkZWZpbmUgc211X3NldF9mYW5fc3BlZWRfcGVyY2VudChzbXUsIHNw
ZWVkKSBcDQotCSgoc211KS0+ZnVuY3MtPnNldF9mYW5fc3BlZWRfcGVyY2VudCA/IChzbXUpLT5m
dW5jcy0+c2V0X2Zhbl9zcGVlZF9wZXJjZW50KChzbXUpLCAoc3BlZWQpKSA6IDApDQotI2RlZmlu
ZSBzbXVfZ2V0X2Zhbl9zcGVlZF9ycG0oc211LCBzcGVlZCkgXA0KLQkoKHNtdSktPnBwdF9mdW5j
cy0+Z2V0X2Zhbl9zcGVlZF9ycG0gPyAoc211KS0+cHB0X2Z1bmNzLT5nZXRfZmFuX3NwZWVkX3Jw
bSgoc211KSwgKHNwZWVkKSkgOiAwKQ0KK2ludCBzbXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUpOw0KK2ludCBzbXVfc2V0X2Zhbl9jb250cm9sX21vZGUoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsIGludCB2YWx1ZSk7DQoraW50IHNtdV9nZXRfZmFuX3NwZWVk
X3BlcmNlbnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90ICpzcGVlZCk7DQoraW50
IHNtdV9zZXRfZmFuX3NwZWVkX3BlcmNlbnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQz
Ml90IHNwZWVkKTsNCitpbnQgc211X2dldF9mYW5fc3BlZWRfcnBtKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCB1aW50MzJfdCAqc3BlZWQpOw0KIA0KICNkZWZpbmUgc211X21zZ19nZXRfaW5kZXgo
c211LCBtc2cpIFwNCiAJKChzbXUpLT5wcHRfZnVuY3M/ICgoc211KS0+cHB0X2Z1bmNzLT5nZXRf
c211X21zZ19pbmRleD8gKHNtdSktPnBwdF9mdW5jcy0+Z2V0X3NtdV9tc2dfaW5kZXgoKHNtdSks
IChtc2cpKSA6IC1FSU5WQUwpIDogLUVJTlZBTCkNCkBAIC03MTUsNDAgKzcxNSw0NiBAQCBzdHJ1
Y3Qgc211X2Z1bmNzDQogCSgoc211KS0+cHB0X2Z1bmNzPyAoKHNtdSktPnBwdF9mdW5jcy0+cnVu
X2J0Yz8gKHNtdSktPnBwdF9mdW5jcy0+cnVuX2J0Yygoc211KSkgOiAwKSA6IDApDQogI2RlZmlu
ZSBzbXVfZ2V0X2FsbG93ZWRfZmVhdHVyZV9tYXNrKHNtdSwgZmVhdHVyZV9tYXNrLCBudW0pIFwN
CiAJKChzbXUpLT5wcHRfZnVuY3M/ICgoc211KS0+cHB0X2Z1bmNzLT5nZXRfYWxsb3dlZF9mZWF0
dXJlX21hc2s/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9hbGxvd2VkX2ZlYXR1cmVfbWFzaygoc211
KSwgKGZlYXR1cmVfbWFzayksIChudW0pKSA6IDApIDogMCkNCi0jZGVmaW5lIHNtdV9zZXRfZGVl
cF9zbGVlcF9kY2VmY2xrKHNtdSwgY2xrKSBcDQotCSgoc211KS0+ZnVuY3MtPnNldF9kZWVwX3Ns
ZWVwX2RjZWZjbGsgPyAoc211KS0+ZnVuY3MtPnNldF9kZWVwX3NsZWVwX2RjZWZjbGsoKHNtdSks
IChjbGspKSA6IDApDQotI2RlZmluZSBzbXVfc2V0X2FjdGl2ZV9kaXNwbGF5X2NvdW50KHNtdSwg
Y291bnQpIFwNCi0JKChzbXUpLT5mdW5jcy0+c2V0X2FjdGl2ZV9kaXNwbGF5X2NvdW50ID8gKHNt
dSktPmZ1bmNzLT5zZXRfYWN0aXZlX2Rpc3BsYXlfY291bnQoKHNtdSksIChjb3VudCkpIDogMCkN
CitpbnQgc211X3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IGludCBjbGspOw0KK2ludCBzbXVfc2V0X2FjdGl2ZV9kaXNwbGF5X2NvdW50KHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCB1aW50MzJfdCBjb3VudCk7DQogI2RlZmluZSBzbXVfc3RvcmVfY2M2X2Rh
dGEoc211LCBzdCwgY2M2X2RpcywgcHN0X2RpcywgcHN0X3N3X2RpcykgXA0KIAkoKHNtdSktPmZ1
bmNzLT5zdG9yZV9jYzZfZGF0YSA/IChzbXUpLT5mdW5jcy0+c3RvcmVfY2M2X2RhdGEoKHNtdSks
IChzdCksIChjYzZfZGlzKSwgKHBzdF9kaXMpLCAocHN0X3N3X2RpcykpIDogMCkNCi0jZGVmaW5l
IHNtdV9nZXRfY2xvY2tfYnlfdHlwZShzbXUsIHR5cGUsIGNsb2NrcykgXA0KLQkoKHNtdSktPmZ1
bmNzLT5nZXRfY2xvY2tfYnlfdHlwZSA/IChzbXUpLT5mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGUo
KHNtdSksICh0eXBlKSwgKGNsb2NrcykpIDogMCkNCi0jZGVmaW5lIHNtdV9nZXRfbWF4X2hpZ2hf
Y2xvY2tzKHNtdSwgY2xvY2tzKSBcDQotCSgoc211KS0+ZnVuY3MtPmdldF9tYXhfaGlnaF9jbG9j
a3MgPyAoc211KS0+ZnVuY3MtPmdldF9tYXhfaGlnaF9jbG9ja3MoKHNtdSksIChjbG9ja3MpKSA6
IDApDQotI2RlZmluZSBzbXVfZ2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF9sYXRlbmN5KHNtdSwgY2xr
X3R5cGUsIGNsb2NrcykgXA0KLQkoKHNtdSktPnBwdF9mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGVf
d2l0aF9sYXRlbmN5ID8gKHNtdSktPnBwdF9mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF9s
YXRlbmN5KChzbXUpLCAoY2xrX3R5cGUpLCAoY2xvY2tzKSkgOiAwKQ0KLSNkZWZpbmUgc211X2dl
dF9jbG9ja19ieV90eXBlX3dpdGhfdm9sdGFnZShzbXUsIHR5cGUsIGNsb2NrcykgXA0KLQkoKHNt
dSktPnBwdF9mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF92b2x0YWdlID8gKHNtdSktPnBw
dF9mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF92b2x0YWdlKChzbXUpLCAodHlwZSksIChj
bG9ja3MpKSA6IDApDQotI2RlZmluZSBzbXVfZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3Qo
c211LCBjbG9ja19yZXEpIFwNCi0JKChzbXUpLT5mdW5jcy0+ZGlzcGxheV9jbG9ja192b2x0YWdl
X3JlcXVlc3QgPyAoc211KS0+ZnVuY3MtPmRpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KChz
bXUpLCAoY2xvY2tfcmVxKSkgOiAwKQ0KLSNkZWZpbmUgc211X2Rpc3BsYXlfZGlzYWJsZV9tZW1v
cnlfY2xvY2tfc3dpdGNoKHNtdSwgZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNoKSBcDQotCSgo
c211KS0+cHB0X2Z1bmNzLT5kaXNwbGF5X2Rpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCA/IChz
bXUpLT5wcHRfZnVuY3MtPmRpc3BsYXlfZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNoKChzbXUp
LCAoZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNoKSkgOiAtRUlOVkFMKQ0KKw0KK2ludCBzbXVf
Z2V0X2Nsb2NrX2J5X3R5cGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQorCQkJICBlbnVtIGFt
ZF9wcF9jbG9ja190eXBlIHR5cGUsDQorCQkJICBzdHJ1Y3QgYW1kX3BwX2Nsb2NrcyAqY2xvY2tz
KTsNCisNCitpbnQgc211X2dldF9tYXhfaGlnaF9jbG9ja3Moc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsDQorCQkJICAgIHN0cnVjdCBhbWRfcHBfc2ltcGxlX2Nsb2NrX2luZm8gKmNsb2Nrcyk7DQor
DQoraW50IHNtdV9nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVuY3koc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsDQorCQkJCSAgICAgICBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwNCisJCQkJ
ICAgICAgIHN0cnVjdCBwcF9jbG9ja19sZXZlbHNfd2l0aF9sYXRlbmN5ICpjbG9ja3MpOw0KKw0K
K2ludCBzbXVfZ2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF92b2x0YWdlKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LA0KKwkJCQkgICAgICAgZW51bSBhbWRfcHBfY2xvY2tfdHlwZSB0eXBlLA0KKwkJCQkg
ICAgICAgc3RydWN0IHBwX2Nsb2NrX2xldmVsc193aXRoX3ZvbHRhZ2UgKmNsb2Nrcyk7DQorDQor
aW50IHNtdV9kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVxdWVzdChzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwNCisJCQkJICAgICAgc3RydWN0IHBwX2Rpc3BsYXlfY2xvY2tfcmVxdWVzdCAqY2xvY2tf
cmVxKTsNCitpbnQgc211X2Rpc3BsYXlfZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNoKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LCBib29sIGRpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCk7DQog
I2RlZmluZSBzbXVfZ2V0X2RhbF9wb3dlcl9sZXZlbChzbXUsIGNsb2NrcykgXA0KIAkoKHNtdSkt
PmZ1bmNzLT5nZXRfZGFsX3Bvd2VyX2xldmVsID8gKHNtdSktPmZ1bmNzLT5nZXRfZGFsX3Bvd2Vy
X2xldmVsKChzbXUpLCAoY2xvY2tzKSkgOiAwKQ0KICNkZWZpbmUgc211X2dldF9wZXJmX2xldmVs
KHNtdSwgZGVzaWduYXRpb24sIGxldmVsKSBcDQogCSgoc211KS0+ZnVuY3MtPmdldF9wZXJmX2xl
dmVsID8gKHNtdSktPmZ1bmNzLT5nZXRfcGVyZl9sZXZlbCgoc211KSwgKGRlc2lnbmF0aW9uKSwg
KGxldmVsKSkgOiAwKQ0KICNkZWZpbmUgc211X2dldF9jdXJyZW50X3NoYWxsb3dfc2xlZXBfY2xv
Y2tzKHNtdSwgY2xvY2tzKSBcDQogCSgoc211KS0+ZnVuY3MtPmdldF9jdXJyZW50X3NoYWxsb3df
c2xlZXBfY2xvY2tzID8gKHNtdSktPmZ1bmNzLT5nZXRfY3VycmVudF9zaGFsbG93X3NsZWVwX2Ns
b2Nrcygoc211KSwgKGNsb2NrcykpIDogMCkNCi0jZGVmaW5lIHNtdV9ub3RpZnlfc211X2VuYWJs
ZV9wd2Uoc211KSBcDQotCSgoc211KS0+ZnVuY3MtPm5vdGlmeV9zbXVfZW5hYmxlX3B3ZSA/IChz
bXUpLT5mdW5jcy0+bm90aWZ5X3NtdV9lbmFibGVfcHdlKChzbXUpKSA6IDApDQotI2RlZmluZSBz
bXVfc2V0X3dhdGVybWFya3NfZm9yX2Nsb2NrX3JhbmdlcyhzbXUsIGNsb2NrX3JhbmdlcykgXA0K
LQkoKHNtdSktPmZ1bmNzLT5zZXRfd2F0ZXJtYXJrc19mb3JfY2xvY2tfcmFuZ2VzID8gKHNtdSkt
PmZ1bmNzLT5zZXRfd2F0ZXJtYXJrc19mb3JfY2xvY2tfcmFuZ2VzKChzbXUpLCAoY2xvY2tfcmFu
Z2VzKSkgOiAwKQ0KK2ludCBzbXVfbm90aWZ5X3NtdV9lbmFibGVfcHdlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211KTsNCisNCitpbnQgc211X3NldF93YXRlcm1hcmtzX2Zvcl9jbG9ja19yYW5nZXMo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQorCQkJCQlzdHJ1Y3QgZG1fcHBfd21fc2V0c193aXRo
X2Nsb2NrX3Jhbmdlc19zb2MxNSAqY2xvY2tfcmFuZ2VzKTsNCiAjZGVmaW5lIHNtdV9kcG1fc2V0
X3V2ZF9lbmFibGUoc211LCBlbmFibGUpIFwNCiAJKChzbXUpLT5wcHRfZnVuY3MtPmRwbV9zZXRf
dXZkX2VuYWJsZSA/IChzbXUpLT5wcHRfZnVuY3MtPmRwbV9zZXRfdXZkX2VuYWJsZSgoc211KSwg
KGVuYWJsZSkpIDogMCkNCiAjZGVmaW5lIHNtdV9kcG1fc2V0X3ZjZV9lbmFibGUoc211LCBlbmFi
bGUpIFwNCiAJKChzbXUpLT5wcHRfZnVuY3MtPmRwbV9zZXRfdmNlX2VuYWJsZSA/IChzbXUpLT5w
cHRfZnVuY3MtPmRwbV9zZXRfdmNlX2VuYWJsZSgoc211KSwgKGVuYWJsZSkpIDogMCkNCi0jZGVm
aW5lIHNtdV9zZXRfeGdtaV9wc3RhdGUoc211LCBwc3RhdGUpIFwNCi0JCSgoc211KS0+ZnVuY3Mt
PnNldF94Z21pX3BzdGF0ZSA/IChzbXUpLT5mdW5jcy0+c2V0X3hnbWlfcHN0YXRlKChzbXUpLCAo
cHN0YXRlKSkgOiAwKQ0KKw0KK2ludCBzbXVfc2V0X3hnbWlfcHN0YXRlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LA0KKwkJCXVpbnQzMl90IHBzdGF0ZSk7DQogI2RlZmluZSBzbXVfc2V0X3dhdGVy
bWFya3NfdGFibGUoc211LCB0YWIsIGNsb2NrX3JhbmdlcykgXA0KIAkoKHNtdSktPnBwdF9mdW5j
cy0+c2V0X3dhdGVybWFya3NfdGFibGUgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfd2F0ZXJtYXJr
c190YWJsZSgoc211KSwgKHRhYiksIChjbG9ja19yYW5nZXMpKSA6IDApDQogI2RlZmluZSBzbXVf
Z2V0X2N1cnJlbnRfY2xrX2ZyZXFfYnlfdGFibGUoc211LCBjbGtfdHlwZSwgdmFsdWUpIFwNCkBA
IC03NTksMjIgKzc2NSwxOCBAQCBzdHJ1Y3Qgc211X2Z1bmNzDQogCSgoc211KS0+cHB0X2Z1bmNz
LT5nZXRfdGhlcm1hbF90ZW1wZXJhdHVyZV9yYW5nZT8gKHNtdSktPnBwdF9mdW5jcy0+Z2V0X3Ro
ZXJtYWxfdGVtcGVyYXR1cmVfcmFuZ2UoKHNtdSksIChyYW5nZSkpIDogMCkNCiAjZGVmaW5lIHNt
dV9yZWdpc3Rlcl9pcnFfaGFuZGxlcihzbXUpIFwNCiAJKChzbXUpLT5mdW5jcy0+cmVnaXN0ZXJf
aXJxX2hhbmRsZXIgPyAoc211KS0+ZnVuY3MtPnJlZ2lzdGVyX2lycV9oYW5kbGVyKHNtdSkgOiAw
KQ0KLSNkZWZpbmUgc211X3NldF9hemFsaWFfZDNfcG1lKHNtdSkgXA0KLQkoKHNtdSktPmZ1bmNz
LT5zZXRfYXphbGlhX2QzX3BtZSA/IChzbXUpLT5mdW5jcy0+c2V0X2F6YWxpYV9kM19wbWUoKHNt
dSkpIDogMCkNCisNCitpbnQgc211X3NldF9hemFsaWFfZDNfcG1lKHN0cnVjdCBzbXVfY29udGV4
dCAqc211KTsNCiAjZGVmaW5lIHNtdV9nZXRfZHBtX3VsdGltYXRlX2ZyZXEoc211LCBwYXJhbSwg
bWluLCBtYXgpIFwNCiAJCSgoc211KS0+ZnVuY3MtPmdldF9kcG1fdWx0aW1hdGVfZnJlcSA/IChz
bXUpLT5mdW5jcy0+Z2V0X2RwbV91bHRpbWF0ZV9mcmVxKChzbXUpLCAocGFyYW0pLCAobWluKSwg
KG1heCkpIDogMCkNCi0jZGVmaW5lIHNtdV9nZXRfdWNsa19kcG1fc3RhdGVzKHNtdSwgY2xvY2tz
X2luX2toeiwgbnVtX3N0YXRlcykgXA0KLQkoKHNtdSktPnBwdF9mdW5jcy0+Z2V0X3VjbGtfZHBt
X3N0YXRlcyA/IChzbXUpLT5wcHRfZnVuY3MtPmdldF91Y2xrX2RwbV9zdGF0ZXMoKHNtdSksIChj
bG9ja3NfaW5fa2h6KSwgKG51bV9zdGF0ZXMpKSA6IDApDQotI2RlZmluZSBzbXVfZ2V0X21heF9z
dXN0YWluYWJsZV9jbG9ja3NfYnlfZGMoc211LCBtYXhfY2xvY2tzKSBcDQotCSgoc211KS0+ZnVu
Y3MtPmdldF9tYXhfc3VzdGFpbmFibGVfY2xvY2tzX2J5X2RjID8gKHNtdSktPmZ1bmNzLT5nZXRf
bWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYygoc211KSwgKG1heF9jbG9ja3MpKSA6IDApDQot
I2RlZmluZSBzbXVfYmFjb19pc19zdXBwb3J0KHNtdSkgXA0KLQkoKHNtdSktPmZ1bmNzLT5iYWNv
X2lzX3N1cHBvcnQ/IChzbXUpLT5mdW5jcy0+YmFjb19pc19zdXBwb3J0KChzbXUpKSA6IGZhbHNl
KQ0KLSNkZWZpbmUgc211X2JhY29fZ2V0X3N0YXRlKHNtdSwgc3RhdGUpIFwNCi0JKChzbXUpLT5m
dW5jcy0+YmFjb19nZXRfc3RhdGU/IChzbXUpLT5mdW5jcy0+YmFjb19nZXRfc3RhdGUoKHNtdSks
IChzdGF0ZSkpIDogMCkNCi0jZGVmaW5lIHNtdV9iYWNvX3Jlc2V0KHNtdSkgXA0KLQkoKHNtdSkt
PmZ1bmNzLT5iYWNvX3Jlc2V0PyAoc211KS0+ZnVuY3MtPmJhY29fcmVzZXQoKHNtdSkpIDogMCkN
Ci0jZGVmaW5lIHNtdV9tb2RlMl9yZXNldChzbXUpIFwNCi0JKChzbXUpLT5mdW5jcy0+bW9kZTJf
cmVzZXQ/IChzbXUpLT5mdW5jcy0+bW9kZTJfcmVzZXQoKHNtdSkpIDogMCkNCisNCitib29sIHNt
dV9iYWNvX2lzX3N1cHBvcnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOw0KKw0KK2ludCBzbXVf
YmFjb19nZXRfc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2JhY29fc3Rh
dGUgKnN0YXRlKTsNCisNCitpbnQgc211X2JhY29fcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUpOw0KKw0KK2ludCBzbXVfbW9kZTJfcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOw0K
ICNkZWZpbmUgc211X2FzaWNfc2V0X3BlcmZvcm1hbmNlX2xldmVsKHNtdSwgbGV2ZWwpIFwNCiAJ
KChzbXUpLT5wcHRfZnVuY3MtPnNldF9wZXJmb3JtYW5jZV9sZXZlbD8gKHNtdSktPnBwdF9mdW5j
cy0+c2V0X3BlcmZvcm1hbmNlX2xldmVsKChzbXUpLCAobGV2ZWwpKSA6IC1FSU5WQUwpOw0KICNk
ZWZpbmUgc211X2R1bXBfcHB0YWJsZShzbXUpIFwNCkBAIC04MzMsNyArODM1LDggQEAgZXh0ZXJu
IGludCBzbXVfZ2V0X2N1cnJlbnRfY2xvY2tzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIGV4
dGVybiBpbnQgc211X2RwbV9zZXRfcG93ZXJfZ2F0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSx1
aW50MzJfdCBibG9ja190eXBlLCBib29sIGdhdGUpOw0KIGV4dGVybiBpbnQgc211X2hhbmRsZV90
YXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIAkJCSAgIGVudW0gYW1kX2RwbV9mb3JjZWRf
bGV2ZWwgbGV2ZWwsDQotCQkJICAgZW51bSBhbWRfcHBfdGFzayB0YXNrX2lkKTsNCisJCQkgICBl
bnVtIGFtZF9wcF90YXNrIHRhc2tfaWQsDQorCQkJICAgYm9vbCBsb2NrX25lZWRlZCk7DQogaW50
IHNtdV9zd2l0Y2hfcG93ZXJfcHJvZmlsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCQkg
ICAgIGVudW0gUFBfU01DX1BPV0VSX1BST0ZJTEUgdHlwZSwNCiAJCQkgICAgIGJvb2wgZW4pOw0K
QEAgLTg0Myw3ICs4NDYsNyBAQCBpbnQgc211X2dldF9kcG1fZnJlcV9ieV9pbmRleChzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cA0KIGludCBzbXVfZ2V0
X2RwbV9sZXZlbF9jb3VudChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xrX3R5
cGUgY2xrX3R5cGUsDQogCQkJICAgIHVpbnQzMl90ICp2YWx1ZSk7DQogaW50IHNtdV9nZXRfZHBt
X2ZyZXFfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNs
a190eXBlLA0KLQkJCSAgIHVpbnQzMl90ICptaW4sIHVpbnQzMl90ICptYXgpOw0KKwkJCSAgIHVp
bnQzMl90ICptaW4sIHVpbnQzMl90ICptYXgsIGJvb2wgbG9ja19uZWVkZWQpOw0KIGludCBzbXVf
c2V0X3NvZnRfZnJlcV9yYW5nZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xr
X3R5cGUgY2xrX3R5cGUsDQogCQkJICAgIHVpbnQzMl90IG1pbiwgdWludDMyX3QgbWF4KTsNCiBp
bnQgc211X3NldF9oYXJkX2ZyZXFfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0g
c211X2Nsa190eXBlIGNsa190eXBlLA0KQEAgLTg1OCwxMCArODYxLDIwIEBAIHNpemVfdCBzbXVf
c3lzX2dldF9wcF9mZWF0dXJlX21hc2soc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNoYXIgKmJ1
Zik7DQogaW50IHNtdV9zeXNfc2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgdWludDY0X3QgbmV3X21hc2spOw0KIGludCBzbXVfZm9yY2VfY2xrX2xldmVscyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCQkgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsDQot
CQkJIHVpbnQzMl90IG1hc2spOw0KKwkJCSB1aW50MzJfdCBtYXNrLA0KKwkJCSBib29sIGxvY2tf
bmVlZGVkKTsNCiBpbnQgc211X3NldF9tcDFfc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
DQogCQkgICAgICBlbnVtIHBwX21wMV9zdGF0ZSBtcDFfc3RhdGUpOw0KIGludCBzbXVfc2V0X2Rm
X2NzdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCSAgICAgIGVudW0gcHBfZGZfY3N0
YXRlIHN0YXRlKTsNCiANCitpbnQgc211X2dldF9tYXhfc3VzdGFpbmFibGVfY2xvY2tzX2J5X2Rj
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KKwkJCQkJIHN0cnVjdCBwcF9zbXVfbnZfY2xvY2tf
dGFibGUgKm1heF9jbG9ja3MpOw0KKw0KK2ludCBzbXVfZ2V0X3VjbGtfZHBtX3N0YXRlcyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwNCisJCQkgICAgdW5zaWduZWQgaW50ICpjbG9ja192YWx1ZXNf
aW5fa2h6LA0KKwkJCSAgICB1bnNpZ25lZCBpbnQgKm51bV9zdGF0ZXMpOw0KKw0KK2VudW0gYW1k
X3BtX3N0YXRlX3R5cGUgc211X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211KTsNCisNCiAjZW5kaWYNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L3Bvd2VycGxheS9uYXZpMTBfcHB0LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9u
YXZpMTBfcHB0LmMNCmluZGV4IGI4OGFhZTliYjI0Mi4uZWFkNDBiMjg0MGY5IDEwMDY0NA0KLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5jDQorKysgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9uYXZpMTBfcHB0LmMNCkBAIC03OTUsMTMgKzc5NSwx
MyBAQCBzdGF0aWMgaW50IG5hdmkxMF9wb3B1bGF0ZV91bWRfc3RhdGVfY2xrKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211KQ0KIAlpbnQgcmV0ID0gMDsNCiAJdWludDMyX3QgbWluX3NjbGtfZnJlcSA9
IDAsIG1pbl9tY2xrX2ZyZXEgPSAwOw0KIA0KLQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3Jhbmdl
KHNtdSwgU01VX1NDTEssICZtaW5fc2Nsa19mcmVxLCBOVUxMKTsNCisJcmV0ID0gc211X2dldF9k
cG1fZnJlcV9yYW5nZShzbXUsIFNNVV9TQ0xLLCAmbWluX3NjbGtfZnJlcSwgTlVMTCwgZmFsc2Up
Ow0KIAlpZiAocmV0KQ0KIAkJcmV0dXJuIHJldDsNCiANCiAJc211LT5wc3RhdGVfc2NsayA9IG1p
bl9zY2xrX2ZyZXEgKiAxMDA7DQogDQotCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211
LCBTTVVfTUNMSywgJm1pbl9tY2xrX2ZyZXEsIE5VTEwpOw0KKwlyZXQgPSBzbXVfZ2V0X2RwbV9m
cmVxX3JhbmdlKHNtdSwgU01VX01DTEssICZtaW5fbWNsa19mcmVxLCBOVUxMLCBmYWxzZSk7DQog
CWlmIChyZXQpDQogCQlyZXR1cm4gcmV0Ow0KIA0KQEAgLTg1NCw3ICs4NTQsNyBAQCBzdGF0aWMg
aW50IG5hdmkxMF9wcmVfZGlzcGxheV9jb25maWdfY2hhbmdlZChzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSkNCiAJCXJldHVybiByZXQ7DQogDQogCWlmIChzbXVfZmVhdHVyZV9pc19lbmFibGVkKHNt
dSwgU01VX0ZFQVRVUkVfRFBNX1VDTEtfQklUKSkgew0KLQkJcmV0ID0gc211X2dldF9kcG1fZnJl
cV9yYW5nZShzbXUsIFNNVV9VQ0xLLCBOVUxMLCAmbWF4X2ZyZXEpOw0KKwkJcmV0ID0gc211X2dl
dF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xLLCBOVUxMLCAmbWF4X2ZyZXEsIGZhbHNlKTsN
CiAJCWlmIChyZXQpDQogCQkJcmV0dXJuIHJldDsNCiAJCXJldCA9IHNtdV9zZXRfaGFyZF9mcmVx
X3JhbmdlKHNtdSwgU01VX1VDTEssIDAsIG1heF9mcmVxKTsNCkBAIC05MDQsNyArOTA0LDcgQEAg
c3RhdGljIGludCBuYXZpMTBfZm9yY2VfZHBtX2xpbWl0X3ZhbHVlKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBib29sIGhpZ2hlc3QpDQogDQogCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGNs
a3MpOyBpKyspIHsNCiAJCWNsa190eXBlID0gY2xrc1tpXTsNCi0JCXJldCA9IHNtdV9nZXRfZHBt
X2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEpOw0KKwkJcmV0
ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEsICZtYXhf
ZnJlcSwgZmFsc2UpOw0KIAkJaWYgKHJldCkNCiAJCQlyZXR1cm4gcmV0Ow0KIA0KQEAgLTkzMSw3
ICs5MzEsNyBAQCBzdGF0aWMgaW50IG5hdmkxMF91bmZvcmNlX2RwbV9sZXZlbHMoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUpDQogDQogCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGNsa3MpOyBp
KyspIHsNCiAJCWNsa190eXBlID0gY2xrc1tpXTsNCi0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFf
cmFuZ2Uoc211LCBjbGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEpOw0KKwkJcmV0ID0gc211
X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEsICZtYXhfZnJlcSwg
ZmFsc2UpOw0KIAkJaWYgKHJldCkNCiAJCQlyZXR1cm4gcmV0Ow0KIA0KQEAgLTEyNjYsNyArMTI2
NiwxMCBAQCBzdGF0aWMgaW50IG5hdmkxMF9ub3RpZnlfc21jX2Rpc3BhbHlfY29uZmlnKHN0cnVj
dCBzbXVfY29udGV4dCAqc211KQ0KIAlpZiAoc211X2ZlYXR1cmVfaXNfc3VwcG9ydGVkKHNtdSwg
U01VX0ZFQVRVUkVfRFBNX0RDRUZDTEtfQklUKSkgew0KIAkJY2xvY2tfcmVxLmNsb2NrX3R5cGUg
PSBhbWRfcHBfZGNlZl9jbG9jazsNCiAJCWNsb2NrX3JlcS5jbG9ja19mcmVxX2luX2toeiA9IG1p
bl9jbG9ja3MuZGNlZl9jbG9jayAqIDEwOw0KLQkJaWYgKCFzbXVfZGlzcGxheV9jbG9ja192b2x0
YWdlX3JlcXVlc3Qoc211LCAmY2xvY2tfcmVxKSkgew0KKw0KKwkJaWYgKHNtdS0+ZnVuY3MtPmRp
c3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KQ0KKwkJCXJldCA9IHNtdS0+ZnVuY3MtPmRpc3Bs
YXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KHNtdSwgJmNsb2NrX3JlcSk7DQorCQlpZiAoIXJldCkg
ew0KIAkJCWlmIChzbXVfZmVhdHVyZV9pc19zdXBwb3J0ZWQoc211LCBTTVVfRkVBVFVSRV9EU19E
Q0VGQ0xLX0JJVCkpIHsNCiAJCQkJcmV0ID0gc211X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNt
dSwNCiAJCQkJCQkJCSAgU01VX01TR19TZXRNaW5EZWVwU2xlZXBEY2VmY2xrLA0KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3Jlbm9pcl9wcHQuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvcG93ZXJwbGF5L3Jlbm9pcl9wcHQuYw0KaW5kZXggNmFlZGZmZDczOWRiLi42
MDM2ZjY4MmU2ZjkgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9y
ZW5vaXJfcHB0LmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3Jlbm9pcl9w
cHQuYw0KQEAgLTE5NCw3ICsxOTQsNyBAQCBzdGF0aWMgaW50IHJlbm9pcl9wcmludF9jbGtfbGV2
ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIAljYXNlIFNNVV9TQ0xLOg0KIAkJLyogcmV0
aXJ2ZSB0YWJsZSByZXR1cm5lZCBwYXJhbXRlcnMgdW5pdCBpcyBNSHogKi8NCiAJCWN1cl92YWx1
ZSA9IG1ldHJpY3MuQ2xvY2tGcmVxdWVuY3lbQ0xPQ0tfR0ZYQ0xLXTsNCi0JCXJldCA9IHNtdV9n
ZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfR0ZYQ0xLLCAmbWluLCAmbWF4KTsNCisJCXJldCA9
IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfR0ZYQ0xLLCAmbWluLCAmbWF4LCBmYWxz
ZSk7DQogCQlpZiAoIXJldCkgew0KIAkJCS8qIGRyaXZlciBvbmx5IGtub3cgbWluL21heCBnZnhf
Y2xrLCBBZGQgbGV2ZWwgMSBmb3IgYWxsIG90aGVyIGdmeCBjbGtzICovDQogCQkJaWYgKGN1cl92
YWx1ZSAgPT0gbWF4KQ0KQEAgLTI1MSw3ICsyNTEsNiBAQCBzdGF0aWMgZW51bSBhbWRfcG1fc3Rh
dGVfdHlwZSByZW5vaXJfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0
DQogCSAgICAhc211X2RwbV9jdHgtPmRwbV9jdXJyZW50X3Bvd2VyX3N0YXRlKQ0KIAkJcmV0dXJu
IC1FSU5WQUw7DQogDQotCW11dGV4X2xvY2soJihzbXUtPm11dGV4KSk7DQogCXN3aXRjaCAoc211
X2RwbV9jdHgtPmRwbV9jdXJyZW50X3Bvd2VyX3N0YXRlLT5jbGFzc2lmaWNhdGlvbi51aV9sYWJl
bCkgew0KIAljYXNlIFNNVV9TVEFURV9VSV9MQUJFTF9CQVRURVJZOg0KIAkJcG1fdHlwZSA9IFBP
V0VSX1NUQVRFX1RZUEVfQkFUVEVSWTsNCkBAIC0yNjksNyArMjY4LDYgQEAgc3RhdGljIGVudW0g
YW1kX3BtX3N0YXRlX3R5cGUgcmVub2lyX2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHN0cnVjdCBz
bXVfY29udGV4dA0KIAkJCXBtX3R5cGUgPSBQT1dFUl9TVEFURV9UWVBFX0RFRkFVTFQ7DQogCQli
cmVhazsNCiAJfQ0KLQltdXRleF91bmxvY2soJihzbXUtPm11dGV4KSk7DQogDQogCXJldHVybiBw
bV90eXBlOw0KIH0NCkBAIC0zMTQsNyArMzEyLDcgQEAgc3RhdGljIGludCByZW5vaXJfZm9yY2Vf
ZHBtX2xpbWl0X3ZhbHVlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGhpZ2hlc3QpDQog
DQogCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGNsa3MpOyBpKyspIHsNCiAJCWNsa190eXBl
ID0gY2xrc1tpXTsNCi0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlw
ZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEpOw0KKwkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5n
ZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEsICZtYXhfZnJlcSwgZmFsc2UpOw0KIAkJaWYgKHJl
dCkNCiAJCQlyZXR1cm4gcmV0Ow0KIA0KQEAgLTM0OCw3ICszNDYsNyBAQCBzdGF0aWMgaW50IHJl
bm9pcl91bmZvcmNlX2RwbV9sZXZlbHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpIHsNCiANCiAJ
CWNsa190eXBlID0gY2xrX2ZlYXR1cmVfbWFwW2ldLmNsa190eXBlOw0KIA0KLQkJcmV0ID0gc211
X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEsICZtYXhfZnJlcSk7
DQorCQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgY2xrX3R5cGUsICZtaW5fZnJl
cSwgJm1heF9mcmVxLCBmYWxzZSk7DQogCQlpZiAocmV0KQ0KIAkJCXJldHVybiByZXQ7DQogDQpA
QCAtNDM1LDcgKzQzMyw3IEBAIHN0YXRpYyBpbnQgcmVub2lyX2ZvcmNlX2Nsa19sZXZlbHMoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsDQogCQkJcmV0dXJuIC1FSU5WQUw7DQogCQl9DQogDQotCQly
ZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgU01VX0dGWENMSywgJm1pbl9mcmVxLCAm
bWF4X2ZyZXEpOw0KKwkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9HRlhD
TEssICZtaW5fZnJlcSwgJm1heF9mcmVxLCBmYWxzZSk7DQogCQlpZiAocmV0KQ0KIAkJCXJldHVy
biByZXQ7DQogCQlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211LCBTTVVfTVNH
X1NldFNvZnRNYXhHZnhDbGssDQpAQCAtNTExLDcgKzUwOSw3IEBAIHN0YXRpYyBpbnQgcmVub2ly
X3NldF9wZWFrX2Nsb2NrX2J5X2RldmljZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCiAJaW50
IHJldCA9IDA7DQogCXVpbnQzMl90IHNjbGtfZnJlcSA9IDAsIHVjbGtfZnJlcSA9IDA7DQogDQot
CXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfU0NMSywgTlVMTCwgJnNjbGtf
ZnJlcSk7DQorCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfU0NMSywgTlVM
TCwgJnNjbGtfZnJlcSwgZmFsc2UpOw0KIAlpZiAocmV0KQ0KIAkJcmV0dXJuIHJldDsNCiANCkBA
IC01MTksNyArNTE3LDcgQEAgc3RhdGljIGludCByZW5vaXJfc2V0X3BlYWtfY2xvY2tfYnlfZGV2
aWNlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQ0KIAlpZiAocmV0KQ0KIAkJcmV0dXJuIHJldDsN
CiANCi0JcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xLLCBOVUxMLCAm
dWNsa19mcmVxKTsNCisJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xL
LCBOVUxMLCAmdWNsa19mcmVxLCBmYWxzZSk7DQogCWlmIChyZXQpDQogCQlyZXR1cm4gcmV0Ow0K
IA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTFfMC5j
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMV8wLmMNCmluZGV4IGI2OGNi
OGJhZGM3NS4uY2FmOGEzNzI4NTQxIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9w
b3dlcnBsYXkvc211X3YxMV8wLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L3NtdV92MTFfMC5jDQpAQCAtODA5LDggKzgwOSwxMSBAQCBzdGF0aWMgaW50IHNtdV92MTFfMF9z
ZXRfbWluX2RjZWZfZGVlcF9zbGVlcChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCiAJaWYgKCF0
YWJsZV9jb250ZXh0KQ0KIAkJcmV0dXJuIC1FSU5WQUw7DQogDQotCXJldHVybiBzbXVfc2V0X2Rl
ZXBfc2xlZXBfZGNlZmNsayhzbXUsDQotCQkJCQkgIHRhYmxlX2NvbnRleHQtPmJvb3RfdmFsdWVz
LmRjZWZjbGsgLyAxMDApOw0KKwlpZiAoc211LT5mdW5jcy0+c2V0X2RlZXBfc2xlZXBfZGNlZmNs
aykNCisJCXJldHVybiBzbXUtPmZ1bmNzLT5zZXRfZGVlcF9zbGVlcF9kY2VmY2xrKHNtdSwNCisJ
CQkJdGFibGVfY29udGV4dC0+Ym9vdF92YWx1ZXMuZGNlZmNsayAvIDEwMCk7DQorDQorCXJldHVy
biAwOw0KIH0NCiANCiBzdGF0aWMgaW50IHNtdV92MTFfMF9zZXRfdG9vbF90YWJsZV9sb2NhdGlv
bihzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCkBAIC0xMzI1LDkgKzEzMjgsNyBAQCBzbXVfdjEx
XzBfZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3Qoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
DQogCQlpZiAoY2xrX3NlbGVjdCA9PSBTTVVfVUNMSyAmJiBzbXUtPmRpc2FibGVfdWNsa19zd2l0
Y2gpDQogCQkJcmV0dXJuIDA7DQogDQotCQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCiAJCXJl
dCA9IHNtdV9zZXRfaGFyZF9mcmVxX3JhbmdlKHNtdSwgY2xrX3NlbGVjdCwgY2xrX2ZyZXEsIDAp
Ow0KLQkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsNCiANCiAJCWlmKGNsa19zZWxlY3QgPT0g
U01VX1VDTEspDQogCQkJc211LT5oYXJkX21pbl91Y2xrX3JlcV9mcm9tX2RhbCA9IGNsa19mcmVx
Ow0KQEAgLTEzNzAsMTIgKzEzNzEsMTAgQEAgc3RhdGljIGludCBzbXVfdjExXzBfZ2Z4X29mZl9j
b250cm9sKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGVuYWJsZSkNCiAJY2FzZSBDSElQ
X05BVkkxMjoNCiAJCWlmICghKGFkZXYtPnBtLnBwX2ZlYXR1cmUgJiBQUF9HRlhPRkZfTUFTSykp
DQogCQkJcmV0dXJuIDA7DQotCQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsNCiAJCWlmIChlbmFi
bGUpDQogCQkJcmV0ID0gc211X3NlbmRfc21jX21zZyhzbXUsIFNNVV9NU0dfQWxsb3dHZnhPZmYp
Ow0KIAkJZWxzZQ0KIAkJCXJldCA9IHNtdV9zZW5kX3NtY19tc2coc211LCBTTVVfTVNHX0Rpc2Fs
bG93R2Z4T2ZmKTsNCi0JCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7DQogCQlicmVhazsNCiAJ
ZGVmYXVsdDoNCiAJCWJyZWFrOw0KQEAgLTE0OTEsMTAgKzE0OTAsOSBAQCBzdGF0aWMgaW50IHNt
dV92MTFfMF9zZXRfZmFuX3NwZWVkX3JwbShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJaWYg
KCFzcGVlZCkNCiAJCXJldHVybiAtRUlOVkFMOw0KIA0KLQltdXRleF9sb2NrKCYoc211LT5tdXRl
eCkpOw0KIAlyZXQgPSBzbXVfdjExXzBfYXV0b19mYW5fY29udHJvbChzbXUsIDApOw0KIAlpZiAo
cmV0KQ0KLQkJZ290byBzZXRfZmFuX3NwZWVkX3JwbV9mYWlsZWQ7DQorCQlyZXR1cm4gcmV0Ow0K
IA0KIAljcnlzdGFsX2Nsb2NrX2ZyZXEgPSBhbWRncHVfYXNpY19nZXRfeGNsayhhZGV2KTsNCiAJ
dGFjaF9wZXJpb2QgPSA2MCAqIGNyeXN0YWxfY2xvY2tfZnJlcSAqIDEwMDAwIC8gKDggKiBzcGVl
ZCk7DQpAQCAtMTUwNSw4ICsxNTAzLDYgQEAgc3RhdGljIGludCBzbXVfdjExXzBfc2V0X2Zhbl9z
cGVlZF9ycG0oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQogDQogCXJldCA9IHNtdV92MTFfMF9z
ZXRfZmFuX3N0YXRpY19tb2RlKHNtdSwgRkRPX1BXTV9NT0RFX1NUQVRJQ19SUE0pOw0KIA0KLXNl
dF9mYW5fc3BlZWRfcnBtX2ZhaWxlZDoNCi0JbXV0ZXhfdW5sb2NrKCYoc211LT5tdXRleCkpOw0K
IAlyZXR1cm4gcmV0Ow0KIH0NCiANCkBAIC0xNTE3LDExICsxNTEzLDkgQEAgc3RhdGljIGludCBz
bXVfdjExXzBfc2V0X3hnbWlfcHN0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIAkJCQkg
ICAgIHVpbnQzMl90IHBzdGF0ZSkNCiB7DQogCWludCByZXQgPSAwOw0KLQltdXRleF9sb2NrKCYo
c211LT5tdXRleCkpOw0KIAlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211LA0K
IAkJCQkJICBTTVVfTVNHX1NldFhnbWlNb2RlLA0KIAkJCQkJICBwc3RhdGUgPyBYR01JX1NUQVRF
X0QwIDogWEdNSV9TVEFURV9EMyk7DQotCW11dGV4X3VubG9jaygmKHNtdS0+bXV0ZXgpKTsNCiAJ
cmV0dXJuIHJldDsNCiB9DQogDQpAQCAtMTYzMyw5ICsxNjI3LDcgQEAgc3RhdGljIGludCBzbXVf
djExXzBfc2V0X2F6YWxpYV9kM19wbWUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpDQogew0KIAlp
bnQgcmV0ID0gMDsNCiANCi0JbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQogCXJldCA9IHNtdV9z
ZW5kX3NtY19tc2coc211LCBTTVVfTVNHX0JhY29BdWRpb0QzUE1FKTsNCi0JbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsNCiANCiAJcmV0dXJuIHJldDsNCiB9DQpAQCAtMTc2Nyw3ICsxNzU5LDYg
QEAgc3RhdGljIGludCBzbXVfdjExXzBfZ2V0X2RwbV91bHRpbWF0ZV9mcmVxKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCBlbnVtIHNtdV9jbGsNCiAJaW50IHJldCA9IDAsIGNsa19pZCA9IDA7DQog
CXVpbnQzMl90IHBhcmFtID0gMDsNCiANCi0JbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQogCWNs
a19pZCA9IHNtdV9jbGtfZ2V0X2luZGV4KHNtdSwgY2xrX3R5cGUpOw0KIAlpZiAoY2xrX2lkIDwg
MCkgew0KIAkJcmV0ID0gLUVJTlZBTDsNCkBAIC0xNzk0LDcgKzE3ODUsNiBAQCBzdGF0aWMgaW50
IHNtdV92MTFfMF9nZXRfZHBtX3VsdGltYXRlX2ZyZXEoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IGVudW0gc211X2Nsaw0KIAl9DQogDQogZmFpbGVkOg0KLQltdXRleF91bmxvY2soJnNtdS0+bXV0
ZXgpOw0KIAlyZXR1cm4gcmV0Ow0KIH0NCiANCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL3Bvd2VycGxheS9zbXVfdjEyXzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L3NtdV92MTJfMC5jDQppbmRleCBjOTY5MWQwZmI1MjMuLjZiZjk0MmQzY2VjYSAxMDA2NDQNCi0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTJfMC5jDQorKysgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9zbXVfdjEyXzAuYw0KQEAgLTMyNSw4ICszMjUsNiBA
QCBzdGF0aWMgaW50IHNtdV92MTJfMF9nZXRfZHBtX3VsdGltYXRlX2ZyZXEoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIGVudW0gc211X2Nsaw0KIAlpbnQgcmV0ID0gMDsNCiAJdWludDMyX3QgbWNs
a19tYXNrLCBzb2NfbWFzazsNCiANCi0JbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQotDQogCWlm
IChtYXgpIHsNCiAJCXJldCA9IHNtdV9nZXRfcHJvZmlsaW5nX2Nsa19tYXNrKHNtdSwgQU1EX0RQ
TV9GT1JDRURfTEVWRUxfUFJPRklMRV9QRUFLLA0KIAkJCQkJCSBOVUxMLA0KQEAgLTM5Niw3ICsz
OTQsNiBAQCBzdGF0aWMgaW50IHNtdV92MTJfMF9nZXRfZHBtX3VsdGltYXRlX2ZyZXEoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsaw0KIAkJfQ0KIAl9DQogZmFpbGVkOg0KLQlt
dXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOw0KIAlyZXR1cm4gcmV0Ow0KIH0NCiANCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS92ZWdhMjBfcHB0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS92ZWdhMjBfcHB0LmMNCmluZGV4IGE3NmZmZDU4NDA0ZS4u
YzI0OWRmOTI1NmM3IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkv
dmVnYTIwX3BwdC5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS92ZWdhMjBf
cHB0LmMNCkBAIC02MzUsNyArNjM1LDYgQEAgYW1kX3BtX3N0YXRlX3R5cGUgdmVnYTIwX2dldF9j
dXJyZW50X3Bvd2VyX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQ0KIAkgICAgIXNtdV9k
cG1fY3R4LT5kcG1fY3VycmVudF9wb3dlcl9zdGF0ZSkNCiAJCXJldHVybiAtRUlOVkFMOw0KIA0K
LQltdXRleF9sb2NrKCYoc211LT5tdXRleCkpOw0KIAlzd2l0Y2ggKHNtdV9kcG1fY3R4LT5kcG1f
Y3VycmVudF9wb3dlcl9zdGF0ZS0+Y2xhc3NpZmljYXRpb24udWlfbGFiZWwpIHsNCiAJY2FzZSBT
TVVfU1RBVEVfVUlfTEFCRUxfQkFUVEVSWToNCiAJCXBtX3R5cGUgPSBQT1dFUl9TVEFURV9UWVBF
X0JBVFRFUlk7DQpAQCAtNjUzLDcgKzY1Miw2IEBAIGFtZF9wbV9zdGF0ZV90eXBlIHZlZ2EyMF9n
ZXRfY3VycmVudF9wb3dlcl9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCiAJCQlwbV90
eXBlID0gUE9XRVJfU1RBVEVfVFlQRV9ERUZBVUxUOw0KIAkJYnJlYWs7DQogCX0NCi0JbXV0ZXhf
dW5sb2NrKCYoc211LT5tdXRleCkpOw0KIA0KIAlyZXR1cm4gcG1fdHlwZTsNCiB9DQpAQCAtMTI3
Nyw4ICsxMjc1LDYgQEAgc3RhdGljIGludCB2ZWdhMjBfZm9yY2VfY2xrX2xldmVscyhzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwNCiAJdWludDMyX3Qgc29mdF9taW5fbGV2ZWwsIHNvZnRfbWF4X2xl
dmVsLCBoYXJkX21pbl9sZXZlbDsNCiAJaW50IHJldCA9IDA7DQogDQotCW11dGV4X2xvY2soJihz
bXUtPm11dGV4KSk7DQotDQogCXNvZnRfbWluX2xldmVsID0gbWFzayA/IChmZnMobWFzaykgLSAx
KSA6IDA7DQogCXNvZnRfbWF4X2xldmVsID0gbWFzayA/IChmbHMobWFzaykgLSAxKSA6IDA7DQog
DQpAQCAtMTQzMSw3ICsxNDI3LDYgQEAgc3RhdGljIGludCB2ZWdhMjBfZm9yY2VfY2xrX2xldmVs
cyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwNCiAJCWJyZWFrOw0KIAl9DQogDQotCW11dGV4X3Vu
bG9jaygmKHNtdS0+bXV0ZXgpKTsNCiAJcmV0dXJuIHJldDsNCiB9DQogDQpAQCAtMTQ0Niw4ICsx
NDQxLDYgQEAgc3RhdGljIGludCB2ZWdhMjBfZ2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF9sYXRlbmN5
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LA0KIA0KIAlkcG1fdGFibGUgPSBzbXVfZHBtLT5kcG1f
Y29udGV4dDsNCiANCi0JbXV0ZXhfbG9jaygmc211LT5tdXRleCk7DQotDQogCXN3aXRjaCAoY2xr
X3R5cGUpIHsNCiAJY2FzZSBTTVVfR0ZYQ0xLOg0KIAkJc2luZ2xlX2RwbV90YWJsZSA9ICYoZHBt
X3RhYmxlLT5nZnhfdGFibGUpOw0KQEAgLTE0NjksNyArMTQ2Miw2IEBAIHN0YXRpYyBpbnQgdmVn
YTIwX2dldF9jbG9ja19ieV90eXBlX3dpdGhfbGF0ZW5jeShzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwNCiAJCXJldCA9IC1FSU5WQUw7DQogCX0NCiANCi0JbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4
KTsNCiAJcmV0dXJuIHJldDsNCiB9DQogDQpAQCAtMjU0Miw4ICsyNTM0LDYgQEAgc3RhdGljIGlu
dCB2ZWdhMjBfc2V0X29kX3BlcmNlbnRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsDQogCWlu
dCBmZWF0dXJlX2VuYWJsZWQ7DQogCVBQQ0xLX2UgY2xrX2lkOw0KIA0KLQltdXRleF9sb2NrKCYo
c211LT5tdXRleCkpOw0KLQ0KIAlkcG1fdGFibGUgPSBzbXVfZHBtLT5kcG1fY29udGV4dDsNCiAJ
Z29sZGVuX3RhYmxlID0gc211X2RwbS0+Z29sZGVuX2RwbV9jb250ZXh0Ow0KIA0KQEAgLTI1OTMs
MTEgKzI1ODMsMTAgQEAgc3RhdGljIGludCB2ZWdhMjBfc2V0X29kX3BlcmNlbnRhZ2Uoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsDQogCX0NCiANCiAJcmV0ID0gc211X2hhbmRsZV90YXNrKHNtdSwg
c211X2RwbS0+ZHBtX2xldmVsLA0KLQkJCSAgICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VS
X1NUQVRFKTsNCisJCQkgICAgICBBTURfUFBfVEFTS19SRUFESlVTVF9QT1dFUl9TVEFURSwNCisJ
CQkgICAgICBmYWxzZSk7DQogDQogc2V0X29kX2ZhaWxlZDoNCi0JbXV0ZXhfdW5sb2NrKCYoc211
LT5tdXRleCkpOw0KLQ0KIAlyZXR1cm4gcmV0Ow0KIH0NCiANCkBAIC0yODIyLDEwICsyODExLDkg
QEAgc3RhdGljIGludCB2ZWdhMjBfb2RuX2VkaXRfZHBtX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LA0KIAl9DQogDQogCWlmICh0eXBlID09IFBQX09EX0NPTU1JVF9EUE1fVEFCTEUpIHsN
Ci0JCW11dGV4X2xvY2soJihzbXUtPm11dGV4KSk7DQogCQlyZXQgPSBzbXVfaGFuZGxlX3Rhc2so
c211LCBzbXVfZHBtLT5kcG1fbGV2ZWwsDQotCQkJCSAgICAgIEFNRF9QUF9UQVNLX1JFQURKVVNU
X1BPV0VSX1NUQVRFKTsNCi0JCW11dGV4X3VubG9jaygmKHNtdS0+bXV0ZXgpKTsNCisJCQkJICAg
ICAgQU1EX1BQX1RBU0tfUkVBREpVU1RfUE9XRVJfU1RBVEUsDQorCQkJCSAgICAgIGZhbHNlKTsN
CiAJfQ0KIA0KIAlyZXR1cm4gcmV0Ow0KLS0gDQoyLjIzLjANCg0KX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18NCmFtZC1nZnggbWFpbGluZyBsaXN0DQphbWQt
Z2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZw0KaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4DQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwphbWQtZ2Z4IG1haWxpbmcgbGlzdAphbWQtZ2Z4QGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZv
L2FtZC1nZng=
