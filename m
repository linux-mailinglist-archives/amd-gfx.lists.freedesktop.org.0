Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 904F426573
	for <lists+amd-gfx@lfdr.de>; Wed, 22 May 2019 16:12:12 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 77DEC89AAE;
	Wed, 22 May 2019 14:12:07 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from foss.arm.com (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
 by gabe.freedesktop.org (Postfix) with ESMTP id D602089998;
 Wed, 22 May 2019 11:49:19 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 7DC8180D;
 Wed, 22 May 2019 04:49:19 -0700 (PDT)
Received: from mbp (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id AE7643F575;
 Wed, 22 May 2019 04:49:13 -0700 (PDT)
Date: Wed, 22 May 2019 12:49:10 +0100
From: Catalin Marinas <catalin.marinas@arm.com>
To: Andrey Konovalov <andreyknvl@google.com>
Subject: Re: [PATCH v15 05/17] arms64: untag user pointers passed to memory
 syscalls
Message-ID: <20190522114910.emlckebwzv2qz42i@mbp>
References: <cover.1557160186.git.andreyknvl@google.com>
 <00eb4c63fefc054e2c8d626e8fedfca11d7c2600.1557160186.git.andreyknvl@google.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <00eb4c63fefc054e2c8d626e8fedfca11d7c2600.1557160186.git.andreyknvl@google.com>
User-Agent: NeoMutt/20170113 (1.7.2)
X-Mailman-Approved-At: Wed, 22 May 2019 14:12:05 +0000
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, kvm@vger.kernel.org,
 Szabolcs Nagy <Szabolcs.Nagy@arm.com>, Will Deacon <will.deacon@arm.com>,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 linux-kselftest@vger.kernel.org, Felix Kuehling <Felix.Kuehling@amd.com>,
 Vincenzo Frascino <vincenzo.frascino@arm.com>,
 Jacob Bramley <Jacob.Bramley@arm.com>, Leon Romanovsky <leon@kernel.org>,
 linux-rdma@vger.kernel.org, amd-gfx@lists.freedesktop.org,
 Dmitry Vyukov <dvyukov@google.com>, Dave Martin <Dave.Martin@arm.com>,
 Evgeniy Stepanov <eugenis@google.com>, linux-media@vger.kernel.org,
 Kevin Brodsky <kevin.brodsky@arm.com>, Kees Cook <keescook@chromium.org>,
 Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
 Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
 Alex Williamson <alex.williamson@redhat.com>,
 Mauro Carvalho Chehab <mchehab@kernel.org>,
 linux-arm-kernel@lists.infradead.org, Kostya Serebryany <kcc@google.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Yishai Hadas <yishaih@mellanox.com>, linux-kernel@vger.kernel.org,
 Jens Wiklander <jens.wiklander@linaro.org>, Lee Smith <Lee.Smith@arm.com>,
 Alexander Deucher <Alexander.Deucher@amd.com>,
 Andrew Morton <akpm@linux-foundation.org>, Robin Murphy <robin.murphy@arm.com>,
 Christian Koenig <Christian.Koenig@amd.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

T24gTW9uLCBNYXkgMDYsIDIwMTkgYXQgMDY6MzA6NTFQTSArMDIwMCwgQW5kcmV5IEtvbm92YWxv
diB3cm90ZToKPiBUaGlzIHBhdGNoIGlzIGEgcGFydCBvZiBhIHNlcmllcyB0aGF0IGV4dGVuZHMg
YXJtNjQga2VybmVsIEFCSSB0byBhbGxvdyB0bwo+IHBhc3MgdGFnZ2VkIHVzZXIgcG9pbnRlcnMg
KHdpdGggdGhlIHRvcCBieXRlIHNldCB0byBzb21ldGhpbmcgZWxzZSBvdGhlcgo+IHRoYW4gMHgw
MCkgYXMgc3lzY2FsbCBhcmd1bWVudHMuCj4gCj4gVGhpcyBwYXRjaCBhbGxvd3MgdGFnZ2VkIHBv
aW50ZXJzIHRvIGJlIHBhc3NlZCB0byB0aGUgZm9sbG93aW5nIG1lbW9yeQo+IHN5c2NhbGxzOiBi
cmssIGdldF9tZW1wb2xpY3ksIG1hZHZpc2UsIG1iaW5kLCBtaW5jb3JlLCBtbG9jaywgbWxvY2sy
LAo+IG1tYXAsIG1tYXBfcGdvZmYsIG1wcm90ZWN0LCBtcmVtYXAsIG1zeW5jLCBtdW5sb2NrLCBt
dW5tYXAsCj4gcmVtYXBfZmlsZV9wYWdlcywgc2htYXQgYW5kIHNobWR0Lgo+IAo+IFRoaXMgaXMg
ZG9uZSBieSB1bnRhZ2dpbmcgcG9pbnRlcnMgcGFzc2VkIHRvIHRoZXNlIHN5c2NhbGxzIGluIHRo
ZQo+IHByb2xvZ3VlcyBvZiB0aGVpciBoYW5kbGVycy4KCkknbGwgZ28gdGhyb3VnaCB0aGVtIG9u
ZSBieSBvbmUgdG8gc2VlIGlmIHdlIGNhbiB0aWdodGVuIHRoZSBleHBlY3RlZApBQkkgd2hpbGUg
aGF2aW5nIHRoZSBNVEUgaW4gbWluZC4KCj4gZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQva2VybmVs
L3N5cy5jIGIvYXJjaC9hcm02NC9rZXJuZWwvc3lzLmMKPiBpbmRleCBiNDQwNjVmYjE2MTYuLjkz
M2JiOWYzZDZlYyAxMDA2NDQKPiAtLS0gYS9hcmNoL2FybTY0L2tlcm5lbC9zeXMuYwo+ICsrKyBi
L2FyY2gvYXJtNjQva2VybmVsL3N5cy5jCj4gQEAgLTM1LDEwICszNSwzMyBAQCBTWVNDQUxMX0RF
RklORTYobW1hcCwgdW5zaWduZWQgbG9uZywgYWRkciwgdW5zaWduZWQgbG9uZywgbGVuLAo+ICB7
Cj4gIAlpZiAob2Zmc2V0X2luX3BhZ2Uob2ZmKSAhPSAwKQo+ICAJCXJldHVybiAtRUlOVkFMOwo+
IC0KPiArCWFkZHIgPSB1bnRhZ2dlZF9hZGRyKGFkZHIpOwo+ICAJcmV0dXJuIGtzeXNfbW1hcF9w
Z29mZihhZGRyLCBsZW4sIHByb3QsIGZsYWdzLCBmZCwgb2ZmID4+IFBBR0VfU0hJRlQpOwo+ICB9
CgpJZiB1c2VyIHBhc3NlcyBhIHRhZ2dlZCBwb2ludGVyIHRvIG1tYXAoKSBhbmQgdGhlIGFkZHJl
c3MgaXMgaG9ub3VyZWQKKG9yIE1BUF9GSVhFRCBpcyBnaXZlbiksIHdoYXQgaXMgdGhlIGV4cGVj
dGVkIHJldHVybiBwb2ludGVyPyBEb2VzIGl0Cm5lZWQgdG8gYmUgdGFnZ2VkIHdpdGggdGhlIHZh
bHVlIGZyb20gdGhlIGhpbnQ/CgpXaXRoIE1URSwgd2UgbWF5IHdhbnQgdG8gdXNlIHRoaXMgYXMg
YSByZXF1ZXN0IGZvciB0aGUgZGVmYXVsdCBjb2xvdXIgb2YKdGhlIG1hcHBlZCBwYWdlcyAoc3Rp
bGwgdW5kZXIgZGlzY3Vzc2lvbikuCgo+ICtTWVNDQUxMX0RFRklORTYoYXJtNjRfbW1hcF9wZ29m
ZiwgdW5zaWduZWQgbG9uZywgYWRkciwgdW5zaWduZWQgbG9uZywgbGVuLAo+ICsJCXVuc2lnbmVk
IGxvbmcsIHByb3QsIHVuc2lnbmVkIGxvbmcsIGZsYWdzLAo+ICsJCXVuc2lnbmVkIGxvbmcsIGZk
LCB1bnNpZ25lZCBsb25nLCBwZ29mZikKPiArewo+ICsJYWRkciA9IHVudGFnZ2VkX2FkZHIoYWRk
cik7Cj4gKwlyZXR1cm4ga3N5c19tbWFwX3Bnb2ZmKGFkZHIsIGxlbiwgcHJvdCwgZmxhZ3MsIGZk
LCBwZ29mZik7Cj4gK30KCldlIGRvbid0IGhhdmUgX19OUl9tbWFwX3Bnb2ZmIG9uIGFybTY0LgoK
PiArU1lTQ0FMTF9ERUZJTkU1KGFybTY0X21yZW1hcCwgdW5zaWduZWQgbG9uZywgYWRkciwgdW5z
aWduZWQgbG9uZywgb2xkX2xlbiwKPiArCQl1bnNpZ25lZCBsb25nLCBuZXdfbGVuLCB1bnNpZ25l
ZCBsb25nLCBmbGFncywKPiArCQl1bnNpZ25lZCBsb25nLCBuZXdfYWRkcikKPiArewo+ICsJYWRk
ciA9IHVudGFnZ2VkX2FkZHIoYWRkcik7Cj4gKwluZXdfYWRkciA9IHVudGFnZ2VkX2FkZHIobmV3
X2FkZHIpOwo+ICsJcmV0dXJuIGtzeXNfbXJlbWFwKGFkZHIsIG9sZF9sZW4sIG5ld19sZW4sIGZs
YWdzLCBuZXdfYWRkcik7Cj4gK30KClNpbWlsYXIgY29tbWVudCBhcyBmb3IgbW1hcCgpLCBkbyB3
ZSB3YW50IHRoZSB0YWcgZnJvbSBuZXdfYWRkciB0byBiZQpwcmVzZXJ2ZWQ/IEluIGFkZGl0aW9u
LCBzaG91bGQgd2UgY2hlY2sgdGhhdCB0aGUgdHdvIHRhZ3MgYXJlIGlkZW50aWNhbApvciBtcmVt
YXAoKSBzaG91bGQgYmVjb21lIGEgd2F5IHRvIHJlcGFpbnQgYSBtZW1vcnkgcmVnaW9uPwoKPiAr
U1lTQ0FMTF9ERUZJTkUyKGFybTY0X211bm1hcCwgdW5zaWduZWQgbG9uZywgYWRkciwgc2l6ZV90
LCBsZW4pCj4gK3sKPiArCWFkZHIgPSB1bnRhZ2dlZF9hZGRyKGFkZHIpOwo+ICsJcmV0dXJuIGtz
eXNfbXVubWFwKGFkZHIsIGxlbik7Cj4gK30KClRoaXMgbG9va3MgZmluZS4KCj4gK1NZU0NBTExf
REVGSU5FMShhcm02NF9icmssIHVuc2lnbmVkIGxvbmcsIGJyaykKPiArewo+ICsJYnJrID0gdW50
YWdnZWRfYWRkcihicmspOwo+ICsJcmV0dXJuIGtzeXNfYnJrKGJyayk7Cj4gK30KCkkgd29uZGVy
IHdoZXRoZXIgYnJrKCkgc2hvdWxkIHNpbXBseSBub3QgYWNjZXB0IHRhZ3MsIGFuZCBzaG91bGQg
bm90CnJldHVybiB0aGVtIChzaW1pbGFyIHRvIHRoZSBwcmN0bChQUl9TRVRfTU0pIGRpc2N1c3Np
b24pLiBXZSBjb3VsZApkb2N1bWVudCB0aGlzIGluIHRoZSBBQkkgcmVxdWlyZW1lbnRzLgoKPiAr
U1lTQ0FMTF9ERUZJTkU1KGFybTY0X2dldF9tZW1wb2xpY3ksIGludCBfX3VzZXIgKiwgcG9saWN5
LAo+ICsJCXVuc2lnbmVkIGxvbmcgX191c2VyICosIG5tYXNrLCB1bnNpZ25lZCBsb25nLCBtYXhu
b2RlLAo+ICsJCXVuc2lnbmVkIGxvbmcsIGFkZHIsIHVuc2lnbmVkIGxvbmcsIGZsYWdzKQo+ICt7
Cj4gKwlhZGRyID0gdW50YWdnZWRfYWRkcihhZGRyKTsKPiArCXJldHVybiBrc3lzX2dldF9tZW1w
b2xpY3kocG9saWN5LCBubWFzaywgbWF4bm9kZSwgYWRkciwgZmxhZ3MpOwo+ICt9Cj4gKwo+ICtT
WVNDQUxMX0RFRklORTMoYXJtNjRfbWFkdmlzZSwgdW5zaWduZWQgbG9uZywgc3RhcnQsCj4gKwkJ
c2l6ZV90LCBsZW5faW4sIGludCwgYmVoYXZpb3IpCj4gK3sKPiArCXN0YXJ0ID0gdW50YWdnZWRf
YWRkcihzdGFydCk7Cj4gKwlyZXR1cm4ga3N5c19tYWR2aXNlKHN0YXJ0LCBsZW5faW4sIGJlaGF2
aW9yKTsKPiArfQo+ICsKPiArU1lTQ0FMTF9ERUZJTkU2KGFybTY0X21iaW5kLCB1bnNpZ25lZCBs
b25nLCBzdGFydCwgdW5zaWduZWQgbG9uZywgbGVuLAo+ICsJCXVuc2lnbmVkIGxvbmcsIG1vZGUs
IGNvbnN0IHVuc2lnbmVkIGxvbmcgX191c2VyICosIG5tYXNrLAo+ICsJCXVuc2lnbmVkIGxvbmcs
IG1heG5vZGUsIHVuc2lnbmVkIGludCwgZmxhZ3MpCj4gK3sKPiArCXN0YXJ0ID0gdW50YWdnZWRf
YWRkcihzdGFydCk7Cj4gKwlyZXR1cm4ga3N5c19tYmluZChzdGFydCwgbGVuLCBtb2RlLCBubWFz
aywgbWF4bm9kZSwgZmxhZ3MpOwo+ICt9Cj4gKwo+ICtTWVNDQUxMX0RFRklORTIoYXJtNjRfbWxv
Y2ssIHVuc2lnbmVkIGxvbmcsIHN0YXJ0LCBzaXplX3QsIGxlbikKPiArewo+ICsJc3RhcnQgPSB1
bnRhZ2dlZF9hZGRyKHN0YXJ0KTsKPiArCXJldHVybiBrc3lzX21sb2NrKHN0YXJ0LCBsZW4sIFZN
X0xPQ0tFRCk7Cj4gK30KPiArCj4gK1NZU0NBTExfREVGSU5FMihhcm02NF9tbG9jazIsIHVuc2ln
bmVkIGxvbmcsIHN0YXJ0LCBzaXplX3QsIGxlbikKPiArewo+ICsJc3RhcnQgPSB1bnRhZ2dlZF9h
ZGRyKHN0YXJ0KTsKPiArCXJldHVybiBrc3lzX21sb2NrKHN0YXJ0LCBsZW4sIFZNX0xPQ0tFRCk7
Cj4gK30KPiArCj4gK1NZU0NBTExfREVGSU5FMihhcm02NF9tdW5sb2NrLCB1bnNpZ25lZCBsb25n
LCBzdGFydCwgc2l6ZV90LCBsZW4pCj4gK3sKPiArCXN0YXJ0ID0gdW50YWdnZWRfYWRkcihzdGFy
dCk7Cj4gKwlyZXR1cm4ga3N5c19tdW5sb2NrKHN0YXJ0LCBsZW4pOwo+ICt9Cj4gKwo+ICtTWVND
QUxMX0RFRklORTMoYXJtNjRfbXByb3RlY3QsIHVuc2lnbmVkIGxvbmcsIHN0YXJ0LCBzaXplX3Qs
IGxlbiwKPiArCQl1bnNpZ25lZCBsb25nLCBwcm90KQo+ICt7Cj4gKwlzdGFydCA9IHVudGFnZ2Vk
X2FkZHIoc3RhcnQpOwo+ICsJcmV0dXJuIGtzeXNfbXByb3RlY3RfcGtleShzdGFydCwgbGVuLCBw
cm90LCAtMSk7Cj4gK30KPiArCj4gK1NZU0NBTExfREVGSU5FMyhhcm02NF9tc3luYywgdW5zaWdu
ZWQgbG9uZywgc3RhcnQsIHNpemVfdCwgbGVuLCBpbnQsIGZsYWdzKQo+ICt7Cj4gKwlzdGFydCA9
IHVudGFnZ2VkX2FkZHIoc3RhcnQpOwo+ICsJcmV0dXJuIGtzeXNfbXN5bmMoc3RhcnQsIGxlbiwg
ZmxhZ3MpOwo+ICt9Cj4gKwo+ICtTWVNDQUxMX0RFRklORTMoYXJtNjRfbWluY29yZSwgdW5zaWdu
ZWQgbG9uZywgc3RhcnQsIHNpemVfdCwgbGVuLAo+ICsJCXVuc2lnbmVkIGNoYXIgX191c2VyICos
IHZlYykKPiArewo+ICsJc3RhcnQgPSB1bnRhZ2dlZF9hZGRyKHN0YXJ0KTsKPiArCXJldHVybiBr
c3lzX21pbmNvcmUoc3RhcnQsIGxlbiwgdmVjKTsKPiArfQoKVGhlc2UgbG9vayBmaW5lLgoKPiAr
U1lTQ0FMTF9ERUZJTkU1KGFybTY0X3JlbWFwX2ZpbGVfcGFnZXMsIHVuc2lnbmVkIGxvbmcsIHN0
YXJ0LAo+ICsJCXVuc2lnbmVkIGxvbmcsIHNpemUsIHVuc2lnbmVkIGxvbmcsIHByb3QsCj4gKwkJ
dW5zaWduZWQgbG9uZywgcGdvZmYsIHVuc2lnbmVkIGxvbmcsIGZsYWdzKQo+ICt7Cj4gKwlzdGFy
dCA9IHVudGFnZ2VkX2FkZHIoc3RhcnQpOwo+ICsJcmV0dXJuIGtzeXNfcmVtYXBfZmlsZV9wYWdl
cyhzdGFydCwgc2l6ZSwgcHJvdCwgcGdvZmYsIGZsYWdzKTsKPiArfQoKV2hpbGUgdGhpcyBoYXMg
YmVlbiBkZXByZWNhdGVkIGZvciBzb21lIHRpbWUsIEkgcHJlc3VtZSB1c2VyIHNwYWNlIHN0aWxs
Cmludm9rZXMgaXQ/Cgo+ICtTWVNDQUxMX0RFRklORTMoYXJtNjRfc2htYXQsIGludCwgc2htaWQs
IGNoYXIgX191c2VyICosIHNobWFkZHIsIGludCwgc2htZmxnKQo+ICt7Cj4gKwlzaG1hZGRyID0g
dW50YWdnZWRfYWRkcihzaG1hZGRyKTsKPiArCXJldHVybiBrc3lzX3NobWF0KHNobWlkLCBzaG1h
ZGRyLCBzaG1mbGcpOwo+ICt9Cj4gKwo+ICtTWVNDQUxMX0RFRklORTEoYXJtNjRfc2htZHQsIGNo
YXIgX191c2VyICosIHNobWFkZHIpCj4gK3sKPiArCXNobWFkZHIgPSB1bnRhZ2dlZF9hZGRyKHNo
bWFkZHIpOwo+ICsJcmV0dXJuIGtzeXNfc2htZHQoc2htYWRkcik7Cj4gK30KCkRvIHdlIGFjdHVh
bGx5IHdhbnQgdG8gYWxsb3cgc2hhcmVkIHRhZ2dlZCBtZW1vcnk/IFdobydzIGdvaW5nIHRvIHRh
ZwppdD8gSWYgbm90LCB3ZSBjYW4gZG9jdW1lbnQgaXQgYXMgbm90IHN1cHBvcnRlZC4KCi0tIApD
YXRhbGluCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFt
ZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8v
bGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
