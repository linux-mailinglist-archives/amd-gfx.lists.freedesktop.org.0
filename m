Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CC6D2DC7E7
	for <lists+amd-gfx@lfdr.de>; Fri, 18 Oct 2019 16:57:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EDEA96EB66;
	Fri, 18 Oct 2019 14:57:20 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM05-CO1-obe.outbound.protection.outlook.com
 (mail-eopbgr720089.outbound.protection.outlook.com [40.107.72.89])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A11FC6EB66
 for <amd-gfx@lists.freedesktop.org>; Fri, 18 Oct 2019 14:57:19 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=U9Ko/BMwB4jUaYtUECBcg59lIY6CyqBO19x/70MWGGpOM9qwCbCb304QxdNuXUwGb0ZiP63wimIIgfnpxJoP6K0lKJZ+km5i82ogFRMANGCJ1gtSUpF/JIVZaWPxfBtkl7aPQU6LrJZSRbBuKoIVwJqZ/JzBAuWQesalp0NKToq5Eq91OsxlcNsVMGMjBsuWK4TnrvHOvtvPJO/dp8W8T/u77XyYtAtL0xQGyWgnd0ZHAu/j8zTm5AV9+Cw1+k7wofTYdZUWp4/dxHaBbuWYgrvKu+IBKO8A2b03ggSFM6OizcKUb/Mr0MTmxFIvcuMpwdJ/r62ZAdeNbk6mTlsarw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=cIjveyhmHj80VNFXLJvbbMmlVPFal4qE2Y62fre8CJQ=;
 b=a9M6caVlHloIuMuhqRDXFz5tVLhxRxAJHadxHg/xRpqaMaarznvXyxYsL57ZleHM6mkgScXZNG0gxtaFdGguna0ITVvVo8Z3F5bpIGMBA3hlKFpMpwLLFO5LHJuJTddi9ofWm8K2lfR+g8ipGYB4SvLMTGguxhNLXr8WWgWZ3vFnvKd0B7B004jV6yGCkPErEtW4MlanUEFOBos9qlLwqxyJi7q5QRSrd4OZWth/ran5zUengyPN6jgFybSaMeVzkuRgFFFi0fRSMYrz4+CZEf8mLWDd75g6l9ZvjDuf+71vVL0fodmirYxNOxhldG5yrdu+9IzVI4O/jGCVh/diSg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from MN2PR12MB3344.namprd12.prod.outlook.com (20.178.241.74) by
 MN2PR12MB3904.namprd12.prod.outlook.com (10.255.237.31) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2347.16; Fri, 18 Oct 2019 14:57:16 +0000
Received: from MN2PR12MB3344.namprd12.prod.outlook.com
 ([fe80::435:bdca:bac1:a26d]) by MN2PR12MB3344.namprd12.prod.outlook.com
 ([fe80::435:bdca:bac1:a26d%5]) with mapi id 15.20.2367.019; Fri, 18 Oct 2019
 14:57:16 +0000
From: "Quan, Evan" <Evan.Quan@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 1/3] drm/amd/powerplay: add lock protection for swSMU APIs V2
Thread-Topic: [PATCH 1/3] drm/amd/powerplay: add lock protection for swSMU
 APIs V2
Thread-Index: AQHVhcRUn020zu7xuU2OeAHRCXD7Kw==
Date: Fri, 18 Oct 2019 14:57:15 +0000
Message-ID: <20191018145651.10987-1-evan.quan@amd.com>
Accept-Language: en-US, zh-CN
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: HK2PR04CA0069.apcprd04.prod.outlook.com
 (2603:1096:202:15::13) To MN2PR12MB3344.namprd12.prod.outlook.com
 (2603:10b6:208:c5::10)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.23.0
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: aaa33df8-d46a-4dea-6e67-08d753db76b0
x-ms-office365-filtering-ht: Tenant
x-ms-traffictypediagnostic: MN2PR12MB3904:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <MN2PR12MB3904B72F31DAC224C5A35969E46C0@MN2PR12MB3904.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:3826;
x-forefront-prvs: 01949FE337
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(136003)(366004)(376002)(396003)(346002)(39860400002)(189003)(199004)(99286004)(71200400001)(8676002)(81166006)(476003)(71190400001)(66574012)(486006)(2906002)(478600001)(6116002)(81156014)(52116002)(3846002)(1076003)(30864003)(6506007)(386003)(2616005)(8936002)(5660300002)(6916009)(316002)(102836004)(26005)(14454004)(86362001)(54906003)(186003)(66066001)(36756003)(50226002)(6512007)(7736002)(2351001)(66446008)(66946007)(305945005)(6486002)(4326008)(25786009)(5640700003)(14444005)(256004)(66476007)(64756008)(6436002)(2501003)(66556008)(559001)(569006);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB3904;
 H:MN2PR12MB3344.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; MX:1; A:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: rP1fH5VvRS7zdj4b+XidNdy1SscNrQK7VQml25/toE3g8aPpFJnvIz93qEk1nTwP/kd9FBXcdW/AzQMR9EpXrlBwEBbJOWNpUSDAcq/VhsSK6I8R1rtEFaAzn9NK39UY+/huOUa3hgd+EIvo4MGbiqHJ5mb/XPVqWopNmr6eBIPp9umfV9k8qg10WasUIXgdaqo6P9xUnPR5fHnZAOz+eiMXNdzj25v6wF/b8TF1tS2u2z5RAuMcUmMEDLVDKI2A5WgHAqWbWB2puzF/e/CN3pwO5+devV+cYHZKebwmiWZOjZ/dTi6l6IlkNj9o4IRfAc9nk08JKu1gDWf8eSAgju/K9Yuxn2xK4GT7GdAbP+jeH2qqEqMwNfljZ7uwJGlj/nc3EhdeaT8cLexYKfQwAi/imjknsXQAIly4oqPzyNE=
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: aaa33df8-d46a-4dea-6e67-08d753db76b0
X-MS-Exchange-CrossTenant-originalarrivaltime: 18 Oct 2019 14:57:16.0536 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: QpExJuAesECwqWQapgcooGK4Y7isMzQGMdKlAcV6rbzT9hSDEEXajZ6/Vg4UK09Q
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3904
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=cIjveyhmHj80VNFXLJvbbMmlVPFal4qE2Y62fre8CJQ=;
 b=A6Oh2H5y4c0q+GHXWOv8QHS152x5JjSQfxZjZ8Dq7IFj2QwJhBHRv4aAt929h3HKrH4sLJbF37G/grDPL4ooDkPu0ZVFSw7FlZ3ZpQX+IiSoYfnQMUl81VCfE+07av0WM4aULPlluSD7qGPzLZyawjOhX/6jG3dFZL6eJKc///M=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Evan.Quan@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Deucher, Alexander" <Alexander.Deucher@amd.com>, "Grodzovsky,
 Andrey" <Andrey.Grodzovsky@amd.com>, "Quan, Evan" <Evan.Quan@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VGhpcyBpcyBhIHF1aWNrIGFuZCBsb3cgcmlzayBmaXguIFRob3NlIEFQSXMgd2hpY2gKYXJlIGV4
cG9zZWQgdG8gb3RoZXIgSVBzIG9yIHRvIHN1cHBvcnQgc3lzZnMvaHdtb24KaW50ZXJmYWNlcyBv
ciBEQUwgd2lsbCBoYXZlIGxvY2sgcHJvdGVjdGlvbi4gTWVhbndoaWxlCm5vIGxvY2sgcHJvdGVj
dGlvbiBpcyBlbmZvcmNlZCBmb3Igc3dTTVUgaW50ZXJuYWwgdXNlZApBUElzLiBGdXR1cmUgb3B0
aW1pemF0aW9uIGlzIG5lZWRlZC4KClYyOiBzdHJpcCB0aGUgbG9jayBwcm90ZWN0aW9uIGZvciBh
bGwgc3dTTVUgaW50ZXJuYWwgQVBJcwoKQ2hhbmdlLUlkOiBJODM5MjY1MmM5ZGExNTc0YTg1YWNk
OWIxNzFmMDQzODBmMzYzMDg1MgpTaWduZWQtb2ZmLWJ5OiBFdmFuIFF1YW4gPGV2YW4ucXVhbkBh
bWQuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kcG0uYyAgICAg
ICB8ICAgNiArLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5oICAgICAg
IHwgICA2IC0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jICAgICAgICB8
ICAyMyArLQogLi4uL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG1fcHBfc211LmMgIHwg
ICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hbWRncHVfc211LmMgICAgfCA2
OTYgKysrKysrKysrKysrKysrKy0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hcmN0
dXJ1c19wcHQuYyAgfCAgIDMgLQogLi4uL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1
X3NtdS5oICAgIHwgMTYzICsrLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L25hdmkx
MF9wcHQuYyAgICB8ICAxNSArLQogZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvcmVub2ly
X3BwdC5jICAgIHwgIDE0ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9zbXVfdjEx
XzAuYyAgICAgfCAgMjIgKy0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTJf
MC5jICAgICB8ICAgMyAtCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS92ZWdhMjBfcHB0
LmMgICAgfCAgMjAgKy0KIDEyIGZpbGVzIGNoYW5nZWQsIDc3NyBpbnNlcnRpb25zKCspLCAxOTgg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X2RwbS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5jCmluZGV4
IDI2MzI2NTI0NWUxOS4uMjhkMzI3MjUyODViIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfZHBtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X2RwbS5jCkBAIC05MTIsNyArOTEyLDggQEAgaW50IGFtZGdwdV9kcG1fZ2V0X3NjbGso
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIGJvb2wgbG93KQogCWlmIChpc19zdXBwb3J0X3N3
X3NtdShhZGV2KSkgewogCQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKCZhZGV2LT5zbXUs
IFNNVV9HRlhDTEssCiAJCQkJCSAgICAgbG93ID8gJmNsa19mcmVxIDogTlVMTCwKLQkJCQkJICAg
ICAhbG93ID8gJmNsa19mcmVxIDogTlVMTCk7CisJCQkJCSAgICAgIWxvdyA/ICZjbGtfZnJlcSA6
IE5VTEwsCisJCQkJCSAgICAgdHJ1ZSk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gMDsKIAkJcmV0
dXJuIGNsa19mcmVxICogMTAwOwpAQCAtOTMwLDcgKzkzMSw4IEBAIGludCBhbWRncHVfZHBtX2dl
dF9tY2xrKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBib29sIGxvdykKIAlpZiAoaXNfc3Vw
cG9ydF9zd19zbXUoYWRldikpIHsKIAkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZSgmYWRl
di0+c211LCBTTVVfVUNMSywKIAkJCQkJICAgICBsb3cgPyAmY2xrX2ZyZXEgOiBOVUxMLAotCQkJ
CQkgICAgICFsb3cgPyAmY2xrX2ZyZXEgOiBOVUxMKTsKKwkJCQkJICAgICAhbG93ID8gJmNsa19m
cmVxIDogTlVMTCwKKwkJCQkJICAgICB0cnVlKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiAwOwog
CQlyZXR1cm4gY2xrX2ZyZXEgKiAxMDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfZHBtLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
ZHBtLmgKaW5kZXggMWM1YzBmZDc2ZGJmLi4yY2ZiNjc3MjcyYWYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kcG0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfZHBtLmgKQEAgLTI5OCwxMiArMjk4LDYgQEAgZW51bSBhbWRncHVf
cGNpZV9nZW4gewogI2RlZmluZSBhbWRncHVfZHBtX2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKGFk
ZXYpIFwKIAkJKChhZGV2KS0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfY3VycmVudF9wb3dlcl9z
dGF0ZSgoYWRldiktPnBvd2VycGxheS5wcF9oYW5kbGUpKQogCi0jZGVmaW5lIGFtZGdwdV9zbXVf
Z2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoYWRldikgXAotCQkoKGFkZXYpLT5zbXUucHB0X2Z1bmNz
LT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZSgmKChhZGV2KS0+c211KSkpCi0KLSNkZWZpbmUgYW1k
Z3B1X3NtdV9zZXRfcG93ZXJfc3RhdGUoYWRldikgXAotCQkoKGFkZXYpLT5zbXUucHB0X2Z1bmNz
LT5zZXRfcG93ZXJfc3RhdGUoJigoYWRldiktPnNtdSkpKQotCiAjZGVmaW5lIGFtZGdwdV9kcG1f
Z2V0X3BwX251bV9zdGF0ZXMoYWRldiwgZGF0YSkgXAogCQkoKGFkZXYpLT5wb3dlcnBsYXkucHBf
ZnVuY3MtPmdldF9wcF9udW1fc3RhdGVzKChhZGV2KS0+cG93ZXJwbGF5LnBwX2hhbmRsZSwgZGF0
YSkpCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5j
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMKaW5kZXggYzUwZDVmMWU3
NWU1Li4zNmYzNmIzNTAwMGQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5j
CkBAIC0yMTEsNyArMjExLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9kcG1fc3RhdGUo
c3RydWN0IGRldmljZSAqZGV2LAogCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7CiAJ
CWlmIChhZGV2LT5zbXUucHB0X2Z1bmNzLT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZSkKLQkJCXBt
ID0gYW1kZ3B1X3NtdV9nZXRfY3VycmVudF9wb3dlcl9zdGF0ZShhZGV2KTsKKwkJCXBtID0gc211
X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKCZhZGV2LT5zbXUpOwogCQllbHNlCiAJCQlwbSA9IGFk
ZXYtPnBtLmRwbS51c2VyX3N0YXRlOwogCX0gZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1
bmNzLT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZSkgewpAQCAtOTU3LDcgKzk1Nyw3IEBAIHN0YXRp
YyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3NjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCQly
ZXR1cm4gcmV0OwogCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQotCQlyZXQgPSBzbXVf
Zm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfU0NMSywgbWFzayk7CisJCXJldCA9IHNt
dV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TQ0xLLCBtYXNrLCB0cnVlKTsKIAll
bHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmZvcmNlX2Nsb2NrX2xldmVsKQogCQly
ZXQgPSBhbWRncHVfZHBtX2ZvcmNlX2Nsb2NrX2xldmVsKGFkZXYsIFBQX1NDTEssIG1hc2spOwog
CkBAIC0xMDA0LDcgKzEwMDQsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9t
Y2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAogCWlmIChpc19zdXBwb3J0
X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwg
U01VX01DTEssIG1hc2spOworCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211
LCBTTVVfTUNMSywgbWFzaywgdHJ1ZSk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1
bmNzLT5mb3JjZV9jbG9ja19sZXZlbCkKIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9ja19s
ZXZlbChhZGV2LCBQUF9NQ0xLLCBtYXNrKTsKIApAQCAtMTA0NCw3ICsxMDQ0LDcgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJ
cmV0dXJuIHJldDsKIAogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211
X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1NPQ0NMSywgbWFzayk7CisJCXJldCA9
IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TT0NDTEssIG1hc2ssIHRydWUp
OwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwp
CiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfY2xvY2tfbGV2ZWwoYWRldiwgUFBfU09DQ0xLLCBt
YXNrKTsKIApAQCAtMTA4NCw3ICsxMDg0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9w
cF9kcG1fZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAKIAlpZiAoaXNf
c3VwcG9ydF9zd19zbXUoYWRldikpCi0JCXJldCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2
LT5zbXUsIFNNVV9GQ0xLLCBtYXNrKTsKKwkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFk
ZXYtPnNtdSwgU01VX0ZDTEssIG1hc2ssIHRydWUpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxh
eS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpCiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2Vf
Y2xvY2tfbGV2ZWwoYWRldiwgUFBfRkNMSywgbWFzayk7CiAKQEAgLTExMjQsNyArMTEyNCw3IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0IGRldmljZSAq
ZGV2LAogCQlyZXR1cm4gcmV0OwogCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQotCQly
ZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRENFRkNMSywgbWFzayk7
CisJCXJldCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9EQ0VGQ0xLLCBt
YXNrLCB0cnVlKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmZvcmNlX2Ns
b2NrX2xldmVsKQogCQlyZXQgPSBhbWRncHVfZHBtX2ZvcmNlX2Nsb2NrX2xldmVsKGFkZXYsIFBQ
X0RDRUZDTEssIG1hc2spOwogCkBAIC0xMTY0LDcgKzExNjQsNyBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfc2V0X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsK
IAogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211X2ZvcmNlX2Nsa19s
ZXZlbHMoJmFkZXYtPnNtdSwgU01VX1BDSUUsIG1hc2spOworCQlyZXQgPSBzbXVfZm9yY2VfY2xr
X2xldmVscygmYWRldi0+c211LCBTTVVfUENJRSwgbWFzaywgdHJ1ZSk7CiAJZWxzZSBpZiAoYWRl
di0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9jbG9ja19sZXZlbCkKIAkJcmV0ID0gYW1kZ3B1
X2RwbV9mb3JjZV9jbG9ja19sZXZlbChhZGV2LCBQUF9QQ0lFLCBtYXNrKTsKIApAQCAtMTM1Niw3
ICsxMzU2LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9wb3dlcl9wcm9maWxlX21v
ZGUoc3RydWN0IGRldmljZSAqZGV2LAogCX0KIAlwYXJhbWV0ZXJbcGFyYW1ldGVyX3NpemVdID0g
cHJvZmlsZV9tb2RlOwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211
X3NldF9wb3dlcl9wcm9maWxlX21vZGUoJmFkZXYtPnNtdSwgcGFyYW1ldGVyLCBwYXJhbWV0ZXJf
c2l6ZSk7CisJCXJldCA9IHNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKCZhZGV2LT5zbXUsIHBh
cmFtZXRlciwgcGFyYW1ldGVyX3NpemUsIHRydWUpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxh
eS5wcF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkKIAkJcmV0ID0gYW1kZ3B1X2RwbV9z
ZXRfcG93ZXJfcHJvZmlsZV9tb2RlKGFkZXYsIHBhcmFtZXRlciwgcGFyYW1ldGVyX3NpemUpOwog
CWlmICghcmV0KQpAQCAtMjA2NSw3ICsyMDY1LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3
bW9uX3Nob3dfcG93ZXJfY2FwX21heChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdWludDMyX3QgbGlt
aXQgPSAwOwogCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7Ci0JCXNtdV9nZXRfcG93
ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCB0cnVlKTsKKwkJc211X2dldF9wb3dlcl9saW1p
dCgmYWRldi0+c211LCAmbGltaXQsIHRydWUsIHRydWUpOwogCQlyZXR1cm4gc25wcmludGYoYnVm
LCBQQUdFX1NJWkUsICIldVxuIiwgbGltaXQgKiAxMDAwMDAwKTsKIAl9IGVsc2UgaWYgKGFkZXYt
PnBvd2VycGxheS5wcF9mdW5jcyAmJiBhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9wb3dl
cl9saW1pdCkgewogCQlhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9wb3dlcl9saW1pdChh
ZGV2LT5wb3dlcnBsYXkucHBfaGFuZGxlLCAmbGltaXQsIHRydWUpOwpAQCAtMjA4Myw3ICsyMDgz
LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2FwKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAl1aW50MzJfdCBsaW1pdCA9IDA7CiAKIAlpZiAoaXNfc3VwcG9ydF9zd19z
bXUoYWRldikpIHsKLQkJc211X2dldF9wb3dlcl9saW1pdCgmYWRldi0+c211LCAmbGltaXQsIGZh
bHNlKTsKKwkJc211X2dldF9wb3dlcl9saW1pdCgmYWRldi0+c211LCAmbGltaXQsIGZhbHNlLCAg
dHJ1ZSk7CiAJCXJldHVybiBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIiV1XG4iLCBsaW1pdCAq
IDEwMDAwMDApOwogCX0gZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzICYmIGFkZXYt
PnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X3Bvd2VyX2xpbWl0KSB7CiAJCWFkZXYtPnBvd2VycGxh
eS5wcF9mdW5jcy0+Z2V0X3Bvd2VyX2xpbWl0KGFkZXYtPnBvd2VycGxheS5wcF9oYW5kbGUsICZs
aW1pdCwgZmFsc2UpOwpAQCAtMzA2NCw3ICszMDY0LDggQEAgdm9pZCBhbWRncHVfcG1fY29tcHV0
ZV9jbG9ja3Moc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCXN0cnVjdCBzbXVfZHBtX2Nv
bnRleHQgKnNtdV9kcG0gPSAmYWRldi0+c211LnNtdV9kcG07CiAJCXNtdV9oYW5kbGVfdGFzaygm
YWRldi0+c211LAogCQkJCXNtdV9kcG0tPmRwbV9sZXZlbCwKLQkJCQlBTURfUFBfVEFTS19ESVNQ
TEFZX0NPTkZJR19DSEFOR0UpOworCQkJCUFNRF9QUF9UQVNLX0RJU1BMQVlfQ09ORklHX0NIQU5H
RSwKKwkJCQl0cnVlKTsKIAl9IGVsc2UgewogCQlpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNz
LT5kaXNwYXRjaF90YXNrcykgewogCQkJaWYgKCFhbWRncHVfZGV2aWNlX2hhc19kY19zdXBwb3J0
KGFkZXYpKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1
X2RtL2FtZGdwdV9kbV9wcF9zbXUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRn
cHVfZG0vYW1kZ3B1X2RtX3BwX3NtdS5jCmluZGV4IDEzNTIwMTk2NDhjMC4uZWU5OTE1ZDYxY2Yx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2FtZGdw
dV9kbV9wcF9zbXUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2Rt
L2FtZGdwdV9kbV9wcF9zbXUuYwpAQCAtODc2LDcgKzg3Niw3IEBAIGVudW0gcHBfc211X3N0YXR1
cyBwcF9udl9nZXRfbWF4aW11bV9zdXN0YWluYWJsZV9jbG9ja3MoCiAJaWYgKCFzbXUtPmZ1bmNz
LT5nZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYykKIAkJcmV0dXJuIFBQX1NNVV9SRVNV
TFRfVU5TVVBQT1JURUQ7CiAKLQlpZiAoIXNtdS0+ZnVuY3MtPmdldF9tYXhfc3VzdGFpbmFibGVf
Y2xvY2tzX2J5X2RjKHNtdSwgbWF4X2Nsb2NrcykpCisJaWYgKCFzbXVfZ2V0X21heF9zdXN0YWlu
YWJsZV9jbG9ja3NfYnlfZGMoc211LCBtYXhfY2xvY2tzKSkKIAkJcmV0dXJuIFBQX1NNVV9SRVNV
TFRfT0s7CiAKIAlyZXR1cm4gUFBfU01VX1JFU1VMVF9GQUlMOwpAQCAtODk1LDcgKzg5NSw3IEBA
IGVudW0gcHBfc211X3N0YXR1cyBwcF9udl9nZXRfdWNsa19kcG1fc3RhdGVzKHN0cnVjdCBwcF9z
bXUgKnBwLAogCWlmICghc211LT5wcHRfZnVuY3MtPmdldF91Y2xrX2RwbV9zdGF0ZXMpCiAJCXJl
dHVybiBQUF9TTVVfUkVTVUxUX1VOU1VQUE9SVEVEOwogCi0JaWYgKCFzbXUtPnBwdF9mdW5jcy0+
Z2V0X3VjbGtfZHBtX3N0YXRlcyhzbXUsCisJaWYgKCFzbXVfZ2V0X3VjbGtfZHBtX3N0YXRlcyhz
bXUsCiAJCQljbG9ja192YWx1ZXNfaW5fa2h6LCBudW1fc3RhdGVzKSkKIAkJcmV0dXJuIFBQX1NN
VV9SRVNVTFRfT0s7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L2FtZGdwdV9zbXUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUu
YwppbmRleCAyNmNhY2M4OTlkZmUuLjA4NDFkOGM3OWU1YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUuYwpAQCAtNjcsNiArNjcsOCBAQCBzaXplX3Qgc211X3N5
c19nZXRfcHBfZmVhdHVyZV9tYXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBjaGFyICpidWYp
CiAJdWludDMyX3Qgc29ydF9mZWF0dXJlW1NNVV9GRUFUVVJFX0NPVU5UXTsKIAl1aW50NjRfdCBo
d19mZWF0dXJlX2NvdW50ID0gMDsKIAorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCiAJcmV0
ID0gc211X2ZlYXR1cmVfZ2V0X2VuYWJsZWRfbWFzayhzbXUsIGZlYXR1cmVfbWFzaywgMik7CiAJ
aWYgKHJldCkKIAkJZ290byBmYWlsZWQ7CkBAIC05Miw2ICs5NCw4IEBAIHNpemVfdCBzbXVfc3lz
X2dldF9wcF9mZWF0dXJlX21hc2soc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNoYXIgKmJ1ZikK
IAl9CiAKIGZhaWxlZDoKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCiAJcmV0dXJuIHNp
emU7CiB9CiAKQEAgLTE0OSw5ICsxNTMsMTEgQEAgaW50IHNtdV9zeXNfc2V0X3BwX2ZlYXR1cmVf
bWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDY0X3QgbmV3X21hc2spCiAJdWludDY0
X3QgZmVhdHVyZV8yX2Rpc2FibGVkID0gMDsKIAl1aW50NjRfdCBmZWF0dXJlX2VuYWJsZXMgPSAw
OwogCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKIAlyZXQgPSBzbXVfZmVhdHVyZV9nZXRf
ZW5hYmxlZF9tYXNrKHNtdSwgZmVhdHVyZV9tYXNrLCAyKTsKIAlpZiAocmV0KQotCQlyZXR1cm4g
cmV0OworCQlnb3RvIG91dDsKIAogCWZlYXR1cmVfZW5hYmxlcyA9ICgodWludDY0X3QpZmVhdHVy
ZV9tYXNrWzFdIDw8IDMyIHwgKHVpbnQ2NF90KWZlYXR1cmVfbWFza1swXSk7CiAKQEAgLTE2MSwx
NCArMTY3LDE3IEBAIGludCBzbXVfc3lzX3NldF9wcF9mZWF0dXJlX21hc2soc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIHVpbnQ2NF90IG5ld19tYXNrKQogCWlmIChmZWF0dXJlXzJfZW5hYmxlZCkg
ewogCQlyZXQgPSBzbXVfZmVhdHVyZV91cGRhdGVfZW5hYmxlX3N0YXRlKHNtdSwgZmVhdHVyZV8y
X2VuYWJsZWQsIHRydWUpOwogCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKKwkJCWdvdG8gb3V0
OwogCX0KIAlpZiAoZmVhdHVyZV8yX2Rpc2FibGVkKSB7CiAJCXJldCA9IHNtdV9mZWF0dXJlX3Vw
ZGF0ZV9lbmFibGVfc3RhdGUoc211LCBmZWF0dXJlXzJfZGlzYWJsZWQsIGZhbHNlKTsKIAkJaWYg
KHJldCkKLQkJCXJldHVybiByZXQ7CisJCQlnb3RvIG91dDsKIAl9CiAKK291dDoKKwltdXRleF91
bmxvY2soJnNtdS0+bXV0ZXgpOworCiAJcmV0dXJuIHJldDsKIH0KIApAQCAtMjU0LDcgKzI2Myw3
IEBAIGludCBzbXVfc2V0X2hhcmRfZnJlcV9yYW5nZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwg
ZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsCiB9CiAKIGludCBzbXVfZ2V0X2RwbV9mcmVxX3Jh
bmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwK
LQkJCSAgIHVpbnQzMl90ICptaW4sIHVpbnQzMl90ICptYXgpCisJCQkgICB1aW50MzJfdCAqbWlu
LCB1aW50MzJfdCAqbWF4LCBib29sIGxvY2tfbmVlZGVkKQogewogCXVpbnQzMl90IGNsb2NrX2xp
bWl0OwogCWludCByZXQgPSAwOwpAQCAtMjYyLDYgKzI3MSw5IEBAIGludCBzbXVfZ2V0X2RwbV9m
cmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtf
dHlwZSwKIAlpZiAoIW1pbiAmJiAhbWF4KQogCQlyZXR1cm4gLUVJTlZBTDsKIAorCWlmIChsb2Nr
X25lZWRlZCkKKwkJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKIAlpZiAoIXNtdV9jbGtfZHBt
X2lzX2VuYWJsZWQoc211LCBjbGtfdHlwZSkpIHsKIAkJc3dpdGNoIChjbGtfdHlwZSkgewogCQlj
YXNlIFNNVV9NQ0xLOgpAQCAtMjg1LDE0ICsyOTcsMTcgQEAgaW50IHNtdV9nZXRfZHBtX2ZyZXFf
cmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBl
LAogCQkJKm1pbiA9IGNsb2NrX2xpbWl0IC8gMTAwOwogCQlpZiAobWF4KQogCQkJKm1heCA9IGNs
b2NrX2xpbWl0IC8gMTAwOwotCi0JCXJldHVybiAwOworCX0gZWxzZSB7CisJCS8qCisJCSAqIFRv
ZG86IFVzZSBlYWNoIGFzaWMoQVNJQ19wcHQgZnVuY3MpIGNvbnRyb2wgdGhlIGNhbGxiYWNrcyBl
eHBvc2VkIHRvIHRoZQorCQkgKiBjb3JlIGRyaXZlciBhbmQgdGhlbiBoYXZlIGhlbHBlcnMgZm9y
IHN0dWZmIHRoYXQgaXMgY29tbW9uKFNNVV92MTFfeCB8IFNNVV92MTJfeCBmdW5jcykuCisJCSAq
LworCQlyZXQgPSBzbXVfZ2V0X2RwbV91bHRpbWF0ZV9mcmVxKHNtdSwgY2xrX3R5cGUsIG1pbiwg
bWF4KTsKIAl9Ci0JLyoKLQkgKiBUb2RvOiBVc2UgZWFjaCBhc2ljKEFTSUNfcHB0IGZ1bmNzKSBj
b250cm9sIHRoZSBjYWxsYmFja3MgZXhwb3NlZCB0byB0aGUKLQkgKiBjb3JlIGRyaXZlciBhbmQg
dGhlbiBoYXZlIGhlbHBlcnMgZm9yIHN0dWZmIHRoYXQgaXMgY29tbW9uKFNNVV92MTFfeCB8IFNN
VV92MTJfeCBmdW5jcykuCi0JICovCi0JcmV0ID0gc211X2dldF9kcG1fdWx0aW1hdGVfZnJlcShz
bXUsIGNsa190eXBlLCBtaW4sIG1heCk7CisKKwlpZiAobG9ja19uZWVkZWQpCisJCW11dGV4X3Vu
bG9jaygmc211LT5tdXRleCk7CisKIAlyZXR1cm4gcmV0OwogfQogCkBAIC0zNjksNiArMzg0LDgg
QEAgaW50IHNtdV9kcG1fc2V0X3Bvd2VyX2dhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVp
bnQzMl90IGJsb2NrX3R5cGUsCiB7CiAJaW50IHJldCA9IDA7CiAKKwltdXRleF9sb2NrKCZzbXUt
Pm11dGV4KTsKKwogCXN3aXRjaCAoYmxvY2tfdHlwZSkgewogCWNhc2UgQU1EX0lQX0JMT0NLX1RZ
UEVfVVZEOgogCQlyZXQgPSBzbXVfZHBtX3NldF91dmRfZW5hYmxlKHNtdSwgZ2F0ZSk7CkBAIC0z
ODYsMTMgKzQwMyw5IEBAIGludCBzbXVfZHBtX3NldF9wb3dlcl9nYXRlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCB1aW50MzJfdCBibG9ja190eXBlLAogCQlicmVhazsKIAl9CiAKLQlyZXR1cm4g
cmV0OwotfQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKLWVudW0gYW1kX3BtX3N0YXRl
X3R5cGUgc211X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
KQotewotCS8qIG5vdCBzdXBwb3J0IHBvd2VyIHN0YXRlICovCi0JcmV0dXJuIFBPV0VSX1NUQVRF
X1RZUEVfREVGQVVMVDsKKwlyZXR1cm4gcmV0OwogfQogCiBpbnQgc211X2dldF9wb3dlcl9udW1f
c3RhdGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LApAQCAtNTIwLDE2ICs1MzMsMjMgQEAgYm9v
bCBpc19zdXBwb3J0X3N3X3NtdV94Z21pKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogaW50
IHNtdV9zeXNfZ2V0X3BwX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB2b2lkICoqdGFi
bGUpCiB7CiAJc3RydWN0IHNtdV90YWJsZV9jb250ZXh0ICpzbXVfdGFibGUgPSAmc211LT5zbXVf
dGFibGU7CisJdWludDMyX3QgcG93ZXJwbGF5X3RhYmxlX3NpemU7CiAKIAlpZiAoIXNtdV90YWJs
ZS0+cG93ZXJfcGxheV90YWJsZSAmJiAhc211X3RhYmxlLT5oYXJkY29kZV9wcHRhYmxlKQogCQly
ZXR1cm4gLUVJTlZBTDsKIAorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCiAJaWYgKHNtdV90
YWJsZS0+aGFyZGNvZGVfcHB0YWJsZSkKIAkJKnRhYmxlID0gc211X3RhYmxlLT5oYXJkY29kZV9w
cHRhYmxlOwogCWVsc2UKIAkJKnRhYmxlID0gc211X3RhYmxlLT5wb3dlcl9wbGF5X3RhYmxlOwog
Ci0JcmV0dXJuIHNtdV90YWJsZS0+cG93ZXJfcGxheV90YWJsZV9zaXplOworCXBvd2VycGxheV90
YWJsZV9zaXplID0gc211X3RhYmxlLT5wb3dlcl9wbGF5X3RhYmxlX3NpemU7CisKKwltdXRleF91
bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHBvd2VycGxheV90YWJsZV9zaXplOwogfQog
CiBpbnQgc211X3N5c19zZXRfcHBfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsICB2b2lk
ICpidWYsIHNpemVfdCBzaXplKQpAQCAtNTU2LDE0ICs1NzYsMTEgQEAgaW50IHNtdV9zeXNfc2V0
X3BwX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCAgdm9pZCAqYnVmLCBzaXplX3Qgc2l6
ZSkKIAltZW1jcHkoc211X3RhYmxlLT5oYXJkY29kZV9wcHRhYmxlLCBidWYsIHNpemUpOwogCXNt
dV90YWJsZS0+cG93ZXJfcGxheV90YWJsZSA9IHNtdV90YWJsZS0+aGFyZGNvZGVfcHB0YWJsZTsK
IAlzbXVfdGFibGUtPnBvd2VyX3BsYXlfdGFibGVfc2l6ZSA9IHNpemU7Ci0JbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsKIAogCXJldCA9IHNtdV9yZXNldChzbXUpOwogCWlmIChyZXQpCiAJCXBy
X2luZm8oInNtdSByZXNldCBmYWlsZWQsIHJldCA9ICVkXG4iLCByZXQpOwogCi0JcmV0dXJuIHJl
dDsKLQogZmFpbGVkOgogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAJcmV0dXJuIHJldDsK
QEAgLTcyNiwxMSArNzQzLDEwIEBAIHN0YXRpYyBpbnQgc211X2xhdGVfaW5pdCh2b2lkICpoYW5k
bGUpCiAJaWYgKCFzbXUtPnBtX2VuYWJsZWQpCiAJCXJldHVybiAwOwogCi0JbXV0ZXhfbG9jaygm
c211LT5tdXRleCk7CiAJc211X2hhbmRsZV90YXNrKCZhZGV2LT5zbXUsCiAJCQlzbXUtPnNtdV9k
cG0uZHBtX2xldmVsLAotCQkJQU1EX1BQX1RBU0tfQ09NUExFVEVfSU5JVCk7Ci0JbXV0ZXhfdW5s
b2NrKCZzbXUtPm11dGV4KTsKKwkJCUFNRF9QUF9UQVNLX0NPTVBMRVRFX0lOSVQsCisJCQlmYWxz
ZSk7CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTEwNzQsNyArMTA5MCw3IEBAIHN0YXRpYyBpbnQgc211
X3NtY190YWJsZV9od19pbml0KHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQlpZiAocmV0KQog
CQkJcmV0dXJuIHJldDsKIAotCQlyZXQgPSBzbXVfZ2V0X3Bvd2VyX2xpbWl0KHNtdSwgJnNtdS0+
ZGVmYXVsdF9wb3dlcl9saW1pdCwgdHJ1ZSk7CisJCXJldCA9IHNtdV9nZXRfcG93ZXJfbGltaXQo
c211LCAmc211LT5kZWZhdWx0X3Bvd2VyX2xpbWl0LCB0cnVlLCBmYWxzZSk7CiAJCWlmIChyZXQp
CiAJCQlyZXR1cm4gcmV0OwogCX0KQEAgLTExNjAsMTUgKzExNzYsMTkgQEAgc3RhdGljIGludCBz
bXVfc3RhcnRfc21jX2VuZ2luZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAogCWlmIChhZGV2
LT5maXJtd2FyZS5sb2FkX3R5cGUgIT0gQU1ER1BVX0ZXX0xPQURfUFNQKSB7CiAJCWlmIChhZGV2
LT5hc2ljX3R5cGUgPCBDSElQX05BVkkxMCkgewotCQkJcmV0ID0gc211X2xvYWRfbWljcm9jb2Rl
KHNtdSk7Ci0JCQlpZiAocmV0KQotCQkJCXJldHVybiByZXQ7CisJCQlpZiAoc211LT5mdW5jcy0+
bG9hZF9taWNyb2NvZGUpIHsKKwkJCQlyZXQgPSBzbXUtPmZ1bmNzLT5sb2FkX21pY3JvY29kZShz
bXUpOworCQkJCWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7CisJCQl9CiAJCX0KIAl9CiAKLQly
ZXQgPSBzbXVfY2hlY2tfZndfc3RhdHVzKHNtdSk7Ci0JaWYgKHJldCkKLQkJcHJfZXJyKCJTTUMg
aXMgbm90IHJlYWR5XG4iKTsKKwlpZiAoc211LT5mdW5jcy0+Y2hlY2tfZndfc3RhdHVzKSB7CisJ
CXJldCA9IHNtdS0+ZnVuY3MtPmNoZWNrX2Z3X3N0YXR1cyhzbXUpOworCQlpZiAocmV0KQorCQkJ
cHJfZXJyKCJTTUMgaXMgbm90IHJlYWR5XG4iKTsKKwl9CiAKIAlyZXR1cm4gcmV0OwogfQpAQCAt
MTMzNCw4ICsxMzU0LDYgQEAgc3RhdGljIGludCBzbXVfcmVzdW1lKHZvaWQgKmhhbmRsZSkKIAog
CXByX2luZm8oIlNNVSBpcyByZXN1bWluZy4uLlxuIik7CiAKLQltdXRleF9sb2NrKCZzbXUtPm11
dGV4KTsKLQogCXJldCA9IHNtdV9zdGFydF9zbWNfZW5naW5lKHNtdSk7CiAJaWYgKHJldCkgewog
CQlwcl9lcnIoIlNNVSBpcyBub3QgcmVhZHkgeWV0IVxuIik7CkBAIC0xMzUwLDEzICsxMzY4LDEx
IEBAIHN0YXRpYyBpbnQgc211X3Jlc3VtZSh2b2lkICpoYW5kbGUpCiAJaWYgKHJldCkKIAkJZ290
byBmYWlsZWQ7CiAKLQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwotCiAJcHJfaW5mbygiU01V
IGlzIHJlc3VtZWQgc3VjY2Vzc2Z1bGx5IVxuIik7CiAKIAlyZXR1cm4gMDsKKwogZmFpbGVkOgot
CW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAJcmV0dXJuIHJldDsKIH0KIApAQCAtMTM3NCw4
ICsxMzkwLDkgQEAgaW50IHNtdV9kaXNwbGF5X2NvbmZpZ3VyYXRpb25fY2hhbmdlKHN0cnVjdCBz
bXVfY29udGV4dCAqc211LAogCiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlzbXVfc2V0
X2RlZXBfc2xlZXBfZGNlZmNsayhzbXUsCi0JCQkJICAgZGlzcGxheV9jb25maWctPm1pbl9kY2Vm
X2RlZXBfc2xlZXBfc2V0X2NsayAvIDEwMCk7CisJaWYgKHNtdS0+ZnVuY3MtPnNldF9kZWVwX3Ns
ZWVwX2RjZWZjbGspCisJCXNtdS0+ZnVuY3MtPnNldF9kZWVwX3NsZWVwX2RjZWZjbGsoc211LAor
CQkJCWRpc3BsYXlfY29uZmlnLT5taW5fZGNlZl9kZWVwX3NsZWVwX3NldF9jbGsgLyAxMDApOwog
CiAJZm9yIChpbmRleCA9IDA7IGluZGV4IDwgZGlzcGxheV9jb25maWctPm51bV9wYXRoX2luY2x1
ZGluZ19ub25fZGlzcGxheTsgaW5kZXgrKykgewogCQlpZiAoZGlzcGxheV9jb25maWctPmRpc3Bs
YXlzW2luZGV4XS5jb250cm9sbGVyX2lkICE9IDApCkBAIC0xNTUzLDkgKzE1NzAsOSBAQCBzdGF0
aWMgaW50IHNtdV9kZWZhdWx0X3NldF9wZXJmb3JtYW5jZV9sZXZlbChzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwgZW51bSBhbWRfZAogCQkJCQkJICZzb2NfbWFzayk7CiAJCWlmIChyZXQpCiAJCQly
ZXR1cm4gcmV0OwotCQlzbXVfZm9yY2VfY2xrX2xldmVscyhzbXUsIFNNVV9TQ0xLLCAxIDw8IHNj
bGtfbWFzayk7Ci0JCXNtdV9mb3JjZV9jbGtfbGV2ZWxzKHNtdSwgU01VX01DTEssIDEgPDwgbWNs
a19tYXNrKTsKLQkJc211X2ZvcmNlX2Nsa19sZXZlbHMoc211LCBTTVVfU09DQ0xLLCAxIDw8IHNv
Y19tYXNrKTsKKwkJc211X2ZvcmNlX2Nsa19sZXZlbHMoc211LCBTTVVfU0NMSywgMSA8PCBzY2xr
X21hc2ssIGZhbHNlKTsKKwkJc211X2ZvcmNlX2Nsa19sZXZlbHMoc211LCBTTVVfTUNMSywgMSA8
PCBtY2xrX21hc2ssIGZhbHNlKTsKKwkJc211X2ZvcmNlX2Nsa19sZXZlbHMoc211LCBTTVVfU09D
Q0xLLCAxIDw8IHNvY19tYXNrLCBmYWxzZSk7CiAJCWJyZWFrOwogCWNhc2UgQU1EX0RQTV9GT1JD
RURfTEVWRUxfTUFOVUFMOgogCWNhc2UgQU1EX0RQTV9GT1JDRURfTEVWRUxfUFJPRklMRV9FWElU
OgpAQCAtMTYxOSw3ICsxNjM2LDcgQEAgaW50IHNtdV9hZGp1c3RfcG93ZXJfc3RhdGVfZHluYW1p
YyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJd29ya2xvYWQgPSBzbXUtPndvcmtsb2FkX3Nl
dHRpbmdbaW5kZXhdOwogCiAJCWlmIChzbXUtPnBvd2VyX3Byb2ZpbGVfbW9kZSAhPSB3b3JrbG9h
ZCkKLQkJCXNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2FkLCAwKTsKKwkJ
CXNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2FkLCAwLCBmYWxzZSk7CiAJ
fQogCiAJcmV0dXJuIHJldDsKQEAgLTE2MjcsMTggKzE2NDQsMjIgQEAgaW50IHNtdV9hZGp1c3Rf
cG93ZXJfc3RhdGVfZHluYW1pYyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAogaW50IHNtdV9o
YW5kbGVfdGFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJICAgIGVudW0gYW1kX2RwbV9m
b3JjZWRfbGV2ZWwgbGV2ZWwsCi0JCSAgICBlbnVtIGFtZF9wcF90YXNrIHRhc2tfaWQpCisJCSAg
ICBlbnVtIGFtZF9wcF90YXNrIHRhc2tfaWQsCisJCSAgICBib29sIGxvY2tfbmVlZGVkKQogewog
CWludCByZXQgPSAwOwogCisJaWYgKGxvY2tfbmVlZGVkKQorCQltdXRleF9sb2NrKCZzbXUtPm11
dGV4KTsKKwogCXN3aXRjaCAodGFza19pZCkgewogCWNhc2UgQU1EX1BQX1RBU0tfRElTUExBWV9D
T05GSUdfQ0hBTkdFOgogCQlyZXQgPSBzbXVfcHJlX2Rpc3BsYXlfY29uZmlnX2NoYW5nZWQoc211
KTsKIAkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7CisJCQlnb3RvIG91dDsKIAkJcmV0ID0gc211
X3NldF9jcHVfcG93ZXJfc3RhdGUoc211KTsKIAkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7CisJ
CQlnb3RvIG91dDsKIAkJcmV0ID0gc211X2FkanVzdF9wb3dlcl9zdGF0ZV9keW5hbWljKHNtdSwg
bGV2ZWwsIGZhbHNlKTsKIAkJYnJlYWs7CiAJY2FzZSBBTURfUFBfVEFTS19DT01QTEVURV9JTklU
OgpAQCAtMTY0OSw2ICsxNjcwLDEwIEBAIGludCBzbXVfaGFuZGxlX3Rhc2soc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsCiAJCWJyZWFrOwogCX0KIAorb3V0OgorCWlmIChsb2NrX25lZWRlZCkKKwkJ
bXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKwogCXJldHVybiByZXQ7CiB9CiAKQEAgLTE2ODEs
NyArMTcwNiw3IEBAIGludCBzbXVfc3dpdGNoX3Bvd2VyX3Byb2ZpbGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsCiAJfQogCiAJaWYgKHNtdV9kcG1fY3R4LT5kcG1fbGV2ZWwgIT0gQU1EX0RQTV9G
T1JDRURfTEVWRUxfTUFOVUFMKQotCQlzbXVfc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzbXUsICZ3
b3JrbG9hZCwgMCk7CisJCXNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2Fk
LCAwLCBmYWxzZSk7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCkBAIC0xNzExLDEy
ICsxNzM2LDE5IEBAIGludCBzbXVfZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIGVudW0gYW1kX2RwbV9mb3JjZWRfbGV2CiAJaWYgKCFzbXUtPmlzX2FwdSAm
JiAhc211X2RwbV9jdHgtPmRwbV9jb250ZXh0KQogCQlyZXR1cm4gLUVJTlZBTDsKIAorCW11dGV4
X2xvY2soJnNtdS0+bXV0ZXgpOworCiAJcmV0ID0gc211X2VuYWJsZV91bWRfcHN0YXRlKHNtdSwg
JmxldmVsKTsKLQlpZiAocmV0KQorCWlmIChyZXQpIHsKKwkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11
dGV4KTsKIAkJcmV0dXJuIHJldDsKKwl9CiAKIAlyZXQgPSBzbXVfaGFuZGxlX3Rhc2soc211LCBs
ZXZlbCwKLQkJCSAgICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VSX1NUQVRFKTsKKwkJCSAg
ICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VSX1NUQVRFLAorCQkJICAgICAgZmFsc2UpOwor
CisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiByZXQ7CiB9CkBAIC0xNzM0
LDcgKzE3NjYsOCBAQCBpbnQgc211X3NldF9kaXNwbGF5X2NvdW50KHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCB1aW50MzJfdCBjb3VudCkKIAogaW50IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LAogCQkJIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLAotCQkJ
IHVpbnQzMl90IG1hc2spCisJCQkgdWludDMyX3QgbWFzaywKKwkJCSBib29sIGxvY2tfbmVlZGVk
KQogewogCXN0cnVjdCBzbXVfZHBtX2NvbnRleHQgKnNtdV9kcG1fY3R4ID0gJihzbXUtPnNtdV9k
cG0pOwogCWludCByZXQgPSAwOwpAQCAtMTc0NCw5ICsxNzc3LDE1IEBAIGludCBzbXVfZm9yY2Vf
Y2xrX2xldmVscyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJcmV0dXJuIC1FSU5WQUw7CiAJ
fQogCisJaWYgKGxvY2tfbmVlZGVkKQorCQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKwogCWlm
IChzbXUtPnBwdF9mdW5jcyAmJiBzbXUtPnBwdF9mdW5jcy0+Zm9yY2VfY2xrX2xldmVscykKIAkJ
cmV0ID0gc211LT5wcHRfZnVuY3MtPmZvcmNlX2Nsa19sZXZlbHMoc211LCBjbGtfdHlwZSwgbWFz
ayk7CiAKKwlpZiAobG9ja19uZWVkZWQpCisJCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisK
IAlyZXR1cm4gcmV0OwogfQogCkBAIC0xNzY0LDYgKzE4MDMsOCBAQCBpbnQgc211X3NldF9tcDFf
c3RhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJaWYgKCFzbXUtPnBtX2VuYWJsZWQpCiAJ
CXJldHVybiAwOwogCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKIAlzd2l0Y2ggKG1wMV9z
dGF0ZSkgewogCWNhc2UgUFBfTVAxX1NUQVRFX1NIVVRET1dOOgogCQltc2cgPSBTTVVfTVNHX1By
ZXBhcmVNcDFGb3JTaHV0ZG93bjsKQEAgLTE3NzYsMTcgKzE4MTcsMjIgQEAgaW50IHNtdV9zZXRf
bXAxX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQlicmVhazsKIAljYXNlIFBQX01Q
MV9TVEFURV9OT05FOgogCWRlZmF1bHQ6CisJCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAJ
CXJldHVybiAwOwogCX0KIAogCS8qIHNvbWUgYXNpY3MgbWF5IG5vdCBzdXBwb3J0IHRob3NlIG1l
c3NhZ2VzICovCi0JaWYgKHNtdV9tc2dfZ2V0X2luZGV4KHNtdSwgbXNnKSA8IDApCisJaWYgKHNt
dV9tc2dfZ2V0X2luZGV4KHNtdSwgbXNnKSA8IDApIHsKKwkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11
dGV4KTsKIAkJcmV0dXJuIDA7CisJfQogCiAJcmV0ID0gc211X3NlbmRfc21jX21zZyhzbXUsIG1z
Zyk7CiAJaWYgKHJldCkKIAkJcHJfZXJyKCJbUHJlcGFyZU1wMV0gRmFpbGVkIVxuIik7CiAKKwlt
dXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCiAJcmV0dXJuIHJldDsKIH0KIApAQCAtMTgwNiwx
MCArMTg1MiwxNCBAQCBpbnQgc211X3NldF9kZl9jc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsCiAJaWYgKCFzbXUtPnBwdF9mdW5jcyB8fCAhc211LT5wcHRfZnVuY3MtPnNldF9kZl9jc3Rh
dGUpCiAJCXJldHVybiAwOwogCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKIAlyZXQgPSBz
bXUtPnBwdF9mdW5jcy0+c2V0X2RmX2NzdGF0ZShzbXUsIHN0YXRlKTsKIAlpZiAocmV0KQogCQlw
cl9lcnIoIltTZXREZkNzdGF0ZV0gZmFpbGVkIVxuIik7CiAKKwltdXRleF91bmxvY2soJnNtdS0+
bXV0ZXgpOworCiAJcmV0dXJuIHJldDsKIH0KIApAQCAtMTg0OSwzICsxODk5LDU0OSBAQCBjb25z
dCBzdHJ1Y3QgYW1kZ3B1X2lwX2Jsb2NrX3ZlcnNpb24gc211X3YxMl8wX2lwX2Jsb2NrID0KIAku
cmV2ID0gMCwKIAkuZnVuY3MgPSAmc211X2lwX2Z1bmNzLAogfTsKKworaW50IHNtdV9sb2FkX21p
Y3JvY29kZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlpbnQgcmV0ID0gMDsKKworCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+ZnVuY3MtPmxvYWRfbWljcm9jb2Rl
KQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5sb2FkX21pY3JvY29kZShzbXUpOworCisJbXV0ZXhfdW5s
b2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfY2hlY2tfZndf
c3RhdHVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQoreworCWludCByZXQgPSAwOworCisJbXV0
ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5mdW5jcy0+Y2hlY2tfZndfc3RhdHVz
KQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5jaGVja19md19zdGF0dXMoc211KTsKKworCW11dGV4X3Vu
bG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X3NldF9nZnhf
Y2dwZyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgYm9vbCBlbmFibGVkKQoreworCWludCByZXQg
PSAwOworCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5mdW5jcy0+c2V0
X2dmeF9jZ3BnKQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5zZXRfZ2Z4X2NncGcoc211LCBlbmFibGVk
KTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitp
bnQgc211X3NldF9mYW5fc3BlZWRfcnBtKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJf
dCBzcGVlZCkKK3sKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwor
CisJaWYgKHNtdS0+ZnVuY3MtPnNldF9mYW5fc3BlZWRfcnBtKQorCQlyZXQgPSBzbXUtPmZ1bmNz
LT5zZXRfZmFuX3NwZWVkX3JwbShzbXUsIHNwZWVkKTsKKworCW11dGV4X3VubG9jaygmc211LT5t
dXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X2dldF9wb3dlcl9saW1pdChzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCXVpbnQzMl90ICpsaW1pdCwKKwkJCWJvb2wgZGVmLAor
CQkJYm9vbCBsb2NrX25lZWRlZCkKK3sKKwlpbnQgcmV0ID0gMDsKKworCWlmIChsb2NrX25lZWRl
ZCkKKwkJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5wcHRfZnVuY3MtPmdl
dF9wb3dlcl9saW1pdCkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9wb3dlcl9saW1pdChz
bXUsIGxpbWl0LCBkZWYpOworCisJaWYgKGxvY2tfbmVlZGVkKQorCQltdXRleF91bmxvY2soJnNt
dS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9zZXRfcG93ZXJfbGltaXQo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGxpbWl0KQoreworCWludCByZXQgPSAw
OworCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5mdW5jcy0+c2V0X3Bv
d2VyX2xpbWl0KQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5zZXRfcG93ZXJfbGltaXQoc211LCBsaW1p
dCk7CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKwor
aW50IHNtdV9wcmludF9jbGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNt
dV9jbGtfdHlwZSBjbGtfdHlwZSwgY2hhciAqYnVmKQoreworCWludCByZXQgPSAwOworCisJbXV0
ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5wcHRfZnVuY3MtPnByaW50X2Nsa19s
ZXZlbHMpCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5wcmludF9jbGtfbGV2ZWxzKHNtdSwgY2xr
X3R5cGUsIGJ1Zik7CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJl
dDsKK30KKworaW50IHNtdV9nZXRfb2RfcGVyY2VudGFnZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwgZW51bSBzbXVfY2xrX3R5cGUgdHlwZSkKK3sKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xv
Y2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfb2RfcGVyY2VudGFn
ZSkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9vZF9wZXJjZW50YWdlKHNtdSwgdHlwZSk7
CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50
IHNtdV9zZXRfb2RfcGVyY2VudGFnZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVf
Y2xrX3R5cGUgdHlwZSwgdWludDMyX3QgdmFsdWUpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRl
eF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X29kX3BlcmNl
bnRhZ2UpCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRfb2RfcGVyY2VudGFnZShzbXUsIHR5
cGUsIHZhbHVlKTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0
OworfQorCitpbnQgc211X29kX2VkaXRfZHBtX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAorCQkJICBlbnVtIFBQX09EX0RQTV9UQUJMRV9DT01NQU5EIHR5cGUsCisJCQkgIGxvbmcgKmlu
cHV0LCB1aW50MzJfdCBzaXplKQoreworCWludCByZXQgPSAwOworCisJbXV0ZXhfbG9jaygmc211
LT5tdXRleCk7CisKKwlpZiAoc211LT5wcHRfZnVuY3MtPm9kX2VkaXRfZHBtX3RhYmxlKQorCQly
ZXQgPSBzbXUtPnBwdF9mdW5jcy0+b2RfZWRpdF9kcG1fdGFibGUoc211LCB0eXBlLCBpbnB1dCwg
c2l6ZSk7CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30K
KworaW50IHNtdV9yZWFkX3NlbnNvcihzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJICAgIGVu
dW0gYW1kX3BwX3NlbnNvcnMgc2Vuc29yLAorCQkgICAgdm9pZCAqZGF0YSwgdWludDMyX3QgKnNp
emUpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlm
IChzbXUtPnBwdF9mdW5jcy0+cmVhZF9zZW5zb3IpCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5y
ZWFkX3NlbnNvcihzbXUsIHNlbnNvciwgZGF0YSwgc2l6ZSk7CisKKwltdXRleF91bmxvY2soJnNt
dS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9nZXRfcG93ZXJfcHJvZmls
ZV9tb2RlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBjaGFyICpidWYpCit7CisJaW50IHJldCA9
IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPnBwdF9mdW5jcy0+
Z2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9wb3dl
cl9wcm9maWxlX21vZGUoc211LCBidWYpOworCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsK
KworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCSAgICAgICBsb25nICpwYXJhbSwKKwkJCSAgICAgICB1
aW50MzJfdCBwYXJhbV9zaXplLAorCQkJICAgICAgIGJvb2wgbG9ja19uZWVkZWQpCit7CisJaW50
IHJldCA9IDA7CisKKwlpZiAobG9ja19uZWVkZWQpCisJCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgp
OworCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKQorCQlyZXQg
PSBzbXUtPnBwdF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzbXUsIHBhcmFtLCBwYXJh
bV9zaXplKTsKKworCWlmIChsb2NrX25lZWRlZCkKKwkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4
KTsKKworCXJldHVybiByZXQ7Cit9CisKKworaW50IHNtdV9nZXRfZmFuX2NvbnRyb2xfbW9kZShz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2so
JnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+ZnVuY3MtPmdldF9mYW5fY29udHJvbF9tb2RlKQor
CQlyZXQgPSBzbXUtPmZ1bmNzLT5nZXRfZmFuX2NvbnRyb2xfbW9kZShzbXUpOworCisJbXV0ZXhf
dW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfc2V0X2Zh
bl9jb250cm9sX21vZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGludCB2YWx1ZSkKK3sKKwlp
bnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+ZnVu
Y3MtPnNldF9mYW5fY29udHJvbF9tb2RlKQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5zZXRfZmFuX2Nv
bnRyb2xfbW9kZShzbXUsIHZhbHVlKTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisK
KwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X2dldF9mYW5fc3BlZWRfcGVyY2VudChzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgKnNwZWVkKQoreworCWludCByZXQgPSAwOworCisJ
bXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9mYW5f
c3BlZWRfcGVyY2VudCkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcGVy
Y2VudChzbXUsIHNwZWVkKTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1
cm4gcmV0OworfQorCitpbnQgc211X3NldF9mYW5fc3BlZWRfcGVyY2VudChzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwgdWludDMyX3Qgc3BlZWQpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5zZXRfZmFuX3NwZWVkX3BlcmNl
bnQpCisJCXJldCA9IHNtdS0+ZnVuY3MtPnNldF9mYW5fc3BlZWRfcGVyY2VudChzbXUsIHNwZWVk
KTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitp
bnQgc211X2dldF9mYW5fc3BlZWRfcnBtKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJf
dCAqc3BlZWQpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsK
KworCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9ycG0pCisJCXJldCA9IHNtdS0+
cHB0X2Z1bmNzLT5nZXRfZmFuX3NwZWVkX3JwbShzbXUsIHNwZWVkKTsKKworCW11dGV4X3VubG9j
aygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X3NldF9kZWVwX3Ns
ZWVwX2RjZWZjbGsoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGludCBjbGspCit7CisJaW50IHJl
dCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5z
ZXRfZGVlcF9zbGVlcF9kY2VmY2xrKQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5zZXRfZGVlcF9zbGVl
cF9kY2VmY2xrKHNtdSwgY2xrKTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwly
ZXR1cm4gcmV0OworfQorCitpbnQgc211X3NldF9hY3RpdmVfZGlzcGxheV9jb3VudChzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgY291bnQpCit7CisJaW50IHJldCA9IDA7CisKKwlt
dXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5zZXRfYWN0aXZlX2Rp
c3BsYXlfY291bnQpCisJCXJldCA9IHNtdS0+ZnVuY3MtPnNldF9hY3RpdmVfZGlzcGxheV9jb3Vu
dChzbXUsIGNvdW50KTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4g
cmV0OworfQorCitpbnQgc211X2dldF9jbG9ja19ieV90eXBlKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LAorCQkJICBlbnVtIGFtZF9wcF9jbG9ja190eXBlIHR5cGUsCisJCQkgIHN0cnVjdCBhbWRf
cHBfY2xvY2tzICpjbG9ja3MpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUt
Pm11dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZSkKKwkJcmV0ID0g
c211LT5mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGUoc211LCB0eXBlLCBjbG9ja3MpOworCisJbXV0
ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfZ2V0
X21heF9oaWdoX2Nsb2NrcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCSAgICBzdHJ1Y3Qg
YW1kX3BwX3NpbXBsZV9jbG9ja19pbmZvICpjbG9ja3MpCit7CisJaW50IHJldCA9IDA7CisKKwlt
dXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5nZXRfbWF4X2hpZ2hf
Y2xvY2tzKQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5nZXRfbWF4X2hpZ2hfY2xvY2tzKHNtdSwgY2xv
Y2tzKTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQor
CitpbnQgc211X2dldF9jbG9ja19ieV90eXBlX3dpdGhfbGF0ZW5jeShzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwKKwkJCQkgICAgICAgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsCisJCQkJICAg
ICAgIHN0cnVjdCBwcF9jbG9ja19sZXZlbHNfd2l0aF9sYXRlbmN5ICpjbG9ja3MpCit7CisJaW50
IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPnBwdF9m
dW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF9sYXRlbmN5KQorCQlyZXQgPSBzbXUtPnBwdF9m
dW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF9sYXRlbmN5KHNtdSwgY2xrX3R5cGUsIGNsb2Nr
cyk7CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKwor
aW50IHNtdV9nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsCisJCQkJICAgICAgIGVudW0gYW1kX3BwX2Nsb2NrX3R5cGUgdHlwZSwKKwkJCQkgICAg
ICAgc3RydWN0IHBwX2Nsb2NrX2xldmVsc193aXRoX3ZvbHRhZ2UgKmNsb2NrcykKK3sKKwlpbnQg
cmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+cHB0X2Z1
bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2UpCisJCXJldCA9IHNtdS0+cHB0X2Z1
bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Uoc211LCB0eXBlLCBjbG9ja3MpOwor
CisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKKworaW50
IHNtdV9kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVxdWVzdChzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwKKwkJCQkgICAgICBzdHJ1Y3QgcHBfZGlzcGxheV9jbG9ja19yZXF1ZXN0ICpjbG9ja19yZXEp
Cit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChz
bXUtPmZ1bmNzLT5kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVxdWVzdCkKKwkJcmV0ID0gc211LT5m
dW5jcy0+ZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3Qoc211LCBjbG9ja19yZXEpOworCisJ
bXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKKworaW50IHNt
dV9kaXNwbGF5X2Rpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaChzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgYm9vbCBkaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2gpCit7CisJaW50IHJldCA9IC1F
SU5WQUw7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPnBwdF9mdW5j
cy0+ZGlzcGxheV9kaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2gpCisJCXJldCA9IHNtdS0+cHB0
X2Z1bmNzLT5kaXNwbGF5X2Rpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaChzbXUsIGRpc2FibGVf
bWVtb3J5X2Nsb2NrX3N3aXRjaCk7CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJ
cmV0dXJuIHJldDsKK30KKworaW50IHNtdV9ub3RpZnlfc211X2VuYWJsZV9wd2Uoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11
dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5ub3RpZnlfc211X2VuYWJsZV9wd2UpCisJCXJldCA9
IHNtdS0+ZnVuY3MtPm5vdGlmeV9zbXVfZW5hYmxlX3B3ZShzbXUpOworCisJbXV0ZXhfdW5sb2Nr
KCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfc2V0X3dhdGVybWFy
a3NfZm9yX2Nsb2NrX3JhbmdlcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCQkJc3RydWN0
IGRtX3BwX3dtX3NldHNfd2l0aF9jbG9ja19yYW5nZXNfc29jMTUgKmNsb2NrX3JhbmdlcykKK3sK
KwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+
ZnVuY3MtPnNldF93YXRlcm1hcmtzX2Zvcl9jbG9ja19yYW5nZXMpCisJCXJldCA9IHNtdS0+ZnVu
Y3MtPnNldF93YXRlcm1hcmtzX2Zvcl9jbG9ja19yYW5nZXMoc211LCBjbG9ja19yYW5nZXMpOwor
CisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBz
bXVfc2V0X3hnbWlfcHN0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJdWludDMyX3Qg
cHN0YXRlKQoreworCWludCByZXQgPSAwOworCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisK
KwlpZiAoc211LT5mdW5jcy0+c2V0X3hnbWlfcHN0YXRlKQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5z
ZXRfeGdtaV9wc3RhdGUoc211LCBwc3RhdGUpOworCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4
KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfc2V0X2F6YWxpYV9kM19wbWUoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUpCit7CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUt
Pm11dGV4KTsKKworCWlmIChzbXUtPmZ1bmNzLT5zZXRfYXphbGlhX2QzX3BtZSkKKwkJcmV0ID0g
c211LT5mdW5jcy0+c2V0X2F6YWxpYV9kM19wbWUoc211KTsKKworCW11dGV4X3VubG9jaygmc211
LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitib29sIHNtdV9iYWNvX2lzX3N1cHBvcnQo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCit7CisJYm9vbCByZXQgPSBmYWxzZTsKKworCW11dGV4
X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+ZnVuY3MtPmJhY29faXNfc3VwcG9ydCkK
KwkJcmV0ID0gc211LT5mdW5jcy0+YmFjb19pc19zdXBwb3J0KHNtdSk7CisKKwltdXRleF91bmxv
Y2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9iYWNvX2dldF9z
dGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfYmFjb19zdGF0ZSAqc3RhdGUp
Cit7CisJaWYgKHNtdS0+ZnVuY3MtPmJhY29fZ2V0X3N0YXRlKQorCQlyZXR1cm4gLUVJTlZBTDsK
KworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCSpzdGF0ZSA9IHNtdS0+ZnVuY3MtPmJhY29f
Z2V0X3N0YXRlKHNtdSk7CisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiAw
OworfQorCitpbnQgc211X2JhY29fcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCit7CisJ
aW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUtPmZ1
bmNzLT5iYWNvX3Jlc2V0KQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5iYWNvX3Jlc2V0KHNtdSk7CisK
KwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNt
dV9tb2RlMl9yZXNldChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlpbnQgcmV0ID0gMDsK
KworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+ZnVuY3MtPm1vZGUyX3Jl
c2V0KQorCQlyZXQgPSBzbXUtPmZ1bmNzLT5tb2RlMl9yZXNldChzbXUpOworCisJbXV0ZXhfdW5s
b2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisKK2ludCBzbXVfZ2V0X21heF9z
dXN0YWluYWJsZV9jbG9ja3NfYnlfZGMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJCSBz
dHJ1Y3QgcHBfc211X252X2Nsb2NrX3RhYmxlICptYXhfY2xvY2tzKQoreworCWludCByZXQgPSAw
OworCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisKKwlpZiAoc211LT5mdW5jcy0+Z2V0X21h
eF9zdXN0YWluYWJsZV9jbG9ja3NfYnlfZGMpCisJCXJldCA9IHNtdS0+ZnVuY3MtPmdldF9tYXhf
c3VzdGFpbmFibGVfY2xvY2tzX2J5X2RjKHNtdSwgbWF4X2Nsb2Nrcyk7CisKKwltdXRleF91bmxv
Y2soJnNtdS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9nZXRfdWNsa19k
cG1fc3RhdGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJICAgIHVuc2lnbmVkIGludCAq
Y2xvY2tfdmFsdWVzX2luX2toeiwKKwkJCSAgICB1bnNpZ25lZCBpbnQgKm51bV9zdGF0ZXMpCit7
CisJaW50IHJldCA9IDA7CisKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKworCWlmIChzbXUt
PnBwdF9mdW5jcy0+Z2V0X3VjbGtfZHBtX3N0YXRlcykKKwkJcmV0ID0gc211LT5wcHRfZnVuY3Mt
PmdldF91Y2xrX2RwbV9zdGF0ZXMoc211LCBjbG9ja192YWx1ZXNfaW5fa2h6LCBudW1fc3RhdGVz
KTsKKworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitl
bnVtIGFtZF9wbV9zdGF0ZV90eXBlIHNtdV9nZXRfY3VycmVudF9wb3dlcl9zdGF0ZShzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSkKK3sKKwllbnVtIGFtZF9wbV9zdGF0ZV90eXBlIHBtX3N0YXRlID0g
UE9XRVJfU1RBVEVfVFlQRV9ERUZBVUxUOworCisJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisK
KwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9jdXJyZW50X3Bvd2VyX3N0YXRlKQorCQlwbV9zdGF0
ZSA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfY3VycmVudF9wb3dlcl9zdGF0ZShzbXUpOworCisJbXV0
ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiBwbV9zdGF0ZTsKK30KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FyY3R1cnVzX3BwdC5jIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYXJjdHVydXNfcHB0LmMKaW5kZXggNjczMWZlZDU0NThl
Li4xNDFlNDhjZDFjNWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L2FyY3R1cnVzX3BwdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FyY3R1
cnVzX3BwdC5jCkBAIC03NzIsOCArNzcyLDYgQEAgc3RhdGljIGludCBhcmN0dXJ1c19mb3JjZV9j
bGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCXVpbnQzMl90IHNvZnRfbWluX2xl
dmVsLCBzb2Z0X21heF9sZXZlbDsKIAlpbnQgcmV0ID0gMDsKIAotCW11dGV4X2xvY2soJihzbXUt
Pm11dGV4KSk7Ci0KIAlzb2Z0X21pbl9sZXZlbCA9IG1hc2sgPyAoZmZzKG1hc2spIC0gMSkgOiAw
OwogCXNvZnRfbWF4X2xldmVsID0gbWFzayA/IChmbHMobWFzaykgLSAxKSA6IDA7CiAKQEAgLTg5
Miw3ICs4OTAsNiBAQCBzdGF0aWMgaW50IGFyY3R1cnVzX2ZvcmNlX2Nsa19sZXZlbHMoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCiAJCWJyZWFrOwogCX0KIAotCW11dGV4X3VubG9jaygmKHNtdS0+
bXV0ZXgpKTsKIAlyZXR1cm4gcmV0OwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1X3NtdS5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dl
cnBsYXkvaW5jL2FtZGdwdV9zbXUuaAppbmRleCBjZGI4NDVmNWYyM2UuLjNlMzQ2NGZhMmZmNSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5jL2FtZGdwdV9zbXUu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1X3NtdS5oCkBA
IC01NjUsMTggKzU2NSwxNyBAQCBzdHJ1Y3Qgc211X2Z1bmNzCiAJKChzbXUpLT5mdW5jcy0+aW5p
dF9wb3dlciA/IChzbXUpLT5mdW5jcy0+aW5pdF9wb3dlcigoc211KSkgOiAwKQogI2RlZmluZSBz
bXVfZmluaV9wb3dlcihzbXUpIFwKIAkoKHNtdSktPmZ1bmNzLT5maW5pX3Bvd2VyID8gKHNtdSkt
PmZ1bmNzLT5maW5pX3Bvd2VyKChzbXUpKSA6IDApCi0jZGVmaW5lIHNtdV9sb2FkX21pY3JvY29k
ZShzbXUpIFwKLQkoKHNtdSktPmZ1bmNzLT5sb2FkX21pY3JvY29kZSA/IChzbXUpLT5mdW5jcy0+
bG9hZF9taWNyb2NvZGUoKHNtdSkpIDogMCkKLSNkZWZpbmUgc211X2NoZWNrX2Z3X3N0YXR1cyhz
bXUpIFwKLQkoKHNtdSktPmZ1bmNzLT5jaGVja19md19zdGF0dXMgPyAoc211KS0+ZnVuY3MtPmNo
ZWNrX2Z3X3N0YXR1cygoc211KSkgOiAwKQoraW50IHNtdV9sb2FkX21pY3JvY29kZShzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSk7CisKK2ludCBzbXVfY2hlY2tfZndfc3RhdHVzKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211KTsKKwogI2RlZmluZSBzbXVfc2V0dXBfcHB0YWJsZShzbXUpIFwKIAkoKHNt
dSktPmZ1bmNzLT5zZXR1cF9wcHRhYmxlID8gKHNtdSktPmZ1bmNzLT5zZXR1cF9wcHRhYmxlKChz
bXUpKSA6IDApCiAjZGVmaW5lIHNtdV9wb3dlcmdhdGVfc2RtYShzbXUsIGdhdGUpIFwKIAkoKHNt
dSktPmZ1bmNzLT5wb3dlcmdhdGVfc2RtYSA/IChzbXUpLT5mdW5jcy0+cG93ZXJnYXRlX3NkbWEo
KHNtdSksIChnYXRlKSkgOiAwKQogI2RlZmluZSBzbXVfcG93ZXJnYXRlX3ZjbihzbXUsIGdhdGUp
IFwKIAkoKHNtdSktPmZ1bmNzLT5wb3dlcmdhdGVfdmNuID8gKHNtdSktPmZ1bmNzLT5wb3dlcmdh
dGVfdmNuKChzbXUpLCAoZ2F0ZSkpIDogMCkKLSNkZWZpbmUgc211X3NldF9nZnhfY2dwZyhzbXUs
IGVuYWJsZWQpIFwKLQkoKHNtdSktPmZ1bmNzLT5zZXRfZ2Z4X2NncGcgPyAoc211KS0+ZnVuY3Mt
PnNldF9nZnhfY2dwZygoc211KSwgKGVuYWJsZWQpKSA6IDApCitpbnQgc211X3NldF9nZnhfY2dw
ZyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgYm9vbCBlbmFibGVkKTsKICNkZWZpbmUgc211X2dl
dF92Ymlvc19ib290dXBfdmFsdWVzKHNtdSkgXAogCSgoc211KS0+ZnVuY3MtPmdldF92Ymlvc19i
b290dXBfdmFsdWVzID8gKHNtdSktPmZ1bmNzLT5nZXRfdmJpb3NfYm9vdHVwX3ZhbHVlcygoc211
KSkgOiAwKQogI2RlZmluZSBzbXVfZ2V0X2Nsa19pbmZvX2Zyb21fdmJpb3Moc211KSBcCkBAIC02
MTAsOCArNjA5LDggQEAgc3RydWN0IHNtdV9mdW5jcwogCSgoc211KS0+ZnVuY3MtPmluaXRfbWF4
X3N1c3RhaW5hYmxlX2Nsb2NrcyA/IChzbXUpLT5mdW5jcy0+aW5pdF9tYXhfc3VzdGFpbmFibGVf
Y2xvY2tzKChzbXUpKSA6IDApCiAjZGVmaW5lIHNtdV9zZXRfZGVmYXVsdF9vZF9zZXR0aW5ncyhz
bXUsIGluaXRpYWxpemUpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+c2V0X2RlZmF1bHRfb2Rfc2V0
dGluZ3MgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfZGVmYXVsdF9vZF9zZXR0aW5ncygoc211KSwg
KGluaXRpYWxpemUpKSA6IDApCi0jZGVmaW5lIHNtdV9zZXRfZmFuX3NwZWVkX3JwbShzbXUsIHNw
ZWVkKSBcCi0JKChzbXUpLT5mdW5jcy0+c2V0X2Zhbl9zcGVlZF9ycG0gPyAoc211KS0+ZnVuY3Mt
PnNldF9mYW5fc3BlZWRfcnBtKChzbXUpLCAoc3BlZWQpKSA6IDApCitpbnQgc211X3NldF9mYW5f
c3BlZWRfcnBtKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBzcGVlZCk7CisKICNk
ZWZpbmUgc211X3NlbmRfc21jX21zZyhzbXUsIG1zZykgXAogCSgoc211KS0+ZnVuY3MtPnNlbmRf
c21jX21zZz8gKHNtdSktPmZ1bmNzLT5zZW5kX3NtY19tc2coKHNtdSksIChtc2cpKSA6IDApCiAj
ZGVmaW5lIHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIG1zZywgcGFyYW0pIFwKQEAg
LTY0MiwyMCArNjQxLDIyIEBAIHN0cnVjdCBzbXVfZnVuY3MKIAkoKHNtdSktPnBwdF9mdW5jcy0+
cG9wdWxhdGVfdW1kX3N0YXRlX2NsayA/IChzbXUpLT5wcHRfZnVuY3MtPnBvcHVsYXRlX3VtZF9z
dGF0ZV9jbGsoKHNtdSkpIDogMCkKICNkZWZpbmUgc211X3NldF9kZWZhdWx0X29kOF9zZXR0aW5n
cyhzbXUpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+c2V0X2RlZmF1bHRfb2Q4X3NldHRpbmdzID8g
KHNtdSktPnBwdF9mdW5jcy0+c2V0X2RlZmF1bHRfb2Q4X3NldHRpbmdzKChzbXUpKSA6IDApCi0j
ZGVmaW5lIHNtdV9nZXRfcG93ZXJfbGltaXQoc211LCBsaW1pdCwgZGVmKSBcCi0JKChzbXUpLT5w
cHRfZnVuY3MtPmdldF9wb3dlcl9saW1pdCA/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9wb3dlcl9s
aW1pdCgoc211KSwgKGxpbWl0KSwgKGRlZikpIDogMCkKLSNkZWZpbmUgc211X3NldF9wb3dlcl9s
aW1pdChzbXUsIGxpbWl0KSBcCi0JKChzbXUpLT5mdW5jcy0+c2V0X3Bvd2VyX2xpbWl0ID8gKHNt
dSktPmZ1bmNzLT5zZXRfcG93ZXJfbGltaXQoKHNtdSksIChsaW1pdCkpIDogMCkKKworaW50IHNt
dV9nZXRfcG93ZXJfbGltaXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQl1aW50MzJfdCAq
bGltaXQsCisJCQlib29sIGRlZiwKKwkJCWJvb2wgbG9ja19uZWVkZWQpOworCitpbnQgc211X3Nl
dF9wb3dlcl9saW1pdChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgbGltaXQpOwog
I2RlZmluZSBzbXVfZ2V0X2N1cnJlbnRfY2xrX2ZyZXEoc211LCBjbGtfaWQsIHZhbHVlKSBcCiAJ
KChzbXUpLT5mdW5jcy0+Z2V0X2N1cnJlbnRfY2xrX2ZyZXE/IChzbXUpLT5mdW5jcy0+Z2V0X2N1
cnJlbnRfY2xrX2ZyZXEoKHNtdSksIChjbGtfaWQpLCAodmFsdWUpKSA6IDApCi0jZGVmaW5lIHNt
dV9wcmludF9jbGtfbGV2ZWxzKHNtdSwgY2xrX3R5cGUsIGJ1ZikgXAotCSgoc211KS0+cHB0X2Z1
bmNzLT5wcmludF9jbGtfbGV2ZWxzID8gKHNtdSktPnBwdF9mdW5jcy0+cHJpbnRfY2xrX2xldmVs
cygoc211KSwgKGNsa190eXBlKSwgKGJ1ZikpIDogMCkKLSNkZWZpbmUgc211X2dldF9vZF9wZXJj
ZW50YWdlKHNtdSwgdHlwZSkgXAotCSgoc211KS0+cHB0X2Z1bmNzLT5nZXRfb2RfcGVyY2VudGFn
ZSA/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9vZF9wZXJjZW50YWdlKChzbXUpLCAodHlwZSkpIDog
MCkKLSNkZWZpbmUgc211X3NldF9vZF9wZXJjZW50YWdlKHNtdSwgdHlwZSwgdmFsdWUpIFwKLQko
KHNtdSktPnBwdF9mdW5jcy0+c2V0X29kX3BlcmNlbnRhZ2UgPyAoc211KS0+cHB0X2Z1bmNzLT5z
ZXRfb2RfcGVyY2VudGFnZSgoc211KSwgKHR5cGUpLCAodmFsdWUpKSA6IDApCi0jZGVmaW5lIHNt
dV9vZF9lZGl0X2RwbV90YWJsZShzbXUsIHR5cGUsIGlucHV0LCBzaXplKSBcCi0JKChzbXUpLT5w
cHRfZnVuY3MtPm9kX2VkaXRfZHBtX3RhYmxlID8gKHNtdSktPnBwdF9mdW5jcy0+b2RfZWRpdF9k
cG1fdGFibGUoKHNtdSksICh0eXBlKSwgKGlucHV0KSwgKHNpemUpKSA6IDApCitpbnQgc211X3By
aW50X2Nsa19sZXZlbHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBl
IGNsa190eXBlLCBjaGFyICpidWYpOworaW50IHNtdV9nZXRfb2RfcGVyY2VudGFnZShzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgdHlwZSk7CitpbnQgc211X3NldF9v
ZF9wZXJjZW50YWdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSB0
eXBlLCB1aW50MzJfdCB2YWx1ZSk7CisKK2ludCBzbXVfb2RfZWRpdF9kcG1fdGFibGUoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCisJCQkgIGVudW0gUFBfT0RfRFBNX1RBQkxFX0NPTU1BTkQgdHlw
ZSwKKwkJCSAgbG9uZyAqaW5wdXQsIHVpbnQzMl90IHNpemUpOwogI2RlZmluZSBzbXVfdGFibGVz
X2luaXQoc211LCB0YWIpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+dGFibGVzX2luaXQgPyAoc211
KS0+cHB0X2Z1bmNzLT50YWJsZXNfaW5pdCgoc211KSwgKHRhYikpIDogMCkKICNkZWZpbmUgc211
X3NldF90aGVybWFsX2Zhbl90YWJsZShzbXUpIFwKQEAgLTY2NCwxNCArNjY1LDE4IEBAIHN0cnVj
dCBzbXVfZnVuY3MKIAkoKHNtdSktPmZ1bmNzLT5zdGFydF90aGVybWFsX2NvbnRyb2w/IChzbXUp
LT5mdW5jcy0+c3RhcnRfdGhlcm1hbF9jb250cm9sKChzbXUpKSA6IDApCiAjZGVmaW5lIHNtdV9z
dG9wX3RoZXJtYWxfY29udHJvbChzbXUpIFwKIAkoKHNtdSktPmZ1bmNzLT5zdG9wX3RoZXJtYWxf
Y29udHJvbD8gKHNtdSktPmZ1bmNzLT5zdG9wX3RoZXJtYWxfY29udHJvbCgoc211KSkgOiAwKQot
I2RlZmluZSBzbXVfcmVhZF9zZW5zb3Ioc211LCBzZW5zb3IsIGRhdGEsIHNpemUpIFwKLQkoKHNt
dSktPnBwdF9mdW5jcy0+cmVhZF9zZW5zb3I/IChzbXUpLT5wcHRfZnVuY3MtPnJlYWRfc2Vuc29y
KChzbXUpLCAoc2Vuc29yKSwgKGRhdGEpLCAoc2l6ZSkpIDogMCkKKworaW50IHNtdV9yZWFkX3Nl
bnNvcihzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJICAgIGVudW0gYW1kX3BwX3NlbnNvcnMg
c2Vuc29yLAorCQkgICAgdm9pZCAqZGF0YSwgdWludDMyX3QgKnNpemUpOwogI2RlZmluZSBzbXVf
c21jX3JlYWRfc2Vuc29yKHNtdSwgc2Vuc29yLCBkYXRhLCBzaXplKSBcCiAJKChzbXUpLT5mdW5j
cy0+cmVhZF9zZW5zb3I/IChzbXUpLT5mdW5jcy0+cmVhZF9zZW5zb3IoKHNtdSksIChzZW5zb3Ip
LCAoZGF0YSksIChzaXplKSkgOiAtRUlOVkFMKQotI2RlZmluZSBzbXVfZ2V0X3Bvd2VyX3Byb2Zp
bGVfbW9kZShzbXUsIGJ1ZikgXAotCSgoc211KS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJfcHJvZmls
ZV9tb2RlID8gKHNtdSktPnBwdF9mdW5jcy0+Z2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSgoc211KSwg
YnVmKSA6IDApCi0jZGVmaW5lIHNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgcGFyYW0s
IHBhcmFtX3NpemUpIFwKLQkoKHNtdSktPnBwdF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVfbW9k
ZSA/IChzbXUpLT5wcHRfZnVuY3MtPnNldF9wb3dlcl9wcm9maWxlX21vZGUoKHNtdSksIChwYXJh
bSksIChwYXJhbV9zaXplKSkgOiAwKQoraW50IHNtdV9nZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHN0
cnVjdCBzbXVfY29udGV4dCAqc211LCBjaGFyICpidWYpOworCitpbnQgc211X3NldF9wb3dlcl9w
cm9maWxlX21vZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkgICAgICAgbG9uZyAqcGFy
YW0sCisJCQkgICAgICAgdWludDMyX3QgcGFyYW1fc2l6ZSwKKwkJCSAgICAgICBib29sIGxvY2tf
bmVlZGVkKTsKICNkZWZpbmUgc211X3ByZV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2VkKHNtdSkgXAog
CSgoc211KS0+cHB0X2Z1bmNzLT5wcmVfZGlzcGxheV9jb25maWdfY2hhbmdlZCA/IChzbXUpLT5w
cHRfZnVuY3MtPnByZV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2VkKChzbXUpKSA6IDApCiAjZGVmaW5l
IHNtdV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2VkKHNtdSkgXApAQCAtNjg4LDE2ICs2OTMsMTEgQEAg
c3RydWN0IHNtdV9mdW5jcwogCSgoc211KS0+cHB0X2Z1bmNzLT5nZXRfcHJvZmlsaW5nX2Nsa19t
YXNrID8gKHNtdSktPnBwdF9mdW5jcy0+Z2V0X3Byb2ZpbGluZ19jbGtfbWFzaygoc211KSwgKGxl
dmVsKSwgKHNjbGtfbWFzayksIChtY2xrX21hc2spLCAoc29jX21hc2spKSA6IDApCiAjZGVmaW5l
IHNtdV9zZXRfY3B1X3Bvd2VyX3N0YXRlKHNtdSkgXAogCSgoc211KS0+cHB0X2Z1bmNzLT5zZXRf
Y3B1X3Bvd2VyX3N0YXRlID8gKHNtdSktPnBwdF9mdW5jcy0+c2V0X2NwdV9wb3dlcl9zdGF0ZSgo
c211KSkgOiAwKQotI2RlZmluZSBzbXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoc211KSBcCi0JKChz
bXUpLT5mdW5jcy0+Z2V0X2Zhbl9jb250cm9sX21vZGUgPyAoc211KS0+ZnVuY3MtPmdldF9mYW5f
Y29udHJvbF9tb2RlKChzbXUpKSA6IDApCi0jZGVmaW5lIHNtdV9zZXRfZmFuX2NvbnRyb2xfbW9k
ZShzbXUsIHZhbHVlKSBcCi0JKChzbXUpLT5mdW5jcy0+c2V0X2Zhbl9jb250cm9sX21vZGUgPyAo
c211KS0+ZnVuY3MtPnNldF9mYW5fY29udHJvbF9tb2RlKChzbXUpLCAodmFsdWUpKSA6IDApCi0j
ZGVmaW5lIHNtdV9nZXRfZmFuX3NwZWVkX3BlcmNlbnQoc211LCBzcGVlZCkgXAotCSgoc211KS0+
cHB0X2Z1bmNzLT5nZXRfZmFuX3NwZWVkX3BlcmNlbnQgPyAoc211KS0+cHB0X2Z1bmNzLT5nZXRf
ZmFuX3NwZWVkX3BlcmNlbnQoKHNtdSksIChzcGVlZCkpIDogMCkKLSNkZWZpbmUgc211X3NldF9m
YW5fc3BlZWRfcGVyY2VudChzbXUsIHNwZWVkKSBcCi0JKChzbXUpLT5mdW5jcy0+c2V0X2Zhbl9z
cGVlZF9wZXJjZW50ID8gKHNtdSktPmZ1bmNzLT5zZXRfZmFuX3NwZWVkX3BlcmNlbnQoKHNtdSks
IChzcGVlZCkpIDogMCkKLSNkZWZpbmUgc211X2dldF9mYW5fc3BlZWRfcnBtKHNtdSwgc3BlZWQp
IFwKLQkoKHNtdSktPnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9ycG0gPyAoc211KS0+cHB0X2Z1
bmNzLT5nZXRfZmFuX3NwZWVkX3JwbSgoc211KSwgKHNwZWVkKSkgOiAwKQoraW50IHNtdV9nZXRf
ZmFuX2NvbnRyb2xfbW9kZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CitpbnQgc211X3NldF9m
YW5fY29udHJvbF9tb2RlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBpbnQgdmFsdWUpOworaW50
IHNtdV9nZXRfZmFuX3NwZWVkX3BlcmNlbnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQz
Ml90ICpzcGVlZCk7CitpbnQgc211X3NldF9mYW5fc3BlZWRfcGVyY2VudChzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwgdWludDMyX3Qgc3BlZWQpOworaW50IHNtdV9nZXRfZmFuX3NwZWVkX3JwbShz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgKnNwZWVkKTsKIAogI2RlZmluZSBzbXVf
bXNnX2dldF9pbmRleChzbXUsIG1zZykgXAogCSgoc211KS0+cHB0X2Z1bmNzPyAoKHNtdSktPnBw
dF9mdW5jcy0+Z2V0X3NtdV9tc2dfaW5kZXg/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9zbXVfbXNn
X2luZGV4KChzbXUpLCAobXNnKSkgOiAtRUlOVkFMKSA6IC1FSU5WQUwpCkBAIC03MTUsNDAgKzcx
NSw0NiBAQCBzdHJ1Y3Qgc211X2Z1bmNzCiAJKChzbXUpLT5wcHRfZnVuY3M/ICgoc211KS0+cHB0
X2Z1bmNzLT5ydW5fYnRjPyAoc211KS0+cHB0X2Z1bmNzLT5ydW5fYnRjKChzbXUpKSA6IDApIDog
MCkKICNkZWZpbmUgc211X2dldF9hbGxvd2VkX2ZlYXR1cmVfbWFzayhzbXUsIGZlYXR1cmVfbWFz
aywgbnVtKSBcCiAJKChzbXUpLT5wcHRfZnVuY3M/ICgoc211KS0+cHB0X2Z1bmNzLT5nZXRfYWxs
b3dlZF9mZWF0dXJlX21hc2s/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9hbGxvd2VkX2ZlYXR1cmVf
bWFzaygoc211KSwgKGZlYXR1cmVfbWFzayksIChudW0pKSA6IDApIDogMCkKLSNkZWZpbmUgc211
X3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc211LCBjbGspIFwKLQkoKHNtdSktPmZ1bmNzLT5zZXRf
ZGVlcF9zbGVlcF9kY2VmY2xrID8gKHNtdSktPmZ1bmNzLT5zZXRfZGVlcF9zbGVlcF9kY2VmY2xr
KChzbXUpLCAoY2xrKSkgOiAwKQotI2RlZmluZSBzbXVfc2V0X2FjdGl2ZV9kaXNwbGF5X2NvdW50
KHNtdSwgY291bnQpIFwKLQkoKHNtdSktPmZ1bmNzLT5zZXRfYWN0aXZlX2Rpc3BsYXlfY291bnQg
PyAoc211KS0+ZnVuY3MtPnNldF9hY3RpdmVfZGlzcGxheV9jb3VudCgoc211KSwgKGNvdW50KSkg
OiAwKQoraW50IHNtdV9zZXRfZGVlcF9zbGVlcF9kY2VmY2xrKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LCBpbnQgY2xrKTsKK2ludCBzbXVfc2V0X2FjdGl2ZV9kaXNwbGF5X2NvdW50KHN0cnVjdCBz
bXVfY29udGV4dCAqc211LCB1aW50MzJfdCBjb3VudCk7CiAjZGVmaW5lIHNtdV9zdG9yZV9jYzZf
ZGF0YShzbXUsIHN0LCBjYzZfZGlzLCBwc3RfZGlzLCBwc3Rfc3dfZGlzKSBcCiAJKChzbXUpLT5m
dW5jcy0+c3RvcmVfY2M2X2RhdGEgPyAoc211KS0+ZnVuY3MtPnN0b3JlX2NjNl9kYXRhKChzbXUp
LCAoc3QpLCAoY2M2X2RpcyksIChwc3RfZGlzKSwgKHBzdF9zd19kaXMpKSA6IDApCi0jZGVmaW5l
IHNtdV9nZXRfY2xvY2tfYnlfdHlwZShzbXUsIHR5cGUsIGNsb2NrcykgXAotCSgoc211KS0+ZnVu
Y3MtPmdldF9jbG9ja19ieV90eXBlID8gKHNtdSktPmZ1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZSgo
c211KSwgKHR5cGUpLCAoY2xvY2tzKSkgOiAwKQotI2RlZmluZSBzbXVfZ2V0X21heF9oaWdoX2Ns
b2NrcyhzbXUsIGNsb2NrcykgXAotCSgoc211KS0+ZnVuY3MtPmdldF9tYXhfaGlnaF9jbG9ja3Mg
PyAoc211KS0+ZnVuY3MtPmdldF9tYXhfaGlnaF9jbG9ja3MoKHNtdSksIChjbG9ja3MpKSA6IDAp
Ci0jZGVmaW5lIHNtdV9nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVuY3koc211LCBjbGtfdHlw
ZSwgY2xvY2tzKSBcCi0JKChzbXUpLT5wcHRfZnVuY3MtPmdldF9jbG9ja19ieV90eXBlX3dpdGhf
bGF0ZW5jeSA/IChzbXUpLT5wcHRfZnVuY3MtPmdldF9jbG9ja19ieV90eXBlX3dpdGhfbGF0ZW5j
eSgoc211KSwgKGNsa190eXBlKSwgKGNsb2NrcykpIDogMCkKLSNkZWZpbmUgc211X2dldF9jbG9j
a19ieV90eXBlX3dpdGhfdm9sdGFnZShzbXUsIHR5cGUsIGNsb2NrcykgXAotCSgoc211KS0+cHB0
X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2UgPyAoc211KS0+cHB0X2Z1bmNz
LT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2UoKHNtdSksICh0eXBlKSwgKGNsb2Nrcykp
IDogMCkKLSNkZWZpbmUgc211X2Rpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KHNtdSwgY2xv
Y2tfcmVxKSBcCi0JKChzbXUpLT5mdW5jcy0+ZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3Qg
PyAoc211KS0+ZnVuY3MtPmRpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0KChzbXUpLCAoY2xv
Y2tfcmVxKSkgOiAwKQotI2RlZmluZSBzbXVfZGlzcGxheV9kaXNhYmxlX21lbW9yeV9jbG9ja19z
d2l0Y2goc211LCBkaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2gpIFwKLQkoKHNtdSktPnBwdF9m
dW5jcy0+ZGlzcGxheV9kaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2ggPyAoc211KS0+cHB0X2Z1
bmNzLT5kaXNwbGF5X2Rpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCgoc211KSwgKGRpc2FibGVf
bWVtb3J5X2Nsb2NrX3N3aXRjaCkpIDogLUVJTlZBTCkKKworaW50IHNtdV9nZXRfY2xvY2tfYnlf
dHlwZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCSAgZW51bSBhbWRfcHBfY2xvY2tfdHlw
ZSB0eXBlLAorCQkJICBzdHJ1Y3QgYW1kX3BwX2Nsb2NrcyAqY2xvY2tzKTsKKworaW50IHNtdV9n
ZXRfbWF4X2hpZ2hfY2xvY2tzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJICAgIHN0cnVj
dCBhbWRfcHBfc2ltcGxlX2Nsb2NrX2luZm8gKmNsb2Nrcyk7CisKK2ludCBzbXVfZ2V0X2Nsb2Nr
X2J5X3R5cGVfd2l0aF9sYXRlbmN5KHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJCSAgICAg
ICBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKKwkJCQkgICAgICAgc3RydWN0IHBwX2Nsb2Nr
X2xldmVsc193aXRoX2xhdGVuY3kgKmNsb2Nrcyk7CisKK2ludCBzbXVfZ2V0X2Nsb2NrX2J5X3R5
cGVfd2l0aF92b2x0YWdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJCSAgICAgICBlbnVt
IGFtZF9wcF9jbG9ja190eXBlIHR5cGUsCisJCQkJICAgICAgIHN0cnVjdCBwcF9jbG9ja19sZXZl
bHNfd2l0aF92b2x0YWdlICpjbG9ja3MpOworCitpbnQgc211X2Rpc3BsYXlfY2xvY2tfdm9sdGFn
ZV9yZXF1ZXN0KHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJCSAgICAgIHN0cnVjdCBwcF9k
aXNwbGF5X2Nsb2NrX3JlcXVlc3QgKmNsb2NrX3JlcSk7CitpbnQgc211X2Rpc3BsYXlfZGlzYWJs
ZV9tZW1vcnlfY2xvY2tfc3dpdGNoKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGRpc2Fi
bGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCk7CiAjZGVmaW5lIHNtdV9nZXRfZGFsX3Bvd2VyX2xldmVs
KHNtdSwgY2xvY2tzKSBcCiAJKChzbXUpLT5mdW5jcy0+Z2V0X2RhbF9wb3dlcl9sZXZlbCA/IChz
bXUpLT5mdW5jcy0+Z2V0X2RhbF9wb3dlcl9sZXZlbCgoc211KSwgKGNsb2NrcykpIDogMCkKICNk
ZWZpbmUgc211X2dldF9wZXJmX2xldmVsKHNtdSwgZGVzaWduYXRpb24sIGxldmVsKSBcCiAJKChz
bXUpLT5mdW5jcy0+Z2V0X3BlcmZfbGV2ZWwgPyAoc211KS0+ZnVuY3MtPmdldF9wZXJmX2xldmVs
KChzbXUpLCAoZGVzaWduYXRpb24pLCAobGV2ZWwpKSA6IDApCiAjZGVmaW5lIHNtdV9nZXRfY3Vy
cmVudF9zaGFsbG93X3NsZWVwX2Nsb2NrcyhzbXUsIGNsb2NrcykgXAogCSgoc211KS0+ZnVuY3Mt
PmdldF9jdXJyZW50X3NoYWxsb3dfc2xlZXBfY2xvY2tzID8gKHNtdSktPmZ1bmNzLT5nZXRfY3Vy
cmVudF9zaGFsbG93X3NsZWVwX2Nsb2Nrcygoc211KSwgKGNsb2NrcykpIDogMCkKLSNkZWZpbmUg
c211X25vdGlmeV9zbXVfZW5hYmxlX3B3ZShzbXUpIFwKLQkoKHNtdSktPmZ1bmNzLT5ub3RpZnlf
c211X2VuYWJsZV9wd2UgPyAoc211KS0+ZnVuY3MtPm5vdGlmeV9zbXVfZW5hYmxlX3B3ZSgoc211
KSkgOiAwKQotI2RlZmluZSBzbXVfc2V0X3dhdGVybWFya3NfZm9yX2Nsb2NrX3JhbmdlcyhzbXUs
IGNsb2NrX3JhbmdlcykgXAotCSgoc211KS0+ZnVuY3MtPnNldF93YXRlcm1hcmtzX2Zvcl9jbG9j
a19yYW5nZXMgPyAoc211KS0+ZnVuY3MtPnNldF93YXRlcm1hcmtzX2Zvcl9jbG9ja19yYW5nZXMo
KHNtdSksIChjbG9ja19yYW5nZXMpKSA6IDApCitpbnQgc211X25vdGlmeV9zbXVfZW5hYmxlX3B3
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CisKK2ludCBzbXVfc2V0X3dhdGVybWFya3NfZm9y
X2Nsb2NrX3JhbmdlcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCQkJc3RydWN0IGRtX3Bw
X3dtX3NldHNfd2l0aF9jbG9ja19yYW5nZXNfc29jMTUgKmNsb2NrX3Jhbmdlcyk7CiAjZGVmaW5l
IHNtdV9kcG1fc2V0X3V2ZF9lbmFibGUoc211LCBlbmFibGUpIFwKIAkoKHNtdSktPnBwdF9mdW5j
cy0+ZHBtX3NldF91dmRfZW5hYmxlID8gKHNtdSktPnBwdF9mdW5jcy0+ZHBtX3NldF91dmRfZW5h
YmxlKChzbXUpLCAoZW5hYmxlKSkgOiAwKQogI2RlZmluZSBzbXVfZHBtX3NldF92Y2VfZW5hYmxl
KHNtdSwgZW5hYmxlKSBcCiAJKChzbXUpLT5wcHRfZnVuY3MtPmRwbV9zZXRfdmNlX2VuYWJsZSA/
IChzbXUpLT5wcHRfZnVuY3MtPmRwbV9zZXRfdmNlX2VuYWJsZSgoc211KSwgKGVuYWJsZSkpIDog
MCkKLSNkZWZpbmUgc211X3NldF94Z21pX3BzdGF0ZShzbXUsIHBzdGF0ZSkgXAotCQkoKHNtdSkt
PmZ1bmNzLT5zZXRfeGdtaV9wc3RhdGUgPyAoc211KS0+ZnVuY3MtPnNldF94Z21pX3BzdGF0ZSgo
c211KSwgKHBzdGF0ZSkpIDogMCkKKworaW50IHNtdV9zZXRfeGdtaV9wc3RhdGUoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsCisJCQl1aW50MzJfdCBwc3RhdGUpOwogI2RlZmluZSBzbXVfc2V0X3dh
dGVybWFya3NfdGFibGUoc211LCB0YWIsIGNsb2NrX3JhbmdlcykgXAogCSgoc211KS0+cHB0X2Z1
bmNzLT5zZXRfd2F0ZXJtYXJrc190YWJsZSA/IChzbXUpLT5wcHRfZnVuY3MtPnNldF93YXRlcm1h
cmtzX3RhYmxlKChzbXUpLCAodGFiKSwgKGNsb2NrX3JhbmdlcykpIDogMCkKICNkZWZpbmUgc211
X2dldF9jdXJyZW50X2Nsa19mcmVxX2J5X3RhYmxlKHNtdSwgY2xrX3R5cGUsIHZhbHVlKSBcCkBA
IC03NTksMjIgKzc2NSwxOCBAQCBzdHJ1Y3Qgc211X2Z1bmNzCiAJKChzbXUpLT5wcHRfZnVuY3Mt
PmdldF90aGVybWFsX3RlbXBlcmF0dXJlX3JhbmdlPyAoc211KS0+cHB0X2Z1bmNzLT5nZXRfdGhl
cm1hbF90ZW1wZXJhdHVyZV9yYW5nZSgoc211KSwgKHJhbmdlKSkgOiAwKQogI2RlZmluZSBzbXVf
cmVnaXN0ZXJfaXJxX2hhbmRsZXIoc211KSBcCiAJKChzbXUpLT5mdW5jcy0+cmVnaXN0ZXJfaXJx
X2hhbmRsZXIgPyAoc211KS0+ZnVuY3MtPnJlZ2lzdGVyX2lycV9oYW5kbGVyKHNtdSkgOiAwKQot
I2RlZmluZSBzbXVfc2V0X2F6YWxpYV9kM19wbWUoc211KSBcCi0JKChzbXUpLT5mdW5jcy0+c2V0
X2F6YWxpYV9kM19wbWUgPyAoc211KS0+ZnVuY3MtPnNldF9hemFsaWFfZDNfcG1lKChzbXUpKSA6
IDApCisKK2ludCBzbXVfc2V0X2F6YWxpYV9kM19wbWUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUp
OwogI2RlZmluZSBzbXVfZ2V0X2RwbV91bHRpbWF0ZV9mcmVxKHNtdSwgcGFyYW0sIG1pbiwgbWF4
KSBcCiAJCSgoc211KS0+ZnVuY3MtPmdldF9kcG1fdWx0aW1hdGVfZnJlcSA/IChzbXUpLT5mdW5j
cy0+Z2V0X2RwbV91bHRpbWF0ZV9mcmVxKChzbXUpLCAocGFyYW0pLCAobWluKSwgKG1heCkpIDog
MCkKLSNkZWZpbmUgc211X2dldF91Y2xrX2RwbV9zdGF0ZXMoc211LCBjbG9ja3NfaW5fa2h6LCBu
dW1fc3RhdGVzKSBcCi0JKChzbXUpLT5wcHRfZnVuY3MtPmdldF91Y2xrX2RwbV9zdGF0ZXMgPyAo
c211KS0+cHB0X2Z1bmNzLT5nZXRfdWNsa19kcG1fc3RhdGVzKChzbXUpLCAoY2xvY2tzX2luX2to
eiksIChudW1fc3RhdGVzKSkgOiAwKQotI2RlZmluZSBzbXVfZ2V0X21heF9zdXN0YWluYWJsZV9j
bG9ja3NfYnlfZGMoc211LCBtYXhfY2xvY2tzKSBcCi0JKChzbXUpLT5mdW5jcy0+Z2V0X21heF9z
dXN0YWluYWJsZV9jbG9ja3NfYnlfZGMgPyAoc211KS0+ZnVuY3MtPmdldF9tYXhfc3VzdGFpbmFi
bGVfY2xvY2tzX2J5X2RjKChzbXUpLCAobWF4X2Nsb2NrcykpIDogMCkKLSNkZWZpbmUgc211X2Jh
Y29faXNfc3VwcG9ydChzbXUpIFwKLQkoKHNtdSktPmZ1bmNzLT5iYWNvX2lzX3N1cHBvcnQ/IChz
bXUpLT5mdW5jcy0+YmFjb19pc19zdXBwb3J0KChzbXUpKSA6IGZhbHNlKQotI2RlZmluZSBzbXVf
YmFjb19nZXRfc3RhdGUoc211LCBzdGF0ZSkgXAotCSgoc211KS0+ZnVuY3MtPmJhY29fZ2V0X3N0
YXRlPyAoc211KS0+ZnVuY3MtPmJhY29fZ2V0X3N0YXRlKChzbXUpLCAoc3RhdGUpKSA6IDApCi0j
ZGVmaW5lIHNtdV9iYWNvX3Jlc2V0KHNtdSkgXAotCSgoc211KS0+ZnVuY3MtPmJhY29fcmVzZXQ/
IChzbXUpLT5mdW5jcy0+YmFjb19yZXNldCgoc211KSkgOiAwKQotI2RlZmluZSBzbXVfbW9kZTJf
cmVzZXQoc211KSBcCi0JKChzbXUpLT5mdW5jcy0+bW9kZTJfcmVzZXQ/IChzbXUpLT5mdW5jcy0+
bW9kZTJfcmVzZXQoKHNtdSkpIDogMCkKKworYm9vbCBzbXVfYmFjb19pc19zdXBwb3J0KHN0cnVj
dCBzbXVfY29udGV4dCAqc211KTsKKworaW50IHNtdV9iYWNvX2dldF9zdGF0ZShzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfYmFjb19zdGF0ZSAqc3RhdGUpOworCitpbnQgc211X2Jh
Y29fcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOworCitpbnQgc211X21vZGUyX3Jlc2V0
KHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKICNkZWZpbmUgc211X2FzaWNfc2V0X3BlcmZvcm1h
bmNlX2xldmVsKHNtdSwgbGV2ZWwpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+c2V0X3BlcmZvcm1h
bmNlX2xldmVsPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRfcGVyZm9ybWFuY2VfbGV2ZWwoKHNtdSks
IChsZXZlbCkpIDogLUVJTlZBTCk7CiAjZGVmaW5lIHNtdV9kdW1wX3BwdGFibGUoc211KSBcCkBA
IC04MzMsNyArODM1LDggQEAgZXh0ZXJuIGludCBzbXVfZ2V0X2N1cnJlbnRfY2xvY2tzKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LAogZXh0ZXJuIGludCBzbXVfZHBtX3NldF9wb3dlcl9nYXRlKHN0
cnVjdCBzbXVfY29udGV4dCAqc211LHVpbnQzMl90IGJsb2NrX3R5cGUsIGJvb2wgZ2F0ZSk7CiBl
eHRlcm4gaW50IHNtdV9oYW5kbGVfdGFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJCSAg
IGVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWwsCi0JCQkgICBlbnVtIGFtZF9wcF90YXNr
IHRhc2tfaWQpOworCQkJICAgZW51bSBhbWRfcHBfdGFzayB0YXNrX2lkLAorCQkJICAgYm9vbCBs
b2NrX25lZWRlZCk7CiBpbnQgc211X3N3aXRjaF9wb3dlcl9wcm9maWxlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LAogCQkJICAgICBlbnVtIFBQX1NNQ19QT1dFUl9QUk9GSUxFIHR5cGUsCiAJCQkg
ICAgIGJvb2wgZW4pOwpAQCAtODQzLDcgKzg0Niw3IEBAIGludCBzbXVfZ2V0X2RwbV9mcmVxX2J5
X2luZGV4KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlw
CiBpbnQgc211X2dldF9kcG1fbGV2ZWxfY291bnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVu
dW0gc211X2Nsa190eXBlIGNsa190eXBlLAogCQkJICAgIHVpbnQzMl90ICp2YWx1ZSk7CiBpbnQg
c211X2dldF9kcG1fZnJlcV9yYW5nZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVf
Y2xrX3R5cGUgY2xrX3R5cGUsCi0JCQkgICB1aW50MzJfdCAqbWluLCB1aW50MzJfdCAqbWF4KTsK
KwkJCSAgIHVpbnQzMl90ICptaW4sIHVpbnQzMl90ICptYXgsIGJvb2wgbG9ja19uZWVkZWQpOwog
aW50IHNtdV9zZXRfc29mdF9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVt
IHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKIAkJCSAgICB1aW50MzJfdCBtaW4sIHVpbnQzMl90IG1h
eCk7CiBpbnQgc211X3NldF9oYXJkX2ZyZXFfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLApAQCAtODU4LDEwICs4NjEsMjAgQEAgc2l6ZV90
IHNtdV9zeXNfZ2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgY2hh
ciAqYnVmKTsKIGludCBzbXVfc3lzX3NldF9wcF9mZWF0dXJlX21hc2soc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIHVpbnQ2NF90IG5ld19tYXNrKTsKIGludCBzbXVfZm9yY2VfY2xrX2xldmVscyhz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJCSBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwK
LQkJCSB1aW50MzJfdCBtYXNrKTsKKwkJCSB1aW50MzJfdCBtYXNrLAorCQkJIGJvb2wgbG9ja19u
ZWVkZWQpOwogaW50IHNtdV9zZXRfbXAxX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAog
CQkgICAgICBlbnVtIHBwX21wMV9zdGF0ZSBtcDFfc3RhdGUpOwogaW50IHNtdV9zZXRfZGZfY3N0
YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQkgICAgICBlbnVtIHBwX2RmX2NzdGF0ZSBz
dGF0ZSk7CiAKK2ludCBzbXVfZ2V0X21heF9zdXN0YWluYWJsZV9jbG9ja3NfYnlfZGMoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJCSBzdHJ1Y3QgcHBfc211X252X2Nsb2NrX3RhYmxlICpt
YXhfY2xvY2tzKTsKKworaW50IHNtdV9nZXRfdWNsa19kcG1fc3RhdGVzKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LAorCQkJICAgIHVuc2lnbmVkIGludCAqY2xvY2tfdmFsdWVzX2luX2toeiwKKwkJ
CSAgICB1bnNpZ25lZCBpbnQgKm51bV9zdGF0ZXMpOworCitlbnVtIGFtZF9wbV9zdGF0ZV90eXBl
IHNtdV9nZXRfY3VycmVudF9wb3dlcl9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CisK
ICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEw
X3BwdC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5jCmluZGV4
IGI4OGFhZTliYjI0Mi4uZWFkNDBiMjg0MGY5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL3Bvd2VycGxheS9uYXZpMTBfcHB0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dl
cnBsYXkvbmF2aTEwX3BwdC5jCkBAIC03OTUsMTMgKzc5NSwxMyBAQCBzdGF0aWMgaW50IG5hdmkx
MF9wb3B1bGF0ZV91bWRfc3RhdGVfY2xrKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogCWludCBy
ZXQgPSAwOwogCXVpbnQzMl90IG1pbl9zY2xrX2ZyZXEgPSAwLCBtaW5fbWNsa19mcmVxID0gMDsK
IAotCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfU0NMSywgJm1pbl9zY2xr
X2ZyZXEsIE5VTEwpOworCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfU0NM
SywgJm1pbl9zY2xrX2ZyZXEsIE5VTEwsIGZhbHNlKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0
OwogCiAJc211LT5wc3RhdGVfc2NsayA9IG1pbl9zY2xrX2ZyZXEgKiAxMDA7CiAKLQlyZXQgPSBz
bXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgU01VX01DTEssICZtaW5fbWNsa19mcmVxLCBOVUxM
KTsKKwlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgU01VX01DTEssICZtaW5fbWNs
a19mcmVxLCBOVUxMLCBmYWxzZSk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApAQCAtODU0
LDcgKzg1NCw3IEBAIHN0YXRpYyBpbnQgbmF2aTEwX3ByZV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2Vk
KHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogCQlyZXR1cm4gcmV0OwogCiAJaWYgKHNtdV9mZWF0
dXJlX2lzX2VuYWJsZWQoc211LCBTTVVfRkVBVFVSRV9EUE1fVUNMS19CSVQpKSB7Ci0JCXJldCA9
IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfVUNMSywgTlVMTCwgJm1heF9mcmVxKTsK
KwkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xLLCBOVUxMLCAmbWF4
X2ZyZXEsIGZhbHNlKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAJCXJldCA9IHNtdV9z
ZXRfaGFyZF9mcmVxX3JhbmdlKHNtdSwgU01VX1VDTEssIDAsIG1heF9mcmVxKTsKQEAgLTkwNCw3
ICs5MDQsNyBAQCBzdGF0aWMgaW50IG5hdmkxMF9mb3JjZV9kcG1fbGltaXRfdmFsdWUoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsIGJvb2wgaGlnaGVzdCkKIAogCWZvciAoaSA9IDA7IGkgPCBBUlJB
WV9TSVpFKGNsa3MpOyBpKyspIHsKIAkJY2xrX3R5cGUgPSBjbGtzW2ldOwotCQlyZXQgPSBzbXVf
Z2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgY2xrX3R5cGUsICZtaW5fZnJlcSwgJm1heF9mcmVxKTsK
KwkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEs
ICZtYXhfZnJlcSwgZmFsc2UpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIApAQCAtOTMx
LDcgKzkzMSw3IEBAIHN0YXRpYyBpbnQgbmF2aTEwX3VuZm9yY2VfZHBtX2xldmVscyhzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSkKIAogCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGNsa3MpOyBp
KyspIHsKIAkJY2xrX3R5cGUgPSBjbGtzW2ldOwotCQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3Jh
bmdlKHNtdSwgY2xrX3R5cGUsICZtaW5fZnJlcSwgJm1heF9mcmVxKTsKKwkJcmV0ID0gc211X2dl
dF9kcG1fZnJlcV9yYW5nZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEsICZtYXhfZnJlcSwgZmFs
c2UpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIApAQCAtMTI2Niw3ICsxMjY2LDEwIEBA
IHN0YXRpYyBpbnQgbmF2aTEwX25vdGlmeV9zbWNfZGlzcGFseV9jb25maWcoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUpCiAJaWYgKHNtdV9mZWF0dXJlX2lzX3N1cHBvcnRlZChzbXUsIFNNVV9GRUFU
VVJFX0RQTV9EQ0VGQ0xLX0JJVCkpIHsKIAkJY2xvY2tfcmVxLmNsb2NrX3R5cGUgPSBhbWRfcHBf
ZGNlZl9jbG9jazsKIAkJY2xvY2tfcmVxLmNsb2NrX2ZyZXFfaW5fa2h6ID0gbWluX2Nsb2Nrcy5k
Y2VmX2Nsb2NrICogMTA7Ci0JCWlmICghc211X2Rpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0
KHNtdSwgJmNsb2NrX3JlcSkpIHsKKworCQlpZiAoc211LT5mdW5jcy0+ZGlzcGxheV9jbG9ja192
b2x0YWdlX3JlcXVlc3QpCisJCQlyZXQgPSBzbXUtPmZ1bmNzLT5kaXNwbGF5X2Nsb2NrX3ZvbHRh
Z2VfcmVxdWVzdChzbXUsICZjbG9ja19yZXEpOworCQlpZiAoIXJldCkgewogCQkJaWYgKHNtdV9m
ZWF0dXJlX2lzX3N1cHBvcnRlZChzbXUsIFNNVV9GRUFUVVJFX0RTX0RDRUZDTEtfQklUKSkgewog
CQkJCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsCiAJCQkJCQkJCSAgU01V
X01TR19TZXRNaW5EZWVwU2xlZXBEY2VmY2xrLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2FtZC9wb3dlcnBsYXkvcmVub2lyX3BwdC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBs
YXkvcmVub2lyX3BwdC5jCmluZGV4IDZhZWRmZmQ3MzlkYi4uNjAzNmY2ODJlNmY5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9yZW5vaXJfcHB0LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvcmVub2lyX3BwdC5jCkBAIC0xOTQsNyArMTk0LDcg
QEAgc3RhdGljIGludCByZW5vaXJfcHJpbnRfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwKIAljYXNlIFNNVV9TQ0xLOgogCQkvKiByZXRpcnZlIHRhYmxlIHJldHVybmVkIHBhcmFt
dGVycyB1bml0IGlzIE1IeiAqLwogCQljdXJfdmFsdWUgPSBtZXRyaWNzLkNsb2NrRnJlcXVlbmN5
W0NMT0NLX0dGWENMS107Ci0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVf
R0ZYQ0xLLCAmbWluLCAmbWF4KTsKKwkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUs
IFNNVV9HRlhDTEssICZtaW4sICZtYXgsIGZhbHNlKTsKIAkJaWYgKCFyZXQpIHsKIAkJCS8qIGRy
aXZlciBvbmx5IGtub3cgbWluL21heCBnZnhfY2xrLCBBZGQgbGV2ZWwgMSBmb3IgYWxsIG90aGVy
IGdmeCBjbGtzICovCiAJCQlpZiAoY3VyX3ZhbHVlICA9PSBtYXgpCkBAIC0yNTEsNyArMjUxLDYg
QEAgc3RhdGljIGVudW0gYW1kX3BtX3N0YXRlX3R5cGUgcmVub2lyX2dldF9jdXJyZW50X3Bvd2Vy
X3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dAogCSAgICAhc211X2RwbV9jdHgtPmRwbV9jdXJyZW50
X3Bvd2VyX3N0YXRlKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCW11dGV4X2xvY2soJihzbXUtPm11
dGV4KSk7CiAJc3dpdGNoIChzbXVfZHBtX2N0eC0+ZHBtX2N1cnJlbnRfcG93ZXJfc3RhdGUtPmNs
YXNzaWZpY2F0aW9uLnVpX2xhYmVsKSB7CiAJY2FzZSBTTVVfU1RBVEVfVUlfTEFCRUxfQkFUVEVS
WToKIAkJcG1fdHlwZSA9IFBPV0VSX1NUQVRFX1RZUEVfQkFUVEVSWTsKQEAgLTI2OSw3ICsyNjgs
NiBAQCBzdGF0aWMgZW51bSBhbWRfcG1fc3RhdGVfdHlwZSByZW5vaXJfZ2V0X2N1cnJlbnRfcG93
ZXJfc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0CiAJCQlwbV90eXBlID0gUE9XRVJfU1RBVEVfVFlQ
RV9ERUZBVUxUOwogCQlicmVhazsKIAl9Ci0JbXV0ZXhfdW5sb2NrKCYoc211LT5tdXRleCkpOwog
CiAJcmV0dXJuIHBtX3R5cGU7CiB9CkBAIC0zMTQsNyArMzEyLDcgQEAgc3RhdGljIGludCByZW5v
aXJfZm9yY2VfZHBtX2xpbWl0X3ZhbHVlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGhp
Z2hlc3QpCiAKIAlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShjbGtzKTsgaSsrKSB7CiAJCWNs
a190eXBlID0gY2xrc1tpXTsKLQkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIGNs
a190eXBlLCAmbWluX2ZyZXEsICZtYXhfZnJlcSk7CisJCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFf
cmFuZ2Uoc211LCBjbGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEsIGZhbHNlKTsKIAkJaWYg
KHJldCkKIAkJCXJldHVybiByZXQ7CiAKQEAgLTM0OCw3ICszNDYsNyBAQCBzdGF0aWMgaW50IHJl
bm9pcl91bmZvcmNlX2RwbV9sZXZlbHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpIHsKIAogCQlj
bGtfdHlwZSA9IGNsa19mZWF0dXJlX21hcFtpXS5jbGtfdHlwZTsKIAotCQlyZXQgPSBzbXVfZ2V0
X2RwbV9mcmVxX3JhbmdlKHNtdSwgY2xrX3R5cGUsICZtaW5fZnJlcSwgJm1heF9mcmVxKTsKKwkJ
cmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIGNsa190eXBlLCAmbWluX2ZyZXEsICZt
YXhfZnJlcSwgZmFsc2UpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIApAQCAtNDM1LDcg
KzQzMyw3IEBAIHN0YXRpYyBpbnQgcmVub2lyX2ZvcmNlX2Nsa19sZXZlbHMoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsCiAJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQogCi0JCXJldCA9IHNtdV9nZXRf
ZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfR0ZYQ0xLLCAmbWluX2ZyZXEsICZtYXhfZnJlcSk7CisJ
CXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfR0ZYQ0xLLCAmbWluX2ZyZXEs
ICZtYXhfZnJlcSwgZmFsc2UpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIAkJcmV0ID0g
c211X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwgU01VX01TR19TZXRTb2Z0TWF4R2Z4Q2xr
LApAQCAtNTExLDcgKzUwOSw3IEBAIHN0YXRpYyBpbnQgcmVub2lyX3NldF9wZWFrX2Nsb2NrX2J5
X2RldmljZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAlpbnQgcmV0ID0gMDsKIAl1aW50MzJf
dCBzY2xrX2ZyZXEgPSAwLCB1Y2xrX2ZyZXEgPSAwOwogCi0JcmV0ID0gc211X2dldF9kcG1fZnJl
cV9yYW5nZShzbXUsIFNNVV9TQ0xLLCBOVUxMLCAmc2Nsa19mcmVxKTsKKwlyZXQgPSBzbXVfZ2V0
X2RwbV9mcmVxX3JhbmdlKHNtdSwgU01VX1NDTEssIE5VTEwsICZzY2xrX2ZyZXEsIGZhbHNlKTsK
IAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCkBAIC01MTksNyArNTE3LDcgQEAgc3RhdGljIGlu
dCByZW5vaXJfc2V0X3BlYWtfY2xvY2tfYnlfZGV2aWNlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
KQogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3Jh
bmdlKHNtdSwgU01VX1VDTEssIE5VTEwsICZ1Y2xrX2ZyZXEpOworCXJldCA9IHNtdV9nZXRfZHBt
X2ZyZXFfcmFuZ2Uoc211LCBTTVVfVUNMSywgTlVMTCwgJnVjbGtfZnJlcSwgZmFsc2UpOwogCWlm
IChyZXQpCiAJCXJldHVybiByZXQ7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
cG93ZXJwbGF5L3NtdV92MTFfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211
X3YxMV8wLmMKaW5kZXggYjY4Y2I4YmFkYzc1Li5jYWY4YTM3Mjg1NDEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTFfMC5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTFfMC5jCkBAIC04MDksOCArODA5LDExIEBAIHN0YXRp
YyBpbnQgc211X3YxMV8wX3NldF9taW5fZGNlZl9kZWVwX3NsZWVwKHN0cnVjdCBzbXVfY29udGV4
dCAqc211KQogCWlmICghdGFibGVfY29udGV4dCkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKLQlyZXR1
cm4gc211X3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc211LAotCQkJCQkgIHRhYmxlX2NvbnRleHQt
PmJvb3RfdmFsdWVzLmRjZWZjbGsgLyAxMDApOworCWlmIChzbXUtPmZ1bmNzLT5zZXRfZGVlcF9z
bGVlcF9kY2VmY2xrKQorCQlyZXR1cm4gc211LT5mdW5jcy0+c2V0X2RlZXBfc2xlZXBfZGNlZmNs
ayhzbXUsCisJCQkJdGFibGVfY29udGV4dC0+Ym9vdF92YWx1ZXMuZGNlZmNsayAvIDEwMCk7CisK
KwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGludCBzbXVfdjExXzBfc2V0X3Rvb2xfdGFibGVfbG9j
YXRpb24oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCkBAIC0xMzI1LDkgKzEzMjgsNyBAQCBzbXVf
djExXzBfZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3Qoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsCiAJCWlmIChjbGtfc2VsZWN0ID09IFNNVV9VQ0xLICYmIHNtdS0+ZGlzYWJsZV91Y2xrX3N3
aXRjaCkKIAkJCXJldHVybiAwOwogCi0JCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCQlyZXQg
PSBzbXVfc2V0X2hhcmRfZnJlcV9yYW5nZShzbXUsIGNsa19zZWxlY3QsIGNsa19mcmVxLCAwKTsK
LQkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCQlpZihjbGtfc2VsZWN0ID09IFNNVV9V
Q0xLKQogCQkJc211LT5oYXJkX21pbl91Y2xrX3JlcV9mcm9tX2RhbCA9IGNsa19mcmVxOwpAQCAt
MTM3MCwxMiArMTM3MSwxMCBAQCBzdGF0aWMgaW50IHNtdV92MTFfMF9nZnhfb2ZmX2NvbnRyb2wo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGJvb2wgZW5hYmxlKQogCWNhc2UgQ0hJUF9OQVZJMTI6
CiAJCWlmICghKGFkZXYtPnBtLnBwX2ZlYXR1cmUgJiBQUF9HRlhPRkZfTUFTSykpCiAJCQlyZXR1
cm4gMDsKLQkJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAJCWlmIChlbmFibGUpCiAJCQlyZXQg
PSBzbXVfc2VuZF9zbWNfbXNnKHNtdSwgU01VX01TR19BbGxvd0dmeE9mZik7CiAJCWVsc2UKIAkJ
CXJldCA9IHNtdV9zZW5kX3NtY19tc2coc211LCBTTVVfTVNHX0Rpc2FsbG93R2Z4T2ZmKTsKLQkJ
bXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJYnJlYWs7
CkBAIC0xNDkxLDEwICsxNDkwLDkgQEAgc3RhdGljIGludCBzbXVfdjExXzBfc2V0X2Zhbl9zcGVl
ZF9ycG0oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJaWYgKCFzcGVlZCkKIAkJcmV0dXJuIC1F
SU5WQUw7CiAKLQltdXRleF9sb2NrKCYoc211LT5tdXRleCkpOwogCXJldCA9IHNtdV92MTFfMF9h
dXRvX2Zhbl9jb250cm9sKHNtdSwgMCk7CiAJaWYgKHJldCkKLQkJZ290byBzZXRfZmFuX3NwZWVk
X3JwbV9mYWlsZWQ7CisJCXJldHVybiByZXQ7CiAKIAljcnlzdGFsX2Nsb2NrX2ZyZXEgPSBhbWRn
cHVfYXNpY19nZXRfeGNsayhhZGV2KTsKIAl0YWNoX3BlcmlvZCA9IDYwICogY3J5c3RhbF9jbG9j
a19mcmVxICogMTAwMDAgLyAoOCAqIHNwZWVkKTsKQEAgLTE1MDUsOCArMTUwMyw2IEBAIHN0YXRp
YyBpbnQgc211X3YxMV8wX3NldF9mYW5fc3BlZWRfcnBtKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAogCiAJcmV0ID0gc211X3YxMV8wX3NldF9mYW5fc3RhdGljX21vZGUoc211LCBGRE9fUFdNX01P
REVfU1RBVElDX1JQTSk7CiAKLXNldF9mYW5fc3BlZWRfcnBtX2ZhaWxlZDoKLQltdXRleF91bmxv
Y2soJihzbXUtPm11dGV4KSk7CiAJcmV0dXJuIHJldDsKIH0KIApAQCAtMTUxNywxMSArMTUxMyw5
IEBAIHN0YXRpYyBpbnQgc211X3YxMV8wX3NldF94Z21pX3BzdGF0ZShzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwKIAkJCQkgICAgIHVpbnQzMl90IHBzdGF0ZSkKIHsKIAlpbnQgcmV0ID0gMDsKLQlt
dXRleF9sb2NrKCYoc211LT5tdXRleCkpOwogCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9w
YXJhbShzbXUsCiAJCQkJCSAgU01VX01TR19TZXRYZ21pTW9kZSwKIAkJCQkJICBwc3RhdGUgPyBY
R01JX1NUQVRFX0QwIDogWEdNSV9TVEFURV9EMyk7Ci0JbXV0ZXhfdW5sb2NrKCYoc211LT5tdXRl
eCkpOwogCXJldHVybiByZXQ7CiB9CiAKQEAgLTE2MzMsOSArMTYyNyw3IEBAIHN0YXRpYyBpbnQg
c211X3YxMV8wX3NldF9hemFsaWFfZDNfcG1lKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogewog
CWludCByZXQgPSAwOwogCi0JbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAJcmV0ID0gc211X3Nl
bmRfc21jX21zZyhzbXUsIFNNVV9NU0dfQmFjb0F1ZGlvRDNQTUUpOwotCW11dGV4X3VubG9jaygm
c211LT5tdXRleCk7CiAKIAlyZXR1cm4gcmV0OwogfQpAQCAtMTc2Nyw3ICsxNzU5LDYgQEAgc3Rh
dGljIGludCBzbXVfdjExXzBfZ2V0X2RwbV91bHRpbWF0ZV9mcmVxKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBlbnVtIHNtdV9jbGsKIAlpbnQgcmV0ID0gMCwgY2xrX2lkID0gMDsKIAl1aW50MzJf
dCBwYXJhbSA9IDA7CiAKLQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAljbGtfaWQgPSBzbXVf
Y2xrX2dldF9pbmRleChzbXUsIGNsa190eXBlKTsKIAlpZiAoY2xrX2lkIDwgMCkgewogCQlyZXQg
PSAtRUlOVkFMOwpAQCAtMTc5NCw3ICsxNzg1LDYgQEAgc3RhdGljIGludCBzbXVfdjExXzBfZ2V0
X2RwbV91bHRpbWF0ZV9mcmVxKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGsK
IAl9CiAKIGZhaWxlZDoKLQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCXJldHVybiByZXQ7
CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTJf
MC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMl8wLmMKaW5kZXggYzk2
OTFkMGZiNTIzLi42YmY5NDJkM2NlY2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
cG93ZXJwbGF5L3NtdV92MTJfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L3NtdV92MTJfMC5jCkBAIC0zMjUsOCArMzI1LDYgQEAgc3RhdGljIGludCBzbXVfdjEyXzBfZ2V0
X2RwbV91bHRpbWF0ZV9mcmVxKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGsK
IAlpbnQgcmV0ID0gMDsKIAl1aW50MzJfdCBtY2xrX21hc2ssIHNvY19tYXNrOwogCi0JbXV0ZXhf
bG9jaygmc211LT5tdXRleCk7Ci0KIAlpZiAobWF4KSB7CiAJCXJldCA9IHNtdV9nZXRfcHJvZmls
aW5nX2Nsa19tYXNrKHNtdSwgQU1EX0RQTV9GT1JDRURfTEVWRUxfUFJPRklMRV9QRUFLLAogCQkJ
CQkJIE5VTEwsCkBAIC0zOTYsNyArMzk0LDYgQEAgc3RhdGljIGludCBzbXVfdjEyXzBfZ2V0X2Rw
bV91bHRpbWF0ZV9mcmVxKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGsKIAkJ
fQogCX0KIGZhaWxlZDoKLQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCXJldHVybiByZXQ7
CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3ZlZ2EyMF9w
cHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3ZlZ2EyMF9wcHQuYwppbmRleCBh
NzZmZmQ1ODQwNGUuLmMyNDlkZjkyNTZjNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9wb3dlcnBsYXkvdmVnYTIwX3BwdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJw
bGF5L3ZlZ2EyMF9wcHQuYwpAQCAtNjM1LDcgKzYzNSw2IEBAIGFtZF9wbV9zdGF0ZV90eXBlIHZl
Z2EyMF9nZXRfY3VycmVudF9wb3dlcl9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAkg
ICAgIXNtdV9kcG1fY3R4LT5kcG1fY3VycmVudF9wb3dlcl9zdGF0ZSkKIAkJcmV0dXJuIC1FSU5W
QUw7CiAKLQltdXRleF9sb2NrKCYoc211LT5tdXRleCkpOwogCXN3aXRjaCAoc211X2RwbV9jdHgt
PmRwbV9jdXJyZW50X3Bvd2VyX3N0YXRlLT5jbGFzc2lmaWNhdGlvbi51aV9sYWJlbCkgewogCWNh
c2UgU01VX1NUQVRFX1VJX0xBQkVMX0JBVFRFUlk6CiAJCXBtX3R5cGUgPSBQT1dFUl9TVEFURV9U
WVBFX0JBVFRFUlk7CkBAIC02NTMsNyArNjUyLDYgQEAgYW1kX3BtX3N0YXRlX3R5cGUgdmVnYTIw
X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogCQkJcG1f
dHlwZSA9IFBPV0VSX1NUQVRFX1RZUEVfREVGQVVMVDsKIAkJYnJlYWs7CiAJfQotCW11dGV4X3Vu
bG9jaygmKHNtdS0+bXV0ZXgpKTsKIAogCXJldHVybiBwbV90eXBlOwogfQpAQCAtMTI3Nyw4ICsx
Mjc1LDYgQEAgc3RhdGljIGludCB2ZWdhMjBfZm9yY2VfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwKIAl1aW50MzJfdCBzb2Z0X21pbl9sZXZlbCwgc29mdF9tYXhfbGV2ZWwsIGhh
cmRfbWluX2xldmVsOwogCWludCByZXQgPSAwOwogCi0JbXV0ZXhfbG9jaygmKHNtdS0+bXV0ZXgp
KTsKLQogCXNvZnRfbWluX2xldmVsID0gbWFzayA/IChmZnMobWFzaykgLSAxKSA6IDA7CiAJc29m
dF9tYXhfbGV2ZWwgPSBtYXNrID8gKGZscyhtYXNrKSAtIDEpIDogMDsKIApAQCAtMTQzMSw3ICsx
NDI3LDYgQEAgc3RhdGljIGludCB2ZWdhMjBfZm9yY2VfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwKIAkJYnJlYWs7CiAJfQogCi0JbXV0ZXhfdW5sb2NrKCYoc211LT5tdXRleCkp
OwogCXJldHVybiByZXQ7CiB9CiAKQEAgLTE0NDYsOCArMTQ0MSw2IEBAIHN0YXRpYyBpbnQgdmVn
YTIwX2dldF9jbG9ja19ieV90eXBlX3dpdGhfbGF0ZW5jeShzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwKIAogCWRwbV90YWJsZSA9IHNtdV9kcG0tPmRwbV9jb250ZXh0OwogCi0JbXV0ZXhfbG9jaygm
c211LT5tdXRleCk7Ci0KIAlzd2l0Y2ggKGNsa190eXBlKSB7CiAJY2FzZSBTTVVfR0ZYQ0xLOgog
CQlzaW5nbGVfZHBtX3RhYmxlID0gJihkcG1fdGFibGUtPmdmeF90YWJsZSk7CkBAIC0xNDY5LDcg
KzE0NjIsNiBAQCBzdGF0aWMgaW50IHZlZ2EyMF9nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVu
Y3koc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCXJldCA9IC1FSU5WQUw7CiAJfQogCi0JbXV0
ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAlyZXR1cm4gcmV0OwogfQogCkBAIC0yNTQyLDggKzI1
MzQsNiBAQCBzdGF0aWMgaW50IHZlZ2EyMF9zZXRfb2RfcGVyY2VudGFnZShzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwKIAlpbnQgZmVhdHVyZV9lbmFibGVkOwogCVBQQ0xLX2UgY2xrX2lkOwogCi0J
bXV0ZXhfbG9jaygmKHNtdS0+bXV0ZXgpKTsKLQogCWRwbV90YWJsZSA9IHNtdV9kcG0tPmRwbV9j
b250ZXh0OwogCWdvbGRlbl90YWJsZSA9IHNtdV9kcG0tPmdvbGRlbl9kcG1fY29udGV4dDsKIApA
QCAtMjU5MywxMSArMjU4MywxMCBAQCBzdGF0aWMgaW50IHZlZ2EyMF9zZXRfb2RfcGVyY2VudGFn
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAl9CiAKIAlyZXQgPSBzbXVfaGFuZGxlX3Rhc2so
c211LCBzbXVfZHBtLT5kcG1fbGV2ZWwsCi0JCQkgICAgICBBTURfUFBfVEFTS19SRUFESlVTVF9Q
T1dFUl9TVEFURSk7CisJCQkgICAgICBBTURfUFBfVEFTS19SRUFESlVTVF9QT1dFUl9TVEFURSwK
KwkJCSAgICAgIGZhbHNlKTsKIAogc2V0X29kX2ZhaWxlZDoKLQltdXRleF91bmxvY2soJihzbXUt
Pm11dGV4KSk7Ci0KIAlyZXR1cm4gcmV0OwogfQogCkBAIC0yODIyLDEwICsyODExLDkgQEAgc3Rh
dGljIGludCB2ZWdhMjBfb2RuX2VkaXRfZHBtX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAogCX0KIAogCWlmICh0eXBlID09IFBQX09EX0NPTU1JVF9EUE1fVEFCTEUpIHsKLQkJbXV0ZXhf
bG9jaygmKHNtdS0+bXV0ZXgpKTsKIAkJcmV0ID0gc211X2hhbmRsZV90YXNrKHNtdSwgc211X2Rw
bS0+ZHBtX2xldmVsLAotCQkJCSAgICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VSX1NUQVRF
KTsKLQkJbXV0ZXhfdW5sb2NrKCYoc211LT5tdXRleCkpOworCQkJCSAgICAgIEFNRF9QUF9UQVNL
X1JFQURKVVNUX1BPV0VSX1NUQVRFLAorCQkJCSAgICAgIGZhbHNlKTsKIAl9CiAKIAlyZXR1cm4g
cmV0OwotLSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwphbWQtZ2Z4IG1haWxpbmcgbGlzdAphbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2FtZC1nZng=
