Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E96C1A2FBD5
	for <lists+amd-gfx@lfdr.de>; Mon, 10 Feb 2025 22:17:48 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 618FF10E3C6;
	Mon, 10 Feb 2025 21:17:46 +0000 (UTC)
Authentication-Results: gabe.freedesktop.org;
	dkim=pass (2048-bit key; unprotected) header.d=kernel.org header.i=@kernel.org header.b="FdEw46KN";
	dkim-atps=neutral
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from nyc.source.kernel.org (nyc.source.kernel.org [147.75.193.91])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5EE2B10E3C6
 for <amd-gfx@lists.freedesktop.org>; Mon, 10 Feb 2025 21:17:45 +0000 (UTC)
Received: from smtp.kernel.org (transwarp.subspace.kernel.org [100.75.92.58])
 by nyc.source.kernel.org (Postfix) with ESMTP id BFBD4A41962;
 Mon, 10 Feb 2025 21:15:58 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 66829C4CED1;
 Mon, 10 Feb 2025 21:17:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1739222264;
 bh=0WiS2iJ8X0tprDHWqPr2+SnJmVW5FmHuLVuuvUyOo68=;
 h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
 b=FdEw46KNjBNPxP4WKIGIlv1VwUhixUaJWyNSb0OiBDv0hRuJG8YtB3ARqv1QpYV2V
 8fiD5ycbF5PolY3kCsGKd1Q6ozdyBIIYZEFYc0KuY7h6MOJt+VyXRemZM/tLmUSi+V
 dzL3fMSJwr69ncsS/dopdB2SCRhX62W186B0CL2dgjGhljNcGhQGi6NP7/VoV0GhAW
 dvA2DonWUlJP1GtcrEg3w4qvVVMj9Mk+fWasw2mHKA4qFn3R+gIFiMijhQpt63e0SS
 3xaBIlQgBi3dLBnPFda9I7wFoAfFoj3RQy6zUGi7TFLbbboYoeOJUOp/4cRF6+l7D8
 p2gmyq4MwdfGA==
Date: Mon, 10 Feb 2025 13:17:41 -0800
From: Josh Poimboeuf <jpoimboe@kernel.org>
To: Tiezhu Yang <yangtiezhu@loongson.cn>
Cc: Huacai Chen <chenhuacai@kernel.org>,
 Peter Zijlstra <peterz@infradead.org>, loongarch@lists.linux.dev,
 amd-gfx@lists.freedesktop.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v6 4/9] objtool: Handle unreachable entry of rodata
Message-ID: <20250210211741.pfxmdj4ssudk3346@jpoimboe>
References: <20241217010905.13054-1-yangtiezhu@loongson.cn>
 <20241217010905.13054-5-yangtiezhu@loongson.cn>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20241217010905.13054-5-yangtiezhu@loongson.cn>
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

On Tue, Dec 17, 2024 at 09:09:00AM +0800, Tiezhu Yang wrote:
> When compiling with Clang on LoongArch, there exists unreachable entry of
> rodata which points to a position after the function return instruction,
> this is generated by compiler to fill the non-existent switch case, just
> skip the entry when parsing the relocation section of rodata.
> 
> Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
> ---
>  tools/objtool/check.c | 7 ++++---
>  1 file changed, 4 insertions(+), 3 deletions(-)
> 
> diff --git a/tools/objtool/check.c b/tools/objtool/check.c
> index cff7416b207e..654cffcf9512 100644
> --- a/tools/objtool/check.c
> +++ b/tools/objtool/check.c
> @@ -1986,9 +1986,10 @@ static int add_jump_table(struct objtool_file *file, struct instruction *insn,
>  		if (!dest_insn)
>  			break;
>  
> -		/* Make sure the destination is in the same function: */
> -		if (!insn_func(dest_insn) || insn_func(dest_insn)->pfunc != pfunc)
> -			break;
> +		if (!insn_func(dest_insn) || insn_func(dest_insn)->pfunc != pfunc) {
> +			prev_offset = reloc_offset(reloc);
> +			continue;
> +		}

This patch can be dropped, this is already fixed in the -tip tree:

  3724062ca2b1 ("objtool: Ignore dangling jump table entries")

-- 
Josh
