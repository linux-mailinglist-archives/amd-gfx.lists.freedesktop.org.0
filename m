Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4848B230791
	for <lists+amd-gfx@lfdr.de>; Tue, 28 Jul 2020 12:22:44 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 897586E243;
	Tue, 28 Jul 2020 10:22:42 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM02-BL2-obe.outbound.protection.outlook.com
 (mail-eopbgr750088.outbound.protection.outlook.com [40.107.75.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 77A996E243
 for <amd-gfx@lists.freedesktop.org>; Tue, 28 Jul 2020 10:22:41 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=e3eCuy/LGyzkRantCPwjO1fx22EMzntdqgWYb5slCFjx4oikrVMdOSm0D7toII8Jkn0nkVLonI7f7Fb4WTkOOEMnEMy5ySaFVBEgPjdpV5Fr2+SvjphHT7DksHNqagGnYa25SDNWBG8zqx+z41c2jAqY55s+LAHYP2aR+d8vcy1CmGz/zKgRp6Ar4HzHStSbgHnc2RURGQhUOSAREtCmzgWikd0k0hyKvkTbbJ5HKxtPX0TZGroR+Y799uOq3OZQcxldj5xbVWHNmE73ABLWbopbwFzqwNm1oaGfCbXFoyT4nSV8HlWvwpWsof9hBoGzIJQqT/LwOQqtamd17b1Rxw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dXYIqER/bfkBiWtTt2cynn1cdHIMTDPvvq50dRPBzwA=;
 b=D876DbMIXHjA0DYLDyAc9i3wrJZMvG8mybayTXR5/fV8QI0dG+kVZ6smZp62hX+vSaXO0c2FperIZzFHKqsEGqANJfXU4hhmzjdHD+D3njdPz313xamqHKmCUUq3gSFut4e2kOexf56mnKxUaUU0fAmraKoRA9U+1p9w28ZbCooJO6NaakPNTT6QwntBVu0xz07ufkSnqdvMfdXZjn+LeJGELIb49RBar1tBOs92dfq4lAXfufRgTkbFxfweg9MABRasj3qM5o13286+WNZHaBeDuAGb/FKV2qBJCyQuZFMU/NriIAxpJ0SNgQsDq+mcCnHbHm37ttjYlzyVYdvuBA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dXYIqER/bfkBiWtTt2cynn1cdHIMTDPvvq50dRPBzwA=;
 b=AEKi9cmiGIewISBW8wT5EFZM0uNeRHQom+8UZsR6bjZEaUh159nTvi/zSUZcISFfLz9hunazM8BH7Wrx7Jp6rQKJDP5NrNhgeJ2x8b+AnPUH1tcvYkJ8FzaM4mlaaL8o3agzcuvwYrOFdLq1KWNenXL4p2hQADYWRlH24+0cE4Q=
Authentication-Results: lists.freedesktop.org; dkim=none (message not signed)
 header.d=none; lists.freedesktop.org;
 dmarc=none action=none header.from=amd.com;
Received: from CY4PR1201MB2471.namprd12.prod.outlook.com
 (2603:10b6:903:d0::10) by CY4PR12MB1847.namprd12.prod.outlook.com
 (2603:10b6:903:11c::23) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3216.24; Tue, 28 Jul
 2020 10:22:39 +0000
Received: from CY4PR1201MB2471.namprd12.prod.outlook.com
 ([fe80::3912:f141:7c9c:ea33]) by CY4PR1201MB2471.namprd12.prod.outlook.com
 ([fe80::3912:f141:7c9c:ea33%9]) with mapi id 15.20.3216.024; Tue, 28 Jul 2020
 10:22:38 +0000
From: Jack Xiao <Jack.Xiao@amd.com>
To: amd-gfx@lists.freedesktop.org, Alexander.Deucher@amd.com,
 Hawking.Zhang@amd.com, Christian.Koenig@amd.com, Le.Ma@amd.com
Subject: [PATCH 3/4] drm/amdgpu: use ring structure to access rptr/wptr v2
Date: Tue, 28 Jul 2020 18:21:53 +0800
Message-Id: <20200728102154.2505095-3-Jack.Xiao@amd.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200728102154.2505095-1-Jack.Xiao@amd.com>
References: <20200728102154.2505095-1-Jack.Xiao@amd.com>
X-ClientProxiedBy: HK2PR02CA0146.apcprd02.prod.outlook.com
 (2603:1096:202:16::30) To CY4PR1201MB2471.namprd12.prod.outlook.com
 (2603:10b6:903:d0::10)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from jackfedora30.amd.com (58.247.170.242) by
 HK2PR02CA0146.apcprd02.prod.outlook.com (2603:1096:202:16::30) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3239.16 via Frontend Transport; Tue, 28 Jul 2020 10:22:36 +0000
X-Mailer: git-send-email 2.26.2
X-Originating-IP: [58.247.170.242]
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: a216193d-ce34-41dc-a906-08d832e02731
X-MS-TrafficTypeDiagnostic: CY4PR12MB1847:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <CY4PR12MB1847CCD696D8E9EE06C22751EF730@CY4PR12MB1847.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:2000;
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: Cb0U5tlC6VpqtFPzC99cQXhr+sIVex/18L/+FAs0Uz74uHYdK6K8QN/B/suN68yRiSKAb1uJXcpuUM+AzMWYdKVNgVG3mJum+wSEidvWnEB3M2n5AkzmPW3bF5DRH/dLQPWX7R4dHNHvagw43yd2rIFmh8lp5zopRgSPh23i9dd4ARGnYs0crJQou2mwffQwaxduwbedfuY/kXMRCEKmVfoplHxPEz7kS3thGtAVII1yENbJFAQ+KWciNxtvAM75gaa1fSIY+SLBh+hXvo5QkDhIub2wqvRcc4WBviDV51ltPzLz/G6tqUXH+OuTq4kBheaqfNp9zSXsHcgc2TRECqsi+aqrojgyu6xupfau+VUlLBO1Wvz2EjAfWPYT0Y2E
X-Forefront-Antispam-Report: CIP:255.255.255.255; CTRY:; LANG:en; SCL:1; SRV:;
 IPV:NLI; SFV:NSPM; H:CY4PR1201MB2471.namprd12.prod.outlook.com; PTR:; CAT:NONE;
 SFTY:;
 SFS:(4636009)(376002)(396003)(346002)(366004)(39860400002)(136003)(26005)(5660300002)(86362001)(1076003)(30864003)(6666004)(2906002)(36756003)(66476007)(66556008)(66946007)(16526019)(66574015)(52116002)(7696005)(478600001)(4326008)(54906003)(6636002)(956004)(83380400001)(2616005)(6486002)(316002)(8676002)(186003)(8936002)(21314003)(579004)(559001);
 DIR:OUT; SFP:1101; 
X-MS-Exchange-AntiSpam-MessageData: 6e24N8QMI+wCi1Va4nlfEfW8JGdeDFwnEn3bWOAEYlUECIvb1QjXfaeVkYxIW4mjpEYB/FMLo3dDMCJuwWff1sm+ECnlg1k22g+5ga7DvmHgt5oGSkpoPw7WTccyPVRSj+y+RwYoSCkHNQp5KsTddcO1rMeRvryRoD7/9BFXsZhbYxEhbmPbganaCKBHwDS3n3G7lNbffFLiZxjGe5hnvPqRRL8GEffIHpQtZMyt0qyHZtylPlBspsFa8kXFPesnKoHmqa6S//54qhLbX+CICAoz95dYbe7CuUj4QCwoGqU/hqRAKYp5Z+EFztgn5S6XA0wWHjxZHv8j6wMl0U9gfkFfnwaR0QurPkjt1P8n9Ms3nkwuMTnAFOpNZaUrAmCZ26ili7/5Vzy8h3KOOyHicO2necza/qfOkqKL3gDHdoqIc7Qszk3rgRza/XnDbvvkS/1PbSgTBtSWNzTJnvF+vAHfr3NIEXiBQ6A5vQFJGFEqmPh0FvedrWNQcAj0+iT+
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: a216193d-ce34-41dc-a906-08d832e02731
X-MS-Exchange-CrossTenant-AuthSource: CY4PR1201MB2471.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 28 Jul 2020 10:22:38.8282 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: n/olnR2nUiUhTUdipyPv9MAHHoXzzXcMBmbTQEjE2BII2tH5K+KQCx6MdeWFZtB6
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR12MB1847
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jack Xiao <Jack.Xiao@amd.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VXNlIHJpbmcgc3RydWN0dXJlIHRvIGFjY2VzcyB0aGUgY3B1L2dwdSBhZGRyZXNzIG9mIHJwdHIv
d3B0ci4KCnYyOiBtZXJnZSBnZngxMC9zZG1hNS9zZG1hNS4yIHBhdGNoZXMKClNpZ25lZC1vZmYt
Ynk6IEphY2sgWGlhbyA8SmFjay5YaWFvQGFtZC5jb20+ClJldmlld2VkLWJ5OiBDaHJpc3RpYW4g
S8O2bmlnIDxjaHJpc3RpYW4ua29lbmlnQGFtZC5jb20+ClJldmlld2VkLWJ5OiBIYXdraW5nIFpo
YW5nIDxIYXdraW5nLlpoYW5nQGFtZC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvY2lrX3NkbWEuYyAgfCAgOCArKystLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92MTBfMC5jIHwgMzcgKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2dmeF92Nl8wLmMgIHwgIDggKysrLS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9nZnhfdjdfMC5jICB8IDEyICsrKystLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvZ2Z4X3Y4XzAuYyAgfCAyMCArKysrKysrLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvZ2Z4X3Y5XzAuYyAgfCAyNSArKysrKysrKystLS0tLS0tLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvanBlZ192Ml8wLmMgfCAgNCArLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2pwZWdfdjJfNS5jIHwgIDQgKy0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9q
cGVnX3YzXzAuYyB8ICA0ICstLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbWVzX3YxMF8x
LmMgfCAxMSArKysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92Ml80LmMg
fCAgOCArKystLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjNfMC5jIHwgMTYg
KysrKystLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjRfMC5jIHwgMjgg
KysrKysrKystLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92NV8w
LmMgfCAxNiArKysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92NV8y
LmMgfCAxNiArKysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2lfZG1hLmMg
ICAgfCAgNCArLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3V2ZF92N18wLmMgIHwgIDYg
KystLS0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3ZjZV92NF8wLmMgIHwgIDYgKystLS0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Zjbl92Ml8wLmMgIHwgMTIgKysrKy0tLS0tCiBk
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS92Y25fdjJfNS5jICB8IDEyICsrKystLS0tLQogZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvdmNuX3YzXzAuYyAgfCAxMiArKysrLS0tLS0KIDIxIGZp
bGVzIGNoYW5nZWQsIDEyNiBpbnNlcnRpb25zKCspLCAxNDMgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvY2lrX3NkbWEuYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2Npa19zZG1hLmMKaW5kZXggMjBmMTA4ODE4YjJiLi5hNmE3YWE5ZTlh
ZWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Npa19zZG1hLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvY2lrX3NkbWEuYwpAQCAtMTY0LDcgKzE2NCw3
IEBAIHN0YXRpYyB1aW50NjRfdCBjaWtfc2RtYV9yaW5nX2dldF9ycHRyKHN0cnVjdCBhbWRncHVf
cmluZyAqcmluZykKIHsKIAl1MzIgcnB0cjsKIAotCXJwdHIgPSByaW5nLT5hZGV2LT53Yi53Ylty
aW5nLT5ycHRyX29mZnNdOworCXJwdHIgPSAqcmluZy0+cnB0cl9jcHVfYWRkcjsKIAogCXJldHVy
biAocnB0ciAmIDB4M2ZmZmMpID4+IDI7CiB9CkBAIC00MzIsMTIgKzQzMiwxMCBAQCBzdGF0aWMg
aW50IGNpa19zZG1hX2dmeF9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJc3Ry
dWN0IGFtZGdwdV9yaW5nICpyaW5nOwogCXUzMiByYl9jbnRsLCBpYl9jbnRsOwogCXUzMiByYl9i
dWZzejsKLQl1MzIgd2Jfb2Zmc2V0OwogCWludCBpLCBqLCByOwogCiAJZm9yIChpID0gMDsgaSA8
IGFkZXYtPnNkbWEubnVtX2luc3RhbmNlczsgaSsrKSB7CiAJCXJpbmcgPSAmYWRldi0+c2RtYS5p
bnN0YW5jZVtpXS5yaW5nOwotCQl3Yl9vZmZzZXQgPSAocmluZy0+cnB0cl9vZmZzICogNCk7CiAK
IAkJbXV0ZXhfbG9jaygmYWRldi0+c3JibV9tdXRleCk7CiAJCWZvciAoaiA9IDA7IGogPCAxNjsg
aisrKSB7CkBAIC00NzMsOSArNDcxLDkgQEAgc3RhdGljIGludCBjaWtfc2RtYV9nZnhfcmVzdW1l
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCiAJCS8qIHNldCB0aGUgd2IgYWRkcmVzcyB3
aGV0aGVyIGl0J3MgZW5hYmxlZCBvciBub3QgKi8KIAkJV1JFRzMyKG1tU0RNQTBfR0ZYX1JCX1JQ
VFJfQUREUl9ISSArIHNkbWFfb2Zmc2V0c1tpXSwKLQkJICAgICAgIHVwcGVyXzMyX2JpdHMoYWRl
di0+d2IuZ3B1X2FkZHIgKyB3Yl9vZmZzZXQpICYgMHhGRkZGRkZGRik7CisJCSAgICAgICB1cHBl
cl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZGRik7CiAJCVdSRUczMiht
bVNETUEwX0dGWF9SQl9SUFRSX0FERFJfTE8gKyBzZG1hX29mZnNldHNbaV0sCi0JCSAgICAgICAo
KGFkZXYtPndiLmdwdV9hZGRyICsgd2Jfb2Zmc2V0KSAmIDB4RkZGRkZGRkMpKTsKKwkJICAgICAg
ICgocmluZy0+cnB0cl9ncHVfYWRkcikgJiAweEZGRkZGRkZDKSk7CiAKIAkJcmJfY250bCB8PSBT
RE1BMF9HRlhfUkJfQ05UTF9fUlBUUl9XUklURUJBQ0tfRU5BQkxFX01BU0s7CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvZ2Z4X3YxMF8wLmMKaW5kZXggZGI5ZjFlODlhMGY4Li43MDM2ZTI4NmI2
MjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jCkBAIC0zMjA1LDkgKzMy
MDUsOCBAQCBzdGF0aWMgdm9pZCBnZngxMF9raXFfc2V0X3Jlc291cmNlcyhzdHJ1Y3QgYW1kZ3B1
X3JpbmcgKmtpcV9yaW5nLCB1aW50NjRfdCBxdWV1ZQogc3RhdGljIHZvaWQgZ2Z4MTBfa2lxX21h
cF9xdWV1ZXMoc3RydWN0IGFtZGdwdV9yaW5nICpraXFfcmluZywKIAkJCQkgc3RydWN0IGFtZGdw
dV9yaW5nICpyaW5nKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0ga2lxX3Jpbmct
PmFkZXY7CiAJdWludDY0X3QgbXFkX2FkZHIgPSBhbWRncHVfYm9fZ3B1X29mZnNldChyaW5nLT5t
cWRfb2JqKTsKLQl1aW50NjRfdCB3cHRyX2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5n
LT53cHRyX29mZnMgKiA0KTsKKwl1aW50NjRfdCB3cHRyX2FkZHIgPSByaW5nLT53cHRyX2dwdV9h
ZGRyOwogCXVpbnQzMl90IGVuZ19zZWwgPSByaW5nLT5mdW5jcy0+dHlwZSA9PSBBTURHUFVfUklO
R19UWVBFX0dGWCA/IDQgOiAwOwogCiAJYW1kZ3B1X3Jpbmdfd3JpdGUoa2lxX3JpbmcsIFBBQ0tF
VDMoUEFDS0VUM19NQVBfUVVFVUVTLCA1KSk7CkBAIC01ODM1LDEyICs1ODM0LDEyIEBAIHN0YXRp
YyBpbnQgZ2Z4X3YxMF8wX2NwX2dmeF9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYp
CiAJV1JFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCMF9XUFRSX0hJLCB1cHBlcl8zMl9iaXRzKHJp
bmctPndwdHIpKTsKIAogCS8qIHNldCB0aGUgd2IgYWRkcmVzcyB3ZXRoZXIgaXQncyBlbmFibGVk
IG9yIG5vdCAqLwotCXJwdHJfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPnJwdHJf
b2ZmcyAqIDQpOworCXJwdHJfYWRkciA9IHJpbmctPnJwdHJfZ3B1X2FkZHI7CiAJV1JFRzMyX1NP
QzE1KEdDLCAwLCBtbUNQX1JCMF9SUFRSX0FERFIsIGxvd2VyXzMyX2JpdHMocnB0cl9hZGRyKSk7
CiAJV1JFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCMF9SUFRSX0FERFJfSEksIHVwcGVyXzMyX2Jp
dHMocnB0cl9hZGRyKSAmCiAJCSAgICAgQ1BfUkJfUlBUUl9BRERSX0hJX19SQl9SUFRSX0FERFJf
SElfTUFTSyk7CiAKLQl3cHRyX2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+
d3B0cl9vZmZzICogNCk7CisJd3B0cl9ncHVfYWRkciA9IHJpbmctPndwdHJfZ3B1X2FkZHI7CiAJ
V1JFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCX1dQVFJfUE9MTF9BRERSX0xPLAogCQkgICAgIGxv
d2VyXzMyX2JpdHMod3B0cl9ncHVfYWRkcikpOwogCVdSRUczMl9TT0MxNShHQywgMCwgbW1DUF9S
Ql9XUFRSX1BPTExfQUREUl9ISSwKQEAgLTU4NzMsMTEgKzU4NzIsMTEgQEAgc3RhdGljIGludCBn
ZnhfdjEwXzBfY3BfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAkJV1JF
RzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCMV9XUFRSLCBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIp
KTsKIAkJV1JFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCMV9XUFRSX0hJLCB1cHBlcl8zMl9iaXRz
KHJpbmctPndwdHIpKTsKIAkJLyogU2V0IHRoZSB3YiBhZGRyZXNzIHdldGhlciBpdCdzIGVuYWJs
ZWQgb3Igbm90ICovCi0JCXJwdHJfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPnJw
dHJfb2ZmcyAqIDQpOworCQlycHRyX2FkZHIgPSByaW5nLT5ycHRyX2dwdV9hZGRyOwogCQlXUkVH
MzJfU09DMTUoR0MsIDAsIG1tQ1BfUkIxX1JQVFJfQUREUiwgbG93ZXJfMzJfYml0cyhycHRyX2Fk
ZHIpKTsKIAkJV1JFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCMV9SUFRSX0FERFJfSEksIHVwcGVy
XzMyX2JpdHMocnB0cl9hZGRyKSAmCiAJCQkgICAgIENQX1JCMV9SUFRSX0FERFJfSElfX1JCX1JQ
VFJfQUREUl9ISV9NQVNLKTsKLQkJd3B0cl9ncHVfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsg
KHJpbmctPndwdHJfb2ZmcyAqIDQpOworCQl3cHRyX2dwdV9hZGRyID0gcmluZy0+d3B0cl9ncHVf
YWRkcjsKIAkJV1JFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCX1dQVFJfUE9MTF9BRERSX0xPLAog
CQkJICAgICBsb3dlcl8zMl9iaXRzKHdwdHJfZ3B1X2FkZHIpKTsKIAkJV1JFRzMyX1NPQzE1KEdD
LCAwLCBtbUNQX1JCX1dQVFJfUE9MTF9BRERSX0hJLApAQCAtNjA4MywxMyArNjA4MiwxMyBAQCBz
dGF0aWMgaW50IGdmeF92MTBfMF9nZnhfbXFkX2luaXQoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5n
KQogCW1xZC0+Y3BfZ2Z4X2hxZF9iYXNlX2hpID0gdXBwZXJfMzJfYml0cyhocWRfZ3B1X2FkZHIp
OwogCiAJLyogc2V0IHVwIGhxZF9ycHRyX2FkZHIvX2hpLCBzaW1pbGFyIGFzIENQX1JCX1JQVFIg
Ki8KLQl3Yl9ncHVfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPnJwdHJfb2ZmcyAq
IDQpOworCXdiX2dwdV9hZGRyID0gcmluZy0+cnB0cl9ncHVfYWRkcjsKIAltcWQtPmNwX2dmeF9o
cWRfcnB0cl9hZGRyID0gd2JfZ3B1X2FkZHIgJiAweGZmZmZmZmZjOwogCW1xZC0+Y3BfZ2Z4X2hx
ZF9ycHRyX2FkZHJfaGkgPQogCQl1cHBlcl8zMl9iaXRzKHdiX2dwdV9hZGRyKSAmIDB4ZmZmZjsK
IAogCS8qIHNldCB1cCByYl93cHRyX3BvbGwgYWRkciAqLwotCXdiX2dwdV9hZGRyID0gYWRldi0+
d2IuZ3B1X2FkZHIgKyAocmluZy0+d3B0cl9vZmZzICogNCk7CisJd2JfZ3B1X2FkZHIgPSByaW5n
LT53cHRyX2dwdV9hZGRyOwogCW1xZC0+Y3BfcmJfd3B0cl9wb2xsX2FkZHJfbG8gPSB3Yl9ncHVf
YWRkciAmIDB4ZmZmZmZmZmM7CiAJbXFkLT5jcF9yYl93cHRyX3BvbGxfYWRkcl9oaSA9IHVwcGVy
XzMyX2JpdHMod2JfZ3B1X2FkZHIpICYgMHhmZmZmOwogCkBAIC02MTk4LDcgKzYxOTcsNyBAQCBz
dGF0aWMgaW50IGdmeF92MTBfMF9nZnhfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJp
bmcpCiAJCQltZW1jcHkobXFkLCBhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6
ZW9mKCptcWQpKTsKIAkJLyogcmVzZXQgdGhlIHJpbmcgKi8KIAkJcmluZy0+d3B0ciA9IDA7Ci0J
CWFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10gPSAwOworCQkqcmluZy0+d3B0cl9jcHVfYWRk
ciA9IDA7CiAJCWFtZGdwdV9yaW5nX2NsZWFyX3JpbmcocmluZyk7CiAjaWZkZWYgQlJJTkdfVVBf
REVCVUcKIAkJbXV0ZXhfbG9jaygmYWRldi0+c3JibV9tdXRleCk7CkBAIC02MzcyLDEzICs2Mzcx
LDEzIEBAIHN0YXRpYyBpbnQgZ2Z4X3YxMF8wX2NvbXB1dGVfbXFkX2luaXQoc3RydWN0IGFtZGdw
dV9yaW5nICpyaW5nKQogCW1xZC0+Y3BfaHFkX3BxX2NvbnRyb2wgPSB0bXA7CiAKIAkvKiBzZXQg
dGhlIHdiIGFkZHJlc3Mgd2hldGhlciBpdCdzIGVuYWJsZWQgb3Igbm90ICovCi0Jd2JfZ3B1X2Fk
ZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5nLT5ycHRyX29mZnMgKiA0KTsKKwl3Yl9ncHVf
YWRkciA9IHJpbmctPnJwdHJfZ3B1X2FkZHI7CiAJbXFkLT5jcF9ocWRfcHFfcnB0cl9yZXBvcnRf
YWRkcl9sbyA9IHdiX2dwdV9hZGRyICYgMHhmZmZmZmZmYzsKIAltcWQtPmNwX2hxZF9wcV9ycHRy
X3JlcG9ydF9hZGRyX2hpID0KIAkJdXBwZXJfMzJfYml0cyh3Yl9ncHVfYWRkcikgJiAweGZmZmY7
CiAKIAkvKiBvbmx5IHVzZWQgaWYgQ1BfUFFfV1BUUl9QT0xMX0NOVEwuQ1BfUFFfV1BUUl9QT0xM
X0NOVExfX0VOX01BU0s9MSAqLwotCXdiX2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAo
cmluZy0+d3B0cl9vZmZzICogNCk7CisJd2JfZ3B1X2FkZHIgPSByaW5nLT53cHRyX2dwdV9hZGRy
OwogCW1xZC0+Y3BfaHFkX3BxX3dwdHJfcG9sbF9hZGRyX2xvID0gd2JfZ3B1X2FkZHIgJiAweGZm
ZmZmZmZjOwogCW1xZC0+Y3BfaHFkX3BxX3dwdHJfcG9sbF9hZGRyX2hpID0gdXBwZXJfMzJfYml0
cyh3Yl9ncHVfYWRkcikgJiAweGZmZmY7CiAKQEAgLTY1OTQsNyArNjU5Myw3IEBAIHN0YXRpYyBp
bnQgZ2Z4X3YxMF8wX2tjcV9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAog
CQkvKiByZXNldCByaW5nIGJ1ZmZlciAqLwogCQlyaW5nLT53cHRyID0gMDsKLQkJYXRvbWljNjRf
c2V0KChhdG9taWM2NF90ICopJmFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10sIDApOworCQlh
dG9taWM2NF9zZXQoKGF0b21pYzY0X3QgKilyaW5nLT53cHRyX2NwdV9hZGRyLCAwKTsKIAkJYW1k
Z3B1X3JpbmdfY2xlYXJfcmluZyhyaW5nKTsKIAl9IGVsc2UgewogCQlhbWRncHVfcmluZ19jbGVh
cl9yaW5nKHJpbmcpOwpAQCAtNzYwMSw3ICs3NjAwLDggQEAgc3RhdGljIHZvaWQgZ2Z4X3YxMF8w
X2dldF9jbG9ja2dhdGluZ19zdGF0ZSh2b2lkICpoYW5kbGUsIHUzMiAqZmxhZ3MpCiAKIHN0YXRp
YyB1NjQgZ2Z4X3YxMF8wX3JpbmdfZ2V0X3JwdHJfZ2Z4KHN0cnVjdCBhbWRncHVfcmluZyAqcmlu
ZykKIHsKLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iud2JbcmluZy0+cnB0cl9vZmZzXTsgLyogZ2Z4
MTAgaXMgMzJiaXQgcnB0ciovCisJLyogZ2Z4MTAgaXMgMzJiaXQgcnB0ciovCisJcmV0dXJuICoo
dWludDMyX3QgKilyaW5nLT5ycHRyX2NwdV9hZGRyOwogfQogCiBzdGF0aWMgdTY0IGdmeF92MTBf
MF9yaW5nX2dldF93cHRyX2dmeChzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCkBAIC03NjExLDcg
Kzc2MTEsNyBAQCBzdGF0aWMgdTY0IGdmeF92MTBfMF9yaW5nX2dldF93cHRyX2dmeChzdHJ1Y3Qg
YW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNz
YXJ5IG9uIEJFICovCiAJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkgewotCQl3cHRyID0gYXRvbWlj
NjRfcmVhZCgoYXRvbWljNjRfdCAqKSZhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdKTsKKwkJ
d3B0ciA9IGF0b21pYzY0X3JlYWQoKGF0b21pYzY0X3QgKilyaW5nLT53cHRyX2NwdV9hZGRyKTsK
IAl9IGVsc2UgewogCQl3cHRyID0gUlJFRzMyX1NPQzE1KEdDLCAwLCBtbUNQX1JCMF9XUFRSKTsK
IAkJd3B0ciArPSAodTY0KVJSRUczMl9TT0MxNShHQywgMCwgbW1DUF9SQjBfV1BUUl9ISSkgPDwg
MzI7CkBAIC03NjI2LDcgKzc2MjYsNyBAQCBzdGF0aWMgdm9pZCBnZnhfdjEwXzBfcmluZ19zZXRf
d3B0cl9nZngoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJaWYgKHJpbmctPnVzZV9kb29y
YmVsbCkgewogCQkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9uIEJFICov
Ci0JCWF0b21pYzY0X3NldCgoYXRvbWljNjRfdCAqKSZhZGV2LT53Yi53YltyaW5nLT53cHRyX29m
ZnNdLCByaW5nLT53cHRyKTsKKwkJYXRvbWljNjRfc2V0KChhdG9taWM2NF90ICopcmluZy0+d3B0
cl9jcHVfYWRkciwgcmluZy0+d3B0cik7CiAJCVdET09SQkVMTDY0KHJpbmctPmRvb3JiZWxsX2lu
ZGV4LCByaW5nLT53cHRyKTsKIAl9IGVsc2UgewogCQlXUkVHMzJfU09DMTUoR0MsIDAsIG1tQ1Bf
UkIwX1dQVFIsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwpAQCAtNzYzNiw3ICs3NjM2LDgg
QEAgc3RhdGljIHZvaWQgZ2Z4X3YxMF8wX3Jpbmdfc2V0X3dwdHJfZ2Z4KHN0cnVjdCBhbWRncHVf
cmluZyAqcmluZykKIAogc3RhdGljIHU2NCBnZnhfdjEwXzBfcmluZ19nZXRfcnB0cl9jb21wdXRl
KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIHsKLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iud2Jb
cmluZy0+cnB0cl9vZmZzXTsgLyogZ2Z4MTAgaGFyZHdhcmUgaXMgMzJiaXQgcnB0ciAqLworCS8q
IGdmeDEwIGhhcmR3YXJlIGlzIDMyYml0IHJwdHIgKi8KKwlyZXR1cm4gKih1aW50MzJfdCAqKXJp
bmctPnJwdHJfY3B1X2FkZHI7CiB9CiAKIHN0YXRpYyB1NjQgZ2Z4X3YxMF8wX3JpbmdfZ2V0X3dw
dHJfY29tcHV0ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCkBAIC03NjQ1LDcgKzc2NDYsNyBA
QCBzdGF0aWMgdTY0IGdmeF92MTBfMF9yaW5nX2dldF93cHRyX2NvbXB1dGUoc3RydWN0IGFtZGdw
dV9yaW5nICpyaW5nKQogCiAJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5nIGlzIG5lY2Vzc2FyeSBv
biBCRSAqLwogCWlmIChyaW5nLT51c2VfZG9vcmJlbGwpCi0JCXdwdHIgPSBhdG9taWM2NF9yZWFk
KChhdG9taWM2NF90ICopJnJpbmctPmFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10pOworCQl3
cHRyID0gYXRvbWljNjRfcmVhZCgoYXRvbWljNjRfdCAqKXJpbmctPndwdHJfY3B1X2FkZHIpOwog
CWVsc2UKIAkJQlVHKCk7CiAJcmV0dXJuIHdwdHI7CkBAIC03NjU3LDcgKzc2NTgsNyBAQCBzdGF0
aWMgdm9pZCBnZnhfdjEwXzBfcmluZ19zZXRfd3B0cl9jb21wdXRlKHN0cnVjdCBhbWRncHVfcmlu
ZyAqcmluZykKIAogCS8qIFhYWCBjaGVjayBpZiBzd2FwcGluZyBpcyBuZWNlc3Nhcnkgb24gQkUg
Ki8KIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7Ci0JCWF0b21pYzY0X3NldCgoYXRvbWljNjRf
dCAqKSZhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdLCByaW5nLT53cHRyKTsKKwkJYXRvbWlj
NjRfc2V0KChhdG9taWM2NF90ICopcmluZy0+d3B0cl9jcHVfYWRkciwgcmluZy0+d3B0cik7CiAJ
CVdET09SQkVMTDY0KHJpbmctPmRvb3JiZWxsX2luZGV4LCByaW5nLT53cHRyKTsKIAl9IGVsc2Ug
ewogCQlCVUcoKTsgLyogb25seSBET09SQkVMTCBtZXRob2Qgc3VwcG9ydGVkIG9uIGdmeDEwIG5v
dyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3Y2XzAuYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92Nl8wLmMKaW5kZXggNzljNTJjN2EwMmUz
Li5lNGVmNTUxZGQ4NWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92Nl8wLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3Y2XzAuYwpAQCAt
MjExNiw3ICsyMTE2LDcgQEAgc3RhdGljIGludCBnZnhfdjZfMF9jcF9nZnhfcmVzdW1lKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KQogCVdSRUczMihtbUNQX1JCMF9XUFRSLCByaW5nLT53cHRy
KTsKIAogCS8qIHNldCB0aGUgd2IgYWRkcmVzcyB3aGV0aGVyIGl0J3MgZW5hYmxlZCBvciBub3Qg
Ki8KLQlycHRyX2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5nLT5ycHRyX29mZnMgKiA0
KTsKKwlycHRyX2FkZHIgPSByaW5nLT5ycHRyX2dwdV9hZGRyOwogCVdSRUczMihtbUNQX1JCMF9S
UFRSX0FERFIsIGxvd2VyXzMyX2JpdHMocnB0cl9hZGRyKSk7CiAJV1JFRzMyKG1tQ1BfUkIwX1JQ
VFJfQUREUl9ISSwgdXBwZXJfMzJfYml0cyhycHRyX2FkZHIpICYgMHhGRik7CiAKQEAgLTIxMzgs
NyArMjEzOCw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y2XzBfY3BfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldikKIAogc3RhdGljIHU2NCBnZnhfdjZfMF9yaW5nX2dldF9ycHRyKHN0
cnVjdCBhbWRncHVfcmluZyAqcmluZykKIHsKLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iud2Jbcmlu
Zy0+cnB0cl9vZmZzXTsKKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1X2FkZHI7CiB9CiAKIHN0YXRp
YyB1NjQgZ2Z4X3Y2XzBfcmluZ19nZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCkBA
IC0yMjAyLDcgKzIyMDIsNyBAQCBzdGF0aWMgaW50IGdmeF92Nl8wX2NwX2NvbXB1dGVfcmVzdW1l
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCXJpbmctPndwdHIgPSAwOwogCVdSRUczMiht
bUNQX1JCMV9XUFRSLCByaW5nLT53cHRyKTsKIAotCXJwdHJfYWRkciA9IGFkZXYtPndiLmdwdV9h
ZGRyICsgKHJpbmctPnJwdHJfb2ZmcyAqIDQpOworCXJwdHJfYWRkciA9IHJpbmctPnJwdHJfZ3B1
X2FkZHI7CiAJV1JFRzMyKG1tQ1BfUkIxX1JQVFJfQUREUiwgbG93ZXJfMzJfYml0cyhycHRyX2Fk
ZHIpKTsKIAlXUkVHMzIobW1DUF9SQjFfUlBUUl9BRERSX0hJLCB1cHBlcl8zMl9iaXRzKHJwdHJf
YWRkcikgJiAweEZGKTsKIApAQCAtMjIyMSw3ICsyMjIxLDcgQEAgc3RhdGljIGludCBnZnhfdjZf
MF9jcF9jb21wdXRlX3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAlXUkVHMzIo
bW1DUF9SQjJfQ05UTCwgdG1wIHwgQ1BfUkIyX0NOVExfX1JCX1JQVFJfV1JfRU5BX01BU0spOwog
CXJpbmctPndwdHIgPSAwOwogCVdSRUczMihtbUNQX1JCMl9XUFRSLCByaW5nLT53cHRyKTsKLQly
cHRyX2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5nLT5ycHRyX29mZnMgKiA0KTsKKwly
cHRyX2FkZHIgPSByaW5nLT5ycHRyX2dwdV9hZGRyOwogCVdSRUczMihtbUNQX1JCMl9SUFRSX0FE
RFIsIGxvd2VyXzMyX2JpdHMocnB0cl9hZGRyKSk7CiAJV1JFRzMyKG1tQ1BfUkIyX1JQVFJfQURE
Ul9ISSwgdXBwZXJfMzJfYml0cyhycHRyX2FkZHIpICYgMHhGRik7CiAKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92N18wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9nZnhfdjdfMC5jCmluZGV4IDA0ZWFmM2E4ZmRkYi4uMTg2ZTExN2QyZmVlIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjdfMC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92N18wLmMKQEAgLTI2MjgsNyArMjYyOCw3IEBAIHN0
YXRpYyBpbnQgZ2Z4X3Y3XzBfY3BfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRl
dikKIAlXUkVHMzIobW1DUF9SQjBfV1BUUiwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAK
IAkvKiBzZXQgdGhlIHdiIGFkZHJlc3Mgd2V0aGVyIGl0J3MgZW5hYmxlZCBvciBub3QgKi8KLQly
cHRyX2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5nLT5ycHRyX29mZnMgKiA0KTsKKwly
cHRyX2FkZHIgPSByaW5nLT5ycHRyX2dwdV9hZGRyOwogCVdSRUczMihtbUNQX1JCMF9SUFRSX0FE
RFIsIGxvd2VyXzMyX2JpdHMocnB0cl9hZGRyKSk7CiAJV1JFRzMyKG1tQ1BfUkIwX1JQVFJfQURE
Ul9ISSwgdXBwZXJfMzJfYml0cyhycHRyX2FkZHIpICYgMHhGRik7CiAKQEAgLTI2NTMsNyArMjY1
Myw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y3XzBfY3BfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldikKIAogc3RhdGljIHU2NCBnZnhfdjdfMF9yaW5nX2dldF9ycHRyKHN0cnVjdCBh
bWRncHVfcmluZyAqcmluZykKIHsKLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iud2JbcmluZy0+cnB0
cl9vZmZzXTsKKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1X2FkZHI7CiB9CiAKIHN0YXRpYyB1NjQg
Z2Z4X3Y3XzBfcmluZ19nZXRfd3B0cl9nZngoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQpAQCAt
MjY3NCw3ICsyNjc0LDcgQEAgc3RhdGljIHZvaWQgZ2Z4X3Y3XzBfcmluZ19zZXRfd3B0cl9nZngo
c3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogc3RhdGljIHU2NCBnZnhfdjdfMF9yaW5nX2dldF93
cHRyX2NvbXB1dGUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogewogCS8qIFhYWCBjaGVjayBp
ZiBzd2FwcGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iu
d2JbcmluZy0+d3B0cl9vZmZzXTsKKwlyZXR1cm4gKnJpbmctPndwdHJfY3B1X2FkZHI7CiB9CiAK
IHN0YXRpYyB2b2lkIGdmeF92N18wX3Jpbmdfc2V0X3dwdHJfY29tcHV0ZShzdHJ1Y3QgYW1kZ3B1
X3JpbmcgKnJpbmcpCkBAIC0yNjgyLDcgKzI2ODIsNyBAQCBzdGF0aWMgdm9pZCBnZnhfdjdfMF9y
aW5nX3NldF93cHRyX2NvbXB1dGUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCXN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2ID0gcmluZy0+YWRldjsKIAogCS8qIFhYWCBjaGVjayBpZiBzd2Fw
cGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNd
ID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKTsKKwkqcmluZy0+d3B0cl9jcHVfYWRkciA9IGxv
d2VyXzMyX2JpdHMocmluZy0+d3B0cik7CiAJV0RPT1JCRUxMMzIocmluZy0+ZG9vcmJlbGxfaW5k
ZXgsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwogfQogCkBAIC0yOTc4LDEyICsyOTc4LDEy
IEBAIHN0YXRpYyB2b2lkIGdmeF92N18wX21xZF9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2LAogCQlDUF9IUURfUFFfQ09OVFJPTF9fS01EX1FVRVVFX01BU0s7IC8qIGFzc3VtaW5nIGtl
cm5lbCBxdWV1ZSBjb250cm9sICovCiAKIAkvKiBvbmx5IHVzZWQgaWYgQ1BfUFFfV1BUUl9QT0xM
X0NOVEwuQ1BfUFFfV1BUUl9QT0xMX0NOVExfX0VOX01BU0s9MSAqLwotCXdiX2dwdV9hZGRyID0g
YWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+d3B0cl9vZmZzICogNCk7CisJd2JfZ3B1X2FkZHIg
PSByaW5nLT53cHRyX2dwdV9hZGRyOwogCW1xZC0+Y3BfaHFkX3BxX3dwdHJfcG9sbF9hZGRyX2xv
ID0gd2JfZ3B1X2FkZHIgJiAweGZmZmZmZmZjOwogCW1xZC0+Y3BfaHFkX3BxX3dwdHJfcG9sbF9h
ZGRyX2hpID0gdXBwZXJfMzJfYml0cyh3Yl9ncHVfYWRkcikgJiAweGZmZmY7CiAKIAkvKiBzZXQg
dGhlIHdiIGFkZHJlc3Mgd2V0aGVyIGl0J3MgZW5hYmxlZCBvciBub3QgKi8KLQl3Yl9ncHVfYWRk
ciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPnJwdHJfb2ZmcyAqIDQpOworCXdiX2dwdV9h
ZGRyID0gcmluZy0+cnB0cl9ncHVfYWRkcjsKIAltcWQtPmNwX2hxZF9wcV9ycHRyX3JlcG9ydF9h
ZGRyX2xvID0gd2JfZ3B1X2FkZHIgJiAweGZmZmZmZmZjOwogCW1xZC0+Y3BfaHFkX3BxX3JwdHJf
cmVwb3J0X2FkZHJfaGkgPQogCQl1cHBlcl8zMl9iaXRzKHdiX2dwdV9hZGRyKSAmIDB4ZmZmZjsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OF8wLmMgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhfMC5jCmluZGV4IDhkNzIwODk1OWM5NS4uMzky
YjU0MWJiOThmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhf
MC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OF8wLmMKQEAgLTQyOTYs
MTEgKzQyOTYsMTEgQEAgc3RhdGljIGludCBnZnhfdjhfMF9jcF9nZnhfcmVzdW1lKHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2KQogCVdSRUczMihtbUNQX1JCMF9XUFRSLCBsb3dlcl8zMl9iaXRz
KHJpbmctPndwdHIpKTsKIAogCS8qIHNldCB0aGUgd2IgYWRkcmVzcyB3ZXRoZXIgaXQncyBlbmFi
bGVkIG9yIG5vdCAqLwotCXJwdHJfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPnJw
dHJfb2ZmcyAqIDQpOworCXJwdHJfYWRkciA9IHJpbmctPnJwdHJfZ3B1X2FkZHI7CiAJV1JFRzMy
KG1tQ1BfUkIwX1JQVFJfQUREUiwgbG93ZXJfMzJfYml0cyhycHRyX2FkZHIpKTsKIAlXUkVHMzIo
bW1DUF9SQjBfUlBUUl9BRERSX0hJLCB1cHBlcl8zMl9iaXRzKHJwdHJfYWRkcikgJiAweEZGKTsK
IAotCXdwdHJfZ3B1X2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5nLT53cHRyX29mZnMg
KiA0KTsKKwl3cHRyX2dwdV9hZGRyID0gcmluZy0+d3B0cl9ncHVfYWRkcjsKIAlXUkVHMzIobW1D
UF9SQl9XUFRSX1BPTExfQUREUl9MTywgbG93ZXJfMzJfYml0cyh3cHRyX2dwdV9hZGRyKSk7CiAJ
V1JFRzMyKG1tQ1BfUkJfV1BUUl9QT0xMX0FERFJfSEksIHVwcGVyXzMyX2JpdHMod3B0cl9ncHVf
YWRkcikpOwogCW1kZWxheSgxKTsKQEAgLTQzODMsNyArNDM4Myw3IEBAIHN0YXRpYyBpbnQgZ2Z4
X3Y4XzBfa2lxX2tjcV9lbmFibGUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJZm9yIChp
ID0gMDsgaSA8IGFkZXYtPmdmeC5udW1fY29tcHV0ZV9yaW5nczsgaSsrKSB7CiAJCXN0cnVjdCBh
bWRncHVfcmluZyAqcmluZyA9ICZhZGV2LT5nZnguY29tcHV0ZV9yaW5nW2ldOwogCQl1aW50NjRf
dCBtcWRfYWRkciA9IGFtZGdwdV9ib19ncHVfb2Zmc2V0KHJpbmctPm1xZF9vYmopOwotCQl1aW50
NjRfdCB3cHRyX2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChyaW5nLT53cHRyX29mZnMgKiA0
KTsKKwkJdWludDY0X3Qgd3B0cl9hZGRyID0gcmluZy0+d3B0cl9ncHVfYWRkcjsKIAogCQkvKiBt
YXAgcXVldWVzICovCiAJCWFtZGdwdV9yaW5nX3dyaXRlKGtpcV9yaW5nLCBQQUNLRVQzKFBBQ0tF
VDNfTUFQX1FVRVVFUywgNSkpOwpAQCAtNDUwNywxMyArNDUwNywxMyBAQCBzdGF0aWMgaW50IGdm
eF92OF8wX21xZF9pbml0KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAltcWQtPmNwX2hxZF9w
cV9jb250cm9sID0gdG1wOwogCiAJLyogc2V0IHRoZSB3YiBhZGRyZXNzIHdoZXRoZXIgaXQncyBl
bmFibGVkIG9yIG5vdCAqLwotCXdiX2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmlu
Zy0+cnB0cl9vZmZzICogNCk7CisJd2JfZ3B1X2FkZHIgPSByaW5nLT5ycHRyX2dwdV9hZGRyOwog
CW1xZC0+Y3BfaHFkX3BxX3JwdHJfcmVwb3J0X2FkZHJfbG8gPSB3Yl9ncHVfYWRkciAmIDB4ZmZm
ZmZmZmM7CiAJbXFkLT5jcF9ocWRfcHFfcnB0cl9yZXBvcnRfYWRkcl9oaSA9CiAJCXVwcGVyXzMy
X2JpdHMod2JfZ3B1X2FkZHIpICYgMHhmZmZmOwogCiAJLyogb25seSB1c2VkIGlmIENQX1BRX1dQ
VFJfUE9MTF9DTlRMLkNQX1BRX1dQVFJfUE9MTF9DTlRMX19FTl9NQVNLPTEgKi8KLQl3Yl9ncHVf
YWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPndwdHJfb2ZmcyAqIDQpOworCXdiX2dw
dV9hZGRyID0gcmluZy0+d3B0cl9ncHVfYWRkcjsKIAltcWQtPmNwX2hxZF9wcV93cHRyX3BvbGxf
YWRkcl9sbyA9IHdiX2dwdV9hZGRyICYgMHhmZmZmZmZmYzsKIAltcWQtPmNwX2hxZF9wcV93cHRy
X3BvbGxfYWRkcl9oaSA9IHVwcGVyXzMyX2JpdHMod2JfZ3B1X2FkZHIpICYgMHhmZmZmOwogCkBA
IC02MDQzLDcgKzYwNDMsNyBAQCBzdGF0aWMgaW50IGdmeF92OF8wX3NldF9jbG9ja2dhdGluZ19z
dGF0ZSh2b2lkICpoYW5kbGUsCiAKIHN0YXRpYyB1NjQgZ2Z4X3Y4XzBfcmluZ19nZXRfcnB0cihz
dHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiB7Ci0JcmV0dXJuIHJpbmctPmFkZXYtPndiLndiW3Jp
bmctPnJwdHJfb2Zmc107CisJcmV0dXJuICpyaW5nLT5ycHRyX2NwdV9hZGRyOwogfQogCiBzdGF0
aWMgdTY0IGdmeF92OF8wX3JpbmdfZ2V0X3dwdHJfZ2Z4KHN0cnVjdCBhbWRncHVfcmluZyAqcmlu
ZykKQEAgLTYwNTIsNyArNjA1Miw3IEBAIHN0YXRpYyB1NjQgZ2Z4X3Y4XzBfcmluZ19nZXRfd3B0
cl9nZngoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJaWYgKHJpbmctPnVzZV9kb29yYmVs
bCkKIAkJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5nIGlzIG5lY2Vzc2FyeSBvbiBCRSAqLwotCQly
ZXR1cm4gcmluZy0+YWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJcmV0dXJuICpyaW5n
LT53cHRyX2NwdV9hZGRyOwogCWVsc2UKIAkJcmV0dXJuIFJSRUczMihtbUNQX1JCMF9XUFRSKTsK
IH0KQEAgLTYwNjMsNyArNjA2Myw3IEBAIHN0YXRpYyB2b2lkIGdmeF92OF8wX3Jpbmdfc2V0X3dw
dHJfZ2Z4KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCWlmIChyaW5nLT51c2VfZG9vcmJl
bGwpIHsKIAkJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5nIGlzIG5lY2Vzc2FyeSBvbiBCRSAqLwot
CQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRy
KTsKKwkJKnJpbmctPndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOwog
CQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93ZXJfMzJfYml0cyhyaW5nLT53
cHRyKSk7CiAJfSBlbHNlIHsKIAkJV1JFRzMyKG1tQ1BfUkIwX1dQVFIsIGxvd2VyXzMyX2JpdHMo
cmluZy0+d3B0cikpOwpAQCAtNjI2Myw3ICs2MjYzLDcgQEAgc3RhdGljIHZvaWQgZ2Z4X3Y4XzBf
cmluZ19lbWl0X3ZtX2ZsdXNoKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywKIAogc3RhdGljIHU2
NCBnZnhfdjhfMF9yaW5nX2dldF93cHRyX2NvbXB1dGUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5n
KQogewotCXJldHVybiByaW5nLT5hZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdOworCXJldHVy
biAqcmluZy0+d3B0cl9jcHVfYWRkcjsKIH0KIAogc3RhdGljIHZvaWQgZ2Z4X3Y4XzBfcmluZ19z
ZXRfd3B0cl9jb21wdXRlKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKQEAgLTYyNzEsNyArNjI3
MSw3IEBAIHN0YXRpYyB2b2lkIGdmeF92OF8wX3Jpbmdfc2V0X3dwdHJfY29tcHV0ZShzdHJ1Y3Qg
YW1kZ3B1X3JpbmcgKnJpbmcpCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5h
ZGV2OwogCiAJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5nIGlzIG5lY2Vzc2FyeSBvbiBCRSAqLwot
CWFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10gPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIp
OworCSpyaW5nLT53cHRyX2NwdV9hZGRyID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKTsKIAlX
RE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRy
KSk7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8w
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjlfMC5jCmluZGV4IGU0ZTc1MWY4
NzA5Mi4uZGNmMzUxYWRjMjgwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9nZnhfdjlfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8wLmMK
QEAgLTgxNyw5ICs4MTcsOCBAQCBzdGF0aWMgdm9pZCBnZnhfdjlfMF9raXFfc2V0X3Jlc291cmNl
cyhzdHJ1Y3QgYW1kZ3B1X3JpbmcgKmtpcV9yaW5nLAogc3RhdGljIHZvaWQgZ2Z4X3Y5XzBfa2lx
X21hcF9xdWV1ZXMoc3RydWN0IGFtZGdwdV9yaW5nICpraXFfcmluZywKIAkJCQkgc3RydWN0IGFt
ZGdwdV9yaW5nICpyaW5nKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0ga2lxX3Jp
bmctPmFkZXY7CiAJdWludDY0X3QgbXFkX2FkZHIgPSBhbWRncHVfYm9fZ3B1X29mZnNldChyaW5n
LT5tcWRfb2JqKTsKLQl1aW50NjRfdCB3cHRyX2FkZHIgPSBhZGV2LT53Yi5ncHVfYWRkciArIChy
aW5nLT53cHRyX29mZnMgKiA0KTsKKwl1aW50NjRfdCB3cHRyX2FkZHIgPSByaW5nLT53cHRyX2dw
dV9hZGRyOwogCXVpbnQzMl90IGVuZ19zZWwgPSByaW5nLT5mdW5jcy0+dHlwZSA9PSBBTURHUFVf
UklOR19UWVBFX0dGWCA/IDQgOiAwOwogCiAJYW1kZ3B1X3Jpbmdfd3JpdGUoa2lxX3JpbmcsIFBB
Q0tFVDMoUEFDS0VUM19NQVBfUVVFVUVTLCA1KSk7CkBAIC0zMjYwLDExICszMjU5LDExIEBAIHN0
YXRpYyBpbnQgZ2Z4X3Y5XzBfY3BfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRl
dikKIAlXUkVHMzJfU09DMTUoR0MsIDAsIG1tQ1BfUkIwX1dQVFJfSEksIHVwcGVyXzMyX2JpdHMo
cmluZy0+d3B0cikpOwogCiAJLyogc2V0IHRoZSB3YiBhZGRyZXNzIHdldGhlciBpdCdzIGVuYWJs
ZWQgb3Igbm90ICovCi0JcnB0cl9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+cnB0
cl9vZmZzICogNCk7CisJcnB0cl9hZGRyID0gcmluZy0+cnB0cl9ncHVfYWRkcjsKIAlXUkVHMzJf
U09DMTUoR0MsIDAsIG1tQ1BfUkIwX1JQVFJfQUREUiwgbG93ZXJfMzJfYml0cyhycHRyX2FkZHIp
KTsKIAlXUkVHMzJfU09DMTUoR0MsIDAsIG1tQ1BfUkIwX1JQVFJfQUREUl9ISSwgdXBwZXJfMzJf
Yml0cyhycHRyX2FkZHIpICYgQ1BfUkJfUlBUUl9BRERSX0hJX19SQl9SUFRSX0FERFJfSElfTUFT
Syk7CiAKLQl3cHRyX2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+d3B0cl9v
ZmZzICogNCk7CisJd3B0cl9ncHVfYWRkciA9IHJpbmctPndwdHJfZ3B1X2FkZHI7CiAJV1JFRzMy
X1NPQzE1KEdDLCAwLCBtbUNQX1JCX1dQVFJfUE9MTF9BRERSX0xPLCBsb3dlcl8zMl9iaXRzKHdw
dHJfZ3B1X2FkZHIpKTsKIAlXUkVHMzJfU09DMTUoR0MsIDAsIG1tQ1BfUkJfV1BUUl9QT0xMX0FE
RFJfSEksIHVwcGVyXzMyX2JpdHMod3B0cl9ncHVfYWRkcikpOwogCkBAIC0zNDc2LDEzICszNDc1
LDEzIEBAIHN0YXRpYyBpbnQgZ2Z4X3Y5XzBfbXFkX2luaXQoc3RydWN0IGFtZGdwdV9yaW5nICpy
aW5nKQogCW1xZC0+Y3BfaHFkX3BxX2NvbnRyb2wgPSB0bXA7CiAKIAkvKiBzZXQgdGhlIHdiIGFk
ZHJlc3Mgd2hldGhlciBpdCdzIGVuYWJsZWQgb3Igbm90ICovCi0Jd2JfZ3B1X2FkZHIgPSBhZGV2
LT53Yi5ncHVfYWRkciArIChyaW5nLT5ycHRyX29mZnMgKiA0KTsKKwl3Yl9ncHVfYWRkciA9IHJp
bmctPnJwdHJfZ3B1X2FkZHI7CiAJbXFkLT5jcF9ocWRfcHFfcnB0cl9yZXBvcnRfYWRkcl9sbyA9
IHdiX2dwdV9hZGRyICYgMHhmZmZmZmZmYzsKIAltcWQtPmNwX2hxZF9wcV9ycHRyX3JlcG9ydF9h
ZGRyX2hpID0KIAkJdXBwZXJfMzJfYml0cyh3Yl9ncHVfYWRkcikgJiAweGZmZmY7CiAKIAkvKiBv
bmx5IHVzZWQgaWYgQ1BfUFFfV1BUUl9QT0xMX0NOVEwuQ1BfUFFfV1BUUl9QT0xMX0NOVExfX0VO
X01BU0s9MSAqLwotCXdiX2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+d3B0
cl9vZmZzICogNCk7CisJd2JfZ3B1X2FkZHIgPSByaW5nLT53cHRyX2dwdV9hZGRyOwogCW1xZC0+
Y3BfaHFkX3BxX3dwdHJfcG9sbF9hZGRyX2xvID0gd2JfZ3B1X2FkZHIgJiAweGZmZmZmZmZjOwog
CW1xZC0+Y3BfaHFkX3BxX3dwdHJfcG9sbF9hZGRyX2hpID0gdXBwZXJfMzJfYml0cyh3Yl9ncHVf
YWRkcikgJiAweGZmZmY7CiAKQEAgLTM3NDEsNyArMzc0MCw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y5
XzBfa2NxX2luaXRfcXVldWUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJCS8qIHJlc2V0
IHJpbmcgYnVmZmVyICovCiAJCXJpbmctPndwdHIgPSAwOwotCQlhdG9taWM2NF9zZXQoKGF0b21p
YzY0X3QgKikmYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSwgMCk7CisJCWF0b21pYzY0X3Nl
dCgoYXRvbWljNjRfdCAqKXJpbmctPndwdHJfY3B1X2FkZHIsIDApOwogCQlhbWRncHVfcmluZ19j
bGVhcl9yaW5nKHJpbmcpOwogCX0gZWxzZSB7CiAJCWFtZGdwdV9yaW5nX2NsZWFyX3Jpbmcocmlu
Zyk7CkBAIC01MTQ0LDcgKzUxNDMsNyBAQCBzdGF0aWMgdm9pZCBnZnhfdjlfMF9nZXRfY2xvY2tn
YXRpbmdfc3RhdGUodm9pZCAqaGFuZGxlLCB1MzIgKmZsYWdzKQogCiBzdGF0aWMgdTY0IGdmeF92
OV8wX3JpbmdfZ2V0X3JwdHJfZ2Z4KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIHsKLQlyZXR1
cm4gcmluZy0+YWRldi0+d2Iud2JbcmluZy0+cnB0cl9vZmZzXTsgLyogZ2Z4OSBpcyAzMmJpdCBy
cHRyKi8KKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1X2FkZHI7IC8qIGdmeDkgaXMgMzJiaXQgcnB0
ciovCiB9CiAKIHN0YXRpYyB1NjQgZ2Z4X3Y5XzBfcmluZ19nZXRfd3B0cl9nZngoc3RydWN0IGFt
ZGdwdV9yaW5nICpyaW5nKQpAQCAtNTE1NCw3ICs1MTUzLDcgQEAgc3RhdGljIHU2NCBnZnhfdjlf
MF9yaW5nX2dldF93cHRyX2dmeChzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAkvKiBYWFgg
Y2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9uIEJFICovCiAJaWYgKHJpbmctPnVzZV9k
b29yYmVsbCkgewotCQl3cHRyID0gYXRvbWljNjRfcmVhZCgoYXRvbWljNjRfdCAqKSZhZGV2LT53
Yi53YltyaW5nLT53cHRyX29mZnNdKTsKKwkJd3B0ciA9IGF0b21pYzY0X3JlYWQoKGF0b21pYzY0
X3QgKilyaW5nLT53cHRyX2NwdV9hZGRyKTsKIAl9IGVsc2UgewogCQl3cHRyID0gUlJFRzMyX1NP
QzE1KEdDLCAwLCBtbUNQX1JCMF9XUFRSKTsKIAkJd3B0ciArPSAodTY0KVJSRUczMl9TT0MxNShH
QywgMCwgbW1DUF9SQjBfV1BUUl9ISSkgPDwgMzI7CkBAIC01MTY5LDcgKzUxNjgsNyBAQCBzdGF0
aWMgdm9pZCBnZnhfdjlfMF9yaW5nX3NldF93cHRyX2dmeChzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJp
bmcpCiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7CiAJCS8qIFhYWCBjaGVjayBpZiBzd2Fw
cGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQkJYXRvbWljNjRfc2V0KChhdG9taWM2NF90Kikm
YWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSwgcmluZy0+d3B0cik7CisJCWF0b21pYzY0X3Nl
dCgoYXRvbWljNjRfdCopcmluZy0+d3B0cl9jcHVfYWRkciwgcmluZy0+d3B0cik7CiAJCVdET09S
QkVMTDY0KHJpbmctPmRvb3JiZWxsX2luZGV4LCByaW5nLT53cHRyKTsKIAl9IGVsc2UgewogCQlX
UkVHMzJfU09DMTUoR0MsIDAsIG1tQ1BfUkIwX1dQVFIsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0
cikpOwpAQCAtNTMzNCw3ICs1MzMzLDcgQEAgc3RhdGljIHZvaWQgZ2Z4X3Y5XzBfcmluZ19lbWl0
X3ZtX2ZsdXNoKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywKIAogc3RhdGljIHU2NCBnZnhfdjlf
MF9yaW5nX2dldF9ycHRyX2NvbXB1dGUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogewotCXJl
dHVybiByaW5nLT5hZGV2LT53Yi53YltyaW5nLT5ycHRyX29mZnNdOyAvKiBnZng5IGhhcmR3YXJl
IGlzIDMyYml0IHJwdHIgKi8KKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1X2FkZHI7IC8qIGdmeDkg
aGFyZHdhcmUgaXMgMzJiaXQgcnB0ciAqLwogfQogCiBzdGF0aWMgdTY0IGdmeF92OV8wX3Jpbmdf
Z2V0X3dwdHJfY29tcHV0ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCkBAIC01MzQzLDcgKzUz
NDIsNyBAQCBzdGF0aWMgdTY0IGdmeF92OV8wX3JpbmdfZ2V0X3dwdHJfY29tcHV0ZShzdHJ1Y3Qg
YW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNz
YXJ5IG9uIEJFICovCiAJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkKLQkJd3B0ciA9IGF0b21pYzY0
X3JlYWQoKGF0b21pYzY0X3QgKikmcmluZy0+YWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSk7
CisJCXdwdHIgPSBhdG9taWM2NF9yZWFkKChhdG9taWM2NF90ICopcmluZy0+d3B0cl9jcHVfYWRk
cik7CiAJZWxzZQogCQlCVUcoKTsKIAlyZXR1cm4gd3B0cjsKQEAgLTUzNTUsNyArNTM1NCw3IEBA
IHN0YXRpYyB2b2lkIGdmeF92OV8wX3Jpbmdfc2V0X3dwdHJfY29tcHV0ZShzdHJ1Y3QgYW1kZ3B1
X3JpbmcgKnJpbmcpCiAKIAkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9u
IEJFICovCiAJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkgewotCQlhdG9taWM2NF9zZXQoKGF0b21p
YzY0X3QqKSZhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdLCByaW5nLT53cHRyKTsKKwkJYXRv
bWljNjRfc2V0KChhdG9taWM2NF90KilyaW5nLT53cHRyX2NwdV9hZGRyLCByaW5nLT53cHRyKTsK
IAkJV0RPT1JCRUxMNjQocmluZy0+ZG9vcmJlbGxfaW5kZXgsIHJpbmctPndwdHIpOwogCX0gZWxz
ZXsKIAkJQlVHKCk7IC8qIG9ubHkgRE9PUkJFTEwgbWV0aG9kIHN1cHBvcnRlZCBvbiBnZng5IG5v
dyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvanBlZ192Ml8wLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9qcGVnX3YyXzAuYwppbmRleCA5NGNhZjUyMDRj
OGIuLjkyZjIxYTE5MmVkNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
anBlZ192Ml8wLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvanBlZ192Ml8wLmMK
QEAgLTQyNSw3ICs0MjUsNyBAQCBzdGF0aWMgdWludDY0X3QganBlZ192Ml8wX2RlY19yaW5nX2dl
dF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiA9IHJpbmctPmFkZXY7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKQotCQlyZXR1cm4g
YWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJcmV0dXJuICpyaW5nLT53cHRyX2NwdV9h
ZGRyOwogCWVsc2UKIAkJcmV0dXJuIFJSRUczMl9TT0MxNShKUEVHLCAwLCBtbVVWRF9KUkJDX1JC
X1dQVFIpOwogfQpAQCAtNDQyLDcgKzQ0Miw3IEBAIHN0YXRpYyB2b2lkIGpwZWdfdjJfMF9kZWNf
cmluZ19zZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OwogCiAJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkgewot
CQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRy
KTsKKwkJKnJpbmctPndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOwog
CQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93ZXJfMzJfYml0cyhyaW5nLT53
cHRyKSk7CiAJfSBlbHNlIHsKIAkJV1JFRzMyX1NPQzE1KEpQRUcsIDAsIG1tVVZEX0pSQkNfUkJf
V1BUUiwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9qcGVnX3YyXzUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2pwZWdfdjJfNS5jCmluZGV4IDg0NTMwNmY2M2NkYi4uZTI0NjFkYWU4YmIwIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9qcGVnX3YyXzUuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9qcGVnX3YyXzUuYwpAQCAtNDAxLDcgKzQwMSw3IEBAIHN0YXRpYyB1
aW50NjRfdCBqcGVnX3YyXzVfZGVjX3JpbmdfZ2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpy
aW5nKQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gcmluZy0+YWRldjsKIAogCWlmIChy
aW5nLT51c2VfZG9vcmJlbGwpCi0JCXJldHVybiBhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNd
OworCQlyZXR1cm4gKnJpbmctPndwdHJfY3B1X2FkZHI7CiAJZWxzZQogCQlyZXR1cm4gUlJFRzMy
X1NPQzE1KEpQRUcsIHJpbmctPm1lLCBtbVVWRF9KUkJDX1JCX1dQVFIpOwogfQpAQCAtNDE4LDcg
KzQxOCw3IEBAIHN0YXRpYyB2b2lkIGpwZWdfdjJfNV9kZWNfcmluZ19zZXRfd3B0cihzdHJ1Y3Qg
YW1kZ3B1X3JpbmcgKnJpbmcpCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5h
ZGV2OwogCiAJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkgewotCQlhZGV2LT53Yi53YltyaW5nLT53
cHRyX29mZnNdID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKTsKKwkJKnJpbmctPndwdHJfY3B1
X2FkZHIgPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOwogCQlXRE9PUkJFTEwzMihyaW5nLT5k
b29yYmVsbF9pbmRleCwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAJfSBlbHNlIHsKIAkJ
V1JFRzMyX1NPQzE1KEpQRUcsIHJpbmctPm1lLCBtbVVWRF9KUkJDX1JCX1dQVFIsIGxvd2VyXzMy
X2JpdHMocmluZy0+d3B0cikpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvanBlZ192M18wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9qcGVnX3YzXzAuYwpp
bmRleCBjNDFlNTU5MGE3MDEuLjIzYjA3MjliY2M0ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvanBlZ192M18wLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvanBlZ192M18wLmMKQEAgLTQyMSw3ICs0MjEsNyBAQCBzdGF0aWMgdWludDY0X3QganBlZ192
M18wX2RlY19yaW5nX2dldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAlzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldiA9IHJpbmctPmFkZXY7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3Ji
ZWxsKQotCQlyZXR1cm4gYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJcmV0dXJuICpy
aW5nLT53cHRyX2NwdV9hZGRyOwogCWVsc2UKIAkJcmV0dXJuIFJSRUczMl9TT0MxNShKUEVHLCAw
LCBtbVVWRF9KUkJDX1JCX1dQVFIpOwogfQpAQCAtNDM4LDcgKzQzOCw3IEBAIHN0YXRpYyB2b2lk
IGpwZWdfdjNfMF9kZWNfcmluZ19zZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJ
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OwogCiAJaWYgKHJpbmctPnVz
ZV9kb29yYmVsbCkgewotCQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0gbG93ZXJfMzJf
Yml0cyhyaW5nLT53cHRyKTsKKwkJKnJpbmctPndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9iaXRz
KHJpbmctPndwdHIpOwogCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93ZXJf
MzJfYml0cyhyaW5nLT53cHRyKSk7CiAJfSBlbHNlIHsKIAkJV1JFRzMyX1NPQzE1KEpQRUcsIDAs
IG1tVVZEX0pSQkNfUkJfV1BUUiwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9tZXNfdjEwXzEuYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L21lc192MTBfMS5jCmluZGV4IDRiNzQ2NTg0YTc5Ny4uNmJkOGQ3NGZm
Mjc4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9tZXNfdjEwXzEuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9tZXNfdjEwXzEuYwpAQCAtNDYsNyArNDYs
NyBAQCBzdGF0aWMgdm9pZCBtZXNfdjEwXzFfcmluZ19zZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3Jp
bmcgKnJpbmcpCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OwogCiAJ
aWYgKHJpbmctPnVzZV9kb29yYmVsbCkgewotCQlhdG9taWM2NF9zZXQoKGF0b21pYzY0X3QqKSZh
ZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdLAorCQlhdG9taWM2NF9zZXQoKGF0b21pYzY0X3Qq
KXJpbmctPndwdHJfY3B1X2FkZHIsCiAJCQkgICAgIHJpbmctPndwdHIpOwogCQlXRE9PUkJFTEw2
NChyaW5nLT5kb29yYmVsbF9pbmRleCwgcmluZy0+d3B0cik7CiAJfSBlbHNlIHsKQEAgLTU2LDcg
KzU2LDcgQEAgc3RhdGljIHZvaWQgbWVzX3YxMF8xX3Jpbmdfc2V0X3dwdHIoc3RydWN0IGFtZGdw
dV9yaW5nICpyaW5nKQogCiBzdGF0aWMgdTY0IG1lc192MTBfMV9yaW5nX2dldF9ycHRyKHN0cnVj
dCBhbWRncHVfcmluZyAqcmluZykKIHsKLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iud2JbcmluZy0+
cnB0cl9vZmZzXTsKKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1X2FkZHI7CiB9CiAKIHN0YXRpYyB1
NjQgbWVzX3YxMF8xX3JpbmdfZ2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQpAQCAt
NjQsOCArNjQsNyBAQCBzdGF0aWMgdTY0IG1lc192MTBfMV9yaW5nX2dldF93cHRyKHN0cnVjdCBh
bWRncHVfcmluZyAqcmluZykKIAl1NjQgd3B0cjsKIAogCWlmIChyaW5nLT51c2VfZG9vcmJlbGwp
Ci0JCXdwdHIgPSBhdG9taWM2NF9yZWFkKChhdG9taWM2NF90ICopCi0JCQkJICAgICAmcmluZy0+
YWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSk7CisJCXdwdHIgPSBhdG9taWM2NF9yZWFkKChh
dG9taWM2NF90ICopcmluZy0+d3B0cl9jcHVfYWRkcik7CiAJZWxzZQogCQlCVUcoKTsKIAlyZXR1
cm4gd3B0cjsKQEAgLTY3MywxMyArNjcyLDEzIEBAIHN0YXRpYyBpbnQgbWVzX3YxMF8xX21xZF9p
bml0KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAltcWQtPmNwX2hxZF9wcV9jb250cm9sID0g
dG1wOwogCiAJLyogc2V0IHRoZSB3YiBhZGRyZXNzIHdoZXRoZXIgaXQncyBlbmFibGVkIG9yIG5v
dCAqLwotCXdiX2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+cnB0cl9vZmZz
ICogNCk7CisJd2JfZ3B1X2FkZHIgPSByaW5nLT5ycHRyX2dwdV9hZGRyOwogCW1xZC0+Y3BfaHFk
X3BxX3JwdHJfcmVwb3J0X2FkZHJfbG8gPSB3Yl9ncHVfYWRkciAmIDB4ZmZmZmZmZmM7CiAJbXFk
LT5jcF9ocWRfcHFfcnB0cl9yZXBvcnRfYWRkcl9oaSA9CiAJCXVwcGVyXzMyX2JpdHMod2JfZ3B1
X2FkZHIpICYgMHhmZmZmOwogCiAJLyogb25seSB1c2VkIGlmIENQX1BRX1dQVFJfUE9MTF9DTlRM
LkNQX1BRX1dQVFJfUE9MTF9DTlRMX19FTl9NQVNLPTEgKi8KLQl3Yl9ncHVfYWRkciA9IGFkZXYt
PndiLmdwdV9hZGRyICsgKHJpbmctPndwdHJfb2ZmcyAqIDQpOworCXdiX2dwdV9hZGRyID0gcmlu
Zy0+d3B0cl9ncHVfYWRkcjsKIAltcWQtPmNwX2hxZF9wcV93cHRyX3BvbGxfYWRkcl9sbyA9IHdi
X2dwdV9hZGRyICYgMHhmZmZmZmZmODsKIAltcWQtPmNwX2hxZF9wcV93cHRyX3BvbGxfYWRkcl9o
aSA9IHVwcGVyXzMyX2JpdHMod2JfZ3B1X2FkZHIpICYgMHhmZmZmOwogCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zZG1hX3YyXzQuYyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L3NkbWFfdjJfNC5jCmluZGV4IDVmMzA0ZDYxOTk5ZS4uMTNjYTQwNmRiZDYzIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zZG1hX3YyXzQuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zZG1hX3YyXzQuYwpAQCAtMTk0LDcgKzE5NCw3IEBA
IHN0YXRpYyBpbnQgc2RtYV92Ml80X2luaXRfbWljcm9jb2RlKHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2KQogc3RhdGljIHVpbnQ2NF90IHNkbWFfdjJfNF9yaW5nX2dldF9ycHRyKHN0cnVjdCBh
bWRncHVfcmluZyAqcmluZykKIHsKIAkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNz
YXJ5IG9uIEJFICovCi0JcmV0dXJuIHJpbmctPmFkZXYtPndiLndiW3JpbmctPnJwdHJfb2Zmc10g
Pj4gMjsKKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1X2FkZHIgPj4gMjsKIH0KIAogLyoqCkBAIC00
MTAsMTIgKzQxMCwxMCBAQCBzdGF0aWMgaW50IHNkbWFfdjJfNF9nZnhfcmVzdW1lKHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2KQogCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZzsKIAl1MzIgcmJf
Y250bCwgaWJfY250bDsKIAl1MzIgcmJfYnVmc3o7Ci0JdTMyIHdiX29mZnNldDsKIAlpbnQgaSwg
aiwgcjsKIAogCWZvciAoaSA9IDA7IGkgPCBhZGV2LT5zZG1hLm51bV9pbnN0YW5jZXM7IGkrKykg
ewogCQlyaW5nID0gJmFkZXYtPnNkbWEuaW5zdGFuY2VbaV0ucmluZzsKLQkJd2Jfb2Zmc2V0ID0g
KHJpbmctPnJwdHJfb2ZmcyAqIDQpOwogCiAJCW11dGV4X2xvY2soJmFkZXYtPnNyYm1fbXV0ZXgp
OwogCQlmb3IgKGogPSAwOyBqIDwgMTY7IGorKykgewpAQCAtNDUxLDkgKzQ0OSw5IEBAIHN0YXRp
YyBpbnQgc2RtYV92Ml80X2dmeF9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAK
IAkJLyogc2V0IHRoZSB3YiBhZGRyZXNzIHdoZXRoZXIgaXQncyBlbmFibGVkIG9yIG5vdCAqLwog
CQlXUkVHMzIobW1TRE1BMF9HRlhfUkJfUlBUUl9BRERSX0hJICsgc2RtYV9vZmZzZXRzW2ldLAot
CQkgICAgICAgdXBwZXJfMzJfYml0cyhhZGV2LT53Yi5ncHVfYWRkciArIHdiX29mZnNldCkgJiAw
eEZGRkZGRkZGKTsKKwkJICAgICAgIHVwcGVyXzMyX2JpdHMocmluZy0+cnB0cl9ncHVfYWRkcikg
JiAweEZGRkZGRkZGKTsKIAkJV1JFRzMyKG1tU0RNQTBfR0ZYX1JCX1JQVFJfQUREUl9MTyArIHNk
bWFfb2Zmc2V0c1tpXSwKLQkJICAgICAgIGxvd2VyXzMyX2JpdHMoYWRldi0+d2IuZ3B1X2FkZHIg
KyB3Yl9vZmZzZXQpICYgMHhGRkZGRkZGQyk7CisJCSAgICAgICBsb3dlcl8zMl9iaXRzKHJpbmct
PnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZGQyk7CiAKIAkJcmJfY250bCA9IFJFR19TRVRfRklF
TEQocmJfY250bCwgU0RNQTBfR0ZYX1JCX0NOVEwsIFJQVFJfV1JJVEVCQUNLX0VOQUJMRSwgMSk7
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjNfMC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92M18wLmMKaW5kZXggYzU5ZjZmNmY0YzA5
Li42MTU2NzI2OWFmOTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Nk
bWFfdjNfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjNfMC5jCkBA
IC0zNTAsNyArMzUwLDcgQEAgc3RhdGljIGludCBzZG1hX3YzXzBfaW5pdF9taWNyb2NvZGUoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiBzdGF0aWMgdWludDY0X3Qgc2RtYV92M18wX3Jpbmdf
Z2V0X3JwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogewogCS8qIFhYWCBjaGVjayBpZiBz
d2FwcGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQlyZXR1cm4gcmluZy0+YWRldi0+d2Iud2Jb
cmluZy0+cnB0cl9vZmZzXSA+PiAyOworCXJldHVybiAqcmluZy0+cnB0cl9jcHVfYWRkciA+PiAy
OwogfQogCiAvKioKQEAgLTM2Nyw3ICszNjcsNyBAQCBzdGF0aWMgdWludDY0X3Qgc2RtYV92M18w
X3JpbmdfZ2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJaWYgKHJpbmctPnVz
ZV9kb29yYmVsbCB8fCByaW5nLT51c2VfcG9sbG1lbSkgewogCQkvKiBYWFggY2hlY2sgaWYgc3dh
cHBpbmcgaXMgbmVjZXNzYXJ5IG9uIEJFICovCi0JCXdwdHIgPSByaW5nLT5hZGV2LT53Yi53Ylty
aW5nLT53cHRyX29mZnNdID4+IDI7CisJCXdwdHIgPSAqcmluZy0+d3B0cl9jcHVfYWRkciA+PiAy
OwogCX0gZWxzZSB7CiAJCXdwdHIgPSBSUkVHMzIobW1TRE1BMF9HRlhfUkJfV1BUUiArIHNkbWFf
b2Zmc2V0c1tyaW5nLT5tZV0pID4+IDI7CiAJfQpAQCAtMzg3LDEyICszODcsMTIgQEAgc3RhdGlj
IHZvaWQgc2RtYV92M18wX3Jpbmdfc2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQog
CXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gcmluZy0+YWRldjsKIAogCWlmIChyaW5nLT51
c2VfZG9vcmJlbGwpIHsKLQkJdTMyICp3YiA9ICh1MzIgKikmYWRldi0+d2Iud2JbcmluZy0+d3B0
cl9vZmZzXTsKKwkJdTMyICp3YiA9ICh1MzIgKilyaW5nLT53cHRyX2NwdV9hZGRyOwogCQkvKiBY
WFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9uIEJFICovCiAJCVdSSVRFX09OQ0Uo
KndiLCAobG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSA8PCAyKSk7CiAJCVdET09SQkVMTDMyKHJp
bmctPmRvb3JiZWxsX2luZGV4LCBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpIDw8IDIpOwogCX0g
ZWxzZSBpZiAocmluZy0+dXNlX3BvbGxtZW0pIHsKLQkJdTMyICp3YiA9ICh1MzIgKikmYWRldi0+
d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJdTMyICp3YiA9ICh1MzIgKilyaW5nLT53cHRyX2Nw
dV9hZGRyOwogCiAJCVdSSVRFX09OQ0UoKndiLCAobG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSA8
PCAyKSk7CiAJfSBlbHNlIHsKQEAgLTY0NSw3ICs2NDUsNiBAQCBzdGF0aWMgaW50IHNkbWFfdjNf
MF9nZnhfcmVzdW1lKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCXN0cnVjdCBhbWRncHVf
cmluZyAqcmluZzsKIAl1MzIgcmJfY250bCwgaWJfY250bCwgd3B0cl9wb2xsX2NudGw7CiAJdTMy
IHJiX2J1ZnN6OwotCXUzMiB3Yl9vZmZzZXQ7CiAJdTMyIGRvb3JiZWxsOwogCXU2NCB3cHRyX2dw
dV9hZGRyOwogCWludCBpLCBqLCByOwpAQCAtNjUzLDcgKzY1Miw2IEBAIHN0YXRpYyBpbnQgc2Rt
YV92M18wX2dmeF9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJZm9yIChpID0g
MDsgaSA8IGFkZXYtPnNkbWEubnVtX2luc3RhbmNlczsgaSsrKSB7CiAJCXJpbmcgPSAmYWRldi0+
c2RtYS5pbnN0YW5jZVtpXS5yaW5nOwogCQlhbWRncHVfcmluZ19jbGVhcl9yaW5nKHJpbmcpOwot
CQl3Yl9vZmZzZXQgPSAocmluZy0+cnB0cl9vZmZzICogNCk7CiAKIAkJbXV0ZXhfbG9jaygmYWRl
di0+c3JibV9tdXRleCk7CiAJCWZvciAoaiA9IDA7IGogPCAxNjsgaisrKSB7CkBAIC02OTAsOSAr
Njg4LDkgQEAgc3RhdGljIGludCBzZG1hX3YzXzBfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldikKIAogCQkvKiBzZXQgdGhlIHdiIGFkZHJlc3Mgd2hldGhlciBpdCdzIGVuYWJs
ZWQgb3Igbm90ICovCiAJCVdSRUczMihtbVNETUEwX0dGWF9SQl9SUFRSX0FERFJfSEkgKyBzZG1h
X29mZnNldHNbaV0sCi0JCSAgICAgICB1cHBlcl8zMl9iaXRzKGFkZXYtPndiLmdwdV9hZGRyICsg
d2Jfb2Zmc2V0KSAmIDB4RkZGRkZGRkYpOworCQkgICAgICAgdXBwZXJfMzJfYml0cyhyaW5nLT5y
cHRyX2dwdV9hZGRyKSAmIDB4RkZGRkZGRkYpOwogCQlXUkVHMzIobW1TRE1BMF9HRlhfUkJfUlBU
Ul9BRERSX0xPICsgc2RtYV9vZmZzZXRzW2ldLAotCQkgICAgICAgbG93ZXJfMzJfYml0cyhhZGV2
LT53Yi5ncHVfYWRkciArIHdiX29mZnNldCkgJiAweEZGRkZGRkZDKTsKKwkJICAgICAgIGxvd2Vy
XzMyX2JpdHMocmluZy0+cnB0cl9ncHVfYWRkcikgJiAweEZGRkZGRkZDKTsKIAogCQlyYl9jbnRs
ID0gUkVHX1NFVF9GSUVMRChyYl9jbnRsLCBTRE1BMF9HRlhfUkJfQ05UTCwgUlBUUl9XUklURUJB
Q0tfRU5BQkxFLCAxKTsKIApAQCAtNzExLDcgKzcwOSw3IEBAIHN0YXRpYyBpbnQgc2RtYV92M18w
X2dmeF9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCVdSRUczMihtbVNETUEw
X0dGWF9ET09SQkVMTCArIHNkbWFfb2Zmc2V0c1tpXSwgZG9vcmJlbGwpOwogCiAJCS8qIHNldHVw
IHRoZSB3cHRyIHNoYWRvdyBwb2xsaW5nICovCi0JCXdwdHJfZ3B1X2FkZHIgPSBhZGV2LT53Yi5n
cHVfYWRkciArIChyaW5nLT53cHRyX29mZnMgKiA0KTsKKwkJd3B0cl9ncHVfYWRkciA9IHJpbmct
PndwdHJfZ3B1X2FkZHI7CiAKIAkJV1JFRzMyKG1tU0RNQTBfR0ZYX1JCX1dQVFJfUE9MTF9BRERS
X0xPICsgc2RtYV9vZmZzZXRzW2ldLAogCQkgICAgICAgbG93ZXJfMzJfYml0cyh3cHRyX2dwdV9h
ZGRyKSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zZG1hX3Y0XzAu
YyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjRfMC5jCmluZGV4IDI5ODVjNjFi
YzZhMS4uNWYyOWEwMWMyMzk1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9zZG1hX3Y0XzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zZG1hX3Y0XzAu
YwpAQCAtNjg3LDcgKzY4Nyw3IEBAIHN0YXRpYyB1aW50NjRfdCBzZG1hX3Y0XzBfcmluZ19nZXRf
cnB0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJdTY0ICpycHRyOwogCiAJLyogWFhYIGNo
ZWNrIGlmIHN3YXBwaW5nIGlzIG5lY2Vzc2FyeSBvbiBCRSAqLwotCXJwdHIgPSAoKHU2NCAqKSZy
aW5nLT5hZGV2LT53Yi53YltyaW5nLT5ycHRyX29mZnNdKTsKKwlycHRyID0gKCh1NjQgKilyaW5n
LT5ycHRyX2NwdV9hZGRyKTsKIAogCURSTV9ERUJVRygicnB0ciBiZWZvcmUgc2hpZnQgPT0gMHgl
MDE2bGx4XG4iLCAqcnB0cik7CiAJcmV0dXJuICgoKnJwdHIpID4+IDIpOwpAQCAtNzA3LDcgKzcw
Nyw3IEBAIHN0YXRpYyB1aW50NjRfdCBzZG1hX3Y0XzBfcmluZ19nZXRfd3B0cihzdHJ1Y3QgYW1k
Z3B1X3JpbmcgKnJpbmcpCiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7CiAJCS8qIFhYWCBj
aGVjayBpZiBzd2FwcGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQkJd3B0ciA9IFJFQURfT05D
RSgqKCh1NjQgKikmYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSkpOworCQl3cHRyID0gUkVB
RF9PTkNFKCooKHU2NCAqKXJpbmctPndwdHJfY3B1X2FkZHIpKTsKIAkJRFJNX0RFQlVHKCJ3cHRy
L2Rvb3JiZWxsIGJlZm9yZSBzaGlmdCA9PSAweCUwMTZsbHhcbiIsIHdwdHIpOwogCX0gZWxzZSB7
CiAJCXdwdHIgPSBSUkVHMzJfU0RNQShyaW5nLT5tZSwgbW1TRE1BMF9HRlhfUkJfV1BUUl9ISSk7
CkBAIC03MzMsNyArNzMzLDcgQEAgc3RhdGljIHZvaWQgc2RtYV92NF8wX3Jpbmdfc2V0X3dwdHIo
c3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJRFJNX0RFQlVHKCJTZXR0aW5nIHdyaXRlIHBv
aW50ZXJcbiIpOwogCWlmIChyaW5nLT51c2VfZG9vcmJlbGwpIHsKLQkJdTY0ICp3YiA9ICh1NjQg
KikmYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJdTY0ICp3YiA9ICh1NjQgKilyaW5n
LT53cHRyX2NwdV9hZGRyOwogCiAJCURSTV9ERUJVRygiVXNpbmcgZG9vcmJlbGwgLS0gIgogCQkJ
CSJ3cHRyX29mZnMgPT0gMHglMDh4ICIKQEAgLTc3Niw3ICs3NzYsNyBAQCBzdGF0aWMgdWludDY0
X3Qgc2RtYV92NF8wX3BhZ2VfcmluZ19nZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcp
CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7CiAJCS8qIFhYWCBjaGVjayBpZiBzd2FwcGlu
ZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQkJd3B0ciA9IFJFQURfT05DRSgqKCh1NjQgKikmYWRl
di0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSkpOworCQl3cHRyID0gUkVBRF9PTkNFKCooKHU2NCAq
KXJpbmctPndwdHJfY3B1X2FkZHIpKTsKIAl9IGVsc2UgewogCQl3cHRyID0gUlJFRzMyX1NETUEo
cmluZy0+bWUsIG1tU0RNQTBfUEFHRV9SQl9XUFRSX0hJKTsKIAkJd3B0ciA9IHdwdHIgPDwgMzI7
CkBAIC03OTgsNyArNzk4LDcgQEAgc3RhdGljIHZvaWQgc2RtYV92NF8wX3BhZ2VfcmluZ19zZXRf
d3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYgPSByaW5nLT5hZGV2OwogCiAJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkgewotCQl1NjQgKndi
ID0gKHU2NCAqKSZhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdOworCQl1NjQgKndiID0gKHU2
NCAqKXJpbmctPndwdHJfY3B1X2FkZHI7CiAKIAkJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5nIGlz
IG5lY2Vzc2FyeSBvbiBCRSAqLwogCQlXUklURV9PTkNFKCp3YiwgKHJpbmctPndwdHIgPDwgMikp
OwpAQCAtMTEyNCwxMyArMTEyNCwxMCBAQCBzdGF0aWMgdm9pZCBzZG1hX3Y0XzBfZ2Z4X3Jlc3Vt
ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdW5zaWduZWQgaW50IGkpCiB7CiAJc3RydWN0
IGFtZGdwdV9yaW5nICpyaW5nID0gJmFkZXYtPnNkbWEuaW5zdGFuY2VbaV0ucmluZzsKIAl1MzIg
cmJfY250bCwgaWJfY250bCwgd3B0cl9wb2xsX2NudGw7Ci0JdTMyIHdiX29mZnNldDsKIAl1MzIg
ZG9vcmJlbGw7CiAJdTMyIGRvb3JiZWxsX29mZnNldDsKIAl1NjQgd3B0cl9ncHVfYWRkcjsKIAot
CXdiX29mZnNldCA9IChyaW5nLT5ycHRyX29mZnMgKiA0KTsKLQogCXJiX2NudGwgPSBSUkVHMzJf
U0RNQShpLCBtbVNETUEwX0dGWF9SQl9DTlRMKTsKIAlyYl9jbnRsID0gc2RtYV92NF8wX3JiX2Nu
dGwocmluZywgcmJfY250bCk7CiAJV1JFRzMyX1NETUEoaSwgbW1TRE1BMF9HRlhfUkJfQ05UTCwg
cmJfY250bCk7CkBAIC0xMTQzLDkgKzExNDAsOSBAQCBzdGF0aWMgdm9pZCBzZG1hX3Y0XzBfZ2Z4
X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdW5zaWduZWQgaW50IGkpCiAKIAkv
KiBzZXQgdGhlIHdiIGFkZHJlc3Mgd2hldGhlciBpdCdzIGVuYWJsZWQgb3Igbm90ICovCiAJV1JF
RzMyX1NETUEoaSwgbW1TRE1BMF9HRlhfUkJfUlBUUl9BRERSX0hJLAotCSAgICAgICB1cHBlcl8z
Ml9iaXRzKGFkZXYtPndiLmdwdV9hZGRyICsgd2Jfb2Zmc2V0KSAmIDB4RkZGRkZGRkYpOworCSAg
ICAgICB1cHBlcl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZGRik7CiAJ
V1JFRzMyX1NETUEoaSwgbW1TRE1BMF9HRlhfUkJfUlBUUl9BRERSX0xPLAotCSAgICAgICBsb3dl
cl8zMl9iaXRzKGFkZXYtPndiLmdwdV9hZGRyICsgd2Jfb2Zmc2V0KSAmIDB4RkZGRkZGRkMpOwor
CSAgICAgICBsb3dlcl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZGQyk7
CiAKIAlyYl9jbnRsID0gUkVHX1NFVF9GSUVMRChyYl9jbnRsLCBTRE1BMF9HRlhfUkJfQ05UTCwK
IAkJCQlSUFRSX1dSSVRFQkFDS19FTkFCTEUsIDEpOwpAQCAtMTE3NSw3ICsxMTcyLDcgQEAgc3Rh
dGljIHZvaWQgc2RtYV92NF8wX2dmeF9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYs
IHVuc2lnbmVkIGludCBpKQogCVdSRUczMl9TRE1BKGksIG1tU0RNQTBfR0ZYX01JTk9SX1BUUl9V
UERBVEUsIDApOwogCiAJLyogc2V0dXAgdGhlIHdwdHIgc2hhZG93IHBvbGxpbmcgKi8KLQl3cHRy
X2dwdV9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+d3B0cl9vZmZzICogNCk7CisJ
d3B0cl9ncHVfYWRkciA9IHJpbmctPndwdHJfZ3B1X2FkZHI7CiAJV1JFRzMyX1NETUEoaSwgbW1T
RE1BMF9HRlhfUkJfV1BUUl9QT0xMX0FERFJfTE8sCiAJCSAgICBsb3dlcl8zMl9iaXRzKHdwdHJf
Z3B1X2FkZHIpKTsKIAlXUkVHMzJfU0RNQShpLCBtbVNETUEwX0dGWF9SQl9XUFRSX1BPTExfQURE
Ul9ISSwKQEAgLTEyMTQsMTMgKzEyMTEsMTAgQEAgc3RhdGljIHZvaWQgc2RtYV92NF8wX3BhZ2Vf
cmVzdW1lKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1bnNpZ25lZCBpbnQgaSkKIHsKIAlz
dHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcgPSAmYWRldi0+c2RtYS5pbnN0YW5jZVtpXS5wYWdlOwog
CXUzMiByYl9jbnRsLCBpYl9jbnRsLCB3cHRyX3BvbGxfY250bDsKLQl1MzIgd2Jfb2Zmc2V0Owog
CXUzMiBkb29yYmVsbDsKIAl1MzIgZG9vcmJlbGxfb2Zmc2V0OwogCXU2NCB3cHRyX2dwdV9hZGRy
OwogCi0Jd2Jfb2Zmc2V0ID0gKHJpbmctPnJwdHJfb2ZmcyAqIDQpOwotCiAJcmJfY250bCA9IFJS
RUczMl9TRE1BKGksIG1tU0RNQTBfUEFHRV9SQl9DTlRMKTsKIAlyYl9jbnRsID0gc2RtYV92NF8w
X3JiX2NudGwocmluZywgcmJfY250bCk7CiAJV1JFRzMyX1NETUEoaSwgbW1TRE1BMF9QQUdFX1JC
X0NOVEwsIHJiX2NudGwpOwpAQCAtMTIzMyw5ICsxMjI3LDkgQEAgc3RhdGljIHZvaWQgc2RtYV92
NF8wX3BhZ2VfcmVzdW1lKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1bnNpZ25lZCBpbnQg
aSkKIAogCS8qIHNldCB0aGUgd2IgYWRkcmVzcyB3aGV0aGVyIGl0J3MgZW5hYmxlZCBvciBub3Qg
Ki8KIAlXUkVHMzJfU0RNQShpLCBtbVNETUEwX1BBR0VfUkJfUlBUUl9BRERSX0hJLAotCSAgICAg
ICB1cHBlcl8zMl9iaXRzKGFkZXYtPndiLmdwdV9hZGRyICsgd2Jfb2Zmc2V0KSAmIDB4RkZGRkZG
RkYpOworCSAgICAgICB1cHBlcl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZG
RkZGRik7CiAJV1JFRzMyX1NETUEoaSwgbW1TRE1BMF9QQUdFX1JCX1JQVFJfQUREUl9MTywKLQkg
ICAgICAgbG93ZXJfMzJfYml0cyhhZGV2LT53Yi5ncHVfYWRkciArIHdiX29mZnNldCkgJiAweEZG
RkZGRkZDKTsKKwkgICAgICAgbG93ZXJfMzJfYml0cyhyaW5nLT5ycHRyX2dwdV9hZGRyKSAmIDB4
RkZGRkZGRkMpOwogCiAJcmJfY250bCA9IFJFR19TRVRfRklFTEQocmJfY250bCwgU0RNQTBfUEFH
RV9SQl9DTlRMLAogCQkJCVJQVFJfV1JJVEVCQUNLX0VOQUJMRSwgMSk7CkBAIC0xMjY2LDcgKzEy
NjAsNyBAQCBzdGF0aWMgdm9pZCBzZG1hX3Y0XzBfcGFnZV9yZXN1bWUoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsIHVuc2lnbmVkIGludCBpKQogCVdSRUczMl9TRE1BKGksIG1tU0RNQTBfUEFH
RV9NSU5PUl9QVFJfVVBEQVRFLCAwKTsKIAogCS8qIHNldHVwIHRoZSB3cHRyIHNoYWRvdyBwb2xs
aW5nICovCi0Jd3B0cl9ncHVfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPndwdHJf
b2ZmcyAqIDQpOworCXdwdHJfZ3B1X2FkZHIgPSByaW5nLT53cHRyX2dwdV9hZGRyOwogCVdSRUcz
Ml9TRE1BKGksIG1tU0RNQTBfUEFHRV9SQl9XUFRSX1BPTExfQUREUl9MTywKIAkJICAgIGxvd2Vy
XzMyX2JpdHMod3B0cl9ncHVfYWRkcikpOwogCVdSRUczMl9TRE1BKGksIG1tU0RNQTBfUEFHRV9S
Ql9XUFRSX1BPTExfQUREUl9ISSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L3NkbWFfdjVfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92NV8wLmMK
aW5kZXggZTIyMzJkZDEyZDhlLi5lNDVmNjFiMDAxZGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjVfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L3NkbWFfdjVfMC5jCkBAIC0yOTksNyArMjk5LDcgQEAgc3RhdGljIHVpbnQ2NF90IHNkbWFf
djVfMF9yaW5nX2dldF9ycHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAl1NjQgKnJwdHI7
CiAKIAkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9uIEJFICovCi0JcnB0
ciA9ICgodTY0ICopJnJpbmctPmFkZXYtPndiLndiW3JpbmctPnJwdHJfb2Zmc10pOworCXJwdHIg
PSAodTY0ICopcmluZy0+cnB0cl9jcHVfYWRkcjsKIAogCURSTV9ERUJVRygicnB0ciBiZWZvcmUg
c2hpZnQgPT0gMHglMDE2bGx4XG4iLCAqcnB0cik7CiAJcmV0dXJuICgoKnJwdHIpID4+IDIpOwpA
QCAtMzE5LDcgKzMxOSw3IEBAIHN0YXRpYyB1aW50NjRfdCBzZG1hX3Y1XzBfcmluZ19nZXRfd3B0
cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7
CiAJCS8qIFhYWCBjaGVjayBpZiBzd2FwcGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQkJd3B0
ciA9IFJFQURfT05DRSgqKCh1NjQgKikmYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSkpOwor
CQl3cHRyID0gUkVBRF9PTkNFKCooKHU2NCAqKXJpbmctPndwdHJfY3B1X2FkZHIpKTsKIAkJRFJN
X0RFQlVHKCJ3cHRyL2Rvb3JiZWxsIGJlZm9yZSBzaGlmdCA9PSAweCUwMTZsbHhcbiIsIHdwdHIp
OwogCX0gZWxzZSB7CiAJCXdwdHIgPSBSUkVHMzIoc2RtYV92NV8wX2dldF9yZWdfb2Zmc2V0KGFk
ZXYsIHJpbmctPm1lLCBtbVNETUEwX0dGWF9SQl9XUFRSX0hJKSk7CkBAIC0zNTIsOCArMzUyLDgg
QEAgc3RhdGljIHZvaWQgc2RtYV92NV8wX3Jpbmdfc2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5n
ICpyaW5nKQogCQkJCWxvd2VyXzMyX2JpdHMocmluZy0+d3B0ciA8PCAyKSwKIAkJCQl1cHBlcl8z
Ml9iaXRzKHJpbmctPndwdHIgPDwgMikpOwogCQkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMg
bmVjZXNzYXJ5IG9uIEJFICovCi0JCWFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10gPSBsb3dl
cl8zMl9iaXRzKHJpbmctPndwdHIgPDwgMik7Ci0JCWFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zm
cyArIDFdID0gdXBwZXJfMzJfYml0cyhyaW5nLT53cHRyIDw8IDIpOworCQlhdG9taWM2NF9zZXQo
KGF0b21pYzY0X3QgKilyaW5nLT53cHRyX2NwdV9hZGRyLAorCQkJICAgICByaW5nLT53cHRyIDw8
IDIpOwogCQlEUk1fREVCVUcoImNhbGxpbmcgV0RPT1JCRUxMNjQoMHglMDh4LCAweCUwMTZsbHgp
XG4iLAogCQkJCXJpbmctPmRvb3JiZWxsX2luZGV4LCByaW5nLT53cHRyIDw8IDIpOwogCQlXRE9P
UkJFTEw2NChyaW5nLT5kb29yYmVsbF9pbmRleCwgcmluZy0+d3B0ciA8PCAyKTsKQEAgLTY0NCw3
ICs2NDQsNiBAQCBzdGF0aWMgaW50IHNkbWFfdjVfMF9nZnhfcmVzdW1lKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2KQogCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZzsKIAl1MzIgcmJfY250bCwg
aWJfY250bDsKIAl1MzIgcmJfYnVmc3o7Ci0JdTMyIHdiX29mZnNldDsKIAl1MzIgZG9vcmJlbGw7
CiAJdTMyIGRvb3JiZWxsX29mZnNldDsKIAl1MzIgdGVtcDsKQEAgLTY1NCw3ICs2NTMsNiBAQCBz
dGF0aWMgaW50IHNkbWFfdjVfMF9nZnhfcmVzdW1lKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
KQogCiAJZm9yIChpID0gMDsgaSA8IGFkZXYtPnNkbWEubnVtX2luc3RhbmNlczsgaSsrKSB7CiAJ
CXJpbmcgPSAmYWRldi0+c2RtYS5pbnN0YW5jZVtpXS5yaW5nOwotCQl3Yl9vZmZzZXQgPSAocmlu
Zy0+cnB0cl9vZmZzICogNCk7CiAKIAkJaWYgKCFhbWRncHVfc3Jpb3ZfdmYoYWRldikpCiAJCQlX
UkVHMzIoc2RtYV92NV8wX2dldF9yZWdfb2Zmc2V0KGFkZXYsIGksIG1tU0RNQTBfU0VNX1dBSVRf
RkFJTF9USU1FUl9DTlRMKSwgMCk7CkBAIC02NzcsNyArNjc1LDcgQEAgc3RhdGljIGludCBzZG1h
X3Y1XzBfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAkJV1JFRzMyKHNk
bWFfdjVfMF9nZXRfcmVnX29mZnNldChhZGV2LCBpLCBtbVNETUEwX0dGWF9SQl9XUFRSX0hJKSwg
MCk7CiAKIAkJLyogc2V0dXAgdGhlIHdwdHIgc2hhZG93IHBvbGxpbmcgKi8KLQkJd3B0cl9ncHVf
YWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPndwdHJfb2ZmcyAqIDQpOworCQl3cHRy
X2dwdV9hZGRyID0gcmluZy0+d3B0cl9ncHVfYWRkcjsKIAkJV1JFRzMyKHNkbWFfdjVfMF9nZXRf
cmVnX29mZnNldChhZGV2LCBpLCBtbVNETUEwX0dGWF9SQl9XUFRSX1BPTExfQUREUl9MTyksCiAJ
CSAgICAgICBsb3dlcl8zMl9iaXRzKHdwdHJfZ3B1X2FkZHIpKTsKIAkJV1JFRzMyKHNkbWFfdjVf
MF9nZXRfcmVnX29mZnNldChhZGV2LCBpLCBtbVNETUEwX0dGWF9SQl9XUFRSX1BPTExfQUREUl9I
SSksCkBAIC02OTIsOSArNjkwLDkgQEAgc3RhdGljIGludCBzZG1hX3Y1XzBfZ2Z4X3Jlc3VtZShz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAogCQkvKiBzZXQgdGhlIHdiIGFkZHJlc3Mgd2hl
dGhlciBpdCdzIGVuYWJsZWQgb3Igbm90ICovCiAJCVdSRUczMihzZG1hX3Y1XzBfZ2V0X3JlZ19v
ZmZzZXQoYWRldiwgaSwgbW1TRE1BMF9HRlhfUkJfUlBUUl9BRERSX0hJKSwKLQkJICAgICAgIHVw
cGVyXzMyX2JpdHMoYWRldi0+d2IuZ3B1X2FkZHIgKyB3Yl9vZmZzZXQpICYgMHhGRkZGRkZGRik7
CisJCSAgICAgICB1cHBlcl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZG
Rik7CiAJCVdSRUczMihzZG1hX3Y1XzBfZ2V0X3JlZ19vZmZzZXQoYWRldiwgaSwgbW1TRE1BMF9H
RlhfUkJfUlBUUl9BRERSX0xPKSwKLQkJICAgICAgIGxvd2VyXzMyX2JpdHMoYWRldi0+d2IuZ3B1
X2FkZHIgKyB3Yl9vZmZzZXQpICYgMHhGRkZGRkZGQyk7CisJCSAgICAgICBsb3dlcl8zMl9iaXRz
KHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZGQyk7CiAKIAkJcmJfY250bCA9IFJFR19T
RVRfRklFTEQocmJfY250bCwgU0RNQTBfR0ZYX1JCX0NOVEwsIFJQVFJfV1JJVEVCQUNLX0VOQUJM
RSwgMSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjVf
Mi5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2RtYV92NV8yLmMKaW5kZXggNDZhOTYx
N2ZlZTVmLi5kZjVjNGMxZjEzN2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L3NkbWFfdjVfMi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NkbWFfdjVf
Mi5jCkBAIC0yNTIsNyArMjUyLDcgQEAgc3RhdGljIHVpbnQ2NF90IHNkbWFfdjVfMl9yaW5nX2dl
dF9ycHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAl1NjQgKnJwdHI7CiAKIAkvKiBYWFgg
Y2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9uIEJFICovCi0JcnB0ciA9ICgodTY0ICop
JnJpbmctPmFkZXYtPndiLndiW3JpbmctPnJwdHJfb2Zmc10pOworCXJwdHIgPSAodTY0ICopcmlu
Zy0+cnB0cl9jcHVfYWRkcjsKIAogCURSTV9ERUJVRygicnB0ciBiZWZvcmUgc2hpZnQgPT0gMHgl
MDE2bGx4XG4iLCAqcnB0cik7CiAJcmV0dXJuICgoKnJwdHIpID4+IDIpOwpAQCAtMjcyLDcgKzI3
Miw3IEBAIHN0YXRpYyB1aW50NjRfdCBzZG1hX3Y1XzJfcmluZ19nZXRfd3B0cihzdHJ1Y3QgYW1k
Z3B1X3JpbmcgKnJpbmcpCiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7CiAJCS8qIFhYWCBj
aGVjayBpZiBzd2FwcGluZyBpcyBuZWNlc3Nhcnkgb24gQkUgKi8KLQkJd3B0ciA9IFJFQURfT05D
RSgqKCh1NjQgKikmYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSkpOworCQl3cHRyID0gUkVB
RF9PTkNFKCooKHU2NCAqKXJpbmctPndwdHJfY3B1X2FkZHIpKTsKIAkJRFJNX0RFQlVHKCJ3cHRy
L2Rvb3JiZWxsIGJlZm9yZSBzaGlmdCA9PSAweCUwMTZsbHhcbiIsIHdwdHIpOwogCX0gZWxzZSB7
CiAJCXdwdHIgPSBSUkVHMzIoc2RtYV92NV8yX2dldF9yZWdfb2Zmc2V0KGFkZXYsIHJpbmctPm1l
LCBtbVNETUEwX0dGWF9SQl9XUFRSX0hJKSk7CkBAIC0zMDUsOCArMzA1LDggQEAgc3RhdGljIHZv
aWQgc2RtYV92NV8yX3Jpbmdfc2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCQkJ
CWxvd2VyXzMyX2JpdHMocmluZy0+d3B0ciA8PCAyKSwKIAkJCQl1cHBlcl8zMl9iaXRzKHJpbmct
PndwdHIgPDwgMikpOwogCQkvKiBYWFggY2hlY2sgaWYgc3dhcHBpbmcgaXMgbmVjZXNzYXJ5IG9u
IEJFICovCi0JCWFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10gPSBsb3dlcl8zMl9iaXRzKHJp
bmctPndwdHIgPDwgMik7Ci0JCWFkZXYtPndiLndiW3JpbmctPndwdHJfb2ZmcyArIDFdID0gdXBw
ZXJfMzJfYml0cyhyaW5nLT53cHRyIDw8IDIpOworCQlhdG9taWM2NF9zZXQoKGF0b21pYzY0X3Qg
KilyaW5nLT53cHRyX2NwdV9hZGRyLAorCQkJICAgICByaW5nLT53cHRyIDw8IDIpOwogCQlEUk1f
REVCVUcoImNhbGxpbmcgV0RPT1JCRUxMNjQoMHglMDh4LCAweCUwMTZsbHgpXG4iLAogCQkJCXJp
bmctPmRvb3JiZWxsX2luZGV4LCByaW5nLT53cHRyIDw8IDIpOwogCQlXRE9PUkJFTEw2NChyaW5n
LT5kb29yYmVsbF9pbmRleCwgcmluZy0+d3B0ciA8PCAyKTsKQEAgLTU4NCw3ICs1ODQsNiBAQCBz
dGF0aWMgaW50IHNkbWFfdjVfMl9nZnhfcmVzdW1lKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
KQogCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZzsKIAl1MzIgcmJfY250bCwgaWJfY250bDsKIAl1
MzIgcmJfYnVmc3o7Ci0JdTMyIHdiX29mZnNldDsKIAl1MzIgZG9vcmJlbGw7CiAJdTMyIGRvb3Ji
ZWxsX29mZnNldDsKIAl1MzIgdGVtcDsKQEAgLTU5NCw3ICs1OTMsNiBAQCBzdGF0aWMgaW50IHNk
bWFfdjVfMl9nZnhfcmVzdW1lKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCiAJZm9yIChp
ID0gMDsgaSA8IGFkZXYtPnNkbWEubnVtX2luc3RhbmNlczsgaSsrKSB7CiAJCXJpbmcgPSAmYWRl
di0+c2RtYS5pbnN0YW5jZVtpXS5yaW5nOwotCQl3Yl9vZmZzZXQgPSAocmluZy0+cnB0cl9vZmZz
ICogNCk7CiAKIAkJV1JFRzMyKHNkbWFfdjVfMl9nZXRfcmVnX29mZnNldChhZGV2LCBpLCBtbVNE
TUEwX1NFTV9XQUlUX0ZBSUxfVElNRVJfQ05UTCksIDApOwogCkBAIC02MTYsNyArNjE0LDcgQEAg
c3RhdGljIGludCBzZG1hX3Y1XzJfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRl
dikKIAkJV1JFRzMyKHNkbWFfdjVfMl9nZXRfcmVnX29mZnNldChhZGV2LCBpLCBtbVNETUEwX0dG
WF9SQl9XUFRSX0hJKSwgMCk7CiAKIAkJLyogc2V0dXAgdGhlIHdwdHIgc2hhZG93IHBvbGxpbmcg
Ki8KLQkJd3B0cl9ncHVfYWRkciA9IGFkZXYtPndiLmdwdV9hZGRyICsgKHJpbmctPndwdHJfb2Zm
cyAqIDQpOworCQl3cHRyX2dwdV9hZGRyID0gcmluZy0+d3B0cl9ncHVfYWRkcjsKIAkJV1JFRzMy
KHNkbWFfdjVfMl9nZXRfcmVnX29mZnNldChhZGV2LCBpLCBtbVNETUEwX0dGWF9SQl9XUFRSX1BP
TExfQUREUl9MTyksCiAJCSAgICAgICBsb3dlcl8zMl9iaXRzKHdwdHJfZ3B1X2FkZHIpKTsKIAkJ
V1JFRzMyKHNkbWFfdjVfMl9nZXRfcmVnX29mZnNldChhZGV2LCBpLCBtbVNETUEwX0dGWF9SQl9X
UFRSX1BPTExfQUREUl9ISSksCkBAIC02MzEsOSArNjI5LDkgQEAgc3RhdGljIGludCBzZG1hX3Y1
XzJfZ2Z4X3Jlc3VtZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAogCQkvKiBzZXQgdGhl
IHdiIGFkZHJlc3Mgd2hldGhlciBpdCdzIGVuYWJsZWQgb3Igbm90ICovCiAJCVdSRUczMihzZG1h
X3Y1XzJfZ2V0X3JlZ19vZmZzZXQoYWRldiwgaSwgbW1TRE1BMF9HRlhfUkJfUlBUUl9BRERSX0hJ
KSwKLQkJICAgICAgIHVwcGVyXzMyX2JpdHMoYWRldi0+d2IuZ3B1X2FkZHIgKyB3Yl9vZmZzZXQp
ICYgMHhGRkZGRkZGRik7CisJCSAgICAgICB1cHBlcl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2Fk
ZHIpICYgMHhGRkZGRkZGRik7CiAJCVdSRUczMihzZG1hX3Y1XzJfZ2V0X3JlZ19vZmZzZXQoYWRl
diwgaSwgbW1TRE1BMF9HRlhfUkJfUlBUUl9BRERSX0xPKSwKLQkJICAgICAgIGxvd2VyXzMyX2Jp
dHMoYWRldi0+d2IuZ3B1X2FkZHIgKyB3Yl9vZmZzZXQpICYgMHhGRkZGRkZGQyk7CisJCSAgICAg
ICBsb3dlcl8zMl9iaXRzKHJpbmctPnJwdHJfZ3B1X2FkZHIpICYgMHhGRkZGRkZGQyk7CiAKIAkJ
cmJfY250bCA9IFJFR19TRVRfRklFTEQocmJfY250bCwgU0RNQTBfR0ZYX1JCX0NOVEwsIFJQVFJf
V1JJVEVCQUNLX0VOQUJMRSwgMSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L3NpX2RtYS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc2lfZG1hLmMKaW5k
ZXggN2QyYmJjYmU1NDdiLi4xNWFkZTNjYzI1Y2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L3NpX2RtYS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Np
X2RtYS5jCkBAIC00MCw3ICs0MCw3IEBAIHN0YXRpYyB2b2lkIHNpX2RtYV9zZXRfaXJxX2Z1bmNz
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KTsKIAogc3RhdGljIHVpbnQ2NF90IHNpX2RtYV9y
aW5nX2dldF9ycHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIHsKLQlyZXR1cm4gcmluZy0+
YWRldi0+d2Iud2JbcmluZy0+cnB0cl9vZmZzPj4yXTsKKwlyZXR1cm4gKnJpbmctPnJwdHJfY3B1
X2FkZHI7CiB9CiAKIHN0YXRpYyB1aW50NjRfdCBzaV9kbWFfcmluZ19nZXRfd3B0cihzdHJ1Y3Qg
YW1kZ3B1X3JpbmcgKnJpbmcpCkBAIC0xNTIsNyArMTUyLDcgQEAgc3RhdGljIGludCBzaV9kbWFf
c3RhcnQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCVdSRUczMihETUFfUkJfUlBUUiAr
IHNkbWFfb2Zmc2V0c1tpXSwgMCk7CiAJCVdSRUczMihETUFfUkJfV1BUUiArIHNkbWFfb2Zmc2V0
c1tpXSwgMCk7CiAKLQkJcnB0cl9hZGRyID0gYWRldi0+d2IuZ3B1X2FkZHIgKyAocmluZy0+cnB0
cl9vZmZzICogNCk7CisJCXJwdHJfYWRkciA9IHJpbmctPnJwdHJfZ3B1X2FkZHI7CiAKIAkJV1JF
RzMyKERNQV9SQl9SUFRSX0FERFJfTE8gKyBzZG1hX29mZnNldHNbaV0sIGxvd2VyXzMyX2JpdHMo
cnB0cl9hZGRyKSk7CiAJCVdSRUczMihETUFfUkJfUlBUUl9BRERSX0hJICsgc2RtYV9vZmZzZXRz
W2ldLCB1cHBlcl8zMl9iaXRzKHJwdHJfYWRkcikgJiAweEZGKTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3V2ZF92N18wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS91dmRfdjdfMC5jCmluZGV4IGUwN2UzZmFlOTliNS4uYTY1ZmNhMDRkMDk0IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS91dmRfdjdfMC5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L3V2ZF92N18wLmMKQEAgLTExOCw3ICsxMTgsNyBAQCBzdGF0aWMg
dWludDY0X3QgdXZkX3Y3XzBfZW5jX3JpbmdfZ2V0X3dwdHIoc3RydWN0IGFtZGdwdV9yaW5nICpy
aW5nKQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gcmluZy0+YWRldjsKIAogCWlmIChy
aW5nLT51c2VfZG9vcmJlbGwpCi0JCXJldHVybiBhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNd
OworCQlyZXR1cm4gKnJpbmctPndwdHJfY3B1X2FkZHI7CiAKIAlpZiAocmluZyA9PSAmYWRldi0+
dXZkLmluc3RbcmluZy0+bWVdLnJpbmdfZW5jWzBdKQogCQlyZXR1cm4gUlJFRzMyX1NPQzE1KFVW
RCwgcmluZy0+bWUsIG1tVVZEX1JCX1dQVFIpOwpAQCAtMTUzLDcgKzE1Myw3IEBAIHN0YXRpYyB2
b2lkIHV2ZF92N18wX2VuY19yaW5nX3NldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykK
IAogCWlmIChyaW5nLT51c2VfZG9vcmJlbGwpIHsKIAkJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5n
IGlzIG5lY2Vzc2FyeSBvbiBCRSAqLwotCQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0g
bG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKTsKKwkJKnJpbmctPndwdHJfY3B1X2FkZHIgPSBsb3dl
cl8zMl9iaXRzKHJpbmctPndwdHIpOwogCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRl
eCwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAJCXJldHVybjsKIAl9CkBAIC03MzUsNyAr
NzM1LDcgQEAgc3RhdGljIGludCB1dmRfdjdfMF9tbXNjaF9zdGFydChzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiwKIAkJaWYgKGFkZXYtPnV2ZC5oYXJ2ZXN0X2NvbmZpZyAmICgxIDw8IGkpKQog
CQkJY29udGludWU7CiAJCVdET09SQkVMTDMyKGFkZXYtPnV2ZC5pbnN0W2ldLnJpbmdfZW5jWzBd
LmRvb3JiZWxsX2luZGV4LCAwKTsKLQkJYWRldi0+d2Iud2JbYWRldi0+dXZkLmluc3RbaV0ucmlu
Z19lbmNbMF0ud3B0cl9vZmZzXSA9IDA7CisJCSphZGV2LT51dmQuaW5zdFtpXS5yaW5nX2VuY1sw
XS53cHRyX2NwdV9hZGRyID0gMDsKIAkJYWRldi0+dXZkLmluc3RbaV0ucmluZ19lbmNbMF0ud3B0
ciA9IDA7CiAJCWFkZXYtPnV2ZC5pbnN0W2ldLnJpbmdfZW5jWzBdLndwdHJfb2xkID0gMDsKIAl9
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS92Y2VfdjRfMC5jIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvdmNlX3Y0XzAuYwppbmRleCAzN2ZhMTYzMzkzZmQuLjAx
MDFkOTIzNTc3MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvdmNlX3Y0
XzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS92Y2VfdjRfMC5jCkBAIC04Miw3
ICs4Miw3IEBAIHN0YXRpYyB1aW50NjRfdCB2Y2VfdjRfMF9yaW5nX2dldF93cHRyKHN0cnVjdCBh
bWRncHVfcmluZyAqcmluZykKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IHJpbmctPmFk
ZXY7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKQotCQlyZXR1cm4gYWRldi0+d2Iud2Jbcmlu
Zy0+d3B0cl9vZmZzXTsKKwkJcmV0dXJuICpyaW5nLT53cHRyX2NwdV9hZGRyOwogCiAJaWYgKHJp
bmctPm1lID09IDApCiAJCXJldHVybiBSUkVHMzIoU09DMTVfUkVHX09GRlNFVChWQ0UsIDAsIG1t
VkNFX1JCX1dQVFIpKTsKQEAgLTEwNSw3ICsxMDUsNyBAQCBzdGF0aWMgdm9pZCB2Y2VfdjRfMF9y
aW5nX3NldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCWlmIChyaW5nLT51c2Vf
ZG9vcmJlbGwpIHsKIAkJLyogWFhYIGNoZWNrIGlmIHN3YXBwaW5nIGlzIG5lY2Vzc2FyeSBvbiBC
RSAqLwotCQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0gbG93ZXJfMzJfYml0cyhyaW5n
LT53cHRyKTsKKwkJKnJpbmctPndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9iaXRzKHJpbmctPndw
dHIpOwogCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93ZXJfMzJfYml0cyhy
aW5nLT53cHRyKSk7CiAJCXJldHVybjsKIAl9CkBAIC0xNzYsNyArMTc2LDcgQEAgc3RhdGljIGlu
dCB2Y2VfdjRfMF9tbXNjaF9zdGFydChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAlXUkVH
MzIoU09DMTVfUkVHX09GRlNFVChWQ0UsIDAsIG1tVkNFX01NU0NIX1ZGX01BSUxCT1hfUkVTUCks
IDApOwogCiAJV0RPT1JCRUxMMzIoYWRldi0+dmNlLnJpbmdbMF0uZG9vcmJlbGxfaW5kZXgsIDAp
OwotCWFkZXYtPndiLndiW2FkZXYtPnZjZS5yaW5nWzBdLndwdHJfb2Zmc10gPSAwOworCSphZGV2
LT52Y2UucmluZ1swXS53cHRyX2NwdV9hZGRyID0gMDsKIAlhZGV2LT52Y2UucmluZ1swXS53cHRy
ID0gMDsKIAlhZGV2LT52Y2UucmluZ1swXS53cHRyX29sZCA9IDA7CiAKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Zjbl92Ml8wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS92Y25fdjJfMC5jCmluZGV4IDIzYTllYjViMmM4YS4uODQ0YjcwNWZjZjk3IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS92Y25fdjJfMC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Zjbl92Ml8wLmMKQEAgLTEzMzMsNyArMTMzMyw3IEBAIHN0
YXRpYyB1aW50NjRfdCB2Y25fdjJfMF9kZWNfcmluZ19nZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3Jp
bmcgKnJpbmcpCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OwogCiAJ
aWYgKHJpbmctPnVzZV9kb29yYmVsbCkKLQkJcmV0dXJuIGFkZXYtPndiLndiW3JpbmctPndwdHJf
b2Zmc107CisJCXJldHVybiAqcmluZy0+d3B0cl9jcHVfYWRkcjsKIAllbHNlCiAJCXJldHVybiBS
UkVHMzJfU09DMTUoVVZELCAwLCBtbVVWRF9SQkNfUkJfV1BUUik7CiB9CkBAIC0xMzU0LDcgKzEz
NTQsNyBAQCBzdGF0aWMgdm9pZCB2Y25fdjJfMF9kZWNfcmluZ19zZXRfd3B0cihzdHJ1Y3QgYW1k
Z3B1X3JpbmcgKnJpbmcpCiAJCQlsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpIHwgMHg4MDAwMDAw
MCk7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7Ci0JCWFkZXYtPndiLndiW3JpbmctPndw
dHJfb2Zmc10gPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOworCQkqcmluZy0+d3B0cl9jcHVf
YWRkciA9IGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cik7CiAJCVdET09SQkVMTDMyKHJpbmctPmRv
b3JiZWxsX2luZGV4LCBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpKTsKIAl9IGVsc2UgewogCQlX
UkVHMzJfU09DMTUoVVZELCAwLCBtbVVWRF9SQkNfUkJfV1BUUiwgbG93ZXJfMzJfYml0cyhyaW5n
LT53cHRyKSk7CkBAIC0xNTU3LDEyICsxNTU3LDEyIEBAIHN0YXRpYyB1aW50NjRfdCB2Y25fdjJf
MF9lbmNfcmluZ19nZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAlpZiAocmlu
ZyA9PSAmYWRldi0+dmNuLmluc3QtPnJpbmdfZW5jWzBdKSB7CiAJCWlmIChyaW5nLT51c2VfZG9v
cmJlbGwpCi0JCQlyZXR1cm4gYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJCXJldHVy
biAqcmluZy0+d3B0cl9jcHVfYWRkcjsKIAkJZWxzZQogCQkJcmV0dXJuIFJSRUczMl9TT0MxNShV
VkQsIDAsIG1tVVZEX1JCX1dQVFIpOwogCX0gZWxzZSB7CiAJCWlmIChyaW5nLT51c2VfZG9vcmJl
bGwpCi0JCQlyZXR1cm4gYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJCXJldHVybiAq
cmluZy0+d3B0cl9jcHVfYWRkcjsKIAkJZWxzZQogCQkJcmV0dXJuIFJSRUczMl9TT0MxNShVVkQs
IDAsIG1tVVZEX1JCX1dQVFIyKTsKIAl9CkBAIC0xNTgxLDE0ICsxNTgxLDE0IEBAIHN0YXRpYyB2
b2lkIHZjbl92Ml8wX2VuY19yaW5nX3NldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykK
IAogCWlmIChyaW5nID09ICZhZGV2LT52Y24uaW5zdC0+cmluZ19lbmNbMF0pIHsKIAkJaWYgKHJp
bmctPnVzZV9kb29yYmVsbCkgewotCQkJYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSA9IGxv
d2VyXzMyX2JpdHMocmluZy0+d3B0cik7CisJCQkqcmluZy0+d3B0cl9jcHVfYWRkciA9IGxvd2Vy
XzMyX2JpdHMocmluZy0+d3B0cik7CiAJCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRl
eCwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAJCX0gZWxzZSB7CiAJCQlXUkVHMzJfU09D
MTUoVVZELCAwLCBtbVVWRF9SQl9XUFRSLCBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpKTsKIAkJ
fQogCX0gZWxzZSB7CiAJCWlmIChyaW5nLT51c2VfZG9vcmJlbGwpIHsKLQkJCWFkZXYtPndiLndi
W3JpbmctPndwdHJfb2Zmc10gPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOworCQkJKnJpbmct
PndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOwogCQkJV0RPT1JCRUxM
MzIocmluZy0+ZG9vcmJlbGxfaW5kZXgsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwogCQl9
IGVsc2UgewogCQkJV1JFRzMyX1NPQzE1KFVWRCwgMCwgbW1VVkRfUkJfV1BUUjIsIGxvd2VyXzMy
X2JpdHMocmluZy0+d3B0cikpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvdmNuX3YyXzUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Zjbl92Ml81LmMKaW5k
ZXggMjcxOWVmOWRlM2JkLi42MGZkM2Q2NzZjZGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L3Zjbl92Ml81LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
dmNuX3YyXzUuYwpAQCAtMTQ5MSw3ICsxNDkxLDcgQEAgc3RhdGljIHVpbnQ2NF90IHZjbl92Ml81
X2RlY19yaW5nX2dldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAlzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiA9IHJpbmctPmFkZXY7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxs
KQotCQlyZXR1cm4gYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJcmV0dXJuICpyaW5n
LT53cHRyX2NwdV9hZGRyOwogCWVsc2UKIAkJcmV0dXJuIFJSRUczMl9TT0MxNShWQ04sIHJpbmct
Pm1lLCBtbVVWRF9SQkNfUkJfV1BUUik7CiB9CkBAIC0xNTA4LDcgKzE1MDgsNyBAQCBzdGF0aWMg
dm9pZCB2Y25fdjJfNV9kZWNfcmluZ19zZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcp
CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSByaW5nLT5hZGV2OwogCiAJaWYgKHJpbmct
PnVzZV9kb29yYmVsbCkgewotCQlhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0gbG93ZXJf
MzJfYml0cyhyaW5nLT53cHRyKTsKKwkJKnJpbmctPndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9i
aXRzKHJpbmctPndwdHIpOwogCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93
ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAJfSBlbHNlIHsKIAkJV1JFRzMyX1NPQzE1KFZDTiwg
cmluZy0+bWUsIG1tVVZEX1JCQ19SQl9XUFRSLCBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpKTsK
QEAgLTE1NzUsMTIgKzE1NzUsMTIgQEAgc3RhdGljIHVpbnQ2NF90IHZjbl92Ml81X2VuY19yaW5n
X2dldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCWlmIChyaW5nID09ICZhZGV2
LT52Y24uaW5zdFtyaW5nLT5tZV0ucmluZ19lbmNbMF0pIHsKIAkJaWYgKHJpbmctPnVzZV9kb29y
YmVsbCkKLQkJCXJldHVybiBhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdOworCQkJcmV0dXJu
ICpyaW5nLT53cHRyX2NwdV9hZGRyOwogCQllbHNlCiAJCQlyZXR1cm4gUlJFRzMyX1NPQzE1KFZD
TiwgcmluZy0+bWUsIG1tVVZEX1JCX1dQVFIpOwogCX0gZWxzZSB7CiAJCWlmIChyaW5nLT51c2Vf
ZG9vcmJlbGwpCi0JCQlyZXR1cm4gYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJCXJl
dHVybiAqcmluZy0+d3B0cl9jcHVfYWRkcjsKIAkJZWxzZQogCQkJcmV0dXJuIFJSRUczMl9TT0Mx
NShWQ04sIHJpbmctPm1lLCBtbVVWRF9SQl9XUFRSMik7CiAJfQpAQCAtMTU5OSwxNCArMTU5OSwx
NCBAQCBzdGF0aWMgdm9pZCB2Y25fdjJfNV9lbmNfcmluZ19zZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1
X3JpbmcgKnJpbmcpCiAKIAlpZiAocmluZyA9PSAmYWRldi0+dmNuLmluc3RbcmluZy0+bWVdLnJp
bmdfZW5jWzBdKSB7CiAJCWlmIChyaW5nLT51c2VfZG9vcmJlbGwpIHsKLQkJCWFkZXYtPndiLndi
W3JpbmctPndwdHJfb2Zmc10gPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOworCQkJKnJpbmct
PndwdHJfY3B1X2FkZHIgPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIpOwogCQkJV0RPT1JCRUxM
MzIocmluZy0+ZG9vcmJlbGxfaW5kZXgsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwogCQl9
IGVsc2UgewogCQkJV1JFRzMyX1NPQzE1KFZDTiwgcmluZy0+bWUsIG1tVVZEX1JCX1dQVFIsIGxv
d2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwogCQl9CiAJfSBlbHNlIHsKIAkJaWYgKHJpbmctPnVz
ZV9kb29yYmVsbCkgewotCQkJYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSA9IGxvd2VyXzMy
X2JpdHMocmluZy0+d3B0cik7CisJCQkqcmluZy0+d3B0cl9jcHVfYWRkciA9IGxvd2VyXzMyX2Jp
dHMocmluZy0+d3B0cik7CiAJCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9pbmRleCwgbG93
ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAJCX0gZWxzZSB7CiAJCQlXUkVHMzJfU09DMTUoVkNO
LCByaW5nLT5tZSwgbW1VVkRfUkJfV1BUUjIsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvdmNuX3YzXzAuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Zjbl92M18wLmMKaW5kZXggNjNlNTU0N2NmYjE2Li45Njdj
MjAxNTdiMzQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3Zjbl92M18w
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvdmNuX3YzXzAuYwpAQCAtMTYxNCw3
ICsxNjE0LDcgQEAgc3RhdGljIHVpbnQ2NF90IHZjbl92M18wX2RlY19yaW5nX2dldF93cHRyKHN0
cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IHJp
bmctPmFkZXY7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKQotCQlyZXR1cm4gYWRldi0+d2Iu
d2JbcmluZy0+d3B0cl9vZmZzXTsKKwkJcmV0dXJuICpyaW5nLT53cHRyX2NwdV9hZGRyOwogCWVs
c2UKIAkJcmV0dXJuIFJSRUczMl9TT0MxNShWQ04sIHJpbmctPm1lLCBtbVVWRF9SQkNfUkJfV1BU
Uik7CiB9CkBAIC0xNjM1LDcgKzE2MzUsNyBAQCBzdGF0aWMgdm9pZCB2Y25fdjNfMF9kZWNfcmlu
Z19zZXRfd3B0cihzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJCQlsb3dlcl8zMl9iaXRzKHJp
bmctPndwdHIpIHwgMHg4MDAwMDAwMCk7CiAKIAlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7Ci0J
CWFkZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc10gPSBsb3dlcl8zMl9iaXRzKHJpbmctPndwdHIp
OworCQkqcmluZy0+d3B0cl9jcHVfYWRkciA9IGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cik7CiAJ
CVdET09SQkVMTDMyKHJpbmctPmRvb3JiZWxsX2luZGV4LCBsb3dlcl8zMl9iaXRzKHJpbmctPndw
dHIpKTsKIAl9IGVsc2UgewogCQlXUkVHMzJfU09DMTUoVkNOLCByaW5nLT5tZSwgbW1VVkRfUkJD
X1JCX1dQVFIsIGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cikpOwpAQCAtMTcwMiwxMiArMTcwMiwx
MiBAQCBzdGF0aWMgdWludDY0X3QgdmNuX3YzXzBfZW5jX3JpbmdfZ2V0X3dwdHIoc3RydWN0IGFt
ZGdwdV9yaW5nICpyaW5nKQogCiAJaWYgKHJpbmcgPT0gJmFkZXYtPnZjbi5pbnN0W3JpbmctPm1l
XS5yaW5nX2VuY1swXSkgewogCQlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKQotCQkJcmV0dXJuIGFk
ZXYtPndiLndiW3JpbmctPndwdHJfb2Zmc107CisJCQlyZXR1cm4gKnJpbmctPndwdHJfY3B1X2Fk
ZHI7CiAJCWVsc2UKIAkJCXJldHVybiBSUkVHMzJfU09DMTUoVkNOLCByaW5nLT5tZSwgbW1VVkRf
UkJfV1BUUik7CiAJfSBlbHNlIHsKIAkJaWYgKHJpbmctPnVzZV9kb29yYmVsbCkKLQkJCXJldHVy
biBhZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdOworCQkJcmV0dXJuICpyaW5nLT53cHRyX2Nw
dV9hZGRyOwogCQllbHNlCiAJCQlyZXR1cm4gUlJFRzMyX1NPQzE1KFZDTiwgcmluZy0+bWUsIG1t
VVZEX1JCX1dQVFIyKTsKIAl9CkBAIC0xNzI2LDE0ICsxNzI2LDE0IEBAIHN0YXRpYyB2b2lkIHZj
bl92M18wX2VuY19yaW5nX3NldF93cHRyKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCWlm
IChyaW5nID09ICZhZGV2LT52Y24uaW5zdFtyaW5nLT5tZV0ucmluZ19lbmNbMF0pIHsKIAkJaWYg
KHJpbmctPnVzZV9kb29yYmVsbCkgewotCQkJYWRldi0+d2Iud2JbcmluZy0+d3B0cl9vZmZzXSA9
IGxvd2VyXzMyX2JpdHMocmluZy0+d3B0cik7CisJCQkqcmluZy0+d3B0cl9jcHVfYWRkciA9IGxv
d2VyXzMyX2JpdHMocmluZy0+d3B0cik7CiAJCQlXRE9PUkJFTEwzMihyaW5nLT5kb29yYmVsbF9p
bmRleCwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7CiAJCX0gZWxzZSB7CiAJCQlXUkVHMzJf
U09DMTUoVkNOLCByaW5nLT5tZSwgbW1VVkRfUkJfV1BUUiwgbG93ZXJfMzJfYml0cyhyaW5nLT53
cHRyKSk7CiAJCX0KIAl9IGVsc2UgewogCQlpZiAocmluZy0+dXNlX2Rvb3JiZWxsKSB7Ci0JCQlh
ZGV2LT53Yi53YltyaW5nLT53cHRyX29mZnNdID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKTsK
KwkJCSpyaW5nLT53cHRyX2NwdV9hZGRyID0gbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKTsKIAkJ
CVdET09SQkVMTDMyKHJpbmctPmRvb3JiZWxsX2luZGV4LCBsb3dlcl8zMl9iaXRzKHJpbmctPndw
dHIpKTsKIAkJfSBlbHNlIHsKIAkJCVdSRUczMl9TT0MxNShWQ04sIHJpbmctPm1lLCBtbVVWRF9S
Ql9XUFRSMiwgbG93ZXJfMzJfYml0cyhyaW5nLT53cHRyKSk7Ci0tIAoyLjI2LjIKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGluZyBs
aXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeAo=
