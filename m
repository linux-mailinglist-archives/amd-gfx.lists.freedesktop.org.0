Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 899254AAFD
	for <lists+amd-gfx@lfdr.de>; Tue, 18 Jun 2019 21:24:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C86A16E229;
	Tue, 18 Jun 2019 19:24:38 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM02-CY1-obe.outbound.protection.outlook.com
 (mail-eopbgr760047.outbound.protection.outlook.com [40.107.76.47])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BB3B16E229
 for <amd-gfx@lists.freedesktop.org>; Tue, 18 Jun 2019 19:24:36 +0000 (UTC)
Received: from CH2PR12MB3831.namprd12.prod.outlook.com (52.132.245.141) by
 CH2PR12MB3974.namprd12.prod.outlook.com (52.132.247.13) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1987.12; Tue, 18 Jun 2019 19:24:34 +0000
Received: from CH2PR12MB3831.namprd12.prod.outlook.com
 ([fe80::3459:726f:43e7:a64c]) by CH2PR12MB3831.namprd12.prod.outlook.com
 ([fe80::3459:726f:43e7:a64c%4]) with mapi id 15.20.1987.014; Tue, 18 Jun 2019
 19:24:34 +0000
From: "Kim, Jonathan" <Jonathan.Kim@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Subject: [PATCH] drm/amdgpu: update df_v3_6 for xgmi perfmons
Thread-Topic: [PATCH] drm/amdgpu: update df_v3_6 for xgmi perfmons
Thread-Index: AQHVJgt1cMPLjtBzrEGFgcnrkoMGfw==
Date: Tue, 18 Jun 2019 19:24:33 +0000
Message-ID: <20190618192423.660-1-jonathan.kim@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: YTOPR0101CA0060.CANPRD01.PROD.OUTLOOK.COM
 (2603:10b6:b00:14::37) To CH2PR12MB3831.namprd12.prod.outlook.com
 (2603:10b6:610:29::13)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.17.1
x-originating-ip: [165.204.55.251]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: fbcafd39-3de3-4e42-7f5d-08d6f422981d
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0; PCL:0;
 RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600148)(711020)(4605104)(1401327)(4618075)(2017052603328)(7193020);
 SRVR:CH2PR12MB3974; 
x-ms-traffictypediagnostic: CH2PR12MB3974:
x-microsoft-antispam-prvs: <CH2PR12MB3974302B54D3F935E534D66F85EA0@CH2PR12MB3974.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:3968;
x-forefront-prvs: 007271867D
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(396003)(376002)(39860400002)(136003)(346002)(366004)(189003)(199004)(6506007)(99286004)(73956011)(7736002)(81166006)(386003)(102836004)(53946003)(66066001)(316002)(81156014)(486006)(4326008)(66476007)(25786009)(86362001)(72206003)(64756008)(66556008)(66446008)(8676002)(50226002)(66946007)(305945005)(6512007)(52116002)(476003)(6916009)(14454004)(478600001)(1076003)(26005)(8936002)(2501003)(6116002)(71190400001)(30864003)(53936002)(36756003)(3846002)(186003)(5660300002)(5640700003)(68736007)(2616005)(2906002)(2351001)(6486002)(6436002)(54906003)(71200400001)(256004);
 DIR:OUT; SFP:1101; SCL:1; SRVR:CH2PR12MB3974;
 H:CH2PR12MB3831.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; MX:1; A:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam-message-info: aimthpSOxj+snvCCnrRTbtuAD0OTVD7CNO6s8lc8i+U02N2CafujKIQGgx/eAiUpk3btpXuOnR9DTSAt/pkRRL+YcuxJ7J3xSbo/GkNYINKs9JK+v5KFJVjkCYnPGcxjueqqwzR0inGg1MZEkaV/8G0/laJbPQ7kOXzbUcrXC2iECp08HgaMhPm/gtjJsYScT1M1b0RCWn2f8XzdWBN91c8zjwJQsyzznTAUDz9XHLS/zwYV+/sp8tfRtzIkAVnnztXlvaoER2OwsMuivFJKthqIL46sA8xvJcOJ2OTajGHl+O0Qz4kiMClg8WDPnnWCtllGdp7H9nEFWZHm8yp9Brdyw/jVBYwYOaFLUIbhFOdoKbt1Spi9GbOcpoyksRbJhaTnpcPALj2lIqQxMCqWd1nF59WknIKRKpjV4xJRa3E=
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: fbcafd39-3de3-4e42-7f5d-08d6f422981d
X-MS-Exchange-CrossTenant-originalarrivaltime: 18 Jun 2019 19:24:34.0197 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: jokim@amd.com
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH2PR12MB3974
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=GQKNKnMAlp5Bc9eDSJOBpm3ZvAgOqExC+RRBEN3X7+s=;
 b=18i4OzFB1HDP1phux3s3zeweS0gVEbazJIkjcBcF1K76Ljkv73q3TyKK/abpnEFHGd6WPBsxoh87RV3xewrgPrDjKX/REJ1qjldNd9VXc5jZZHc6j0bOVPTDqHHJFAzENf0I9cZkUJiuFchwxpJpagbQmwIMklLIFLh4vVg6Lu0=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Jonathan.Kim@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Kim, Jonathan" <Jonathan.Kim@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

djM6IGZpeGVkIGNsZWFudXAgYnkgYWRkaW5nIGZpbmkgdG8gZnJlZSB1cCBhZGV2IGRmIGNvbmZp
ZyBjb3VudGVycw0KDQp2Mjogc2ltcGxpZmllZCBieSByZW1vdmluZyB4Z21pIHJlZmVyZW5jZXMg
aW4gZnVuY3Rpb24gbmFtZXMgYW5kIG1vdmluZyB0bw0KZ2VuZXJpYyBkZiBmdW5jdGlvbiBuYW1l
cy4gIGZpeGVkIGlzc3VlIGJ5IHJlbW92aW5nIGhhcmRjb2RlZCBjYWtlIHR4IGRhdGENCmV2ZW50
cy4gc3RyZWFtbGluZWQgZXJyb3IgaGFuZGxpbmcgYnkgaGF2aW5nICBkZl92M182X3BtY19nZXRf
Y3RybCByZXR1cm4NCmVycm9yIGNvZGUuDQoNCmFkZCBwbXUgYXR0cmlidXRlIGdyb3VwcyBhbmQg
c3RydWN0dXJlcyBmb3IgcGVyZiBldmVudHMuDQphZGQgc3lzZnMgdG8gdHJhY2sgYXZhaWxhYmxl
IGRmIHBlcmZtb24gY291bnRlcnMNCmZpeCBvdmVyZmxvdyBoYW5kbGluZyBpbiBwZXJmbW9uIGNv
dW50ZXIgcmVhZHMuDQoNCkNoYW5nZS1JZDogSTYxZjczMWMwMDY2YjE3ODM0NjU2Yzc0NmU3ZWZl
MDM4YzRmNjJhY2YNClNpZ25lZC1vZmYtYnk6IEpvbmF0aGFuIEtpbSA8Sm9uYXRoYW4uS2ltQGFt
ZC5jb20+DQotLS0NCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaCAgfCAgMTcg
KysNCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182LmMgfCA0MDkgKysrKysrKysr
KysrKy0tLS0tLS0tLS0tLS0tDQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZGZfdjNfNi5o
IHwgIDE5ICstDQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc29jMTUuYyAgIHwgICAzICsN
CiA0IGZpbGVzIGNoYW5nZWQsIDIxNyBpbnNlcnRpb25zKCspLCAyMzEgZGVsZXRpb25zKC0pDQoN
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaCBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdS5oDQppbmRleCBkMzU1ZTlhMDlhZDEuLjg2MDU2
OTFkZTQxNiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdS5o
DQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaA0KQEAgLTY4Miw2ICs2
ODIsNyBAQCBzdHJ1Y3QgYW1kZ3B1X25iaW9fZnVuY3Mgew0KIA0KIHN0cnVjdCBhbWRncHVfZGZf
ZnVuY3Mgew0KIAl2b2lkICgqaW5pdCkoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOw0KKwl2
b2lkICgqZmluaSkoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOw0KIAl2b2lkICgqZW5hYmxl
X2Jyb2FkY2FzdF9tb2RlKShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCiAJCQkJICAgICAg
Ym9vbCBlbmFibGUpOw0KIAl1MzIgKCpnZXRfZmJfY2hhbm5lbF9udW1iZXIpKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2KTsNCkBAIC05NjIsNiArOTYzLDcgQEAgc3RydWN0IGFtZGdwdV9kZXZp
Y2Ugew0KIAlsb25nCQkJCWNvbXB1dGVfdGltZW91dDsNCiANCiAJdWludDY0X3QJCQl1bmlxdWVf
aWQ7DQorCXVpbnQ2NF90CQkJKmRmX3BlcmZtb25fY29uZmlnX2Fzc2lnbl9tYXNrOw0KIH07DQog
DQogc3RhdGljIGlubGluZSBzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYW1kZ3B1X3R0bV9hZGV2KHN0
cnVjdCB0dG1fYm9fZGV2aWNlICpiZGV2KQ0KQEAgLTEyMDEsNCArMTIwMywxOSBAQCBzdGF0aWMg
aW5saW5lIGludCBhbWRncHVfZG1fZGlzcGxheV9yZXN1bWUoc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYpIHsgcmV0dXJuDQogI2VuZGlmDQogDQogI2luY2x1ZGUgImFtZGdwdV9vYmplY3QuaCIN
CisNCisvKiB1c2VkIGJ5IGRmX3YzXzYuYyBhbmQgYW1kZ3B1X3BtdS5jICovDQorI2RlZmluZSBB
TURHUFVfUE1VX0FUVFIoX25hbWUsIF9vYmplY3QpCQkJCVwNCitzdGF0aWMgc3NpemVfdAkJCQkJ
CQkJXA0KK19uYW1lIyNfc2hvdyhzdHJ1Y3QgZGV2aWNlICpkZXYsCQkJCQlcDQorCQkJICAgICAg
IHN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLAkJXA0KKwkJCSAgICAgICBjaGFyICpwYWdl
KQkJCQlcDQorewkJCQkJCQkJCVwNCisJQlVJTERfQlVHX09OKHNpemVvZihfb2JqZWN0KSA+PSBQ
QUdFX1NJWkUgLSAxKTsJCQlcDQorCXJldHVybiBzcHJpbnRmKHBhZ2UsIF9vYmplY3QgIlxuIik7
CQkJCVwNCit9CQkJCQkJCQkJXA0KKwkJCQkJCQkJCVwNCitzdGF0aWMgc3RydWN0IGRldmljZV9h
dHRyaWJ1dGUgcG11X2F0dHJfIyNfbmFtZSA9IF9fQVRUUl9STyhfbmFtZSkNCisNCiAjZW5kaWYN
CisNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182LmMgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182LmMNCmluZGV4IDhjMDliZjk5NGFjZC4u
NWIxMGMwZjlkMjlkIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZGZf
djNfNi5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182LmMNCkBAIC0z
MCw4ICszMCwxMTMgQEANCiBzdGF0aWMgdTMyIGRmX3YzXzZfY2hhbm5lbF9udW1iZXJbXSA9IHsx
LCAyLCAwLCA0LCAwLCA4LCAwLA0KIAkJCQkgICAgICAgMTYsIDMyLCAwLCAwLCAwLCAyLCA0LCA4
fTsNCiANCisvKiBpbml0IGRmIGZvcm1hdCBhdHRycyAqLw0KK0FNREdQVV9QTVVfQVRUUihldmVu
dCwJCSJjb25maWc6MC03Iik7DQorQU1ER1BVX1BNVV9BVFRSKGluc3RhbmNlLAkiY29uZmlnOjgt
MTUiKTsNCitBTURHUFVfUE1VX0FUVFIodW1hc2ssCQkiY29uZmlnOjE2LTIzIik7DQorDQorLyog
ZGYgZm9ybWF0IGF0dHJpYnV0ZXMgICovDQorc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKmRmX3Yz
XzZfZm9ybWF0X2F0dHJzW10gPSB7DQorCSZwbXVfYXR0cl9ldmVudC5hdHRyLA0KKwkmcG11X2F0
dHJfaW5zdGFuY2UuYXR0ciwNCisJJnBtdV9hdHRyX3VtYXNrLmF0dHIsDQorCU5VTEwNCit9Ow0K
Kw0KKy8qIGRmIGZvcm1hdCBhdHRyaWJ1dGUgZ3JvdXAgKi8NCitzdGF0aWMgc3RydWN0IGF0dHJp
YnV0ZV9ncm91cCBkZl92M182X2Zvcm1hdF9hdHRyX2dyb3VwID0gew0KKwkubmFtZSA9ICJmb3Jt
YXQiLA0KKwkuYXR0cnMgPSBkZl92M182X2Zvcm1hdF9hdHRycywNCit9Ow0KKw0KKy8qIGRmIGV2
ZW50IGF0dHJzICovDQorQU1ER1BVX1BNVV9BVFRSKGNha2UwX3Bjc291dF90eGRhdGEsDQorCQkg
ICAgICAiZXZlbnQ9MHg3LGluc3RhbmNlPTB4NDYsdW1hc2s9MHgyIik7DQorQU1ER1BVX1BNVV9B
VFRSKGNha2UxX3Bjc291dF90eGRhdGEsDQorCQkgICAgICAiZXZlbnQ9MHg3LGluc3RhbmNlPTB4
NDcsdW1hc2s9MHgyIik7DQorQU1ER1BVX1BNVV9BVFRSKGNha2UwX3Bjc291dF90eG1ldGEsDQor
CQkgICAgICAiZXZlbnQ9MHg3LGluc3RhbmNlPTB4NDYsdW1hc2s9MHg0Iik7DQorQU1ER1BVX1BN
VV9BVFRSKGNha2UxX3Bjc291dF90eG1ldGEsDQorCQkgICAgICAiZXZlbnQ9MHg3LGluc3RhbmNl
PTB4NDcsdW1hc2s9MHg0Iik7DQorQU1ER1BVX1BNVV9BVFRSKGNha2UwX2Z0aWluc3RhdF9yZXFh
bGxvYywNCisJCSAgICAgICJldmVudD0weGIsaW5zdGFuY2U9MHg0Nix1bWFzaz0weDQiKTsNCitB
TURHUFVfUE1VX0FUVFIoY2FrZTFfZnRpaW5zdGF0X3JlcWFsbG9jLA0KKwkJICAgICAgImV2ZW50
PTB4YixpbnN0YW5jZT0weDQ3LHVtYXNrPTB4NCIpOw0KK0FNREdQVV9QTVVfQVRUUihjYWtlMF9m
dGlpbnN0YXRfcnNwYWxsb2MsDQorCQkgICAgICAiZXZlbnQ9MHhiLGluc3RhbmNlPTB4NDYsdW1h
c2s9MHg4Iik7DQorQU1ER1BVX1BNVV9BVFRSKGNha2UxX2Z0aWluc3RhdF9yc3BhbGxvYywNCisJ
CSAgICAgICJldmVudD0weGIsaW5zdGFuY2U9MHg0Nyx1bWFzaz0weDgiKTsNCisNCisvKiBkZiBl
dmVudCBhdHRyaWJ1dGVzICAqLw0KK3N0YXRpYyBzdHJ1Y3QgYXR0cmlidXRlICpkZl92M182X2V2
ZW50X2F0dHJzW10gPSB7DQorCSZwbXVfYXR0cl9jYWtlMF9wY3NvdXRfdHhkYXRhLmF0dHIsDQor
CSZwbXVfYXR0cl9jYWtlMV9wY3NvdXRfdHhkYXRhLmF0dHIsDQorCSZwbXVfYXR0cl9jYWtlMF9w
Y3NvdXRfdHhtZXRhLmF0dHIsDQorCSZwbXVfYXR0cl9jYWtlMV9wY3NvdXRfdHhtZXRhLmF0dHIs
DQorCSZwbXVfYXR0cl9jYWtlMF9mdGlpbnN0YXRfcmVxYWxsb2MuYXR0ciwNCisJJnBtdV9hdHRy
X2Nha2UxX2Z0aWluc3RhdF9yZXFhbGxvYy5hdHRyLA0KKwkmcG11X2F0dHJfY2FrZTBfZnRpaW5z
dGF0X3JzcGFsbG9jLmF0dHIsDQorCSZwbXVfYXR0cl9jYWtlMV9mdGlpbnN0YXRfcnNwYWxsb2Mu
YXR0ciwNCisJTlVMTA0KK307DQorDQorLyogZGYgZXZlbnQgYXR0cmlidXRlIGdyb3VwICovDQor
c3RhdGljIHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgZGZfdjNfNl9ldmVudF9hdHRyX2dyb3VwID0g
ew0KKwkubmFtZSA9ICJldmVudHMiLA0KKwkuYXR0cnMgPSBkZl92M182X2V2ZW50X2F0dHJzDQor
fTsNCisNCisvKiBkZiBldmVudCBhdHRyIGdyb3VwcyAgKi8NCitjb25zdCBzdHJ1Y3QgYXR0cmli
dXRlX2dyb3VwICpkZl92M182X2F0dHJfZ3JvdXBzW10gPSB7DQorCQkmZGZfdjNfNl9mb3JtYXRf
YXR0cl9ncm91cCwNCisJCSZkZl92M182X2V2ZW50X2F0dHJfZ3JvdXAsDQorCQlOVUxMDQorfTsN
CisNCisvKiBnZXQgdGhlIG51bWJlciBvZiBkZiBjb3VudGVycyBhdmFpbGFibGUgKi8NCitzdGF0
aWMgc3NpemVfdCBkZl92M182X2dldF9kZl9jbnRyX2F2YWlsKHN0cnVjdCBkZXZpY2UgKmRldiwN
CisJCXN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLA0KKwkJY2hhciAqYnVmKQ0KK3sNCisJ
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXY7DQorCXN0cnVjdCBkcm1fZGV2aWNlICpkZGV2Ow0K
KwlpbnQgaSwgY291bnQ7DQorDQorCWRkZXYgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsNCisJYWRl
diA9IGRkZXYtPmRldl9wcml2YXRlOw0KKwljb3VudCA9IDA7DQorDQorCWZvciAoaSA9IDA7IGkg
PCBERl9WM182X01BWF9DT1VOVEVSUzsgaSsrKSB7DQorCQlpZiAoYWRldi0+ZGZfcGVyZm1vbl9j
b25maWdfYXNzaWduX21hc2tbaV0gPT0gMCkNCisJCQljb3VudCsrOw0KKwl9DQorDQorCXJldHVy
biBzbnByaW50ZihidWYsIFBBR0VfU0laRSwJIiVpXG4iLCBjb3VudCk7DQorfQ0KKw0KKy8qIGRl
dmljZSBhdHRyIGZvciBhdmFpbGFibGUgcGVyZm1vbiBjb3VudGVycyAqLw0KK3N0YXRpYyBERVZJ
Q0VfQVRUUihkZl9jbnRyX2F2YWlsLCBTX0lSVUdPLCBkZl92M182X2dldF9kZl9jbnRyX2F2YWls
LCBOVUxMKTsNCisNCisvKiBpbml0IHBlcmZtb25zICovDQogc3RhdGljIHZvaWQgZGZfdjNfNl9p
bml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQ0KIHsNCisJaW50IGksIHJldDsNCisNCisJ
cmV0ID0gZGV2aWNlX2NyZWF0ZV9maWxlKGFkZXYtPmRldiwgJmRldl9hdHRyX2RmX2NudHJfYXZh
aWwpOw0KKwlpZiAocmV0KQ0KKwkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gY3JlYXRlIGZpbGUgZm9y
IGF2YWlsYWJsZSBkZiBjb3VudGVyc1xuIik7DQorDQorCWFkZXYtPmRmX3BlcmZtb25fY29uZmln
X2Fzc2lnbl9tYXNrID0NCisJCWt6YWxsb2Moc2l6ZW9mKHVpbnQ2NF90KSAqIERGX1YzXzZfTUFY
X0NPVU5URVJTLCBHRlBfS0VSTkVMKTsNCisNCisJZm9yIChpID0gMDsgaSA8IERGX1YzXzZfTUFY
X0NPVU5URVJTOyBpKyspDQorCQlhZGV2LT5kZl9wZXJmbW9uX2NvbmZpZ19hc3NpZ25fbWFza1tp
XSA9IDA7DQorDQorfQ0KKw0KK3N0YXRpYyB2b2lkIGRmX3YzXzZfZmluaShzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldikNCit7DQorCWtmcmVlKGFkZXYtPmRmX3BlcmZtb25fY29uZmlnX2Fzc2ln
bl9tYXNrKTsNCiB9DQogDQogc3RhdGljIHZvaWQgZGZfdjNfNl9lbmFibGVfYnJvYWRjYXN0X21v
ZGUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQpAQCAtMTA1LDI0ICsyMTAsMTcgQEAgc3Rh
dGljIHZvaWQgZGZfdjNfNl9nZXRfY2xvY2tnYXRpbmdfc3RhdGUoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYsDQogCQkqZmxhZ3MgfD0gQU1EX0NHX1NVUFBPUlRfREZfTUdDRzsNCiB9DQogDQot
LyogaG9sZCBjb3VudGVyIGFzc2lnbm1lbnQgcGVyIGdwdSBzdHJ1Y3QgKi8NCi1zdHJ1Y3QgZGZf
djNfNl9ldmVudF9tYXNrIHsNCi0JCXN0cnVjdCBhbWRncHVfZGV2aWNlIGdwdTsNCi0JCXVpbnQ2
NF90IGNvbmZpZ19hc3NpZ25fbWFza1tBTURHUFVfREZfTUFYX0NPVU5URVJTXTsNCi19Ow0KLQ0K
IC8qIGdldCBhc3NpZ25lZCBkZiBwZXJmbW9uIGN0ciBhcyBpbnQgKi8NCi1zdGF0aWMgdm9pZCBk
Zl92M182X3BtY19jb25maWdfMl9jbnRyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KK3N0
YXRpYyB2b2lkIGRmX3YzXzZfcG1jX2NvbmZpZ18yX2NudHIodWludDY0X3QgKmNvbmZpZ19hc3Np
Z25fbWFzaywNCiAJCQkJICAgICAgdWludDY0X3QgY29uZmlnLA0KIAkJCQkgICAgICBpbnQgKmNv
dW50ZXIpDQogew0KLQlzdHJ1Y3QgZGZfdjNfNl9ldmVudF9tYXNrICptYXNrOw0KIAlpbnQgaTsN
CiANCi0JbWFzayA9IGNvbnRhaW5lcl9vZihhZGV2LCBzdHJ1Y3QgZGZfdjNfNl9ldmVudF9tYXNr
LCBncHUpOw0KKwkqY291bnRlciA9IC0xOw0KIA0KLQlmb3IgKGkgPSAwOyBpIDwgQU1ER1BVX0RG
X01BWF9DT1VOVEVSUzsgaSsrKSB7DQotCQlpZiAoKGNvbmZpZyAmIDB4MEZGRkZGRlVMKSA9PSBt
YXNrLT5jb25maWdfYXNzaWduX21hc2tbaV0pIHsNCisJZm9yIChpID0gMDsgaSA8IERGX1YzXzZf
TUFYX0NPVU5URVJTOyBpKyspIHsNCisJCWlmICgoY29uZmlnICYgMHgwRkZGRkZGVUwpID09IGNv
bmZpZ19hc3NpZ25fbWFza1tpXSkgew0KIAkJCSpjb3VudGVyID0gaTsNCiAJCQlyZXR1cm47DQog
CQl9DQpAQCAtMTM2LDEwICsyMzQsMTAgQEAgc3RhdGljIHZvaWQgZGZfdjNfNl9wbWNfZ2V0X2Fk
ZHIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQogCQkJCSB1aW50MzJfdCAqbG9fYmFzZV9h
ZGRyLA0KIAkJCQkgdWludDMyX3QgKmhpX2Jhc2VfYWRkcikNCiB7DQorCWludCB0YXJnZXRfY250
cjsNCiANCi0JaW50IHRhcmdldF9jbnRyID0gLTE7DQotDQotCWRmX3YzXzZfcG1jX2NvbmZpZ18y
X2NudHIoYWRldiwgY29uZmlnLCAmdGFyZ2V0X2NudHIpOw0KKwlkZl92M182X3BtY19jb25maWdf
Ml9jbnRyKGFkZXYtPmRmX3BlcmZtb25fY29uZmlnX2Fzc2lnbl9tYXNrLCBjb25maWcsDQorCQkJ
CSAgJnRhcmdldF9jbnRyKTsNCiANCiAJaWYgKHRhcmdldF9jbnRyIDwgMCkNCiAJCXJldHVybjsN
CkBAIC0xNzcsMzEgKzI3NSwzMCBAQCBzdGF0aWMgdm9pZCBkZl92M182X3BtY19nZXRfcmVhZF9z
ZXR0aW5ncyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCiB9DQogDQogLyogZ2V0IGNvbnRy
b2wgY291bnRlciBzZXR0aW5ncyBpLmUuIGFkZHJlc3MgYW5kIHZhbHVlcyB0byBzZXQgKi8NCi1z
dGF0aWMgdm9pZCBkZl92M182X3BtY19nZXRfY3RybF9zZXR0aW5ncyhzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiwNCitzdGF0aWMgaW50IGRmX3YzXzZfcG1jX2dldF9jdHJsX3NldHRpbmdzKHN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAkJCQkJICB1aW50NjRfdCBjb25maWcsDQogCQkJ
CQkgIHVpbnQzMl90ICpsb19iYXNlX2FkZHIsDQogCQkJCQkgIHVpbnQzMl90ICpoaV9iYXNlX2Fk
ZHIsDQogCQkJCQkgIHVpbnQzMl90ICpsb192YWwsDQogCQkJCQkgIHVpbnQzMl90ICpoaV92YWwp
DQogew0KLQ0KIAl1aW50MzJfdCBldmVudHNlbCwgaW5zdGFuY2UsIHVuaXRtYXNrOw0KIAl1aW50
MzJfdCBlc181XzAsIGVzXzEzXzAsIGVzXzEzXzYsIGVzXzEzXzEyLCBlc18xMV84LCBlc183XzA7
DQogDQogCWRmX3YzXzZfcG1jX2dldF9hZGRyKGFkZXYsIGNvbmZpZywgMSwgbG9fYmFzZV9hZGRy
LCBoaV9iYXNlX2FkZHIpOw0KIA0KIAlpZiAobG9fdmFsID09IE5VTEwgfHwgaGlfdmFsID09IE5V
TEwpDQotCQlyZXR1cm47DQorCQlyZXR1cm4gLUVJTlZBTDsNCiANCiAJaWYgKCgqbG9fYmFzZV9h
ZGRyID09IDApIHx8ICgqaGlfYmFzZV9hZGRyID09IDApKSB7DQogCQlEUk1fRVJST1IoIkRGIFBN
QyBhZGRyZXNzaW5nIG5vdCByZXRyaWV2ZWQhIExvOiAleCwgSGk6ICV4IiwNCiAJCQkJKmxvX2Jh
c2VfYWRkciwgKmhpX2Jhc2VfYWRkcik7DQotCQlyZXR1cm47DQorCQlyZXR1cm4gLUVOWElPOw0K
IAl9DQogDQotCWV2ZW50c2VsID0gR0VUX0VWRU5UKGNvbmZpZyk7DQotCWluc3RhbmNlID0gR0VU
X0lOU1RBTkNFKGNvbmZpZyk7DQotCXVuaXRtYXNrID0gR0VUX1VOSVRNQVNLKGNvbmZpZyk7DQor
CWV2ZW50c2VsID0gREZfVjNfNl9HRVRfRVZFTlQoY29uZmlnKTsNCisJaW5zdGFuY2UgPSBERl9W
M182X0dFVF9JTlNUQU5DRShjb25maWcpOw0KKwl1bml0bWFzayA9IERGX1YzXzZfR0VUX1VOSVRN
QVNLKGNvbmZpZyk7DQogDQogCWVzXzVfMCA9IGV2ZW50c2VsICYgMHgzRlVMOw0KIAllc18xM182
ID0gaW5zdGFuY2U7DQpAQCAtMjExLDYgKzMwOCw4IEBAIHN0YXRpYyB2b2lkIGRmX3YzXzZfcG1j
X2dldF9jdHJsX3NldHRpbmdzKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAllc183XzAg
PSBlc18xM18wICYgMHgwRkZVTDsNCiAJKmxvX3ZhbCA9IChlc183XzAgJiAweEZGVUwpIHwgKCh1
bml0bWFzayAmIDB4MEZVTCkgPDwgOCk7DQogCSpoaV92YWwgPSAoZXNfMTFfOCB8ICgoZXNfMTNf
MTIpPDwoMjkpKSk7DQorDQorCXJldHVybiAwOw0KIH0NCiANCiAvKiBhc3NpZ24gZGYgcGVyZm9y
bWFuY2UgY291bnRlcnMgZm9yIHJlYWQgKi8NCkBAIC0yMTgsMjYgKzMxNywyMyBAQCBzdGF0aWMg
aW50IGRmX3YzXzZfcG1jX2Fzc2lnbl9jbnRyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0K
IAkJCQkgICB1aW50NjRfdCBjb25maWcsDQogCQkJCSAgIGludCAqaXNfYXNzaWduZWQpDQogew0K
LQ0KLQlzdHJ1Y3QgZGZfdjNfNl9ldmVudF9tYXNrICptYXNrOw0KIAlpbnQgaSwgdGFyZ2V0X2Nu
dHI7DQogDQotCXRhcmdldF9jbnRyID0gLTE7DQotDQogCSppc19hc3NpZ25lZCA9IDA7DQogDQot
CWRmX3YzXzZfcG1jX2NvbmZpZ18yX2NudHIoYWRldiwgY29uZmlnLCAmdGFyZ2V0X2NudHIpOw0K
KwlkZl92M182X3BtY19jb25maWdfMl9jbnRyKGFkZXYtPmRmX3BlcmZtb25fY29uZmlnX2Fzc2ln
bl9tYXNrLCBjb25maWcsDQorCQkJCSAgJnRhcmdldF9jbnRyKTsNCiANCiAJaWYgKHRhcmdldF9j
bnRyID49IDApIHsNCiAJCSppc19hc3NpZ25lZCA9IDE7DQogCQlyZXR1cm4gMDsNCiAJfQ0KIA0K
LQltYXNrID0gY29udGFpbmVyX29mKGFkZXYsIHN0cnVjdCBkZl92M182X2V2ZW50X21hc2ssIGdw
dSk7DQorCWZvciAoaSA9IDA7IGkgPCBERl9WM182X01BWF9DT1VOVEVSUzsgaSsrKSB7DQorCQlp
ZiAoYWRldi0+ZGZfcGVyZm1vbl9jb25maWdfYXNzaWduX21hc2tbaV0gPT0gMFVMTCkgew0KKwkJ
CWFkZXYtPmRmX3BlcmZtb25fY29uZmlnX2Fzc2lnbl9tYXNrW2ldID0NCisJCQkJCQkJY29uZmln
ICYgMHgwRkZGRkZGVUw7DQogDQotCWZvciAoaSA9IDA7IGkgPCBBTURHUFVfREZfTUFYX0NPVU5U
RVJTOyBpKyspIHsNCi0JCWlmIChtYXNrLT5jb25maWdfYXNzaWduX21hc2tbaV0gPT0gMFVMTCkg
ew0KLQkJCW1hc2stPmNvbmZpZ19hc3NpZ25fbWFza1tpXSA9IGNvbmZpZyAmIDB4MEZGRkZGRlVM
Ow0KIAkJCXJldHVybiAwOw0KIAkJfQ0KIAl9DQpAQCAtMjQ5LDY2ICszNDUsMjAgQEAgc3RhdGlj
IGludCBkZl92M182X3BtY19hc3NpZ25fY250cihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwN
CiBzdGF0aWMgdm9pZCBkZl92M182X3BtY19yZWxlYXNlX2NudHIoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYsDQogCQkJCSAgICAgdWludDY0X3QgY29uZmlnKQ0KIHsNCi0NCi0Jc3RydWN0IGRm
X3YzXzZfZXZlbnRfbWFzayAqbWFzazsNCiAJaW50IHRhcmdldF9jbnRyOw0KIA0KLQl0YXJnZXRf
Y250ciA9IC0xOw0KLQ0KLQlkZl92M182X3BtY19jb25maWdfMl9jbnRyKGFkZXYsIGNvbmZpZywg
JnRhcmdldF9jbnRyKTsNCi0NCi0JbWFzayA9IGNvbnRhaW5lcl9vZihhZGV2LCBzdHJ1Y3QgZGZf
djNfNl9ldmVudF9tYXNrLCBncHUpOw0KKwlkZl92M182X3BtY19jb25maWdfMl9jbnRyKGFkZXYt
PmRmX3BlcmZtb25fY29uZmlnX2Fzc2lnbl9tYXNrLCBjb25maWcsDQorCQkJCSAgJnRhcmdldF9j
bnRyKTsNCiANCiAJaWYgKHRhcmdldF9jbnRyID49IDApDQotCQltYXNrLT5jb25maWdfYXNzaWdu
X21hc2tbdGFyZ2V0X2NudHJdID0gMFVMTDsNCi0NCisJCWFkZXYtPmRmX3BlcmZtb25fY29uZmln
X2Fzc2lnbl9tYXNrW3RhcmdldF9jbnRyXSA9IDBVTEw7DQogfQ0KIA0KLS8qDQotICogZ2V0IHhn
bWkgbGluayBjb3VudGVycyB2aWEgcHJvZ3JhbW1hYmxlIGRhdGEgZmFicmljIChkZikgY291bnRl
cnMgKG1heCA0KQ0KLSAqIHVzaW5nIGNha2UgdHggZXZlbnQuDQotICoNCi0gKiBAYWRldiAtPiBh
bWRncHUgZGV2aWNlDQotICogQGluc3RhbmNlLT4gY3VycmVudGx5IGNha2UgaGFzIDIgbGlua3Mg
dG8gcG9sbCBvbiB2ZWdhMjANCi0gKiBAY291bnQgLT4gY291bnRlcnMgdG8gcGFzcw0KLSAqDQot
ICovDQogDQotc3RhdGljIHZvaWQgZGZfdjNfNl9nZXRfeGdtaV9saW5rX2NudHIoc3RydWN0IGFt
ZGdwdV9kZXZpY2UgKmFkZXYsDQotCQkJCSAgICAgICBpbnQgaW5zdGFuY2UsDQotCQkJCSAgICAg
ICB1aW50NjRfdCAqY291bnQpDQotew0KLQl1aW50MzJfdCBsb19iYXNlX2FkZHIsIGhpX2Jhc2Vf
YWRkciwgbG9fdmFsLCBoaV92YWw7DQotCXVpbnQ2NF90IGNvbmZpZzsNCi0NCi0JY29uZmlnID0g
R0VUX0lOU1RBTkNFX0NPTkZJRyhpbnN0YW5jZSk7DQotDQotCWRmX3YzXzZfcG1jX2dldF9yZWFk
X3NldHRpbmdzKGFkZXYsIGNvbmZpZywgJmxvX2Jhc2VfYWRkciwNCi0JCQkJICAgICAgJmhpX2Jh
c2VfYWRkcik7DQotDQotCWlmICgobG9fYmFzZV9hZGRyID09IDApIHx8IChoaV9iYXNlX2FkZHIg
PT0gMCkpDQotCQlyZXR1cm47DQotDQotCWxvX3ZhbCA9IFJSRUczMl9QQ0lFKGxvX2Jhc2VfYWRk
cik7DQotCWhpX3ZhbCA9IFJSRUczMl9QQ0lFKGhpX2Jhc2VfYWRkcik7DQotDQotCSpjb3VudCAg
PSAoKGhpX3ZhbCB8IDBVTEwpIDw8IDMyKSB8IChsb192YWwgfCAwVUxMKTsNCi19DQotDQotLyoN
Ci0gKiByZXNldCB4Z21pIGxpbmsgY291bnRlcnMNCi0gKg0KLSAqIEBhZGV2IC0+IGFtZGdwdSBk
ZXZpY2UNCi0gKiBAaW5zdGFuY2UtPiBjdXJyZW50bHkgY2FrZSBoYXMgMiBsaW5rcyB0byBwb2xs
IG9uIHZlZ2EyMA0KLSAqDQotICovDQotc3RhdGljIHZvaWQgZGZfdjNfNl9yZXNldF94Z21pX2xp
bmtfY250cihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCi0JCQkJCSBpbnQgaW5zdGFuY2Up
DQorc3RhdGljIHZvaWQgZGZfdjNfNl9yZXNldF9wZXJmbW9uX2NudHIoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsDQorCQkJCQkgdWludDY0X3QgY29uZmlnKQ0KIHsNCiAJdWludDMyX3QgbG9f
YmFzZV9hZGRyLCBoaV9iYXNlX2FkZHI7DQotCXVpbnQ2NF90IGNvbmZpZzsNCi0NCi0JY29uZmln
ID0gMFVMTCB8ICgweDdVTEwpIHwgKCgweDQ2VUxMICsgaW5zdGFuY2UpIDw8IDgpIHwgKDB4MiA8
PCAxNik7DQogDQogCWRmX3YzXzZfcG1jX2dldF9yZWFkX3NldHRpbmdzKGFkZXYsIGNvbmZpZywg
JmxvX2Jhc2VfYWRkciwNCiAJCQkJICAgICAgJmhpX2Jhc2VfYWRkcik7DQpAQCAtMzIwLDE4NSAr
MzcwLDEwMCBAQCBzdGF0aWMgdm9pZCBkZl92M182X3Jlc2V0X3hnbWlfbGlua19jbnRyKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAlXUkVHMzJfUENJRShoaV9iYXNlX2FkZHIsIDBVTCk7
DQogfQ0KIA0KLS8qDQotICogYWRkIHhnbWkgbGluayBjb3VudGVycw0KLSAqDQotICogQGFkZXYg
LT4gYW1kZ3B1IGRldmljZQ0KLSAqIEBpbnN0YW5jZS0+IGN1cnJlbnRseSBjYWtlIGhhcyAyIGxp
bmtzIHRvIHBvbGwgb24gdmVnYTIwDQotICoNCi0gKi8NCiANCi1zdGF0aWMgaW50IGRmX3YzXzZf
YWRkX3hnbWlfbGlua19jbnRyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KLQkJCQkgICAg
ICBpbnQgaW5zdGFuY2UpDQorc3RhdGljIGludCBkZl92M182X2FkZF9wZXJmbW9uX2NudHIoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQorCQkJCSAgICAgIHVpbnQ2NF90IGNvbmZpZykNCiB7
DQogCXVpbnQzMl90IGxvX2Jhc2VfYWRkciwgaGlfYmFzZV9hZGRyLCBsb192YWwsIGhpX3ZhbDsN
Ci0JdWludDY0X3QgY29uZmlnOw0KIAlpbnQgcmV0LCBpc19hc3NpZ25lZDsNCiANCi0JaWYgKGlu
c3RhbmNlIDwgMCB8fCBpbnN0YW5jZSA+IDEpDQotCQlyZXR1cm4gLUVJTlZBTDsNCi0NCi0JY29u
ZmlnID0gR0VUX0lOU1RBTkNFX0NPTkZJRyhpbnN0YW5jZSk7DQotDQogCXJldCA9IGRmX3YzXzZf
cG1jX2Fzc2lnbl9jbnRyKGFkZXYsIGNvbmZpZywgJmlzX2Fzc2lnbmVkKTsNCiANCiAJaWYgKHJl
dCB8fCBpc19hc3NpZ25lZCkNCiAJCXJldHVybiByZXQ7DQogDQotCWRmX3YzXzZfcG1jX2dldF9j
dHJsX3NldHRpbmdzKGFkZXYsDQorCXJldCA9IGRmX3YzXzZfcG1jX2dldF9jdHJsX3NldHRpbmdz
KGFkZXYsDQogCQkJY29uZmlnLA0KIAkJCSZsb19iYXNlX2FkZHIsDQogCQkJJmhpX2Jhc2VfYWRk
ciwNCiAJCQkmbG9fdmFsLA0KIAkJCSZoaV92YWwpOw0KIA0KKwlpZiAocmV0KQ0KKwkJcmV0dXJu
IHJldDsNCisNCiAJV1JFRzMyX1BDSUUobG9fYmFzZV9hZGRyLCBsb192YWwpOw0KIAlXUkVHMzJf
UENJRShoaV9iYXNlX2FkZHIsIGhpX3ZhbCk7DQogDQogCXJldHVybiByZXQ7DQogfQ0KIA0KLQ0K
LS8qDQotICogc3RhcnQgeGdtaSBsaW5rIGNvdW50ZXJzDQotICoNCi0gKiBAYWRldiAtPiBhbWRn
cHUgZGV2aWNlDQotICogQGluc3RhbmNlLT4gY3VycmVudGx5IGNha2UgaGFzIDIgbGlua3MgdG8g
cG9sbCBvbiB2ZWdhMjANCi0gKiBAaXNfZW5hYmxlIC0+IGVpdGhlciByZXN1bWUgb3IgYXNzaWdu
IGV2ZW50IHZpYSBkZiBwZXJmbW9uDQotICoNCi0gKi8NCi0NCi1zdGF0aWMgaW50IGRmX3YzXzZf
c3RhcnRfeGdtaV9saW5rX2NudHIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQotCQkJCQlp
bnQgaW5zdGFuY2UsDQotCQkJCQlpbnQgaXNfZW5hYmxlKQ0KK3N0YXRpYyBpbnQgZGZfdjNfNl9w
bWNfc3RhcnQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQ2NF90IGNvbmZpZywNCisJ
CQkgICAgIGludCBpc19lbmFibGUpDQogew0KIAl1aW50MzJfdCBsb19iYXNlX2FkZHIsIGhpX2Jh
c2VfYWRkciwgbG9fdmFsOw0KLQl1aW50NjRfdCBjb25maWc7DQotCWludCByZXQ7DQorCWludCBy
ZXQgPSAwOw0KIA0KLQlpZiAoaW5zdGFuY2UgPCAwIHx8IGluc3RhbmNlID4gMSkNCi0JCXJldHVy
biAtRUlOVkFMOw0KKwlzd2l0Y2ggKGFkZXYtPmFzaWNfdHlwZSkgew0KKwljYXNlIENISVBfVkVH
QTIwOg0KIA0KLQlpZiAoaXNfZW5hYmxlKSB7DQorCQlkZl92M182X3Jlc2V0X3BlcmZtb25fY250
cihhZGV2LCBjb25maWcpOw0KIA0KLQkJcmV0ID0gZGZfdjNfNl9hZGRfeGdtaV9saW5rX2NudHIo
YWRldiwgaW5zdGFuY2UpOw0KKwkJaWYgKGlzX2VuYWJsZSkgew0KIA0KLQkJaWYgKHJldCkNCi0J
CQlyZXR1cm4gcmV0Ow0KKwkJCXJldCA9IGRmX3YzXzZfYWRkX3BlcmZtb25fY250cihhZGV2LCBj
b25maWcpOw0KIA0KLQl9IGVsc2Ugew0KLQ0KLQkJY29uZmlnID0gR0VUX0lOU1RBTkNFX0NPTkZJ
RyhpbnN0YW5jZSk7DQorCQl9IGVsc2Ugew0KIA0KLQkJZGZfdjNfNl9wbWNfZ2V0X2N0cmxfc2V0
dGluZ3MoYWRldiwNCi0JCQkJY29uZmlnLA0KLQkJCQkmbG9fYmFzZV9hZGRyLA0KLQkJCQkmaGlf
YmFzZV9hZGRyLA0KLQkJCQlOVUxMLA0KLQkJCQlOVUxMKTsNCisJCQlyZXQgPSBkZl92M182X3Bt
Y19nZXRfY3RybF9zZXR0aW5ncyhhZGV2LA0KKwkJCQkJY29uZmlnLA0KKwkJCQkJJmxvX2Jhc2Vf
YWRkciwNCisJCQkJCSZoaV9iYXNlX2FkZHIsDQorCQkJCQlOVUxMLA0KKwkJCQkJTlVMTCk7DQog
DQotCQlpZiAobG9fYmFzZV9hZGRyID09IDApDQotCQkJcmV0dXJuIC1FSU5WQUw7DQorCQkJaWYg
KHJldCkNCisJCQkJcmV0dXJuIHJldDsNCiANCi0JCWxvX3ZhbCA9IFJSRUczMl9QQ0lFKGxvX2Jh
c2VfYWRkcik7DQorCQkJbG9fdmFsID0gUlJFRzMyX1BDSUUobG9fYmFzZV9hZGRyKTsNCiANCi0J
CVdSRUczMl9QQ0lFKGxvX2Jhc2VfYWRkciwgbG9fdmFsIHwgKDFVTEwgPDwgMjIpKTsNCisJCQlX
UkVHMzJfUENJRShsb19iYXNlX2FkZHIsIGxvX3ZhbCB8ICgxVUxMIDw8IDIyKSk7DQorCQl9DQog
DQotCQlyZXQgPSAwOw0KKwkJYnJlYWs7DQorCWRlZmF1bHQ6DQorCQlicmVhazsNCiAJfQ0KIA0K
IAlyZXR1cm4gcmV0Ow0KLQ0KIH0NCiANCi0vKg0KLSAqIHN0YXJ0IHhnbWkgbGluayBjb3VudGVy
cw0KLSAqDQotICogQGFkZXYgLT4gYW1kZ3B1IGRldmljZQ0KLSAqIEBpbnN0YW5jZS0+IGN1cnJl
bnRseSBjYWtlIGhhcyAyIGxpbmtzIHRvIHBvbGwgb24gdmVnYTIwDQotICogQGlzX2VuYWJsZSAt
PiBlaXRoZXIgcGF1c2Ugb3IgdW5hc3NpZ24gZXZlbnQgdmlhIGRmIHBlcmZtb24NCi0gKg0KLSAq
Lw0KLQ0KLXN0YXRpYyBpbnQgZGZfdjNfNl9zdG9wX3hnbWlfbGlua19jbnRyKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LA0KLQkJCQkgICAgICAgaW50IGluc3RhbmNlLA0KLQkJCQkgICAgICAg
aW50IGlzX2Rpc2FibGUpDQorc3RhdGljIGludCBkZl92M182X3BtY19zdG9wKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LCB1aW50NjRfdCBjb25maWcsDQorCQkJICAgIGludCBpc19kaXNhYmxl
KQ0KIHsNCi0NCiAJdWludDMyX3QgbG9fYmFzZV9hZGRyLCBoaV9iYXNlX2FkZHIsIGxvX3ZhbDsN
Ci0JdWludDY0X3QgY29uZmlnOw0KLQ0KLQljb25maWcgPSBHRVRfSU5TVEFOQ0VfQ09ORklHKGlu
c3RhbmNlKTsNCi0NCi0JaWYgKGlzX2Rpc2FibGUpIHsNCi0JCWRmX3YzXzZfcmVzZXRfeGdtaV9s
aW5rX2NudHIoYWRldiwgaW5zdGFuY2UpOw0KLQkJZGZfdjNfNl9wbWNfcmVsZWFzZV9jbnRyKGFk
ZXYsIGNvbmZpZyk7DQotCX0gZWxzZSB7DQotDQotCQlkZl92M182X3BtY19nZXRfY3RybF9zZXR0
aW5ncyhhZGV2LA0KLQkJCQljb25maWcsDQotCQkJCSZsb19iYXNlX2FkZHIsDQotCQkJCSZoaV9i
YXNlX2FkZHIsDQotCQkJCU5VTEwsDQotCQkJCU5VTEwpOw0KLQ0KLQkJaWYgKChsb19iYXNlX2Fk
ZHIgPT0gMCkgfHwgKGhpX2Jhc2VfYWRkciA9PSAwKSkNCi0JCQlyZXR1cm4gLUVJTlZBTDsNCi0N
Ci0JCWxvX3ZhbCA9IFJSRUczMl9QQ0lFKGxvX2Jhc2VfYWRkcik7DQotDQotCQlXUkVHMzJfUENJ
RShsb19iYXNlX2FkZHIsIGxvX3ZhbCAmIH4oMVVMTCA8PCAyMikpOw0KLQl9DQotDQotCXJldHVy
biAwOw0KLX0NCi0NCi1zdGF0aWMgaW50IGRmX3YzXzZfcG1jX3N0YXJ0KHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2LCB1aW50NjRfdCBjb25maWcsDQotCQkJICAgICBpbnQgaXNfZW5hYmxlKQ0K
LXsNCi0JaW50IHhnbWlfdHhfbGluaywgcmV0ID0gMDsNCisJaW50IHJldCA9IDA7DQogDQogCXN3
aXRjaCAoYWRldi0+YXNpY190eXBlKSB7DQogCWNhc2UgQ0hJUF9WRUdBMjA6DQotCQl4Z21pX3R4
X2xpbmsgPSBJU19ERl9YR01JXzBfVFgoY29uZmlnKSA/IDANCi0JCQkJCTogKElTX0RGX1hHTUlf
MV9UWChjb25maWcpID8gMSA6IC0xKTsNCi0NCi0JCWlmICh4Z21pX3R4X2xpbmsgPj0gMCkNCi0J
CQlyZXQgPSBkZl92M182X3N0YXJ0X3hnbWlfbGlua19jbnRyKGFkZXYsIHhnbWlfdHhfbGluaywN
Ci0JCQkJCQkgICAgICBpc19lbmFibGUpOw0KKwkJcmV0ID0gZGZfdjNfNl9wbWNfZ2V0X2N0cmxf
c2V0dGluZ3MoYWRldiwNCisJCQljb25maWcsDQorCQkJJmxvX2Jhc2VfYWRkciwNCisJCQkmaGlf
YmFzZV9hZGRyLA0KKwkJCU5VTEwsDQorCQkJTlVMTCk7DQogDQogCQlpZiAocmV0KQ0KIAkJCXJl
dHVybiByZXQ7DQogDQotCQlyZXQgPSAwOw0KLQkJYnJlYWs7DQotCWRlZmF1bHQ6DQotCQlicmVh
azsNCi0JfQ0KKwkJbG9fdmFsID0gUlJFRzMyX1BDSUUobG9fYmFzZV9hZGRyKTsNCiANCi0JcmV0
dXJuIHJldDsNCi19DQorCQlXUkVHMzJfUENJRShsb19iYXNlX2FkZHIsIGxvX3ZhbCAmIH4oMVVM
TCA8PCAyMikpOw0KIA0KLXN0YXRpYyBpbnQgZGZfdjNfNl9wbWNfc3RvcChzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiwgdWludDY0X3QgY29uZmlnLA0KLQkJCSAgICBpbnQgaXNfZGlzYWJsZSkN
Ci17DQotCWludCB4Z21pX3R4X2xpbmssIHJldCA9IDA7DQorCQlpZiAoaXNfZGlzYWJsZSkNCisJ
CQlkZl92M182X3BtY19yZWxlYXNlX2NudHIoYWRldiwgY29uZmlnKTsNCiANCi0Jc3dpdGNoIChh
ZGV2LT5hc2ljX3R5cGUpIHsNCi0JY2FzZSBDSElQX1ZFR0EyMDoNCi0JCQl4Z21pX3R4X2xpbmsg
PSBJU19ERl9YR01JXzBfVFgoY29uZmlnKSA/IDANCi0JCQkJOiAoSVNfREZfWEdNSV8xX1RYKGNv
bmZpZykgPyAxIDogLTEpOw0KLQ0KLQkJCWlmICh4Z21pX3R4X2xpbmsgPj0gMCkgew0KLQkJCQly
ZXQgPSBkZl92M182X3N0b3BfeGdtaV9saW5rX2NudHIoYWRldiwNCi0JCQkJCQkJCSAgeGdtaV90
eF9saW5rLA0KLQkJCQkJCQkJICBpc19kaXNhYmxlKTsNCi0JCQkJaWYgKHJldCkNCi0JCQkJCXJl
dHVybiByZXQ7DQotCQkJfQ0KLQ0KLQkJCXJldCA9IDA7DQotCQkJYnJlYWs7DQorCQlicmVhazsN
CiAJZGVmYXVsdDoNCiAJCWJyZWFrOw0KIAl9DQpAQCAtNTEwLDI4ICs0NzUsMzYgQEAgc3RhdGlj
IHZvaWQgZGZfdjNfNl9wbWNfZ2V0X2NvdW50KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0K
IAkJCQkgIHVpbnQ2NF90IGNvbmZpZywNCiAJCQkJICB1aW50NjRfdCAqY291bnQpDQogew0KLQ0K
LQlpbnQgeGdtaV90eF9saW5rOw0KKwl1aW50MzJfdCBsb19iYXNlX2FkZHIsIGhpX2Jhc2VfYWRk
ciwgbG9fdmFsLCBoaV92YWw7DQorCSpjb3VudCA9IDA7DQogDQogCXN3aXRjaCAoYWRldi0+YXNp
Y190eXBlKSB7DQogCWNhc2UgQ0hJUF9WRUdBMjA6DQotCQl4Z21pX3R4X2xpbmsgPSBJU19ERl9Y
R01JXzBfVFgoY29uZmlnKSA/IDANCi0JCQkJCTogKElTX0RGX1hHTUlfMV9UWChjb25maWcpID8g
MSA6IC0xKTsNCiANCi0JCWlmICh4Z21pX3R4X2xpbmsgPj0gMCkgew0KLQkJCWRmX3YzXzZfcmVz
ZXRfeGdtaV9saW5rX2NudHIoYWRldiwgeGdtaV90eF9saW5rKTsNCi0JCQlkZl92M182X2dldF94
Z21pX2xpbmtfY250cihhZGV2LCB4Z21pX3R4X2xpbmssIGNvdW50KTsNCi0JCX0NCisJCWRmX3Yz
XzZfcG1jX2dldF9yZWFkX3NldHRpbmdzKGFkZXYsIGNvbmZpZywgJmxvX2Jhc2VfYWRkciwNCisJ
CQkJICAgICAgJmhpX2Jhc2VfYWRkcik7DQorDQorCQlpZiAoKGxvX2Jhc2VfYWRkciA9PSAwKSB8
fCAoaGlfYmFzZV9hZGRyID09IDApKQ0KKwkJCXJldHVybjsNCisNCisJCWxvX3ZhbCA9IFJSRUcz
Ml9QQ0lFKGxvX2Jhc2VfYWRkcik7DQorCQloaV92YWwgPSBSUkVHMzJfUENJRShoaV9iYXNlX2Fk
ZHIpOw0KKw0KKwkJKmNvdW50ICA9ICgoaGlfdmFsIHwgMFVMTCkgPDwgMzIpIHwgKGxvX3ZhbCB8
IDBVTEwpOw0KKw0KKwkJaWYgKCpjb3VudCA+PSBERl9WM182X1BFUkZNT05fT1ZFUkZMT1cpDQor
CQkJKmNvdW50ID0gMDsNCiANCiAJCWJyZWFrOw0KKw0KIAlkZWZhdWx0Og0KIAkJYnJlYWs7DQog
CX0NCi0NCiB9DQogDQogY29uc3Qgc3RydWN0IGFtZGdwdV9kZl9mdW5jcyBkZl92M182X2Z1bmNz
ID0gew0KIAkuaW5pdCA9IGRmX3YzXzZfaW5pdCwNCisJLmZpbmkgPSBkZl92M182X2ZpbmksDQog
CS5lbmFibGVfYnJvYWRjYXN0X21vZGUgPSBkZl92M182X2VuYWJsZV9icm9hZGNhc3RfbW9kZSwN
CiAJLmdldF9mYl9jaGFubmVsX251bWJlciA9IGRmX3YzXzZfZ2V0X2ZiX2NoYW5uZWxfbnVtYmVy
LA0KIAkuZ2V0X2hibV9jaGFubmVsX251bWJlciA9IGRmX3YzXzZfZ2V0X2hibV9jaGFubmVsX251
bWJlciwNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182Lmgg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182LmgNCmluZGV4IGZjZmZkODA3NzY0
ZC4uNzY5OTg1NDFiYzMwIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
ZGZfdjNfNi5oDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9kZl92M182LmgNCkBA
IC0zNiwyMiArMzYsMTUgQEAgZW51bSBERl9WM182X01HQ0cgew0KIH07DQogDQogLyogRGVmaW5l
ZCBpbiBnbG9iYWxfZmVhdHVyZXMuaCBhcyBGVElfUEVSRk1PTl9WSVNJQkxFICovDQotI2RlZmlu
ZSBBTURHUFVfREZfTUFYX0NPVU5URVJTCQk0DQorI2RlZmluZSBERl9WM182X01BWF9DT1VOVEVS
UwkJNA0KIA0KIC8qIGdldCBmbGFncyBmcm9tIGRmIHBlcmZtb24gY29uZmlnICovDQotI2RlZmlu
ZSBHRVRfRVZFTlQoeCkJCQkoeCAmIDB4RkZVTCkNCi0jZGVmaW5lIEdFVF9JTlNUQU5DRSh4KQkJ
CSgoeCA+PiA4KSAmIDB4RkZVTCkNCi0jZGVmaW5lIEdFVF9VTklUTUFTSyh4KQkJCSgoeCA+PiAx
NikgJiAweEZGVUwpDQotI2RlZmluZSBHRVRfSU5TVEFOQ0VfQ09ORklHKHgpCQkoMFVMTCB8ICgw
eDA3VUxMKSBcDQotCQkJCQl8ICgoMHgwNDZVTEwgKyB4KSA8PCA4KSBcDQotCQkJCQl8ICgweDAy
IDw8IDE2KSkNCi0NCi0vKiBkZiBldmVudCBjb25mIG1hY3JvcyAqLw0KLSNkZWZpbmUgSVNfREZf
WEdNSV8wX1RYKHgpIChHRVRfRVZFTlQoeCkgPT0gMHg3IFwNCi0JCSYmIEdFVF9JTlNUQU5DRSh4
KSA9PSAweDQ2ICYmIEdFVF9VTklUTUFTSyh4KSA9PSAweDIpDQotI2RlZmluZSBJU19ERl9YR01J
XzFfVFgoeCkgKEdFVF9FVkVOVCh4KSA9PSAweDcgXA0KLQkJJiYgR0VUX0lOU1RBTkNFKHgpID09
IDB4NDcgJiYgR0VUX1VOSVRNQVNLKHgpID09IDB4MikNCisjZGVmaW5lIERGX1YzXzZfR0VUX0VW
RU5UKHgpCQkoeCAmIDB4RkZVTCkNCisjZGVmaW5lIERGX1YzXzZfR0VUX0lOU1RBTkNFKHgpCQko
KHggPj4gOCkgJiAweEZGVUwpDQorI2RlZmluZSBERl9WM182X0dFVF9VTklUTUFTSyh4KQkJKCh4
ID4+IDE2KSAmIDB4RkZVTCkNCisjZGVmaW5lIERGX1YzXzZfUEVSRk1PTl9PVkVSRkxPVwkweEZG
RkZGRkZGRkZGRlVMTA0KIA0KK2V4dGVybiBjb25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICpk
Zl92M182X2F0dHJfZ3JvdXBzW107DQogZXh0ZXJuIGNvbnN0IHN0cnVjdCBhbWRncHVfZGZfZnVu
Y3MgZGZfdjNfNl9mdW5jczsNCiANCiAjZW5kaWYNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9zb2MxNS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc29jMTUu
Yw0KaW5kZXggNzhiZDRmYzA3YmFiLi40ZTc0NmY5N2NjOGQgMTAwNjQ0DQotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9zb2MxNS5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9zb2MxNS5jDQpAQCAtMTA3OSw2ICsxMDc5LDcgQEAgc3RhdGljIGludCBzb2MxNV9jb21t
b25faHdfaW5pdCh2b2lkICpoYW5kbGUpDQogCSAqLw0KIAlpZiAoYWRldi0+bmJpb19mdW5jcy0+
cmVtYXBfaGRwX3JlZ2lzdGVycykNCiAJCWFkZXYtPm5iaW9fZnVuY3MtPnJlbWFwX2hkcF9yZWdp
c3RlcnMoYWRldik7DQorCWFkZXYtPmRmX2Z1bmNzLT5pbml0KGFkZXYpOw0KIAkvKiBlbmFibGUg
dGhlIGRvb3JiZWxsIGFwZXJ0dXJlICovDQogCXNvYzE1X2VuYWJsZV9kb29yYmVsbF9hcGVydHVy
ZShhZGV2LCB0cnVlKTsNCiAJLyogSFcgZG9vcmJlbGwgcm91dGluZyBwb2xpY3k6IGRvb3JiZWxs
IHdyaXRpbmcgbm90DQpAQCAtMTEwMCw2ICsxMTAxLDggQEAgc3RhdGljIGludCBzb2MxNV9jb21t
b25faHdfZmluaSh2b2lkICpoYW5kbGUpDQogCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikpDQog
CQl4Z3B1X2FpX21haWxib3hfcHV0X2lycShhZGV2KTsNCiANCisJYWRldi0+ZGZfZnVuY3MtPmZp
bmkoYWRldik7DQorDQogCXJldHVybiAwOw0KIH0NCiANCi0tIA0KMi4xNy4xDQoNCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGluZyBs
aXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
