Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5A8992E4A7
	for <lists+amd-gfx@lfdr.de>; Wed, 29 May 2019 20:44:37 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9F5CA6E079;
	Wed, 29 May 2019 18:44:35 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-qk1-x742.google.com (mail-qk1-x742.google.com
 [IPv6:2607:f8b0:4864:20::742])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6D6736E079
 for <amd-gfx@lists.freedesktop.org>; Wed, 29 May 2019 18:44:34 +0000 (UTC)
Received: by mail-qk1-x742.google.com with SMTP id w187so2138249qkb.11
 for <amd-gfx@lists.freedesktop.org>; Wed, 29 May 2019 11:44:34 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=YZrReZ7oAEsL5hZqZbXfkKDY9CMWBSZAo4cEp0bWSHY=;
 b=Zi4WWWEHLA6qdlZPfK6pXiOrlHd7UoQzNa0LbqO513MG5SJIN8ycZmRWfNDP2pu8oD
 /ORCNkwmztnvItQXkR4qIQwFsH09/hCIPgChhfh01+cXucst8wFkUGrwxM0zA/ZaxKOB
 c2SxDfayxKgE5SDie74VLEs20lfvtqVk92XdoGRrfhEn1GeJqhJoFlBXf4/GfF3q/esJ
 p5XN8sjNu/8uiIP5qVvgTaFvAcsdJj1BtUSm+GN1gujOvYxNMTHn5zQmULPkrRWAJ7W9
 RIEo1Wosq/SPh7eRQApdsKxJfKa9xyIehZIR1Fgf7yOFqBMO85wHbSNro829PTGDmIpV
 MiIA==
X-Gm-Message-State: APjAAAXOX0bv0WkzDvyjY2Ljees2l15wCTtW2eYBRsieTGU6ONeAGNqH
 oMF6IemzfmhOVIjGX4eeh0K/hi5A
X-Google-Smtp-Source: APXvYqw5u+AbdxNz2VvQxha5M0NlFE/JJb8gfP23YranV24yCEuMjoQ4yKX5k1GtDBqrla+K5nm6GA==
X-Received: by 2002:a37:8583:: with SMTP id
 h125mr20727375qkd.129.1559155473303; 
 Wed, 29 May 2019 11:44:33 -0700 (PDT)
Received: from localhost.localdomain ([71.219.72.228])
 by smtp.gmail.com with ESMTPSA id o6sm192490qtc.47.2019.05.29.11.44.32
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Wed, 29 May 2019 11:44:32 -0700 (PDT)
From: Alex Deucher <alexdeucher@gmail.com>
X-Google-Original-From: Alex Deucher <alexander.deucher@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH] drm/amdgpu: fix a race in GPU reset with IB test (v2)
Date: Wed, 29 May 2019 13:44:11 -0500
Message-Id: <20190529184411.16894-1-alexander.deucher@amd.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=YZrReZ7oAEsL5hZqZbXfkKDY9CMWBSZAo4cEp0bWSHY=;
 b=K8IQg/x8zTy6fjv4CjeQF9ln/kYOXLH8kIgA/JVmWwA05MayZCM8RB8gOH4Oua6O/S
 +2HIRyKEhsIDnO1MNptLBKazW228v1Ptb2JOtL0kvSh66cVJn1ZFdWR8pwAhVFE+WqIU
 HwOq/fQxvIVs4MMGbFJPwOyrf+d4aYcnTROOPtDwMO0C9ueVv1CHqh8HusPbCVtMHyQh
 dAZXESdrntMkgPR/GiE3XGHCSaV6/KemwXspIax7/ZDEtrRWAJJHEGwodszTmP1/7H3x
 FTis+5riBg2kOIfH9PAQrlsi399V+TeXePkXCXCMuhycdhx/kw6Dn/wFborni4C6fPCw
 8Tyg==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Alex Deucher <alexander.deucher@amd.com>, Xinhui Pan <xinhui.pan@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

U3BsaXQgbGF0ZV9pbml0IGludG8gdHdvIGZ1bmN0aW9ucywgb25lIChkb19sYXRlX2luaXQpIHdo
aWNoCmp1c3QgZG9lcyB0aGUgaHcgaW5pdCwgYW5kIGxhdGVfaW5pdCB3aGljaCBjYWxscyBkb19s
YXRlX2luaXQKYW5kIHNjaGVkdWxlcyB0aGUgSUIgdGVzdCB3b3JrLiAgQ2FsbCBkb19sYXRlX2lu
aXQgaW4KdGhlIEdQVSByZXNldCBjb2RlIHRvIHJ1biB0aGUgaW5pdCBjb2RlLCBidXQgbm90IHNj
aGVkdWxlCnRoZSBJQiB0ZXN0IGNvZGUuICBUaGUgSUIgdGVzdCBjb2RlIGlzIGNhbGxlZCBkaXJl
Y3RseQppbiB0aGUgZ3B1IHJlc2V0IGNvZGUgc28gbm8gbmVlZCB0byBydW4gdGhlIElCIHRlc3Rz
CmluIGEgc2VwYXJhdGUgd29yayB0aHJlYWQuICBJZiB3ZSBkbywgd2UgZW5kIHVwIHJhY2luZy4K
CnYyOiBSZXdvcmsgbGF0ZV9pbml0LiAgUHVsbCBvdXQgdGhlIG1ncHUgZmFuIGJvb3N0IGFuZCB4
Z21pCnBzdGF0ZSBjb2RlIGludG8gbGF0ZV9pbml0IHNvIHRoZXkgZ2V0IGNhbGxlZCBpbiBhbGwg
Y2FzZXMuCnJlbmFtZSB0aGUgbGF0ZV9pbml0IHdvcmtlciB0aHJlYWQgdG8gZGVsYXllZCB3b3Jr
IHNpbmNlIGl0J3MKanVzdCB0aGUgSUIgdGVzdHMgbm93IHdoaWNoIGNhbiBoYXBwZW4gbGF0ZXIu
ICBTY2hlZHVsZSB0aGUKd29yayBhdCBpbml0IGFuZCByZXN1bWUgdGltZS4gIEl0J3Mgbm90IG5l
ZWRlZCBhdCByZXNldCB0aW1lCmJlY2F1c2UgdGhlIElCIHRlc3RzIGFyZSBjYWxsZWQgZGlyZWN0
bHkuCgpDYzogWGluaHVpIFBhbiA8eGluaHVpLnBhbkBhbWQuY29tPgpTaWduZWQtb2ZmLWJ5OiBB
bGV4IERldWNoZXIgPGFsZXhhbmRlci5kZXVjaGVyQGFtZC5jb20+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmggICAgICAgIHwgICAyICstCiBkcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfZGV2aWNlLmMgfCAxMTYgKysrKysrKysrKystLS0tLS0tLS0tCiBk
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfa21zLmMgICAgfCAgIDIgKy0KIDMgZmls
ZXMgY2hhbmdlZCwgNjEgaW5zZXJ0aW9ucygrKSwgNTkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmggYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHUuaAppbmRleCBkMzU1ZTlhMDlhZDEuLjE5YTAwMjgyZTM0YyAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmgKQEAgLTkyNSw3ICs5MjUsNyBAQCBzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSB7CiAJY29uc3Qgc3RydWN0IGFtZGdwdV9kZl9mdW5jcwkqZGZfZnVuY3M7
CiAKIAkvKiBkZWxheWVkIHdvcmtfZnVuYyBmb3IgZGVmZXJyaW5nIGNsb2NrZ2F0aW5nIGR1cmlu
ZyByZXN1bWUgKi8KLQlzdHJ1Y3QgZGVsYXllZF93b3JrICAgICBsYXRlX2luaXRfd29yazsKKwlz
dHJ1Y3QgZGVsYXllZF93b3JrICAgICBkZWxheWVkX2luaXRfd29yazsKIAogCXN0cnVjdCBhbWRn
cHVfdmlydAl2aXJ0OwogCS8qIGZpcm13YXJlIFZSQU0gcmVzZXJ2YXRpb24gKi8KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYwppbmRleCA3YThjMjIwMWNkMDQuLmQw
MGZkNWRkMzA3YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2RldmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2Uu
YwpAQCAtMTg2OSw2ICsxODY5LDQzIEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2RldmljZV9zZXRfcGdf
c3RhdGUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIGVudW0gYW1kX3Bvd2VyCiAJcmV0dXJu
IDA7CiB9CiAKK3N0YXRpYyBpbnQgYW1kZ3B1X2RldmljZV9lbmFibGVfbWdwdV9mYW5fYm9vc3Qo
dm9pZCkKK3sKKwlzdHJ1Y3QgYW1kZ3B1X2dwdV9pbnN0YW5jZSAqZ3B1X2luczsKKwlzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldjsKKwlpbnQgaSwgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJm1n
cHVfaW5mby5tdXRleCk7CisKKwkvKgorCSAqIE1HUFUgZmFuIGJvb3N0IGZlYXR1cmUgc2hvdWxk
IGJlIGVuYWJsZWQKKwkgKiBvbmx5IHdoZW4gdGhlcmUgYXJlIHR3byBvciBtb3JlIGRHUFVzIGlu
CisJICogdGhlIHN5c3RlbQorCSAqLworCWlmIChtZ3B1X2luZm8ubnVtX2RncHUgPCAyKQorCQln
b3RvIG91dDsKKworCWZvciAoaSA9IDA7IGkgPCBtZ3B1X2luZm8ubnVtX2RncHU7IGkrKykgewor
CQlncHVfaW5zID0gJihtZ3B1X2luZm8uZ3B1X2luc1tpXSk7CisJCWFkZXYgPSBncHVfaW5zLT5h
ZGV2OworCQlpZiAoIShhZGV2LT5mbGFncyAmIEFNRF9JU19BUFUpICYmCisJCSAgICAhZ3B1X2lu
cy0+bWdwdV9mYW5fZW5hYmxlZCAmJgorCQkgICAgYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzICYm
CisJCSAgICBhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmVuYWJsZV9tZ3B1X2Zhbl9ib29zdCkg
eworCQkJcmV0ID0gYW1kZ3B1X2RwbV9lbmFibGVfbWdwdV9mYW5fYm9vc3QoYWRldik7CisJCQlp
ZiAocmV0KQorCQkJCWJyZWFrOworCisJCQlncHVfaW5zLT5tZ3B1X2Zhbl9lbmFibGVkID0gMTsK
KwkJfQorCX0KKworb3V0OgorCW11dGV4X3VubG9jaygmbWdwdV9pbmZvLm11dGV4KTsKKworCXJl
dHVybiByZXQ7Cit9CisKIC8qKgogICogYW1kZ3B1X2RldmljZV9pcF9sYXRlX2luaXQgLSBydW4g
bGF0ZSBpbml0IGZvciBoYXJkd2FyZSBJUHMKICAqCkBAIC0xOTAyLDExICsxOTM5LDE1IEBAIHN0
YXRpYyBpbnQgYW1kZ3B1X2RldmljZV9pcF9sYXRlX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYpCiAJYW1kZ3B1X2RldmljZV9zZXRfY2dfc3RhdGUoYWRldiwgQU1EX0NHX1NUQVRFX0dB
VEUpOwogCWFtZGdwdV9kZXZpY2Vfc2V0X3BnX3N0YXRlKGFkZXYsIEFNRF9QR19TVEFURV9HQVRF
KTsKIAotCXF1ZXVlX2RlbGF5ZWRfd29yayhzeXN0ZW1fd3EsICZhZGV2LT5sYXRlX2luaXRfd29y
aywKLQkJCSAgIG1zZWNzX3RvX2ppZmZpZXMoQU1ER1BVX1JFU1VNRV9NUykpOwotCiAJYW1kZ3B1
X2RldmljZV9maWxsX3Jlc2V0X21hZ2ljKGFkZXYpOwogCisJciA9IGFtZGdwdV9kZXZpY2VfZW5h
YmxlX21ncHVfZmFuX2Jvb3N0KCk7CisJaWYgKHIpCisJCURSTV9FUlJPUigiZW5hYmxlIG1ncHUg
ZmFuIGJvb3N0IGZhaWxlZCAoJWQpLlxuIiwgcik7CisKKwkvKiBzZXQgdG8gbG93IHBzdGF0ZSBi
eSBkZWZhdWx0ICovCisJYW1kZ3B1X3hnbWlfc2V0X3BzdGF0ZShhZGV2LCAwKTsKKwogCXJldHVy
biAwOwogfQogCkBAIC0yMDA1LDY1ICsyMDQ2LDIwIEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2Rldmlj
ZV9pcF9maW5pKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCXJldHVybiAwOwogfQogCi1z
dGF0aWMgaW50IGFtZGdwdV9kZXZpY2VfZW5hYmxlX21ncHVfZmFuX2Jvb3N0KHZvaWQpCi17Ci0J
c3RydWN0IGFtZGdwdV9ncHVfaW5zdGFuY2UgKmdwdV9pbnM7Ci0Jc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXY7Ci0JaW50IGksIHJldCA9IDA7Ci0KLQltdXRleF9sb2NrKCZtZ3B1X2luZm8ubXV0
ZXgpOwotCi0JLyoKLQkgKiBNR1BVIGZhbiBib29zdCBmZWF0dXJlIHNob3VsZCBiZSBlbmFibGVk
Ci0JICogb25seSB3aGVuIHRoZXJlIGFyZSB0d28gb3IgbW9yZSBkR1BVcyBpbgotCSAqIHRoZSBz
eXN0ZW0KLQkgKi8KLQlpZiAobWdwdV9pbmZvLm51bV9kZ3B1IDwgMikKLQkJZ290byBvdXQ7Ci0K
LQlmb3IgKGkgPSAwOyBpIDwgbWdwdV9pbmZvLm51bV9kZ3B1OyBpKyspIHsKLQkJZ3B1X2lucyA9
ICYobWdwdV9pbmZvLmdwdV9pbnNbaV0pOwotCQlhZGV2ID0gZ3B1X2lucy0+YWRldjsKLQkJaWYg
KCEoYWRldi0+ZmxhZ3MgJiBBTURfSVNfQVBVKSAmJgotCQkgICAgIWdwdV9pbnMtPm1ncHVfZmFu
X2VuYWJsZWQgJiYKLQkJICAgIGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcyAmJgotCQkgICAgYWRl
di0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5lbmFibGVfbWdwdV9mYW5fYm9vc3QpIHsKLQkJCXJldCA9
IGFtZGdwdV9kcG1fZW5hYmxlX21ncHVfZmFuX2Jvb3N0KGFkZXYpOwotCQkJaWYgKHJldCkKLQkJ
CQlicmVhazsKLQotCQkJZ3B1X2lucy0+bWdwdV9mYW5fZW5hYmxlZCA9IDE7Ci0JCX0KLQl9Ci0K
LW91dDoKLQltdXRleF91bmxvY2soJm1ncHVfaW5mby5tdXRleCk7Ci0KLQlyZXR1cm4gcmV0Owot
fQotCiAvKioKLSAqIGFtZGdwdV9kZXZpY2VfaXBfbGF0ZV9pbml0X2Z1bmNfaGFuZGxlciAtIHdv
cmsgaGFuZGxlciBmb3IgaWIgdGVzdAorICogYW1kZ3B1X2RldmljZV9kZWxheWVkX2luaXRfd29y
a19oYW5kbGVyIC0gd29yayBoYW5kbGVyIGZvciBJQiB0ZXN0cwogICoKICAqIEB3b3JrOiB3b3Jr
X3N0cnVjdC4KICAqLwotc3RhdGljIHZvaWQgYW1kZ3B1X2RldmljZV9pcF9sYXRlX2luaXRfZnVu
Y19oYW5kbGVyKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKK3N0YXRpYyB2b2lkIGFtZGdwdV9k
ZXZpY2VfZGVsYXllZF9pbml0X3dvcmtfaGFuZGxlcihzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmsp
CiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPQotCQljb250YWluZXJfb2Yod29yaywg
c3RydWN0IGFtZGdwdV9kZXZpY2UsIGxhdGVfaW5pdF93b3JrLndvcmspOworCQljb250YWluZXJf
b2Yod29yaywgc3RydWN0IGFtZGdwdV9kZXZpY2UsIGRlbGF5ZWRfaW5pdF93b3JrLndvcmspOwog
CWludCByOwogCiAJciA9IGFtZGdwdV9pYl9yaW5nX3Rlc3RzKGFkZXYpOwogCWlmIChyKQogCQlE
Uk1fRVJST1IoImliIHJpbmcgdGVzdCBmYWlsZWQgKCVkKS5cbiIsIHIpOwotCi0JciA9IGFtZGdw
dV9kZXZpY2VfZW5hYmxlX21ncHVfZmFuX2Jvb3N0KCk7Ci0JaWYgKHIpCi0JCURSTV9FUlJPUigi
ZW5hYmxlIG1ncHUgZmFuIGJvb3N0IGZhaWxlZCAoJWQpLlxuIiwgcik7Ci0KLQkvKnNldCB0byBs
b3cgcHN0YXRlIGJ5IGRlZmF1bHQgKi8KLQlhbWRncHVfeGdtaV9zZXRfcHN0YXRlKGFkZXYsIDAp
OwotCiB9CiAKIHN0YXRpYyB2b2lkIGFtZGdwdV9kZXZpY2VfZGVsYXlfZW5hYmxlX2dmeF9vZmYo
c3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQpAQCAtMjUzNSw4ICsyNTMxLDggQEAgaW50IGFtZGdw
dV9kZXZpY2VfaW5pdChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAlJTklUX0xJU1RfSEVB
RCgmYWRldi0+cmluZ19scnVfbGlzdCk7CiAJc3Bpbl9sb2NrX2luaXQoJmFkZXYtPnJpbmdfbHJ1
X2xpc3RfbG9jayk7CiAKLQlJTklUX0RFTEFZRURfV09SSygmYWRldi0+bGF0ZV9pbml0X3dvcmss
Ci0JCQkgIGFtZGdwdV9kZXZpY2VfaXBfbGF0ZV9pbml0X2Z1bmNfaGFuZGxlcik7CisJSU5JVF9E
RUxBWUVEX1dPUksoJmFkZXYtPmRlbGF5ZWRfaW5pdF93b3JrLAorCQkJICBhbWRncHVfZGV2aWNl
X2RlbGF5ZWRfaW5pdF93b3JrX2hhbmRsZXIpOwogCUlOSVRfREVMQVlFRF9XT1JLKCZhZGV2LT5n
ZnguZ2Z4X29mZl9kZWxheV93b3JrLAogCQkJICBhbWRncHVfZGV2aWNlX2RlbGF5X2VuYWJsZV9n
Znhfb2ZmKTsKIApAQCAtMjc0OSw2ICsyNzQ1LDkgQEAgaW50IGFtZGdwdV9kZXZpY2VfaW5pdChz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAkvKiBtdXN0IHN1Y2NlZWQuICovCiAJYW1kZ3B1
X3Jhc19yZXN1bWUoYWRldik7CiAKKwlxdWV1ZV9kZWxheWVkX3dvcmsoc3lzdGVtX3dxLCAmYWRl
di0+ZGVsYXllZF9pbml0X3dvcmssCisJCQkgICBtc2Vjc190b19qaWZmaWVzKEFNREdQVV9SRVNV
TUVfTVMpKTsKKwogCXIgPSBkZXZpY2VfY3JlYXRlX2ZpbGUoYWRldi0+ZGV2LCAmZGV2X2F0dHJf
cGNpZV9yZXBsYXlfY291bnQpOwogCWlmIChyKSB7CiAJCWRldl9lcnIoYWRldi0+ZGV2LCAiQ291
bGQgbm90IGNyZWF0ZSBwY2llX3JlcGxheV9jb3VudCIpOwpAQCAtMjc5Niw3ICsyNzk1LDcgQEAg
dm9pZCBhbWRncHVfZGV2aWNlX2Zpbmkoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCWFk
ZXYtPmZpcm13YXJlLmdwdV9pbmZvX2Z3ID0gTlVMTDsKIAl9CiAJYWRldi0+YWNjZWxfd29ya2lu
ZyA9IGZhbHNlOwotCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmYWRldi0+bGF0ZV9pbml0X3dv
cmspOworCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmYWRldi0+ZGVsYXllZF9pbml0X3dvcmsp
OwogCS8qIGZyZWUgaTJjIGJ1c2VzICovCiAJaWYgKCFhbWRncHVfZGV2aWNlX2hhc19kY19zdXBw
b3J0KGFkZXYpKQogCQlhbWRncHVfaTJjX2ZpbmkoYWRldik7CkBAIC0yODU5LDcgKzI4NTgsNyBA
QCBpbnQgYW1kZ3B1X2RldmljZV9zdXNwZW5kKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIGJvb2wg
c3VzcGVuZCwgYm9vbCBmYmNvbikKIAlpZiAoZmJjb24pCiAJCWFtZGdwdV9mYmRldl9zZXRfc3Vz
cGVuZChhZGV2LCAxKTsKIAotCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmYWRldi0+bGF0ZV9p
bml0X3dvcmspOworCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmYWRldi0+ZGVsYXllZF9pbml0
X3dvcmspOwogCiAJaWYgKCFhbWRncHVfZGV2aWNlX2hhc19kY19zdXBwb3J0KGFkZXYpKSB7CiAJ
CS8qIHR1cm4gb2ZmIGRpc3BsYXkgaHcgKi8KQEAgLTI5NzksNiArMjk3OCw5IEBAIGludCBhbWRn
cHVfZGV2aWNlX3Jlc3VtZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBib29sIHJlc3VtZSwgYm9v
bCBmYmNvbikKIAlpZiAocikKIAkJcmV0dXJuIHI7CiAKKwlxdWV1ZV9kZWxheWVkX3dvcmsoc3lz
dGVtX3dxLCAmYWRldi0+ZGVsYXllZF9pbml0X3dvcmssCisJCQkgICBtc2Vjc190b19qaWZmaWVz
KEFNREdQVV9SRVNVTUVfTVMpKTsKKwogCWlmICghYW1kZ3B1X2RldmljZV9oYXNfZGNfc3VwcG9y
dChhZGV2KSkgewogCQkvKiBwaW4gY3Vyc29ycyAqLwogCQlsaXN0X2Zvcl9lYWNoX2VudHJ5KGNy
dGMsICZkZXYtPm1vZGVfY29uZmlnLmNydGNfbGlzdCwgaGVhZCkgewpAQCAtMzAwMiw3ICszMDA0
LDcgQEAgaW50IGFtZGdwdV9kZXZpY2VfcmVzdW1lKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIGJv
b2wgcmVzdW1lLCBib29sIGZiY29uKQogCQlyZXR1cm4gcjsKIAogCS8qIE1ha2Ugc3VyZSBJQiB0
ZXN0cyBmbHVzaGVkICovCi0JZmx1c2hfZGVsYXllZF93b3JrKCZhZGV2LT5sYXRlX2luaXRfd29y
ayk7CisJZmx1c2hfZGVsYXllZF93b3JrKCZhZGV2LT5kZWxheWVkX2luaXRfd29yayk7CiAKIAkv
KiBibGF0IHRoZSBtb2RlIGJhY2sgaW4gKi8KIAlpZiAoZmJjb24pIHsKQEAgLTM1OTMsNyArMzU5
NSw3IEBAIGludCBhbWRncHVfZGV2aWNlX2dwdV9yZWNvdmVyKHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2LAogCiAJZGV2X2luZm8oYWRldi0+ZGV2LCAiR1BVIHJlc2V0IGJlZ2luIVxuIik7CiAK
LQljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJmFkZXYtPmxhdGVfaW5pdF93b3JrKTsKKwljYW5j
ZWxfZGVsYXllZF93b3JrX3N5bmMoJmFkZXYtPmRlbGF5ZWRfaW5pdF93b3JrKTsKIAogCWhpdmUg
PSBhbWRncHVfZ2V0X3hnbWlfaGl2ZShhZGV2LCBmYWxzZSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9rbXMuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9rbXMuYwppbmRleCA4N2E5Mzg3NGQ3MWUuLmJlOTc3NzE1MjVlMSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9rbXMuYwpAQCAtOTc0LDcgKzk3NCw3IEBA
IGludCBhbWRncHVfZHJpdmVyX29wZW5fa21zKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVj
dCBkcm1fZmlsZSAqZmlsZV9wcml2KQogCWludCByLCBwYXNpZDsKIAogCS8qIEVuc3VyZSBJQiB0
ZXN0cyBhcmUgcnVuIG9uIHJpbmcgKi8KLQlmbHVzaF9kZWxheWVkX3dvcmsoJmFkZXYtPmxhdGVf
aW5pdF93b3JrKTsKKwlmbHVzaF9kZWxheWVkX3dvcmsoJmFkZXYtPmRlbGF5ZWRfaW5pdF93b3Jr
KTsKIAogCWZpbGVfcHJpdi0+ZHJpdmVyX3ByaXYgPSBOVUxMOwogCi0tIAoyLjIwLjEKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGlu
ZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
