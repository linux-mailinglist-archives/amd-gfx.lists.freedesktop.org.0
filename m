Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 86F6348FFD
	for <lists+amd-gfx@lfdr.de>; Mon, 17 Jun 2019 21:46:38 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B86DE89E35;
	Mon, 17 Jun 2019 19:46:35 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-qk1-x742.google.com (mail-qk1-x742.google.com
 [IPv6:2607:f8b0:4864:20::742])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0BAD289E1A
 for <amd-gfx@lists.freedesktop.org>; Mon, 17 Jun 2019 19:46:32 +0000 (UTC)
Received: by mail-qk1-x742.google.com with SMTP id g18so7002568qkl.3
 for <amd-gfx@lists.freedesktop.org>; Mon, 17 Jun 2019 12:46:32 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=TT5Ihs470f/nH8BxQkmaF7AE0be06wnvoIEsWl43ndk=;
 b=eSAs0LtLtiiixc/qG41MucjFNH1gNSK4d6Yr9c/TQUf9QClccY6Yr5QTI5KP0YKRV/
 tTtSY2DweYqydGhCWU5YypzoUMjqqZuVOKhGcO55tRsP5KARLbPG5i3oK48c0widV57M
 VqVENjVj1RzLViwB7y8LfJiWRrhfFRwwM9tIAVCnYmZNkk8H3c+e0B9D+Yqud7VXV1Bo
 awiWbxScY0tyqpT1qOpAbwe/4+mcZyg1uuNYIhXubkh+OLWlNZW1fR6xgm5rDouyXBIL
 PALjigXHpKfXAMf4VfRQ+o9zEmxtmX/oIb3XxBBDmP3OQsLxpv8A/gQiOG9iHhfQ3aBX
 wIjQ==
X-Gm-Message-State: APjAAAVITqvfokKtJ+fIGNmJE5MuWTsW3kEjUSWvUCjYfbuVRnC2eBLy
 J56lcUOqGemZrDChBYUm7KrQhPlIhFA=
X-Google-Smtp-Source: APXvYqz3LX0/7wYdafh2BxABFu4axEK5QtgmdjnhZ9D/2Ye7jNZHxn61rSggkqJuV04P1r7TPdgfLw==
X-Received: by 2002:a37:654d:: with SMTP id z74mr69444959qkb.10.1560800790271; 
 Mon, 17 Jun 2019 12:46:30 -0700 (PDT)
Received: from localhost.localdomain ([71.219.5.136])
 by smtp.gmail.com with ESMTPSA id u4sm6559420qkb.16.2019.06.17.12.46.29
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Mon, 17 Jun 2019 12:46:29 -0700 (PDT)
From: Alex Deucher <alexdeucher@gmail.com>
X-Google-Original-From: Alex Deucher <alexander.deucher@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH 334/459] drm/amd/display: Add DC core changes for DCN2
Date: Mon, 17 Jun 2019 14:44:35 -0500
Message-Id: <20190617194540.18497-35-alexander.deucher@amd.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190617194540.18497-1-alexander.deucher@amd.com>
References: <20190617194540.18497-1-alexander.deucher@amd.com>
MIME-Version: 1.0
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=TT5Ihs470f/nH8BxQkmaF7AE0be06wnvoIEsWl43ndk=;
 b=B3G3wfPjH4Y8Avp2p+PGFalV++vvEdyADemzOBKS8gcNaH6Qw6XkYc8gTKLl6kpJQP
 x1dj8ZXtqCw05Stebw6Y79jNsVJizUwiR774ARZ1idng5HWV2DwfIHhMwp8kjfuiebnh
 ka48LYUHhTK0JRnFzIXpZ+OPk8lLck6FElJRU0TLboUbrEPryk1f09F+g345Gv/TRelX
 tbimExPg7YvXCHKJ8XLUDVuLvwsP9MsVynY8MJrp0A6ZqrKa6jka0/VQ115dw33qg3yU
 yWH7ijnMS++nm4eUCb/yqHnbULB9Bk5qVOcUKhZP9MHgeeSpmG/chaYfYU3yymbJQtBp
 y3lA==
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Alex Deucher <alexander.deucher@amd.com>,
 Harry Wentland <harry.wentland@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RnJvbTogSGFycnkgV2VudGxhbmQgPGhhcnJ5LndlbnRsYW5kQGFtZC5jb20+CgpTaWduZWQtb2Zm
LWJ5OiBIYXJyeSBXZW50bGFuZCA8aGFycnkud2VudGxhbmRAYW1kLmNvbT4KU2lnbmVkLW9mZi1i
eTogQWxleCBEZXVjaGVyIDxhbGV4YW5kZXIuZGV1Y2hlckBhbWQuY29tPgotLS0KIGRyaXZlcnMv
Z3B1L2RybS9hbWQvZGlzcGxheS9kYy9NYWtlZmlsZSAgICAgICB8ICAgNiArCiBkcml2ZXJzL2dw
dS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kYy5jICAgICAgfCAxNDEgKysrKysrKysrKysrLQog
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2NvcmUvZGNfbGluay5jIHwgICA2ICstCiAu
Li4vZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9jb3JlL2RjX2xpbmtfZHAuYyAgfCAgNjIgKysrKysr
CiAuLi4vZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9jb3JlL2RjX3N0cmVhbS5jICAgfCAxODUgKysr
KysrKysrKysrKysrKysrCiAuLi4vZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9jb3JlL2RjX3N1cmZh
Y2UuYyAgfCAgNjMgKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGMuaCAg
ICAgICAgICAgfCAgODkgKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMv
ZGNfc3RyZWFtLmggICAgfCAgNjcgKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L2RjL2RtX3BwX3NtdS5oICAgIHwgMTEzICsrKysrKysrKystCiA5IGZpbGVzIGNoYW5nZWQsIDcy
OCBpbnNlcnRpb25zKCspLCA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvZGlzcGxheS9kYy9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxh
eS9kYy9NYWtlZmlsZQppbmRleCA2ZGE0ZTRmODQ0YjIuLjljMGE3NTU0MTRkZSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL01ha2VmaWxlCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvZGlzcGxheS9kYy9NYWtlZmlsZQpAQCAtMjUsNiArMjUsMTIgQEAKIAogRENf
TElCUyA9IGJhc2ljcyBiaW9zIGNhbGNzIGNsa19tZ3IgZGNlIGdwaW8gaXJxIHZpcnR1YWwKIAor
aWZkZWYgQ09ORklHX0RSTV9BTURfRENfRENOMl8wCitEQ19MSUJTICs9IGRjbjIwCitlbmRpZgor
CisKKwogaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRENOMV8wCiBEQ19MSUJTICs9IGRjbjEwIGRt
bAogZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9jb3Jl
L2RjLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kYy5jCmluZGV4IDA4
MDkyYWU1N2JjOC4uMDUyZDNjOGM2YjczIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2Rpc3BsYXkvZGMvY29yZS9kYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9k
Yy9jb3JlL2RjLmMKQEAgLTU2LDYgKzU2LDEwIEBACiAKICNpbmNsdWRlICJkY19saW5rX2RwLmgi
CiAKKyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzAKKyNpbmNsdWRlICJ2bV9oZWxwZXIu
aCIKKyNlbmRpZgorCiAjaW5jbHVkZSAiZGNlL2RjZV9pMmMuaCIKIAogI2RlZmluZSBEQ19MT0dH
RVIgXApAQCAtNTI4LDYgKzUzMiwxMSBAQCBzdGF0aWMgdm9pZCBkZXN0cnVjdChzdHJ1Y3QgZGMg
KmRjKQogCWtmcmVlKGRjLT5kY25faXApOwogCWRjLT5kY25faXAgPSBOVUxMOwogCisjZW5kaWYK
KyNpZmRlZiBDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzAKKwlrZnJlZShkYy0+dm1faGVscGVyKTsK
KwlkYy0+dm1faGVscGVyID0gTlVMTDsKKwogI2VuZGlmCiB9CiAKQEAgLTU0NSw2ICs1NTQsMTEg
QEAgc3RhdGljIGJvb2wgY29uc3RydWN0KHN0cnVjdCBkYyAqZGMsCiAJZW51bSBkY2VfdmVyc2lv
biBkY192ZXJzaW9uID0gRENFX1ZFUlNJT05fVU5LTk9XTjsKIAlkYy0+Y29uZmlnID0gaW5pdF9w
YXJhbXMtPmZsYWdzOwogCisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRENOMl8wCisJLy8gQWxs
b2NhdGUgbWVtb3J5IGZvciB0aGUgdm1faGVscGVyCisJZGMtPnZtX2hlbHBlciA9IGt6YWxsb2Mo
c2l6ZW9mKHN0cnVjdCB2bV9oZWxwZXIpLCBHRlBfS0VSTkVMKTsKKworI2VuZGlmCiAJbWVtY3B5
KCZkYy0+YmJfb3ZlcnJpZGVzLCAmaW5pdF9wYXJhbXMtPmJiX292ZXJyaWRlcywgc2l6ZW9mKGRj
LT5iYl9vdmVycmlkZXMpKTsKIAogCWRjX2RjZWlwID0ga3phbGxvYyhzaXplb2YoKmRjX2RjZWlw
KSwgR0ZQX0tFUk5FTCk7CkBAIC01NzgsNiArNTkyLDkgQEAgc3RhdGljIGJvb2wgY29uc3RydWN0
KHN0cnVjdCBkYyAqZGMsCiAJfQogCiAJZGMtPmRjbl9pcCA9IGRjbl9pcDsKKyNpZmRlZiBDT05G
SUdfRFJNX0FNRF9EQ19EQ04yXzAKKwlkYy0+c29jX2JvdW5kaW5nX2JveCA9IGluaXRfcGFyYW1z
LT5zb2NfYm91bmRpbmdfYm94OworI2VuZGlmCiAjZW5kaWYKIAogCWRjX2N0eCA9IGt6YWxsb2Mo
c2l6ZW9mKCpkY19jdHgpLCBHRlBfS0VSTkVMKTsKQEAgLTY3NCw2ICs2OTEsMjEgQEAgc3RhdGlj
IGJvb2wgY29uc3RydWN0KHN0cnVjdCBkYyAqZGMsCiAJcmV0dXJuIGZhbHNlOwogfQogCisjaWYg
ZGVmaW5lZChDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzApCitzdGF0aWMgYm9vbCBkaXNhYmxlX2Fs
bF93cml0ZWJhY2tfcGlwZXNfZm9yX3N0cmVhbSgKKwkJY29uc3Qgc3RydWN0IGRjICpkYywKKwkJ
c3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3RyZWFtLAorCQlzdHJ1Y3QgZGNfc3RhdGUgKmNvbnRl
eHQpCit7CisJaW50IGk7CisKKwlmb3IgKGkgPSAwOyBpIDwgc3RyZWFtLT5udW1fd2JfaW5mbzsg
aSsrKQorCQlzdHJlYW0tPndyaXRlYmFja19pbmZvW2ldLndiX2VuYWJsZWQgPSBmYWxzZTsKKwor
CXJldHVybiB0cnVlOworfQorI2VuZGlmCisKIHN0YXRpYyB2b2lkIGRpc2FibGVfZGFuZ2xpbmdf
cGxhbmUoc3RydWN0IGRjICpkYywgc3RydWN0IGRjX3N0YXRlICpjb250ZXh0KQogewogCWludCBp
LCBqOwpAQCAtNjk4LDYgKzczMCw5IEBAIHN0YXRpYyB2b2lkIGRpc2FibGVfZGFuZ2xpbmdfcGxh
bmUoc3RydWN0IGRjICpkYywgc3RydWN0IGRjX3N0YXRlICpjb250ZXh0KQogCQl9CiAJCWlmIChz
aG91bGRfZGlzYWJsZSAmJiBvbGRfc3RyZWFtKSB7CiAJCQlkY19yZW1fYWxsX3BsYW5lc19mb3Jf
c3RyZWFtKGRjLCBvbGRfc3RyZWFtLCBkYW5nbGluZ19jb250ZXh0KTsKKyNpZiBkZWZpbmVkKENP
TkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKwkJCWRpc2FibGVfYWxsX3dyaXRlYmFja19waXBlc19m
b3Jfc3RyZWFtKGRjLCBvbGRfc3RyZWFtLCBkYW5nbGluZ19jb250ZXh0KTsKKyNlbmRpZgogCQkJ
ZGMtPmh3c3MuYXBwbHlfY3R4X2Zvcl9zdXJmYWNlKGRjLCBvbGRfc3RyZWFtLCAwLCBkYW5nbGlu
Z19jb250ZXh0KTsKIAkJfQogCX0KQEAgLTc2OSw2ICs4MDQsMjYgQEAgdm9pZCBkY19kZXN0cm95
KHN0cnVjdCBkYyAqKmRjKQogCSpkYyA9IE5VTEw7CiB9CiAKKyNpZmRlZiBDT05GSUdfRFJNX0FN
RF9EQ19EQ04yXzAKK2Jvb2wgZGNfaW5pdF9tZW1vcnlfaHViKHN0cnVjdCBkYyAqZGMsIHN0cnVj
dCBkY19hZGRyX3NwYWNlX2NvbmZpZyAqY29uZmlnKQoreworCS8vIE1lbW9yeSBodWIgaW5pdCBp
c24ndCBkb25lIGFzIHBhcnQgb2YgZGNfY3JlYXRlIGJlY2F1c2UgaW4gd2luZG93cywgZGFsL2Rj
IGlzCisJLy8gY29uc3RydWN0ZWQgYmVmb3JlIHRoZSB2bSBjb25maWcgaXMgc2V0dXAgaW4ga21k
IHNvIHRoZXJlJ3Mgbm8gd2F5CisJLy8gdGhleSBjYW4gZ2l2ZSBpdCB0byB1cyBhdCBib290L2Rj
X2NyZWF0ZQorCWJvb2wgdm1TdXBwb3J0ZWQ7CisKKwkvLyBDYWxsIEhXU1MgdG8gc2V0dXAgSFVC
QlVCIGZvciBhZGRyZXNzIGNvbmZpZworCWRjLT5od3NzLmluaXRfZGNodWIoZGMtPmh3c2VxLCBk
YywgY29uZmlnKTsKKworCS8vIFByZS1pbml0IHN5c3RlbSBhcGVydHVyZSBzdGFydC9lbmQgZm9y
IGFsbCBIVUJQIGluc3RhbmNlcyAoaWYgbm90IGdhdGluZz8pCisJLy8gb3IgY2FjaGUgc3lzdGVt
IGFwZXJ0dXJlIGlmIHVzaW5nIHBvd2VyIGdhdGluZworCW1lbWNweSgmZGMtPnZtX2NvbmZpZywg
Y29uZmlnLCBzaXplb2Yoc3RydWN0IGRjX2FkZHJfc3BhY2VfY29uZmlnKSk7CisKKwl2bVN1cHBv
cnRlZCA9IChkYy0+Y3R4LT5hc2ljX2lkLmNoaXBfZmFtaWx5ID09IEZBTUlMWV9OVikgPyB0cnVl
IDogZmFsc2U7CisJcmV0dXJuIHZtU3VwcG9ydGVkOworfQorCisjZW5kaWYKIHN0YXRpYyB2b2lk
IGVuYWJsZV90aW1pbmdfbXVsdGlzeW5jKAogCQlzdHJ1Y3QgZGMgKmRjLAogCQlzdHJ1Y3QgZGNf
c3RhdGUgKmN0eCkKQEAgLTE1OTgsNiArMTY1MywxOSBAQCBzdGF0aWMgdm9pZCBjb3B5X3N1cmZh
Y2VfdXBkYXRlX3RvX3BsYW5lKAogCQkJc2l6ZW9mKHN0cnVjdCBkY190cmFuc2Zlcl9mdW5jX2Rp
c3RyaWJ1dGVkX3BvaW50cykpOwogCX0KIAorI2lmIGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENf
RENOMl8wKQorCWlmIChzcmZfdXBkYXRlLT5mdW5jX3NoYXBlciAmJgorCQkJKHN1cmZhY2UtPmlu
X3NoYXBlcl9mdW5jICE9CisJCQlzcmZfdXBkYXRlLT5mdW5jX3NoYXBlcikpCisJCW1lbWNweShz
dXJmYWNlLT5pbl9zaGFwZXJfZnVuYywgc3JmX3VwZGF0ZS0+ZnVuY19zaGFwZXIsCisJCXNpemVv
Zigqc3VyZmFjZS0+aW5fc2hhcGVyX2Z1bmMpKTsKKworCWlmIChzcmZfdXBkYXRlLT5sdXQzZF9m
dW5jICYmCisJCQkoc3VyZmFjZS0+bHV0M2RfZnVuYyAhPQorCQkJc3JmX3VwZGF0ZS0+bHV0M2Rf
ZnVuYykpCisJCW1lbWNweShzdXJmYWNlLT5sdXQzZF9mdW5jLCBzcmZfdXBkYXRlLT5sdXQzZF9m
dW5jLAorCQlzaXplb2YoKnN1cmZhY2UtPmx1dDNkX2Z1bmMpKTsKKyNlbmRpZgogCWlmIChzcmZf
dXBkYXRlLT5pbnB1dF9jc2NfY29sb3JfbWF0cml4KQogCQlzdXJmYWNlLT5pbnB1dF9jc2NfY29s
b3JfbWF0cml4ID0KIAkJCSpzcmZfdXBkYXRlLT5pbnB1dF9jc2NfY29sb3JfbWF0cml4OwpAQCAt
MTY0NiwxMSArMTcxNCwyMCBAQCBzdGF0aWMgdm9pZCBjb21taXRfcGxhbmVzX2RvX3N0cmVhbV91
cGRhdGUoc3RydWN0IGRjICpkYywKIAkJCQlkY19zdHJlYW1fcHJvZ3JhbV9jc2NfbWF0cml4KGRj
LCBzdHJlYW0pOwogCiAJCQlpZiAoc3RyZWFtX3VwZGF0ZS0+ZGl0aGVyX29wdGlvbikgeworI2lm
IGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENfRENOMl8wKQorCQkJCXN0cnVjdCBwaXBlX2N0eCAq
b2RtX3BpcGUgPSBkY19yZXNfZ2V0X29kbV9ib3R0b21fcGlwZShwaXBlX2N0eCk7CisjZW5kaWYK
IAkJCQlyZXNvdXJjZV9idWlsZF9iaXRfZGVwdGhfcmVkdWN0aW9uX3BhcmFtcyhwaXBlX2N0eC0+
c3RyZWFtLAogCQkJCQkJCQkJJnBpcGVfY3R4LT5zdHJlYW0tPmJpdF9kZXB0aF9wYXJhbXMpOwog
CQkJCXBpcGVfY3R4LT5zdHJlYW1fcmVzLm9wcC0+ZnVuY3MtPm9wcF9wcm9ncmFtX2ZtdChwaXBl
X2N0eC0+c3RyZWFtX3Jlcy5vcHAsCiAJCQkJCQkmc3RyZWFtLT5iaXRfZGVwdGhfcGFyYW1zLAog
CQkJCQkJJnN0cmVhbS0+Y2xhbXBpbmcpOworI2lmIGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENf
RENOMl8wKQorCQkJCWlmIChvZG1fcGlwZSkKKwkJCQkJb2RtX3BpcGUtPnN0cmVhbV9yZXMub3Bw
LT5mdW5jcy0+b3BwX3Byb2dyYW1fZm10KG9kbV9waXBlLT5zdHJlYW1fcmVzLm9wcCwKKwkJCQkJ
CQkmc3RyZWFtLT5iaXRfZGVwdGhfcGFyYW1zLAorCQkJCQkJCSZzdHJlYW0tPmNsYW1waW5nKTsK
KyNlbmRpZgogCQkJfQogCiAJCQkvKiBGdWxsIGZlIHVwZGF0ZSovCkBAIC0xNzI2LDYgKzE4MDMs
MzAgQEAgc3RhdGljIHZvaWQgY29tbWl0X3BsYW5lc19mb3Jfc3RyZWFtKHN0cnVjdCBkYyAqZGMs
CiAJCXJldHVybjsKIAl9CiAKKyNpZiBkZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkK
KwlpZiAoIUlTX0RJQUdfREMoZGMtPmN0eC0+ZGNlX2Vudmlyb25tZW50KSkgeworCQlmb3IgKGkg
PSAwOyBpIDwgc3VyZmFjZV9jb3VudDsgaSsrKSB7CisJCQlzdHJ1Y3QgZGNfcGxhbmVfc3RhdGUg
KnBsYW5lX3N0YXRlID0gc3JmX3VwZGF0ZXNbaV0uc3VyZmFjZTsKKwkJCS8qc2V0IGxvZ2ljYWwg
ZmxhZyBmb3IgbG9jay91bmxvY2sgdXNlKi8KKwkJCWZvciAoaiA9IDA7IGogPCBkYy0+cmVzX3Bv
b2wtPnBpcGVfY291bnQ7IGorKykgeworCQkJCXN0cnVjdCBwaXBlX2N0eCAqcGlwZV9jdHggPSAm
Y29udGV4dC0+cmVzX2N0eC5waXBlX2N0eFtqXTsKKwkJCQlpZiAoIXBpcGVfY3R4LT5wbGFuZV9z
dGF0ZSkKKwkJCQkJY29udGludWU7CisJCQkJaWYgKHBpcGVfY3R4LT5wbGFuZV9zdGF0ZSAhPSBw
bGFuZV9zdGF0ZSkKKwkJCQkJY29udGludWU7CisJCQkJcGxhbmVfc3RhdGUtPnRyaXBsZWJ1ZmZl
cl9mbGlwcyA9IGZhbHNlOworCQkJCWlmICh1cGRhdGVfdHlwZSA9PSBVUERBVEVfVFlQRV9GQVNU
ICYmCisJCQkJCWRjLT5od3NzLnByb2dyYW1fdHJpcGxlYnVmZmVyICE9IE5VTEwgJiYKKwkJCQkJ
IXBsYW5lX3N0YXRlLT5mbGlwX2ltbWVkaWF0ZSAmJgorCQkJCQkhZGMtPmRlYnVnLmRpc2FibGVf
dHJpX2J1ZikgeworCQkJCQkJLyp0cmlwbGUgYnVmZmVyIGZvciBWVXBkYXRlICBvbmx5Ki8KKwkJ
CQkJCXBsYW5lX3N0YXRlLT50cmlwbGVidWZmZXJfZmxpcHMgPSB0cnVlOworCQkJCX0KKwkJCX0K
KwkJfQorCX0KKyNlbmRpZgorCiAJLy8gVXBkYXRlIFR5cGUgRlVMTCwgU3VyZmFjZSB1cGRhdGVz
CiAJZm9yIChqID0gMDsgaiA8IGRjLT5yZXNfcG9vbC0+cGlwZV9jb3VudDsgaisrKSB7CiAJCXN0
cnVjdCBwaXBlX2N0eCAqcGlwZV9jdHggPSAmY29udGV4dC0+cmVzX2N0eC5waXBlX2N0eFtqXTsK
QEAgLTE3NDQsNiArMTg0NSwxNiBAQCBzdGF0aWMgdm9pZCBjb21taXRfcGxhbmVzX2Zvcl9zdHJl
YW0oc3RydWN0IGRjICpkYywKIAkJCWlmICh1cGRhdGVfdHlwZSA9PSBVUERBVEVfVFlQRV9GQVNU
KQogCQkJCWNvbnRpbnVlOwogCisjaWYgZGVmaW5lZChDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzAp
CisJCQlBU1NFUlQoIXBpcGVfY3R4LT5wbGFuZV9zdGF0ZS0+dHJpcGxlYnVmZmVyX2ZsaXBzKTsK
KworCQkJaWYgKGRjLT5od3NzLnByb2dyYW1fdHJpcGxlYnVmZmVyICE9IE5VTEwgJiYKKwkJCQkh
ZGMtPmRlYnVnLmRpc2FibGVfdHJpX2J1ZikgeworCQkJCS8qdHVybiBvZmYgdHJpcGxlIGJ1ZmZl
ciBmb3IgZnVsbCB1cGRhdGUqLworCQkJCWRjLT5od3NzLnByb2dyYW1fdHJpcGxlYnVmZmVyKAor
CQkJCQlkYywgcGlwZV9jdHgsIHBpcGVfY3R4LT5wbGFuZV9zdGF0ZS0+dHJpcGxlYnVmZmVyX2Zs
aXBzKTsKKwkJCX0KKyNlbmRpZgogCQkJc3RyZWFtX3N0YXR1cyA9CiAJCQkJc3RyZWFtX2dldF9z
dGF0dXMoY29udGV4dCwgcGlwZV9jdHgtPnN0cmVhbSk7CiAKQEAgLTE3NjAsNiArMTg3MSwyNiBA
QCBzdGF0aWMgdm9pZCBjb21taXRfcGxhbmVzX2Zvcl9zdHJlYW0oc3RydWN0IGRjICpkYywKIAkJ
ICovCiAJCWRjLT5od3NzLnBpcGVfY29udHJvbF9sb2NrKGRjLCB0b3BfcGlwZV90b19wcm9ncmFt
LCB0cnVlKTsKIAorI2lmIGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENfRENOMl8wKQorCQlpZiAo
ZGMtPmh3c3Muc2V0X2ZsaXBfY29udHJvbF9nc2wpCisJCQlmb3IgKGkgPSAwOyBpIDwgc3VyZmFj
ZV9jb3VudDsgaSsrKSB7CisJCQkJc3RydWN0IGRjX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSA9
IHNyZl91cGRhdGVzW2ldLnN1cmZhY2U7CisKKwkJCQlmb3IgKGogPSAwOyBqIDwgZGMtPnJlc19w
b29sLT5waXBlX2NvdW50OyBqKyspIHsKKwkJCQkJc3RydWN0IHBpcGVfY3R4ICpwaXBlX2N0eCA9
ICZjb250ZXh0LT5yZXNfY3R4LnBpcGVfY3R4W2pdOworCisJCQkJCWlmIChwaXBlX2N0eC0+c3Ry
ZWFtICE9IHN0cmVhbSkKKwkJCQkJCWNvbnRpbnVlOworCisJCQkJCWlmIChwaXBlX2N0eC0+cGxh
bmVfc3RhdGUgIT0gcGxhbmVfc3RhdGUpCisJCQkJCQljb250aW51ZTsKKworCQkJCQkvLyBHU0wg
aGFzIHRvIGJlIHVzZWQgZm9yIGZsaXAgaW1tZWRpYXRlCisJCQkJCWRjLT5od3NzLnNldF9mbGlw
X2NvbnRyb2xfZ3NsKHBpcGVfY3R4LAorCQkJCQkJCXBsYW5lX3N0YXRlLT5mbGlwX2ltbWVkaWF0
ZSk7CisJCQkJfQorCQkJfQorI2VuZGlmCiAJCS8qIFBlcmZvcm0gcmVxdWVzdGVkIFVwZGF0ZXMg
Ki8KIAkJZm9yIChpID0gMDsgaSA8IHN1cmZhY2VfY291bnQ7IGkrKykgewogCQkJc3RydWN0IGRj
X3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSA9IHNyZl91cGRhdGVzW2ldLnN1cmZhY2U7CkBAIC0x
NzcyLDcgKzE5MDMsMTUgQEAgc3RhdGljIHZvaWQgY29tbWl0X3BsYW5lc19mb3Jfc3RyZWFtKHN0
cnVjdCBkYyAqZGMsCiAKIAkJCQlpZiAocGlwZV9jdHgtPnBsYW5lX3N0YXRlICE9IHBsYW5lX3N0
YXRlKQogCQkJCQljb250aW51ZTsKLQorI2lmIGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENfRENO
Ml8wKQorCQkJCS8qcHJvZ3JhbSB0cmlwbGUgYnVmZmVyIGFmdGVyIGxvY2sgYmFzZWQgb24gZmxp
cCB0eXBlKi8KKwkJCQlpZiAoZGMtPmh3c3MucHJvZ3JhbV90cmlwbGVidWZmZXIgIT0gTlVMTCAm
JgorCQkJCQkhZGMtPmRlYnVnLmRpc2FibGVfdHJpX2J1ZikgeworCQkJCQkvKm9ubHkgZW5hYmxl
IHRyaXBsZWJ1ZmZlciBmb3IgIGZhc3RfdXBkYXRlKi8KKwkJCQkJZGMtPmh3c3MucHJvZ3JhbV90
cmlwbGVidWZmZXIoCisJCQkJCQlkYywgcGlwZV9jdHgsIHBsYW5lX3N0YXRlLT50cmlwbGVidWZm
ZXJfZmxpcHMpOworCQkJCX0KKyNlbmRpZgogCQkJCWlmIChzcmZfdXBkYXRlc1tpXS5mbGlwX2Fk
ZHIpCiAJCQkJCWRjLT5od3NzLnVwZGF0ZV9wbGFuZV9hZGRyKGRjLCBwaXBlX2N0eCk7CiAJCQl9
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kY19saW5r
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kY19saW5rLmMKaW5kZXgg
MjAyZTA5MmY4ZWNmLi5hZjIyZmYwNTBlNmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9kYy9jb3JlL2RjX2xpbmsuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rp
c3BsYXkvZGMvY29yZS9kY19saW5rLmMKQEAgLTQzLDYgKzQzLDEwIEBACiAjaW5jbHVkZSAiZHBj
ZF9kZWZzLmgiCiAjaW5jbHVkZSAiZG1jdS5oIgogI2luY2x1ZGUgImh3L2Nsa19tZ3IuaCIKKyNp
ZiBkZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKyNpbmNsdWRlICJyZXNvdXJjZS5o
IgorI2VuZGlmCisjaW5jbHVkZSAiaHcvY2xrX21nci5oIgogCiAjZGVmaW5lIERDX0xPR0dFUl9J
TklUKGxvZ2dlcikKIApAQCAtMTUwNCw2ICsxNTA4LDcgQEAgc3RhdGljIGVudW0gZGNfc3RhdHVz
IGVuYWJsZV9saW5rX2RwKAogCWlmIChsaW5rX3NldHRpbmdzLmxpbmtfcmF0ZSA9PSBMSU5LX1JB
VEVfTE9XKQogCQkJc2tpcF92aWRlb19wYXR0ZXJuID0gZmFsc2U7CiAKKwogCWlmIChwZXJmb3Jt
X2xpbmtfdHJhaW5pbmdfd2l0aF9yZXRyaWVzKAogCQkJbGluaywKIAkJCSZsaW5rX3NldHRpbmdz
LApAQCAtMjczOSw3ICsyNzQ0LDYgQEAgdm9pZCBjb3JlX2xpbmtfZW5hYmxlX3N0cmVhbSgKIAkJ
aWYgKGRjX2lzX2RwX3NpZ25hbChwaXBlX2N0eC0+c3RyZWFtLT5zaWduYWwpKQogCQkJZW5hYmxl
X3N0cmVhbV9mZWF0dXJlcyhwaXBlX2N0eCk7CiAJfQotCiB9CiAKIHZvaWQgY29yZV9saW5rX2Rp
c2FibGVfc3RyZWFtKHN0cnVjdCBwaXBlX2N0eCAqcGlwZV9jdHgsIGludCBvcHRpb24pCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kY19saW5rX2RwLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kY19saW5rX2RwLmMKaW5kZXgg
YTExODcyNzRkYmVkLi40ZDBjMmJiMzJkYzUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvZGlzcGxheS9kYy9jb3JlL2RjX2xpbmtfZHAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2Rpc3BsYXkvZGMvY29yZS9kY19saW5rX2RwLmMKQEAgLTQsNiArNCw5IEBACiAjaW5jbHVkZSAi
ZGNfbGlua19kcC5oIgogI2luY2x1ZGUgImRtX2hlbHBlcnMuaCIKICNpbmNsdWRlICJvcHAuaCIK
KyNpZiBkZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKyNpbmNsdWRlICJyZXNvdXJj
ZS5oIgorI2VuZGlmCiAKICNpbmNsdWRlICJpbmMvY29yZV90eXBlcy5oIgogI2luY2x1ZGUgImxp
bmtfaHdzcy5oIgpAQCAtMjU0Nyw2ICsyNTUwLDcgQEAgc3RhdGljIGJvb2wgcmV0cmlldmVfbGlu
a19jYXAoc3RydWN0IGRjX2xpbmsgKmxpbmspCiAJCWRwX2h3X2Z3X3JldmlzaW9uLmllZWVfZndf
cmV2LAogCQlzaXplb2YoZHBfaHdfZndfcmV2aXNpb24uaWVlZV9md19yZXYpKTsKIAorCiAJLyog
Q29ubmVjdGl2aXR5IGxvZzogZGV0ZWN0aW9uICovCiAJQ09OTl9EQVRBX0RFVEVDVChsaW5rLCBk
cGNkX2RhdGEsIHNpemVvZihkcGNkX2RhdGEpLCAiUnggQ2FwczogIik7CiAKQEAgLTI2NzQsNiAr
MjY3OCwxNCBAQCBzdGF0aWMgdm9pZCBzZXRfY3J0Y190ZXN0X3BhdHRlcm4oc3RydWN0IGRjX2xp
bmsgKmxpbmssCiAJCXN0cmVhbS0+dGltaW5nLmRpc3BsYXlfY29sb3JfZGVwdGg7CiAJc3RydWN0
IGJpdF9kZXB0aF9yZWR1Y3Rpb25fcGFyYW1zIHBhcmFtczsKIAlzdHJ1Y3Qgb3V0cHV0X3BpeGVs
X3Byb2Nlc3NvciAqb3BwID0gcGlwZV9jdHgtPnN0cmVhbV9yZXMub3BwOworI2lmIGRlZmluZWQo
Q09ORklHX0RSTV9BTURfRENfRENOMl8wKQorCWludCB3aWR0aCA9IHBpcGVfY3R4LT5zdHJlYW0t
PnRpbWluZy5oX2FkZHJlc3NhYmxlICsKKwkJcGlwZV9jdHgtPnN0cmVhbS0+dGltaW5nLmhfYm9y
ZGVyX2xlZnQgKworCQlwaXBlX2N0eC0+c3RyZWFtLT50aW1pbmcuaF9ib3JkZXJfcmlnaHQ7CisJ
aW50IGhlaWdodCA9IHBpcGVfY3R4LT5zdHJlYW0tPnRpbWluZy52X2FkZHJlc3NhYmxlICsKKwkJ
cGlwZV9jdHgtPnN0cmVhbS0+dGltaW5nLnZfYm9yZGVyX2JvdHRvbSArCisJCXBpcGVfY3R4LT5z
dHJlYW0tPnRpbWluZy52X2JvcmRlcl90b3A7CisjZW5kaWYKIAogCW1lbXNldCgmcGFyYW1zLCAw
LCBzaXplb2YocGFyYW1zKSk7CiAKQEAgLTI3MTcsNiArMjcyOSwzMCBAQCBzdGF0aWMgdm9pZCBz
ZXRfY3J0Y190ZXN0X3BhdHRlcm4oc3RydWN0IGRjX2xpbmsgKmxpbmssCiAJCWlmIChwaXBlX2N0
eC0+c3RyZWFtX3Jlcy50Zy0+ZnVuY3MtPnNldF90ZXN0X3BhdHRlcm4pCiAJCQlwaXBlX2N0eC0+
c3RyZWFtX3Jlcy50Zy0+ZnVuY3MtPnNldF90ZXN0X3BhdHRlcm4ocGlwZV9jdHgtPnN0cmVhbV9y
ZXMudGcsCiAJCQkJY29udHJvbGxlcl90ZXN0X3BhdHRlcm4sIGNvbG9yX2RlcHRoKTsKKyNpZiBk
ZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKwkJZWxzZSBpZiAob3BwLT5mdW5jcy0+
b3BwX3NldF9kaXNwX3BhdHRlcm5fZ2VuZXJhdG9yKSB7CisJCQlzdHJ1Y3QgcGlwZV9jdHggKmJv
dF9vZG1fcGlwZSA9IGRjX3Jlc19nZXRfb2RtX2JvdHRvbV9waXBlKHBpcGVfY3R4KTsKKworCQkJ
aWYgKGJvdF9vZG1fcGlwZSkgeworCQkJCXN0cnVjdCBvdXRwdXRfcGl4ZWxfcHJvY2Vzc29yICpi
b3Rfb3BwID0gYm90X29kbV9waXBlLT5zdHJlYW1fcmVzLm9wcDsKKworCQkJCWJvdF9vcHAtPmZ1
bmNzLT5vcHBfcHJvZ3JhbV9iaXRfZGVwdGhfcmVkdWN0aW9uKGJvdF9vcHAsICZwYXJhbXMpOwor
CQkJCXdpZHRoIC89IDI7CisJCQkJYm90X29wcC0+ZnVuY3MtPm9wcF9zZXRfZGlzcF9wYXR0ZXJu
X2dlbmVyYXRvcihib3Rfb3BwLAorCQkJCQljb250cm9sbGVyX3Rlc3RfcGF0dGVybiwKKwkJCQkJ
Y29sb3JfZGVwdGgsCisJCQkJCU5VTEwsCisJCQkJCXdpZHRoLAorCQkJCQloZWlnaHQpOworCQkJ
fQorCQkJb3BwLT5mdW5jcy0+b3BwX3NldF9kaXNwX3BhdHRlcm5fZ2VuZXJhdG9yKG9wcCwKKwkJ
CQljb250cm9sbGVyX3Rlc3RfcGF0dGVybiwKKwkJCQljb2xvcl9kZXB0aCwKKwkJCQlOVUxMLAor
CQkJCXdpZHRoLAorCQkJCWhlaWdodCk7CisJCX0KKyNlbmRpZgogCX0KIAlicmVhazsKIAljYXNl
IERQX1RFU1RfUEFUVEVSTl9WSURFT19NT0RFOgpAQCAtMjcyOSw2ICsyNzY1LDMwIEBAIHN0YXRp
YyB2b2lkIHNldF9jcnRjX3Rlc3RfcGF0dGVybihzdHJ1Y3QgZGNfbGluayAqbGluaywKIAkJCXBp
cGVfY3R4LT5zdHJlYW1fcmVzLnRnLT5mdW5jcy0+c2V0X3Rlc3RfcGF0dGVybihwaXBlX2N0eC0+
c3RyZWFtX3Jlcy50ZywKIAkJCQlDT05UUk9MTEVSX0RQX1RFU1RfUEFUVEVSTl9WSURFT01PREUs
CiAJCQkJY29sb3JfZGVwdGgpOworI2lmIGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENfRENOMl8w
KQorCQllbHNlIGlmIChvcHAtPmZ1bmNzLT5vcHBfc2V0X2Rpc3BfcGF0dGVybl9nZW5lcmF0b3Ip
IHsKKwkJCXN0cnVjdCBwaXBlX2N0eCAqYm90X29kbV9waXBlID0gZGNfcmVzX2dldF9vZG1fYm90
dG9tX3BpcGUocGlwZV9jdHgpOworCisJCQlpZiAoYm90X29kbV9waXBlKSB7CisJCQkJc3RydWN0
IG91dHB1dF9waXhlbF9wcm9jZXNzb3IgKmJvdF9vcHAgPSBib3Rfb2RtX3BpcGUtPnN0cmVhbV9y
ZXMub3BwOworCisJCQkJYm90X29wcC0+ZnVuY3MtPm9wcF9wcm9ncmFtX2JpdF9kZXB0aF9yZWR1
Y3Rpb24oYm90X29wcCwgJnBhcmFtcyk7CisJCQkJd2lkdGggLz0gMjsKKwkJCQlib3Rfb3BwLT5m
dW5jcy0+b3BwX3NldF9kaXNwX3BhdHRlcm5fZ2VuZXJhdG9yKGJvdF9vcHAsCisJCQkJCUNPTlRS
T0xMRVJfRFBfVEVTVF9QQVRURVJOX1ZJREVPTU9ERSwKKwkJCQkJY29sb3JfZGVwdGgsCisJCQkJ
CU5VTEwsCisJCQkJCXdpZHRoLAorCQkJCQloZWlnaHQpOworCQkJfQorCQkJb3BwLT5mdW5jcy0+
b3BwX3NldF9kaXNwX3BhdHRlcm5fZ2VuZXJhdG9yKG9wcCwKKwkJCQlDT05UUk9MTEVSX0RQX1RF
U1RfUEFUVEVSTl9WSURFT01PREUsCisJCQkJY29sb3JfZGVwdGgsCisJCQkJTlVMTCwKKwkJCQl3
aWR0aCwKKwkJCQloZWlnaHQpOworCQl9CisjZW5kaWYKIAl9CiAJYnJlYWs7CiAKQEAgLTI5MDMs
MyArMjk2Myw1IEBAIHZvaWQgZHBfZW5hYmxlX21zdF9vbl9zaW5rKHN0cnVjdCBkY19saW5rICps
aW5rLCBib29sIGVuYWJsZSkKIAogCWNvcmVfbGlua193cml0ZV9kcGNkKGxpbmssIERQX01TVE1f
Q1RSTCwgJm1zdG1DbnRsLCAxKTsKIH0KKworCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvZGMvY29yZS9kY19zdHJlYW0uYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlz
cGxheS9kYy9jb3JlL2RjX3N0cmVhbS5jCmluZGV4IGEwMDJlNjkwODE0Zi4uZGU1MGQ3NzhlNGIw
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kY19zdHJl
YW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvY29yZS9kY19zdHJlYW0u
YwpAQCAtMTA1LDYgKzEwNSw3IEBAIHN0YXRpYyB2b2lkIGNvbnN0cnVjdChzdHJ1Y3QgZGNfc3Ry
ZWFtX3N0YXRlICpzdHJlYW0sCiAJLyogRURJRCBDQVAgdHJhbnNsYXRpb24gZm9yIEhETUkgMi4w
ICovCiAJc3RyZWFtLT50aW1pbmcuZmxhZ3MuTFRFXzM0ME1DU0NfU0NSQU1CTEUgPSBkY19zaW5r
X2RhdGEtPmVkaWRfY2Fwcy5sdGVfMzQwbWNzY19zY3JhbWJsZTsKIAorCiAJdXBkYXRlX3N0cmVh
bV9zaWduYWwoc3RyZWFtLCBkY19zaW5rX2RhdGEpOwogCiAJc3RyZWFtLT5vdXRfdHJhbnNmZXJf
ZnVuYyA9IGRjX2NyZWF0ZV90cmFuc2Zlcl9mdW5jKCk7CkBAIC0zNTUsNiArMzU2LDExOSBAQCBi
b29sIGRjX3N0cmVhbV9zZXRfY3Vyc29yX3Bvc2l0aW9uKAogCXJldHVybiB0cnVlOwogfQogCisj
aWYgZGVmaW5lZChDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzApCitib29sIGRjX3N0cmVhbV9hZGRf
d3JpdGViYWNrKHN0cnVjdCBkYyAqZGMsCisJCXN0cnVjdCBkY19zdHJlYW1fc3RhdGUgKnN0cmVh
bSwKKwkJc3RydWN0IGRjX3dyaXRlYmFja19pbmZvICp3Yl9pbmZvKQoreworCWJvb2wgaXNEcmMg
PSBmYWxzZTsKKwlpbnQgaSA9IDA7CisKKwlpZiAoc3RyZWFtID09IE5VTEwpIHsKKwkJZG1fZXJy
b3IoIkRDOiBkY19zdHJlYW0gaXMgTlVMTCFcbiIpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJ
aWYgKHdiX2luZm8gPT0gTlVMTCkgeworCQlkbV9lcnJvcigiREM6IGRjX3dyaXRlYmFja19pbmZv
IGlzIE5VTEwhXG4iKTsKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCWlmICh3Yl9pbmZvLT5kd2Jf
cGlwZV9pbnN0ID49IE1BWF9EV0JfUElQRVMpIHsKKwkJZG1fZXJyb3IoIkRDOiB3cml0ZWJhY2sg
cGlwZSBpcyBpbnZhbGlkIVxuIik7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwl3Yl9pbmZvLT5k
d2JfcGFyYW1zLm91dF90cmFuc2Zlcl9mdW5jID0gc3RyZWFtLT5vdXRfdHJhbnNmZXJfZnVuYzsK
KworCisKKwkvKiByZWNhbGN1bGF0ZSBhbmQgYXBwbHkgRE1MIHBhcmFtZXRlcnMgKi8KKworCWZv
ciAoaSA9IDA7IGkgPCBzdHJlYW0tPm51bV93Yl9pbmZvOyBpKyspIHsKKwkJLypkeW5hbWljIHVw
ZGF0ZSovCisJCWlmIChzdHJlYW0tPndyaXRlYmFja19pbmZvW2ldLndiX2VuYWJsZWQgJiYKKwkJ
CXN0cmVhbS0+d3JpdGViYWNrX2luZm9baV0uZHdiX3BpcGVfaW5zdCA9PSB3Yl9pbmZvLT5kd2Jf
cGlwZV9pbnN0KSB7CisJCQlzdHJlYW0tPndyaXRlYmFja19pbmZvW2ldID0gKndiX2luZm87CisJ
CQlpc0RyYyA9IHRydWU7CisJCX0KKwl9CisKKwlpZiAoIWlzRHJjKSB7CisJCXN0cmVhbS0+d3Jp
dGViYWNrX2luZm9bc3RyZWFtLT5udW1fd2JfaW5mbysrXSA9ICp3Yl9pbmZvOworCX0KKworCWlm
ICghZGMtPmh3c3MudXBkYXRlX2JhbmR3aWR0aChkYywgZGMtPmN1cnJlbnRfc3RhdGUpKSB7CisJ
CWRtX2Vycm9yKCJEQzogdXBkYXRlX2JhbmR3aWR0aCBmYWlsZWQhXG4iKTsKKwkJcmV0dXJuIGZh
bHNlOworCX0KKworCS8qIGVuYWJsZSB3cml0ZWJhY2sgKi8KKwlpZiAoZGMtPmh3c3MuZW5hYmxl
X3dyaXRlYmFjaykgeworCQlzdHJ1Y3QgZGNfc3RyZWFtX3N0YXR1cyAqc3RyZWFtX3N0YXR1cyA9
IGRjX3N0cmVhbV9nZXRfc3RhdHVzKHN0cmVhbSk7CisJCXN0cnVjdCBkd2JjICpkd2IgPSBkYy0+
cmVzX3Bvb2wtPmR3YmNbd2JfaW5mby0+ZHdiX3BpcGVfaW5zdF07CisKKwkJaWYgKGR3Yi0+ZnVu
Y3MtPmlzX2VuYWJsZWQoZHdiKSkgeworCQkJLyogd3JpdGViYWNrIHBpcGUgYWxyZWFkeSBlbmFi
bGVkLCBvbmx5IG5lZWQgdG8gdXBkYXRlICovCisJCQlkYy0+aHdzcy51cGRhdGVfd3JpdGViYWNr
KGRjLCBzdHJlYW1fc3RhdHVzLCB3Yl9pbmZvKTsKKwkJfSBlbHNlIHsKKwkJCS8qIEVuYWJsZSB3
cml0ZWJhY2sgcGlwZSBmcm9tIHNjcmF0Y2gqLworCQkJZGMtPmh3c3MuZW5hYmxlX3dyaXRlYmFj
ayhkYywgc3RyZWFtX3N0YXR1cywgd2JfaW5mbyk7CisJCX0KKwl9CisKKwlyZXR1cm4gdHJ1ZTsK
K30KKworYm9vbCBkY19zdHJlYW1fcmVtb3ZlX3dyaXRlYmFjayhzdHJ1Y3QgZGMgKmRjLAorCQlz
dHJ1Y3QgZGNfc3RyZWFtX3N0YXRlICpzdHJlYW0sCisJCXVpbnQzMl90IGR3Yl9waXBlX2luc3Qp
Cit7CisJaW50IGkgPSAwLCBqID0gMDsKKwlpZiAoc3RyZWFtID09IE5VTEwpIHsKKwkJZG1fZXJy
b3IoIkRDOiBkY19zdHJlYW0gaXMgTlVMTCFcbiIpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJ
aWYgKGR3Yl9waXBlX2luc3QgPj0gTUFYX0RXQl9QSVBFUykgeworCQlkbV9lcnJvcigiREM6IHdy
aXRlYmFjayBwaXBlIGlzIGludmFsaWQhXG4iKTsKKwkJcmV0dXJuIGZhbHNlOworCX0KKworLy8J
c3RyZWFtLT53cml0ZWJhY2tfaW5mb1tkd2JfcGlwZV9pbnN0XS53Yl9lbmFibGVkID0gZmFsc2U7
CisJZm9yIChpID0gMDsgaSA8IHN0cmVhbS0+bnVtX3diX2luZm87IGkrKykgeworCQkvKmR5bmFt
aWMgdXBkYXRlKi8KKwkJaWYgKHN0cmVhbS0+d3JpdGViYWNrX2luZm9baV0ud2JfZW5hYmxlZCAm
JgorCQkJc3RyZWFtLT53cml0ZWJhY2tfaW5mb1tpXS5kd2JfcGlwZV9pbnN0ID09IGR3Yl9waXBl
X2luc3QpIHsKKwkJCXN0cmVhbS0+d3JpdGViYWNrX2luZm9baV0ud2JfZW5hYmxlZCA9IGZhbHNl
OworCQl9CisJfQorCisJLyogcmVtb3ZlIHdyaXRlYmFjayBpbmZvIGZvciBkaXNhYmxlZCB3cml0
ZWJhY2sgcGlwZXMgZnJvbSBzdHJlYW0gKi8KKwlmb3IgKGkgPSAwLCBqID0gMDsgaSA8IHN0cmVh
bS0+bnVtX3diX2luZm87IGkrKykgeworCQlpZiAoc3RyZWFtLT53cml0ZWJhY2tfaW5mb1tpXS53
Yl9lbmFibGVkKSB7CisJCQlpZiAoaSAhPSBqKQorCQkJCS8qIHRyaW0gdGhlIGFycmF5ICovCisJ
CQkJc3RyZWFtLT53cml0ZWJhY2tfaW5mb1tqXSA9IHN0cmVhbS0+d3JpdGViYWNrX2luZm9baV07
CisJCQlqKys7CisJCX0KKwl9CisJc3RyZWFtLT5udW1fd2JfaW5mbyA9IGo7CisKKwkvKiByZWNh
bGN1bGF0ZSBhbmQgYXBwbHkgRE1MIHBhcmFtZXRlcnMgKi8KKwlpZiAoIWRjLT5od3NzLnVwZGF0
ZV9iYW5kd2lkdGgoZGMsIGRjLT5jdXJyZW50X3N0YXRlKSkgeworCQlkbV9lcnJvcigiREM6IHVw
ZGF0ZV9iYW5kd2lkdGggZmFpbGVkIVxuIik7CisJCXJldHVybiBmYWxzZTsKKwl9CisKKwkvKiBk
aXNhYmxlIHdyaXRlYmFjayAqLworCWlmIChkYy0+aHdzcy5kaXNhYmxlX3dyaXRlYmFjaykKKwkJ
ZGMtPmh3c3MuZGlzYWJsZV93cml0ZWJhY2soZGMsIGR3Yl9waXBlX2luc3QpOworCisJcmV0dXJu
IHRydWU7Cit9CisjZW5kaWYKKwogdWludDMyX3QgZGNfc3RyZWFtX2dldF92YmxhbmtfY291bnRl
cihjb25zdCBzdHJ1Y3QgZGNfc3RyZWFtX3N0YXRlICpzdHJlYW0pCiB7CiAJdWludDhfdCBpOwpA
QCAtNDM5LDYgKzU1Myw3NyBAQCBib29sIGRjX3N0cmVhbV9nZXRfc2Nhbm91dHBvcyhjb25zdCBz
dHJ1Y3QgZGNfc3RyZWFtX3N0YXRlICpzdHJlYW0sCiAKIAlyZXR1cm4gcmV0OwogfQorI2lmIGRl
ZmluZWQoQ09ORklHX0RSTV9BTURfRENfRENOMl8wKQorYm9vbCBkY19zdHJlYW1fZG1kYXRhX3N0
YXR1c19kb25lKHN0cnVjdCBkYyAqZGMsIHN0cnVjdCBkY19zdHJlYW1fc3RhdGUgKnN0cmVhbSkK
K3sKKwlib29sIHN0YXR1cyA9IHRydWU7CisJc3RydWN0IHBpcGVfY3R4ICpwaXBlID0gTlVMTDsK
KwlpbnQgaTsKKworCWlmICghZGMtPmh3c3MuZG1kYXRhX3N0YXR1c19kb25lKQorCQlyZXR1cm4g
ZmFsc2U7CisKKwlmb3IgKGkgPSAwOyBpIDwgTUFYX1BJUEVTOyBpKyspIHsKKwkJcGlwZSA9ICZk
Yy0+Y3VycmVudF9zdGF0ZS0+cmVzX2N0eC5waXBlX2N0eFtpXTsKKwkJaWYgKHBpcGUtPnN0cmVh
bSA9PSBzdHJlYW0pCisJCQlicmVhazsKKwl9CisJLyogU3RyZWFtIG5vdCBmb3VuZCwgYnkgZGVm
YXVsdCB3ZSdsbCBhc3N1bWUgSFVCUCBmZXRjaGVkIGRtIGRhdGEgKi8KKwlpZiAoaSA9PSBNQVhf
UElQRVMpCisJCXJldHVybiB0cnVlOworCisJc3RhdHVzID0gZGMtPmh3c3MuZG1kYXRhX3N0YXR1
c19kb25lKHBpcGUpOworCXJldHVybiBzdGF0dXM7Cit9CisKK2Jvb2wgZGNfc3RyZWFtX3NldF9k
eW5hbWljX21ldGFkYXRhKHN0cnVjdCBkYyAqZGMsCisJCXN0cnVjdCBkY19zdHJlYW1fc3RhdGUg
KnN0cmVhbSwKKwkJc3RydWN0IGRjX2RtZGF0YV9hdHRyaWJ1dGVzICphdHRyKQoreworCXN0cnVj
dCBwaXBlX2N0eCAqcGlwZV9jdHggPSBOVUxMOworCXN0cnVjdCBodWJwICpodWJwOworCWludCBp
OworCisJZm9yIChpID0gMDsgaSA8IE1BWF9QSVBFUzsgaSsrKSB7CisJCXBpcGVfY3R4ID0gJmRj
LT5jdXJyZW50X3N0YXRlLT5yZXNfY3R4LnBpcGVfY3R4W2ldOworCQlpZiAocGlwZV9jdHgtPnN0
cmVhbSA9PSBzdHJlYW0pCisJCQlicmVhazsKKwl9CisKKwlpZiAoaSA9PSBNQVhfUElQRVMpCisJ
CXJldHVybiBmYWxzZTsKKworCWh1YnAgPSBwaXBlX2N0eC0+cGxhbmVfcmVzLmh1YnA7CisJaWYg
KGh1YnAgPT0gTlVMTCkKKwkJcmV0dXJuIGZhbHNlOworCisJcGlwZV9jdHgtPnN0cmVhbS0+ZG1k
YXRhX2FkZHJlc3MgPSBhdHRyLT5hZGRyZXNzOworCisJaWYgKHBpcGVfY3R4LT5zdHJlYW1fcmVz
LnN0cmVhbV9lbmMtPmZ1bmNzLT5zZXRfZHluYW1pY19tZXRhZGF0YSAhPSBOVUxMKSB7CisJCWlm
IChwaXBlX2N0eC0+c3RyZWFtLT5kbWRhdGFfYWRkcmVzcy5xdWFkX3BhcnQgIT0gMCkgeworCQkJ
LyogaWYgdXNpbmcgZHluYW1pYyBtZXRhLCBkb24ndCBzZXQgdXAgZ2VuZXJpYyBpbmZvcGFja2V0
cyAqLworCQkJcGlwZV9jdHgtPnN0cmVhbV9yZXMuZW5jb2Rlcl9pbmZvX2ZyYW1lLmhkcnNtZC52
YWxpZCA9IGZhbHNlOworCQkJcGlwZV9jdHgtPnN0cmVhbV9yZXMuc3RyZWFtX2VuYy0+ZnVuY3Mt
PnNldF9keW5hbWljX21ldGFkYXRhKAorCQkJCQlwaXBlX2N0eC0+c3RyZWFtX3Jlcy5zdHJlYW1f
ZW5jLAorCQkJCQl0cnVlLCBwaXBlX2N0eC0+cGxhbmVfcmVzLmh1YnAtPmluc3QsCisJCQkJCWRj
X2lzX2RwX3NpZ25hbChwaXBlX2N0eC0+c3RyZWFtLT5zaWduYWwpID8KKwkJCQkJCQlkbWRhdGFf
ZHAgOiBkbWRhdGFfaGRtaSk7CisJCX0gZWxzZQorCQkJcGlwZV9jdHgtPnN0cmVhbV9yZXMuc3Ry
ZWFtX2VuYy0+ZnVuY3MtPnNldF9keW5hbWljX21ldGFkYXRhKAorCQkJCQlwaXBlX2N0eC0+c3Ry
ZWFtX3Jlcy5zdHJlYW1fZW5jLAorCQkJCQlmYWxzZSwgcGlwZV9jdHgtPnBsYW5lX3Jlcy5odWJw
LT5pbnN0LAorCQkJCQlkY19pc19kcF9zaWduYWwocGlwZV9jdHgtPnN0cmVhbS0+c2lnbmFsKSA/
CisJCQkJCQkJZG1kYXRhX2RwIDogZG1kYXRhX2hkbWkpOworCX0KKworCWlmIChodWJwLT5mdW5j
cy0+ZG1kYXRhX3NldF9hdHRyaWJ1dGVzICE9IE5VTEwgJiYKKwkJCXBpcGVfY3R4LT5zdHJlYW0t
PmRtZGF0YV9hZGRyZXNzLnF1YWRfcGFydCAhPSAwKSB7CisJCWh1YnAtPmZ1bmNzLT5kbWRhdGFf
c2V0X2F0dHJpYnV0ZXMoaHVicCwgYXR0cik7CisJfQorCisJcmV0dXJuIHRydWU7Cit9CisjZW5k
aWYKIAogdm9pZCBkY19zdHJlYW1fbG9nKGNvbnN0IHN0cnVjdCBkYyAqZGMsIGNvbnN0IHN0cnVj
dCBkY19zdHJlYW1fc3RhdGUgKnN0cmVhbSkKIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvZGlzcGxheS9kYy9jb3JlL2RjX3N1cmZhY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
ZGlzcGxheS9kYy9jb3JlL2RjX3N1cmZhY2UuYwppbmRleCBhNWU4NmY5YjE0OGYuLjYwZjIwZDk2
ZjllMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2NvcmUvZGNf
c3VyZmFjZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9jb3JlL2RjX3N1
cmZhY2UuYwpAQCAtNDgsNiArNDgsMjAgQEAgc3RhdGljIHZvaWQgY29uc3RydWN0KHN0cnVjdCBk
Y19jb250ZXh0ICpjdHgsIHN0cnVjdCBkY19wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUKIAkJcGxh
bmVfc3RhdGUtPmluX3RyYW5zZmVyX2Z1bmMtPnR5cGUgPSBURl9UWVBFX0JZUEFTUzsKIAkJcGxh
bmVfc3RhdGUtPmluX3RyYW5zZmVyX2Z1bmMtPmN0eCA9IGN0eDsKIAl9CisjaWYgZGVmaW5lZChD
T05GSUdfRFJNX0FNRF9EQ19EQ04yXzApCisJcGxhbmVfc3RhdGUtPmluX3NoYXBlcl9mdW5jID0g
ZGNfY3JlYXRlX3RyYW5zZmVyX2Z1bmMoKTsKKwlpZiAocGxhbmVfc3RhdGUtPmluX3NoYXBlcl9m
dW5jICE9IE5VTEwpIHsKKwkJcGxhbmVfc3RhdGUtPmluX3NoYXBlcl9mdW5jLT50eXBlID0gVEZf
VFlQRV9CWVBBU1M7CisJCXBsYW5lX3N0YXRlLT5pbl9zaGFwZXJfZnVuYy0+Y3R4ID0gY3R4Owor
CX0KKworCXBsYW5lX3N0YXRlLT5sdXQzZF9mdW5jID0gZGNfY3JlYXRlXzNkbHV0X2Z1bmMoKTsK
KwlpZiAocGxhbmVfc3RhdGUtPmx1dDNkX2Z1bmMgIT0gTlVMTCkgeworCQlwbGFuZV9zdGF0ZS0+
bHV0M2RfZnVuYy0+Y3R4ID0gY3R4OworCQlwbGFuZV9zdGF0ZS0+bHV0M2RfZnVuYy0+aW5pdGlh
bGl6ZWQgPSBmYWxzZTsKKwl9CisKKyNlbmRpZgogfQogCiBzdGF0aWMgdm9pZCBkZXN0cnVjdChz
dHJ1Y3QgZGNfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQpAQCAtNjAsNiArNzQsMTkgQEAgc3Rh
dGljIHZvaWQgZGVzdHJ1Y3Qoc3RydWN0IGRjX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKIAkJ
CQlwbGFuZV9zdGF0ZS0+aW5fdHJhbnNmZXJfZnVuYyk7CiAJCXBsYW5lX3N0YXRlLT5pbl90cmFu
c2Zlcl9mdW5jID0gTlVMTDsKIAl9CisjaWYgZGVmaW5lZChDT05GSUdfRFJNX0FNRF9EQ19EQ04y
XzApCisJaWYgKHBsYW5lX3N0YXRlLT5pbl9zaGFwZXJfZnVuYyAhPSBOVUxMKSB7CisJCWRjX3Ry
YW5zZmVyX2Z1bmNfcmVsZWFzZSgKKwkJCQlwbGFuZV9zdGF0ZS0+aW5fc2hhcGVyX2Z1bmMpOwor
CQlwbGFuZV9zdGF0ZS0+aW5fc2hhcGVyX2Z1bmMgPSBOVUxMOworCX0KKwlpZiAocGxhbmVfc3Rh
dGUtPmx1dDNkX2Z1bmMgIT0gTlVMTCkgeworCQlkY18zZGx1dF9mdW5jX3JlbGVhc2UoCisJCQkJ
cGxhbmVfc3RhdGUtPmx1dDNkX2Z1bmMpOworCQlwbGFuZV9zdGF0ZS0+bHV0M2RfZnVuYyA9IE5V
TEw7CisJfQorCisjZW5kaWYKIH0KIAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKQEAgLTIyNCw0
ICsyNTEsNDAgQEAgc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKmRjX2NyZWF0ZV90cmFuc2Zlcl9m
dW5jKHZvaWQpCiAJcmV0dXJuIE5VTEw7CiB9CiAKKyNpZiBkZWZpbmVkKENPTkZJR19EUk1fQU1E
X0RDX0RDTjJfMCkKK3N0YXRpYyB2b2lkIGRjXzNkbHV0X2Z1bmNfZnJlZShzdHJ1Y3Qga3JlZiAq
a3JlZikKK3sKKwlzdHJ1Y3QgZGNfM2RsdXQgKmx1dCA9IGNvbnRhaW5lcl9vZihrcmVmLCBzdHJ1
Y3QgZGNfM2RsdXQsIHJlZmNvdW50KTsKKworCWt2ZnJlZShsdXQpOworfQorCitzdHJ1Y3QgZGNf
M2RsdXQgKmRjX2NyZWF0ZV8zZGx1dF9mdW5jKHZvaWQpCit7CisJc3RydWN0IGRjXzNkbHV0ICps
dXQgPSBrdnphbGxvYyhzaXplb2YoKmx1dCksIEdGUF9LRVJORUwpOworCisJaWYgKGx1dCA9PSBO
VUxMKQorCQlnb3RvIGFsbG9jX2ZhaWw7CisKKwlrcmVmX2luaXQoJmx1dC0+cmVmY291bnQpOwor
CWx1dC0+aW5pdGlhbGl6ZWQgPSBmYWxzZTsKKworCXJldHVybiBsdXQ7CisKK2FsbG9jX2ZhaWw6
CisJcmV0dXJuIE5VTEw7CisKK30KKwordm9pZCBkY18zZGx1dF9mdW5jX3JlbGVhc2Uoc3RydWN0
IGRjXzNkbHV0ICpsdXQpCit7CisJa3JlZl9wdXQoJmx1dC0+cmVmY291bnQsIGRjXzNkbHV0X2Z1
bmNfZnJlZSk7Cit9CisKK3ZvaWQgZGNfM2RsdXRfZnVuY19yZXRhaW4oc3RydWN0IGRjXzNkbHV0
ICpsdXQpCit7CisJa3JlZl9nZXQoJmx1dC0+cmVmY291bnQpOworfQorI2VuZGlmCisKIApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjLmggYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGMuaAppbmRleCBlMjhiN2ZlZTQ4NDAuLjY3NmYzMGU2NDdi
NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjLmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2RjL2RjLmgKQEAgLTEwOSw5ICsxMDksMTkgQEAg
c3RydWN0IGRjX2NhcHMgewogCWJvb2wgZm9yY2VfZHBfdHBzNF9mb3JfY3AyNTIwOwogCWJvb2wg
ZGlzYWJsZV9kcF9jbGtfc2hhcmU7CiAJYm9vbCBwc3Bfc2V0dXBfcGFuZWxfbW9kZTsKKyNpZmRl
ZiBDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzAKKwlib29sIGh3XzNkX2x1dDsKKyNlbmRpZgogCXN0
cnVjdCBkY19wbGFuZV9jYXAgcGxhbmVzW01BWF9QTEFORVNdOwogfTsKIAorI2lmIGRlZmluZWQo
Q09ORklHX0RSTV9BTURfRENfRENOMl8wKQorc3RydWN0IGRjX2J1Z193YSB7CisJYm9vbCBub19j
b25uZWN0X3BoeV9jb25maWc7CisJYm9vbCBkZWRjbjIwXzMwNV93YTsKK307CisjZW5kaWYKKwog
c3RydWN0IGRjX2RjY19zdXJmYWNlX3BhcmFtIHsKIAlzdHJ1Y3QgZGNfc2l6ZSBzdXJmYWNlX3Np
emU7CiAJZW51bSBzdXJmYWNlX3BpeGVsX2Zvcm1hdCBmb3JtYXQ7CkBAIC0zNjEsNiArMzcxLDQx
IEBAIHN0cnVjdCBkY19kZWJ1Z19kYXRhIHsKIAl1aW50MzJfdCBhdXhFcnJvckNvdW50OwogfTsK
IAorI2lmZGVmIENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMAorc3RydWN0IGRjX3BoeV9hZGRyX3Nw
YWNlX2NvbmZpZyB7CisJc3RydWN0IHsKKwkJdWludDY0X3Qgc3RhcnRfYWRkcjsKKwkJdWludDY0
X3QgZW5kX2FkZHI7CisJCXVpbnQ2NF90IGZiX3RvcDsKKwkJdWludDY0X3QgZmJfb2Zmc2V0Owor
CQl1aW50NjRfdCBmYl9iYXNlOworCQl1aW50NjRfdCBhZ3BfdG9wOworCQl1aW50NjRfdCBhZ3Bf
Ym90OworCQl1aW50NjRfdCBhZ3BfYmFzZTsKKwl9IHN5c3RlbV9hcGVydHVyZTsKKworCXN0cnVj
dCB7CisJCXVpbnQ2NF90IHBhZ2VfdGFibGVfc3RhcnRfYWRkcjsKKwkJdWludDY0X3QgcGFnZV90
YWJsZV9lbmRfYWRkcjsKKwkJdWludDY0X3QgcGFnZV90YWJsZV9iYXNlX2FkZHI7CisJfSBnYXJ0
X2NvbmZpZzsKK307CisKK3N0cnVjdCBkY192aXJ0dWFsX2FkZHJfc3BhY2VfY29uZmlnIHsKKwl1
aW50NjRfdAlwYWdlX3RhYmxlX3N0YXJ0X2FkZHI7CisJdWludDY0X3QJcGFnZV90YWJsZV9lbmRf
YWRkcjsKKwl1aW50MzJfdAlwYWdlX3RhYmxlX2Jsb2NrX3NpemVfaW5fYnl0ZXM7CisJdWludDhf
dAkJcGFnZV90YWJsZV9kZXB0aDsgLy8gMSA9IDEgbGV2ZWwsIDIgPSAyIGxldmVsLCBldGMuICAw
ID0gaW52YWxpZAorfTsKKworc3RydWN0IGRjX2FkZHJfc3BhY2VfY29uZmlnIHsKKwlzdHJ1Y3Qg
ZGNfcGh5X2FkZHJfc3BhY2VfY29uZmlnCQlwYV9jb25maWc7CisJc3RydWN0IGRjX3ZpcnR1YWxf
YWRkcl9zcGFjZV9jb25maWcJdmFfY29uZmlnOworCXVpbnQzMl90CXZhbGlkOjE7Cit9OworCisj
ZW5kaWYKKwogc3RydWN0IGRjX2JvdW5kaW5nX2JveF9vdmVycmlkZXMgewogCWludCBzcl9leGl0
X3RpbWVfbnM7CiAJaW50IHNyX2VudGVyX3BsdXNfZXhpdF90aW1lX25zOwpAQCAtMzgxLDcgKzQy
NiwxMyBAQCBzdHJ1Y3QgZGMgewogCXN0cnVjdCBkY19jb25maWcgY29uZmlnOwogCXN0cnVjdCBk
Y19kZWJ1Z19vcHRpb25zIGRlYnVnOwogCXN0cnVjdCBkY19ib3VuZGluZ19ib3hfb3ZlcnJpZGVz
IGJiX292ZXJyaWRlczsKKyNpZiBkZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKwlz
dHJ1Y3QgZGNfYnVnX3dhIHdvcmtfYXJvdW5kczsKKyNlbmRpZgogCXN0cnVjdCBkY19jb250ZXh0
ICpjdHg7CisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRENOMl8wCisJc3RydWN0IGRjX2FkZHJf
c3BhY2VfY29uZmlnIHZtX2NvbmZpZzsKKyNlbmRpZgogCiAJdWludDhfdCBsaW5rX2NvdW50Owog
CXN0cnVjdCBkY19saW5rICpsaW5rc1tNQVhfUElQRVMgKiAyXTsKQEAgLTQxOSw2ICs0NzAsMTAg
QEAgc3RydWN0IGRjIHsKIAlzdHJ1Y3QgZGNfZGVidWdfZGF0YSBkZWJ1Z19kYXRhOwogCiAJY29u
c3QgY2hhciAqYnVpbGRfaWQ7CisjaWZkZWYgQ09ORklHX0RSTV9BTURfRENfRENOMl8wCisJc3Ry
dWN0IHZtX2hlbHBlciAqdm1faGVscGVyOworCWNvbnN0IHN0cnVjdCBncHVfaW5mb19zb2NfYm91
bmRpbmdfYm94X3YxXzAgKnNvY19ib3VuZGluZ19ib3g7CisjZW5kaWYKIH07CiAKIGVudW0gZnJh
bWVfYnVmZmVyX21vZGUgewpAQCAtNDUyLDcgKzUwNyw2IEBAIHN0cnVjdCBkY19pbml0X2RhdGEg
ewogCiAJc3RydWN0IGRjX2NvbmZpZyBmbGFnczsKIAl1aW50MzJfdCBsb2dfbWFzazsKLQogI2lm
ZGVmIENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMAogCS8qKgogCSAqIGdwdV9pbmZvIEZXIHByb3Zp
ZGVkIHNvYyBib3VuZGluZyBib3ggc3RydWN0IG9yIDAgaWYgbm90CkBAIC00NjcsNiArNTIxLDkg
QEAgc3RydWN0IGRjX2NhbGxiYWNrX2luaXQgewogfTsKIAogc3RydWN0IGRjICpkY19jcmVhdGUo
Y29uc3Qgc3RydWN0IGRjX2luaXRfZGF0YSAqaW5pdF9wYXJhbXMpOworI2lmZGVmIENPTkZJR19E
Uk1fQU1EX0RDX0RDTjJfMAorYm9vbCBkY19pbml0X21lbW9yeV9odWIoc3RydWN0IGRjICpkYywg
c3RydWN0IGRjX2FkZHJfc3BhY2VfY29uZmlnICpjb25maWcpOworI2VuZGlmCiB2b2lkIGRjX2lu
aXRfY2FsbGJhY2tzKHN0cnVjdCBkYyAqZGMsCiAJCWNvbnN0IHN0cnVjdCBkY19jYWxsYmFja19p
bml0ICppbml0X3BhcmFtcyk7CiB2b2lkIGRjX2Rlc3Ryb3koc3RydWN0IGRjICoqZGMpOwpAQCAt
NTM4LDYgKzU5NSwxNyBAQCBzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyB7CiAJfTsKIH07CiAKKyNp
ZiBkZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKworCitzdHJ1Y3QgZGNfM2RsdXQg
eworCXN0cnVjdCBrcmVmIHJlZmNvdW50OworCXN0cnVjdCB0ZXRyYWhlZHJhbF9wYXJhbXMgbHV0
XzNkOworCXVpbnQzMl90IGhkcl9tdWx0aXBsaWVyOworCWJvb2wgaW5pdGlhbGl6ZWQ7CisJc3Ry
dWN0IGRjX2NvbnRleHQgKmN0eDsKK307CisjZW5kaWYKIC8qCiAgKiBUaGlzIHN0cnVjdHVyZSBp
cyBmaWxsZWQgaW4gYnkgZGNfc3VyZmFjZV9nZXRfc3RhdHVzIGFuZCBjb250YWlucwogICogdGhl
IGxhc3QgcmVxdWVzdGVkIGFkZHJlc3MgYW5kIHRoZSBjdXJyZW50bHkgYWN0aXZlIGFkZHJlc3Mg
c28gdGhlIGNhbGxlZApAQCAtNTg4LDYgKzY1Niw5IEBAIHVuaW9uIHN1cmZhY2VfdXBkYXRlX2Zs
YWdzIHsKIHN0cnVjdCBkY19wbGFuZV9zdGF0ZSB7CiAJc3RydWN0IGRjX3BsYW5lX2FkZHJlc3Mg
YWRkcmVzczsKIAlzdHJ1Y3QgZGNfcGxhbmVfZmxpcF90aW1lIHRpbWU7CisjaWYgZGVmaW5lZChD
T05GSUdfRFJNX0FNRF9EQ19EQ04yXzApCisJYm9vbCB0cmlwbGVidWZmZXJfZmxpcHM7CisjZW5k
aWYKIAlzdHJ1Y3Qgc2NhbGluZ190YXBzIHNjYWxpbmdfcXVhbGl0eTsKIAlzdHJ1Y3QgcmVjdCBz
cmNfcmVjdDsKIAlzdHJ1Y3QgcmVjdCBkc3RfcmVjdDsKQEAgLTYxMCw2ICs2ODEsMTIgQEAgc3Ry
dWN0IGRjX3BsYW5lX3N0YXRlIHsKIAogCWVudW0gZGNfY29sb3Jfc3BhY2UgY29sb3Jfc3BhY2U7
CiAKKyNpZiBkZWZpbmVkKENPTkZJR19EUk1fQU1EX0RDX0RDTjJfMCkKKwlzdHJ1Y3QgZGNfM2Rs
dXQgKmx1dDNkX2Z1bmM7CisJc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKmluX3NoYXBlcl9mdW5j
OworCXN0cnVjdCBkY190cmFuc2Zlcl9mdW5jICpibGVuZF90ZjsKKyNlbmRpZgorCiAJZW51bSBz
dXJmYWNlX3BpeGVsX2Zvcm1hdCBmb3JtYXQ7CiAJZW51bSBkY19yb3RhdGlvbl9hbmdsZSByb3Rh
dGlvbjsKIAllbnVtIHBsYW5lX3N0ZXJlb19mb3JtYXQgc3RlcmVvX2Zvcm1hdDsKQEAgLTY3NSw2
ICs3NTIsMTAgQEAgc3RydWN0IGRjX3N1cmZhY2VfdXBkYXRlIHsKIAogCWNvbnN0IHN0cnVjdCBk
Y19jc2NfdHJhbnNmb3JtICppbnB1dF9jc2NfY29sb3JfbWF0cml4OwogCWNvbnN0IHN0cnVjdCBm
aXhlZDMxXzMyICpjb2VmZl9yZWR1Y3Rpb25fZmFjdG9yOworI2lmIGRlZmluZWQoQ09ORklHX0RS
TV9BTURfRENfRENOMl8wKQorCWNvbnN0IHN0cnVjdCBkY190cmFuc2Zlcl9mdW5jICpmdW5jX3No
YXBlcjsKKwljb25zdCBzdHJ1Y3QgZGNfM2RsdXQgKmx1dDNkX2Z1bmM7CisjZW5kaWYKIH07CiAK
IC8qCkBAIC02OTUsNiArNzc2LDExIEBAIHZvaWQgZGNfdHJhbnNmZXJfZnVuY19yZXRhaW4oc3Ry
dWN0IGRjX3RyYW5zZmVyX2Z1bmMgKmRjX3RmKTsKIHZvaWQgZGNfdHJhbnNmZXJfZnVuY19yZWxl
YXNlKHN0cnVjdCBkY190cmFuc2Zlcl9mdW5jICpkY190Zik7CiBzdHJ1Y3QgZGNfdHJhbnNmZXJf
ZnVuYyAqZGNfY3JlYXRlX3RyYW5zZmVyX2Z1bmModm9pZCk7CiAKKyNpZiBkZWZpbmVkKENPTkZJ
R19EUk1fQU1EX0RDX0RDTjJfMCkKK3N0cnVjdCBkY18zZGx1dCAqZGNfY3JlYXRlXzNkbHV0X2Z1
bmModm9pZCk7Cit2b2lkIGRjXzNkbHV0X2Z1bmNfcmVsZWFzZShzdHJ1Y3QgZGNfM2RsdXQgKmx1
dCk7Cit2b2lkIGRjXzNkbHV0X2Z1bmNfcmV0YWluKHN0cnVjdCBkY18zZGx1dCAqbHV0KTsKKyNl
bmRpZgogLyoKICAqIFRoaXMgc3RydWN0dXJlIGhvbGRzIGEgc3VyZmFjZSBhZGRyZXNzLiAgVGhl
cmUgY291bGQgYmUgbXVsdGlwbGUgYWRkcmVzc2VzCiAgKiBpbiBjYXNlcyBzdWNoIGFzIFN0ZXJl
byAzRCwgUGxhbmFyIFlVViwgZXRjLiAgT3RoZXIgcGVyLWZsaXAgYXR0cmlidXRlcyBzdWNoCkBA
IC04NDIsNiArOTI4LDcgQEAgc3RydWN0IGRjX3NpbmsgewogCXN0cnVjdCBzdGVyZW9fM2RfZmVh
dHVyZXMgZmVhdHVyZXNfM2RbVElNSU5HXzNEX0ZPUk1BVF9NQVhdOwogCWJvb2wgY29udmVydGVy
X2Rpc2FibGVfYXVkaW87CiAKKwogCS8qIHByaXZhdGUgdG8gREMgY29yZSAqLwogCXN0cnVjdCBk
Y19saW5rICpsaW5rOwogCXN0cnVjdCBkY19jb250ZXh0ICpjdHg7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNfc3RyZWFtLmggYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2Rpc3BsYXkvZGMvZGNfc3RyZWFtLmgKaW5kZXggNGRhMTM4ZGVkOGI3Li45MjlmMTU1ZWFh
ZTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kY19zdHJlYW0u
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvZGMvZGNfc3RyZWFtLmgKQEAgLTUx
LDYgKzUxLDUyIEBAIHN0cnVjdCBmcmVlc3luY19jb250ZXh0IHsKIAlib29sIGR1bW15OwogfTsK
IAorI2lmIGRlZmluZWQoQ09ORklHX0RSTV9BTURfRENfRENOMl8wKQorZW51bSBodWJwX2RtZGF0
YV9tb2RlIHsKKwlETURBVEFfU1dfTU9ERSwKKwlETURBVEFfSFdfTU9ERQorfTsKKworc3RydWN0
IGRjX2RtZGF0YV9hdHRyaWJ1dGVzIHsKKwkvKiBTcGVjaWZpZXMgd2hldGhlciBkeW5hbWljIG1l
dGEgZGF0YSB3aWxsIGJlIHVwZGF0ZWQgYnkgc29mdHdhcmUKKwkgKiBvciBoYXMgdG8gYmUgZmV0
Y2hlZCBieSBoYXJkd2FyZSAoRE1BIG1vZGUpCisJICovCisJZW51bSBodWJwX2RtZGF0YV9tb2Rl
IGRtZGF0YV9tb2RlOworCS8qIFNwZWNpZmllcyBpZiBjdXJyZW50IGR5bmFtaWMgbWV0YSBkYXRh
IGlzIHRvIGJlIHVzZWQgb25seSBmb3IgdGhlIGN1cnJlbnQgZnJhbWUgKi8KKwlib29sIGRtZGF0
YV9yZXBlYXQ7CisJLyogU3BlY2lmaWVzIHRoZSBzaXplIG9mIER5bmFtaWMgTWV0YWRhdGEgc3Vy
ZmFjZSBpbiBieXRlLiAgU2l6ZSBvZiAwIG1lYW5zIG5vIER5bmFtaWMgbWV0YWRhdGEgaXMgZmV0
Y2hlZCAqLworCXVpbnQzMl90IGRtZGF0YV9zaXplOworCS8qIFNwZWNpZmllcyBpZiBhIG5ldyBk
eW5hbWljIG1ldGEgZGF0YSBzaG91bGQgYmUgZmV0Y2hlZCBmb3IgYW4gdXBjb21pbmcgZnJhbWUg
Ki8KKwlib29sIGRtZGF0YV91cGRhdGVkOworCS8qIElmIGhhcmR3YXJlIG1vZGUgaXMgdXNlZCwg
dGhlIGJhc2UgYWRkcmVzcyB3aGVyZSBETURBVEEgc3VyZmFjZSBpcyBsb2NhdGVkICovCisJUEhZ
U0lDQUxfQUREUkVTU19MT0MgYWRkcmVzczsKKwkvKiBTcGVjaWZpZXMgd2hldGhlciBRT1MgbGV2
ZWwgd2lsbCBiZSBwcm92aWRlZCBieSBUVFUgb3IgaXQgd2lsbCBjb21lIGZyb20gRE1EQVRBX1FP
U19MRVZFTCAqLworCWJvb2wgZG1kYXRhX3Fvc19tb2RlOworCS8qIElmIHFvc19tb2RlID0gMSwg
dGhpcyBpcyB0aGUgUU9TIHZhbHVlIHRvIGJlIHVzZWQ6ICovCisJdWludDMyX3QgZG1kYXRhX3Fv
c19sZXZlbDsKKwkvKiBTcGVjaWZpZXMgdGhlIHZhbHVlIGluIHVuaXQgb2YgUkVGQ0xLIGN5Y2xl
cyB0byBiZSBhZGRlZCB0byB0aGUKKwkgKiBjdXJyZW50IHRpbWUgdG8gcHJvZHVjZSB0aGUgQW1v
cnRpemVkIGRlYWRsaW5lIGZvciBEeW5hbWljIE1ldGFkYXRhIGNodW5rIHJlcXVlc3QKKwkgKi8K
Kwl1aW50MzJfdCBkbWRhdGFfZGxfZGVsdGE7CisJLyogQW4gdW5ib3VuZGVkIGFycmF5IG9mIHVp
bnQzMnMsIHJlcHJlc2VudHMgc29mdHdhcmUgZG1kYXRhIHRvIGJlIGxvYWRlZCAqLworCXVpbnQz
Ml90ICpkbWRhdGFfc3dfZGF0YTsKK307CisjZW5kaWYKKworI2lmIGRlZmluZWQoQ09ORklHX0RS
TV9BTURfRENfRENOMl8wKQorc3RydWN0IGRjX3dyaXRlYmFja19pbmZvIHsKKwlib29sIHdiX2Vu
YWJsZWQ7CisJaW50IGR3Yl9waXBlX2luc3Q7CisJc3RydWN0IGRjX2R3Yl9wYXJhbXMgZHdiX3Bh
cmFtczsKKwlzdHJ1Y3QgbWNpZl9idWZfcGFyYW1zIG1jaWZfYnVmX3BhcmFtczsKK307CisKK3N0
cnVjdCBkY193cml0ZWJhY2tfdXBkYXRlIHsKKwl1bnNpZ25lZCBpbnQgbnVtX3diX2luZm87CisJ
c3RydWN0IGRjX3dyaXRlYmFja19pbmZvIHdyaXRlYmFja19pbmZvW01BWF9EV0JfUElQRVNdOwor
fTsKKyNlbmRpZgorCiBlbnVtIHZlcnRpY2FsX2ludGVycnVwdF9yZWZfcG9pbnQgewogCVNUQVJU
X1ZfVVBEQVRFID0gMCwKIAlTVEFSVF9WX1NZTkMsCkBAIC0xNDIsNiArMTg4LDExIEBAIHN0cnVj
dCBkY19zdHJlYW1fc3RhdGUgewogCiAJc3RydWN0IGNydGNfdHJpZ2dlcl9pbmZvIHRyaWdnZXJl
ZF9jcnRjX3Jlc2V0OwogCisjaWYgZGVmaW5lZChDT05GSUdfRFJNX0FNRF9EQ19EQ04yXzApCisJ
Lyogd3JpdGViYWNrICovCisJdW5zaWduZWQgaW50IG51bV93Yl9pbmZvOworCXN0cnVjdCBkY193
cml0ZWJhY2tfaW5mbyB3cml0ZWJhY2tfaW5mb1tNQVhfRFdCX1BJUEVTXTsKKyNlbmRpZgogCS8q
IENvbXB1dGVkIHN0YXRlIGJpdHMgKi8KIAlib29sIG1vZGVfY2hhbmdlZCA6IDE7CiAKQEAgLTE4
NCw2ICsyMzUsOSBAQCBzdHJ1Y3QgZGNfc3RyZWFtX3VwZGF0ZSB7CiAKIAlzdHJ1Y3QgZGNfY3Nj
X3RyYW5zZm9ybSAqb3V0cHV0X2NzY190cmFuc2Zvcm07CiAKKyNpZiBkZWZpbmVkKENPTkZJR19E
Uk1fQU1EX0RDX0RDTjJfMCkKKwlzdHJ1Y3QgZGNfd3JpdGViYWNrX3VwZGF0ZSAqd2JfdXBkYXRl
OworI2VuZGlmCiB9OwogCiBib29sIGRjX2lzX3N0cmVhbV91bmNoYW5nZWQoCkBAIC0yNzMsNiAr
MzI3LDE5IEBAIGJvb2wgZGNfYWRkX2FsbF9wbGFuZXNfZm9yX3N0cmVhbSgKIAkJaW50IHBsYW5l
X2NvdW50LAogCQlzdHJ1Y3QgZGNfc3RhdGUgKmNvbnRleHQpOwogCisjaWYgZGVmaW5lZChDT05G
SUdfRFJNX0FNRF9EQ19EQ04yXzApCitib29sIGRjX3N0cmVhbV9hZGRfd3JpdGViYWNrKHN0cnVj
dCBkYyAqZGMsCisJCXN0cnVjdCBkY19zdHJlYW1fc3RhdGUgKnN0cmVhbSwKKwkJc3RydWN0IGRj
X3dyaXRlYmFja19pbmZvICp3Yl9pbmZvKTsKK2Jvb2wgZGNfc3RyZWFtX3JlbW92ZV93cml0ZWJh
Y2soc3RydWN0IGRjICpkYywKKwkJc3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3RyZWFtLAorCQl1
aW50MzJfdCBkd2JfcGlwZV9pbnN0KTsKK2Jvb2wgZGNfc3RyZWFtX2RtZGF0YV9zdGF0dXNfZG9u
ZShzdHJ1Y3QgZGMgKmRjLCBzdHJ1Y3QgZGNfc3RyZWFtX3N0YXRlICpzdHJlYW0pOworYm9vbCBk
Y19zdHJlYW1fc2V0X2R5bmFtaWNfbWV0YWRhdGEoc3RydWN0IGRjICpkYywKKwkJc3RydWN0IGRj
X3N0cmVhbV9zdGF0ZSAqc3RyZWFtLAorCQlzdHJ1Y3QgZGNfZG1kYXRhX2F0dHJpYnV0ZXMgKmRt
ZGF0YV9hdHRyKTsKKyNlbmRpZgorCiBlbnVtIGRjX3N0YXR1cyBkY192YWxpZGF0ZV9zdHJlYW0o
c3RydWN0IGRjICpkYywgc3RydWN0IGRjX3N0cmVhbV9zdGF0ZSAqc3RyZWFtKTsKIAogLyoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kbV9wcF9zbXUuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kbV9wcF9zbXUuaAppbmRleCA0NzFmM2RmODhj
OTIuLjY4MDY4OWNhYjVkZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L2RjL2RtX3BwX3NtdS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9kYy9kbV9w
cF9zbXUuaApAQCAtNDEsNiArNDEsOSBAQCBlbnVtIHBwX3NtdV92ZXIgewogCSAqLwogCVBQX1NN
VV9VTlNVUFBPUlRFRCwKIAlQUF9TTVVfVkVSX1JWLAorI2lmbmRlZiBDT05GSUdfVFJJTV9EUk1f
QU1EX0RDX0RDTjJfMAorCVBQX1NNVV9WRVJfTlYsCisjZW5kaWYKIAogCVBQX1NNVV9WRVJfTUFY
CiB9OwpAQCAtNjQsNyArNjcsNiBAQCBlbnVtIHBwX3NtdV9zdGF0dXMgewogCVBQX1NNVV9SRVNV
TFRfVU5TVVBQT1JURUQKIH07CiAKLQogI2RlZmluZSBQUF9TTVVfV01fU0VUX1JBTkdFX0NMS19V
TkNPTlNUUkFJTkVEX01JTiAweDAKICNkZWZpbmUgUFBfU01VX1dNX1NFVF9SQU5HRV9DTEtfVU5D
T05TVFJBSU5FRF9NQVggMHhGRkZGCiAKQEAgLTEzOCwxMCArMTQwLDExOSBAQCBzdHJ1Y3QgcHBf
c211X2Z1bmNzX3J2IHsKIAl2b2lkICgqc2V0X3BtZV93YV9lbmFibGUpKHN0cnVjdCBwcF9zbXUg
KnBwKTsKIH07CiAKKyNpZm5kZWYgQ09ORklHX1RSSU1fRFJNX0FNRF9EQ19EQ04yXzAKKy8qIFVz
ZWQgYnkgcHBfc211X2Z1bmNzX252LnNldF92b2x0YWdlX2J5X2ZyZXEKKyAqCisgKi8KK2VudW0g
cHBfc211X252X2Nsb2NrX2lkIHsKKwlQUF9TTVVfTlZfRElTUENMSywKKwlQUF9TTVVfTlZfUEhZ
Q0xLLAorCVBQX1NNVV9OVl9QSVhFTENMSworfTsKKworLyoKKyAqIFVzZWQgYnkgcHBfc211X2Z1
bmNzX252LmdldF9tYXhpbXVtX3N1c3RhaW5hYmxlX2Nsb2NrcworICovCitzdHJ1Y3QgcHBfc211
X252X2Nsb2NrX3RhYmxlIHsKKwkvLyB2b2x0YWdlIG1hbmFnZWQgU01VLCBmcmVxIHNldCBieSBk
cml2ZXIKKwl1bnNpZ25lZCBpbnQgICAgZGlzcGxheUNsb2NrSW5LaHo7CisJdW5zaWduZWQgaW50
CWRwcENsb2NrSW5LaHo7CisJdW5zaWduZWQgaW50ICAgIHBoeUNsb2NrSW5LaHo7CisJdW5zaWdu
ZWQgaW50ICAgIHBpeGVsQ2xvY2tJbktoejsKKwl1bnNpZ25lZCBpbnQJZHNjQ2xvY2tJbktoejsK
KworCS8vIGZyZXEvdm9sdGFnZSBtYW5hZ2VkIGJ5IFNNVQorCXVuc2lnbmVkIGludAlmYWJyaWND
bG9ja0luS2h6OworCXVuc2lnbmVkIGludAlzb2NDbG9ja0luS2h6OworCXVuc2lnbmVkIGludCAg
ICBkY2ZDbG9ja0luS2h6OworCXVuc2lnbmVkIGludCAgICB1Q2xvY2tJbktoejsKK307CisKK3N0
cnVjdCBwcF9zbXVfZnVuY3NfbnYgeworCXN0cnVjdCBwcF9zbXUgcHBfc211OworCisJLyogUFBT
TUNfTVNHX1NldERpc3BsYXlDb3VudAorCSAqIDAgdHJpZ2dlcnMgUzBpMiBvcHRpbWl6YXRpb24K
KwkgKi8KKwllbnVtIHBwX3NtdV9zdGF0dXMgKCpzZXRfZGlzcGxheV9jb3VudCkoc3RydWN0IHBw
X3NtdSAqcHAsIGludCBjb3VudCk7CisKKwkvKiBQUFNNQ19NU0dfU2V0SGFyZE1pbkRjZmNsa0J5
RnJlcQorCSAqIGZpeGVkIGNsb2NrIGF0IHJlcXVlc3RlZCBmcmVxLCBlaXRoZXIgZnJvbSBGQ0gg
YnlwYXNzIG9yIERGUworCSAqLworCWVudW0gcHBfc211X3N0YXR1cyAoKnNldF9oYXJkX21pbl9k
Y2ZjbGtfYnlfZnJlcSkoc3RydWN0IHBwX3NtdSAqcHAsIGludCBNaHopOworCisJLyogUFBTTUNf
TVNHX1NldE1pbkRlZXBTbGVlcERjZmNsaworCSAqIHdoZW4gREYgaXMgaW4gY3N0YXRlLCBkY2Yg
Y2xvY2sgaXMgZnVydGhlciBkaXZpZGVkIGRvd24KKwkgKiB0byBqdXN0IGFib3ZlIGdpdmVuIGZy
ZXF1ZW5jeQorCSAqLworCWVudW0gcHBfc211X3N0YXR1cyAoKnNldF9taW5fZGVlcF9zbGVlcF9k
Y2ZjbGspKHN0cnVjdCBwcF9zbXUgKnBwLCBpbnQgTWh6KTsKKworCS8qIFBQU01DX01TR19TZXRI
YXJkTWluVWNsa0J5RnJlcQorCSAqIFVDTEsgd2lsbCB2YXJ5IHdpdGggRFBNLCBidXQgbmV2ZXIg
YmVsb3cgcmVxdWVzdGVkIGhhcmQgbWluCisJICovCisJZW51bSBwcF9zbXVfc3RhdHVzICgqc2V0
X2hhcmRfbWluX3VjbGtfYnlfZnJlcSkoc3RydWN0IHBwX3NtdSAqcHAsIGludCBNaHopOworCisJ
LyogUFBTTUNfTVNHX1NldEhhcmRNaW5Tb2NjbGtCeUZyZXEKKwkgKiBOZWVkZWQgZm9yIERXQiBz
dXBwb3J0CisJICovCisJZW51bSBwcF9zbXVfc3RhdHVzICgqc2V0X2hhcmRfbWluX3NvY2Nsa19i
eV9mcmVxKShzdHJ1Y3QgcHBfc211ICpwcCwgaW50IE1oeik7CisKKwkvKiBQTUUgdy9hICovCisJ
ZW51bSBwcF9zbXVfc3RhdHVzICgqc2V0X3BtZV93YV9lbmFibGUpKHN0cnVjdCBwcF9zbXUgKnBw
KTsKKworCS8qIFBQU01DX01TR19TZXRIYXJkTWluQnlGcmVxCisJICogTmVlZGVkIHRvIHNldCBB
U0lDIHZvbHRhZ2VzIGZvciBjbG9ja3MgcHJvZ3JhbW1lZCBieSBEQUwKKwkgKi8KKwllbnVtIHBw
X3NtdV9zdGF0dXMgKCpzZXRfdm9sdGFnZV9ieV9mcmVxKShzdHJ1Y3QgcHBfc211ICpwcCwKKwkJ
CWVudW0gcHBfc211X252X2Nsb2NrX2lkIGNsb2NrX2lkLCBpbnQgTWh6KTsKKworCS8qIHJlYWRl
ciBhbmQgd3JpdGVyIFdNJ3MgYXJlIHNlbnQgdG9nZXRoZXIgYXMgcGFydCBvZiBvbmUgdGFibGUq
LworCS8qCisJICogUFBTTUNfTVNHX1NldERyaXZlckRyYW1BZGRySGlnaAorCSAqIFBQU01DX01T
R19TZXREcml2ZXJEcmFtQWRkckxvdworCSAqIFBQU01DX01TR19UcmFuc2ZlclRhYmxlRHJhbTJT
bXUKKwkgKgorCSAqIG9uIERDTjIwOgorCSAqIAlyZWFkZXIgZmlsbCBjbGsgPSB1Y2xrCisJICog
CXJlYWRlciBkcmFpbiBjbGsgPSBkY2ZjbGsKKwkgKiAJd3JpdGVyIGZpbGwgY2xrID0gc29jY2xr
CisJICogCXdyaXRlciBkcmFpbiBjbGsgPSB1Y2xrCisJICogKi8KKwllbnVtIHBwX3NtdV9zdGF0
dXMgKCpzZXRfd21fcmFuZ2VzKShzdHJ1Y3QgcHBfc211ICpwcCwKKwkJCXN0cnVjdCBwcF9zbXVf
d21fcmFuZ2Vfc2V0cyAqcmFuZ2VzKTsKKworCS8qIE5vdCBhIHNpbmdsZSBTTVUgbWVzc2FnZS4g
IFRoaXMgY2FsbCBzaG91bGQgcmV0dXJuIG1heGltdW0gc3VzdGFpbmFibGUgbGltaXQgZm9yIGFs
bAorCSAqIGNsb2NrcyB0aGF0IERDIGRlcGVuZHMgb24uICBUaGVzZSB3aWxsIGJlIHVzZWQgYXMg
YmFzaXMgZm9yIG1vZGUgZW51bWVyYXRpb24uCisJICovCisJZW51bSBwcF9zbXVfc3RhdHVzICgq
Z2V0X21heGltdW1fc3VzdGFpbmFibGVfY2xvY2tzKShzdHJ1Y3QgcHBfc211ICpwcCwKKwkJCXN0
cnVjdCBwcF9zbXVfbnZfY2xvY2tfdGFibGUgKm1heF9jbG9ja3MpOworCisJLyogVGhpcyBjYWxs
IHNob3VsZCByZXR1cm4gdGhlIGRpc2NyZXRlIHVjbGsgRFBNIHN0YXRlcyBhdmFpbGFibGUKKwkg
Ki8KKwllbnVtIHBwX3NtdV9zdGF0dXMgKCpnZXRfdWNsa19kcG1fc3RhdGVzKShzdHJ1Y3QgcHBf
c211ICpwcCwKKwkJCXVuc2lnbmVkIGludCAqY2xvY2tfdmFsdWVzX2luX2toeiwgdW5zaWduZWQg
aW50ICpudW1fc3RhdGVzKTsKKworCS8qIE5vdCBhIHNpbmdsZSBTTVUgbWVzc2FnZS4gIFRoaXMg
Y2FsbCBpbmZvcm1zIFBQTElCIHRoYXQgZGlzcGxheSB3aWxsIG5vdCBiZSBhYmxlCisJICogdG8g
cGVyZm9ybSBwc3RhdGUgaGFuZHNoYWtpbmcgaW4gaXRzIGN1cnJlbnQgc3RhdGUuICBUeXBpY2Fs
bHkgdGhpcyBoYW5kc2hha2UKKwkgKiBpcyB1c2VkIHRvIHBlcmZvcm0gdUNMSyBzd2l0Y2hpbmcs
IHNvIGRpc2FibGluZyBwc3RhdGUgZGlzYWJsZXMgdUNMSyBzd2l0Y2hpbmcuCisJICoKKwkgKiBO
b3RlIHRoYXQgd2hlbiBzZXR0aW5nIGhhbmRzaGFrZSB0byB1bnN1cHBvcnRlZCwgdGhlIGNhbGwg
aXMgcHJlLWVtcHRpdmUuICBUaGF0IG1lYW5zCisJICogREMgd2lsbCBtYWtlIHRoZSBjYWxsIEJF
Rk9SRSBzZXR0aW5nIHVwIHRoZSBkaXNwbGF5IHN0YXRlIHdoaWNoIHdvdWxkIGNhdXNlIHBzdGF0
ZQorCSAqIHJlcXVlc3QgdG8gZ28gdW4tYWNrZWQuICBPbmx5IHdoZW4gdGhlIGNhbGwgY29tcGxl
dGVzIHNob3VsZCBzdWNoIGEgc3RhdGUgYmUgYXBwbGllZCB0bworCSAqIERDIGhhcmR3YXJlCisJ
ICovCisJZW51bSBwcF9zbXVfc3RhdHVzICgqc2V0X3BzdGF0ZV9oYW5kc2hha2Vfc3VwcG9ydCko
c3RydWN0IHBwX3NtdSAqcHAsCisJCQlCT09MRUFOIHBzdGF0ZV9oYW5kc2hha2Vfc3VwcG9ydGVk
KTsKK307CisjZW5kaWYKKwogc3RydWN0IHBwX3NtdV9mdW5jcyB7CiAJc3RydWN0IHBwX3NtdSBj
dHg7CiAJdW5pb24gewogCQlzdHJ1Y3QgcHBfc211X2Z1bmNzX3J2IHJ2X2Z1bmNzOworI2lmbmRl
ZiBDT05GSUdfVFJJTV9EUk1fQU1EX0RDX0RDTjJfMAorCQlzdHJ1Y3QgcHBfc211X2Z1bmNzX252
IG52X2Z1bmNzOworI2VuZGlmCiAKIAl9OwogfTsKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KYW1kLWdmeCBtYWlsaW5nIGxpc3QKYW1k
LWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9hbWQtZ2Z4
