Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C9679744BE
	for <lists+amd-gfx@lfdr.de>; Thu, 25 Jul 2019 07:11:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5FD176E5E8;
	Thu, 25 Jul 2019 05:11:25 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM02-BL2-obe.outbound.protection.outlook.com
 (mail-eopbgr750041.outbound.protection.outlook.com [40.107.75.41])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A1A1F6E5E8
 for <amd-gfx@lists.freedesktop.org>; Thu, 25 Jul 2019 05:11:22 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=B0F0CaYGYUs45FbHtcZtphYfouu9QzQmiUvRNg71KgDUVBGeX5UzVHGD35zmJNak6JTY4VvVHaYNJ3RbfsFr4OEyZpxYfL9G7PO4OZuMjZeAwD5J+78ynUNC2Pc3jOIL6cqFNF7RGlVTB69P0pkGRB8qH4JZzFZ4esMF2Xb34Hd6Mb2W3S2tE3G0jbxzSXd/RIsN5qWu5Hx7CA9s8+V88wcDw00z2uNALbuMooyKsJPNUKk/dykbIBYRR+JlGetnntrgZ+pE27cHO9EhQ/ZRonc+kY/tjSR06MOk0WaTMRcBJ+KU8BHrvx4IokfhTSozyLrnkFvP7lCN6zyiYt+NMw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zL75DnejnYC3hONvBuQdq7vpvYjMvkQVKrxc9vguTnE=;
 b=ZzTEUsI4pM+2VQSB0xtlJsWhb/oJlCcAQnBFcXVBCceDRR7gEEl1CJ6oCWLGO3etjGp28APNshvgz7Y8xZJiMl3C9M+SW+cCRzPgGkqf8X+vJfpu1IWeiubItWIss+7WK8BRqd/2FzGgPzreKc99UxHXUGii2Re73XK2BTo3GiaOIV9pk9y9juaWxzT/LXBYMrNQOcaPrXKNyZ05+rjAGnpFBYR7mob/0oS4SphllO8zrZyF6HoM+GD3Ggn64Fx90nO7Xebrzi8NaS5IpctbK7yQzXdnF4IEK5eF5OCAlB+2Ei6VUOIlk3sqHyQ8HDaflt/ZVeLVaGpHfHBcsBDlNQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1;spf=pass
 smtp.mailfrom=amd.com;dmarc=pass action=none header.from=amd.com;dkim=pass
 header.d=amd.com;arc=none
Received: from MN2PR12MB3296.namprd12.prod.outlook.com (20.179.80.139) by
 MN2PR12MB3440.namprd12.prod.outlook.com (20.178.244.26) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2094.16; Thu, 25 Jul 2019 05:11:20 +0000
Received: from MN2PR12MB3296.namprd12.prod.outlook.com
 ([fe80::ad59:f055:2417:660f]) by MN2PR12MB3296.namprd12.prod.outlook.com
 ([fe80::ad59:f055:2417:660f%6]) with mapi id 15.20.2094.013; Thu, 25 Jul 2019
 05:11:20 +0000
From: "Wang, Kevin(Yang)" <Kevin1.Wang@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 5/5] drm/amd/powerplay: implment sysfs feature status function
 in smu
Thread-Topic: [PATCH 5/5] drm/amd/powerplay: implment sysfs feature status
 function in smu
Thread-Index: AQHVQqdlvxR6tq1kZ0WTe8k349UFQA==
Date: Thu, 25 Jul 2019 05:11:20 +0000
Message-ID: <20190725051057.28862-5-kevin1.wang@amd.com>
References: <20190725051057.28862-1-kevin1.wang@amd.com>
In-Reply-To: <20190725051057.28862-1-kevin1.wang@amd.com>
Accept-Language: en-US, zh-CN
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: HK2PR04CA0050.apcprd04.prod.outlook.com
 (2603:1096:202:14::18) To MN2PR12MB3296.namprd12.prod.outlook.com
 (2603:10b6:208:aa::11)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.22.0
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 5fb3f825-fa99-473c-5d38-08d710be87db
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0; PCL:0;
 RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600148)(711020)(4605104)(1401327)(4618075)(2017052603328)(7193020);
 SRVR:MN2PR12MB3440; 
x-ms-traffictypediagnostic: MN2PR12MB3440:
x-microsoft-antispam-prvs: <MN2PR12MB3440424444261CAA315247F6A2C10@MN2PR12MB3440.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:393;
x-forefront-prvs: 0109D382B0
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(346002)(39860400002)(376002)(366004)(396003)(136003)(199004)(189003)(2501003)(53946003)(6916009)(6512007)(478600001)(2906002)(81166006)(81156014)(14454004)(66066001)(68736007)(8936002)(53936002)(446003)(186003)(6506007)(7736002)(50226002)(52116002)(66446008)(86362001)(305945005)(5640700003)(2616005)(6436002)(6486002)(4326008)(1076003)(26005)(386003)(476003)(11346002)(3846002)(71190400001)(256004)(6116002)(54906003)(71200400001)(2351001)(76176011)(30864003)(5660300002)(25786009)(36756003)(316002)(486006)(66476007)(8676002)(66556008)(64756008)(99286004)(102836004)(66946007)(14444005)(309714004);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB3440;
 H:MN2PR12MB3296.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; A:1; MX:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam-message-info: t7SUQZmZUO/kR78WDMeFbdwQfkN6E7Ko/ew8bUASYoZtLUV5rWmEeN2FasZapjL8gokkNf9N77RTNKpmIrZV9rb7K+1DBbFDiHzuHwZYq84cjfDvHEpclq5Mgvjfb53G9oUEjJGCCPxH1a6q771HVUo2X0txpWPmBq39OV/aNzY0UINTWhn3w76jErE0SRtt5lUqZM1Scnyr5h+F0dwVLepdGiM/m1VWgkJ2S43WzpG4KpvrazvQevRbssywxOSGvYoaegzaTDwxk2OjWKx01c8Q2PP9oVZs72UHyZ8JItEHoTk/JiQZ77r6/BUMnQroyOn4vuyKpri97h2y/pdAl94eeRWZteZh/VsZaehLbFFGj2LGTVt3oGwFSQNgHywAoUdLUmzXleAYc77kP52kGgxXY58J8AyyswjLDVtcV90=
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 5fb3f825-fa99-473c-5d38-08d710be87db
X-MS-Exchange-CrossTenant-originalarrivaltime: 25 Jul 2019 05:11:20.7864 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: kevwa@amd.com
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3440
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zL75DnejnYC3hONvBuQdq7vpvYjMvkQVKrxc9vguTnE=;
 b=I/k+IpBcV+N1rXBv9fo4XFtYst5sA05MWYz4EULlPOrOaIFY9wJrUyR8RI/W6Q+LwUe+mtmayvlKn8dn8zIsxnVAJFxk6Jl77+b8S5FhrAZogo8bGkqa0km44RvwCcts6pdHyn4inC41q92mZ4a4g+Nv8RpEgG14PWg9Pym8EOI=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Kevin1.Wang@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Deucher, Alexander" <Alexander.Deucher@amd.com>, "Huang,
 Ray" <Ray.Huang@amd.com>, "Feng, Kenneth" <Kenneth.Feng@amd.com>, "Wang,
 Kevin\(Yang\)" <Kevin1.Wang@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

MS4gVW5pZmllZCBmZWF0dXJlIGVuYWJsZSBzdGF0dXMgZm9ybWF0IGluIHN5c2ZzCjIuIFJlbmFt
ZSBwcGZlYXR1cmUgdG8gcHBfZmVhdHVyZXMgdG8gYWRhcHQgb3RoZXIgcHAgc3lzZnMgbm9kZSBu
YW1lCjMuIHRoaXMgZnVuY3Rpb24gc3VwcG9ydCBhbGwgYXNpYywgbm90IGFzaWMgcmVsYXRlZCBm
dW5jdGlvbi4KClNpZ25lZC1vZmYtYnk6IEtldmluIFdhbmcgPGtldmluMS53YW5nQGFtZC5jb20+
Ci0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMgICAgICAgIHwgIDI0
ICstLQogZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jICAgIHwgIDYx
ICsrKysrKysKIC4uLi9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5jL2FtZGdwdV9zbXUuaCAgICB8
ICAgOCArLQogZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5jICAgIHwg
MTY1IC0tLS0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvdmVn
YTIwX3BwdC5jICAgIHwgMTUzIC0tLS0tLS0tLS0tLS0tLS0KIDUgZmlsZXMgY2hhbmdlZCwgNzUg
aW5zZXJ0aW9ucygrKSwgMzM2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3BtLmMKaW5kZXggODY2MDk3ZDVjZjI2Li45ZThlOGE2NWQ5YmYgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jCkBAIC03ODgsMTAgKzc4OCwxMCBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfZ2V0X3BwX29kX2Nsa192b2x0YWdlKHN0cnVjdCBkZXZpY2UgKmRldiwK
IH0KIAogLyoqCi0gKiBET0M6IHBwZmVhdHVyZXMKKyAqIERPQzogcHBfZmVhdHVyZXMKICAqCiAg
KiBUaGUgYW1kZ3B1IGRyaXZlciBwcm92aWRlcyBhIHN5c2ZzIEFQSSBmb3IgYWRqdXN0aW5nIHdo
YXQgcG93ZXJwbGF5Ci0gKiBmZWF0dXJlcyB0byBiZSBlbmFibGVkLiBUaGUgZmlsZSBwcGZlYXR1
cmVzIGlzIHVzZWQgZm9yIHRoaXMuIEFuZAorICogZmVhdHVyZXMgdG8gYmUgZW5hYmxlZC4gVGhl
IGZpbGUgcHBfZmVhdHVyZXMgaXMgdXNlZCBmb3IgdGhpcy4gQW5kCiAgKiB0aGlzIGlzIG9ubHkg
YXZhaWxhYmxlIGZvciBWZWdhMTAgYW5kIGxhdGVyIGRHUFVzLgogICoKICAqIFJlYWRpbmcgYmFj
ayB0aGUgZmlsZSB3aWxsIHNob3cgeW91IHRoZSBmb2xsb3dpbmdzOgpAQCAtODAzLDcgKzgwMyw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRl
dmljZSAqZGV2LAogICogdGhlIGNvcnJlc3BvbmRpbmcgYml0IGZyb20gb3JpZ2luYWwgcHBmZWF0
dXJlIG1hc2tzIGFuZCBpbnB1dCB0aGUKICAqIG5ldyBwcGZlYXR1cmUgbWFza3MuCiAgKi8KLXN0
YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBmZWF0dXJlX3N0YXR1cyhzdHJ1Y3QgZGV2aWNlICpk
ZXYsCitzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2ZlYXR1cmVfc3RhdHVzKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAkJc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsCiAJCWNvbnN0IGNo
YXIgKmJ1ZiwKIAkJc2l6ZV90IGNvdW50KQpAQCAtODIwLDcgKzgyMCw3IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9zZXRfcHBmZWF0dXJlX3N0YXR1cyhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJcHJf
ZGVidWcoImZlYXR1cmVtYXNrID0gMHglbGx4XG4iLCBmZWF0dXJlbWFzayk7CiAKIAlpZiAoaXNf
c3VwcG9ydF9zd19zbXUoYWRldikpIHsKLQkJcmV0ID0gc211X3NldF9wcGZlYXR1cmVfc3RhdHVz
KCZhZGV2LT5zbXUsIGZlYXR1cmVtYXNrKTsKKwkJcmV0ID0gc211X3N5c19zZXRfcHBfZmVhdHVy
ZV9tYXNrKCZhZGV2LT5zbXUsIGZlYXR1cmVtYXNrKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiAt
RUlOVkFMOwogCX0gZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5zZXRfcHBmZWF0
dXJlX3N0YXR1cykgewpAQCAtODMyLDcgKzgzMiw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9z
ZXRfcHBmZWF0dXJlX3N0YXR1cyhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJcmV0dXJuIGNvdW50Owog
fQogCi1zdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwZmVhdHVyZV9zdGF0dXMoc3RydWN0IGRl
dmljZSAqZGV2LAorc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9mZWF0dXJlX3N0YXR1cyhz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLAogCQlj
aGFyICpidWYpCiB7CkBAIC04NDAsNyArODQwLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dl
dF9wcGZlYXR1cmVfc3RhdHVzKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiA9IGRkZXYtPmRldl9wcml2YXRlOwogCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211
KGFkZXYpKSB7Ci0JCXJldHVybiBzbXVfZ2V0X3BwZmVhdHVyZV9zdGF0dXMoJmFkZXYtPnNtdSwg
YnVmKTsKKwkJcmV0dXJuIHNtdV9zeXNfZ2V0X3BwX2ZlYXR1cmVfbWFzaygmYWRldi0+c211LCBi
dWYpOwogCX0gZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfcHBmZWF0dXJl
X3N0YXR1cykKIAkJcmV0dXJuIGFtZGdwdV9kcG1fZ2V0X3BwZmVhdHVyZV9zdGF0dXMoYWRldiwg
YnVmKTsKIApAQCAtMTUwMCw5ICsxNTAwLDkgQEAgc3RhdGljIERFVklDRV9BVFRSKGdwdV9idXN5
X3BlcmNlbnQsIFNfSVJVR08sCiBzdGF0aWMgREVWSUNFX0FUVFIobWVtX2J1c3lfcGVyY2VudCwg
U19JUlVHTywKIAkJYW1kZ3B1X2dldF9tZW1vcnlfYnVzeV9wZXJjZW50LCBOVUxMKTsKIHN0YXRp
YyBERVZJQ0VfQVRUUihwY2llX2J3LCBTX0lSVUdPLCBhbWRncHVfZ2V0X3BjaWVfYncsIE5VTEwp
Owotc3RhdGljIERFVklDRV9BVFRSKHBwZmVhdHVyZXMsIFNfSVJVR08gfCBTX0lXVVNSLAotCQlh
bWRncHVfZ2V0X3BwZmVhdHVyZV9zdGF0dXMsCi0JCWFtZGdwdV9zZXRfcHBmZWF0dXJlX3N0YXR1
cyk7CitzdGF0aWMgREVWSUNFX0FUVFIocHBfZmVhdHVyZXMsIFNfSVJVR08gfCBTX0lXVVNSLAor
CQlhbWRncHVfZ2V0X3BwX2ZlYXR1cmVfc3RhdHVzLAorCQlhbWRncHVfc2V0X3BwX2ZlYXR1cmVf
c3RhdHVzKTsKIHN0YXRpYyBERVZJQ0VfQVRUUih1bmlxdWVfaWQsIFNfSVJVR08sIGFtZGdwdV9n
ZXRfdW5pcXVlX2lkLCBOVUxMKTsKIAogc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3df
dGVtcChzdHJ1Y3QgZGV2aWNlICpkZXYsCkBAIC0yOTYwLDEwICsyOTYwLDEwIEBAIGludCBhbWRn
cHVfcG1fc3lzZnNfaW5pdChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAlpZiAoKGFkZXYt
PmFzaWNfdHlwZSA+PSBDSElQX1ZFR0ExMCkgJiYKIAkgICAgIShhZGV2LT5mbGFncyAmIEFNRF9J
U19BUFUpKSB7CiAJCXJldCA9IGRldmljZV9jcmVhdGVfZmlsZShhZGV2LT5kZXYsCi0JCQkJJmRl
dl9hdHRyX3BwZmVhdHVyZXMpOworCQkJCSZkZXZfYXR0cl9wcF9mZWF0dXJlcyk7CiAJCWlmIChy
ZXQpIHsKIAkJCURSTV9FUlJPUigiZmFpbGVkIHRvIGNyZWF0ZSBkZXZpY2UgZmlsZQkiCi0JCQkJ
CSJwcGZlYXR1cmVzXG4iKTsKKwkJCQkJInBwX2ZlYXR1cmVzXG4iKTsKIAkJCXJldHVybiByZXQ7
CiAJCX0KIAl9CkBAIC0zMDE3LDcgKzMwMTcsNyBAQCB2b2lkIGFtZGdwdV9wbV9zeXNmc19maW5p
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCQlkZXZpY2VfcmVtb3ZlX2ZpbGUoYWRldi0+
ZGV2LCAmZGV2X2F0dHJfdW5pcXVlX2lkKTsKIAlpZiAoKGFkZXYtPmFzaWNfdHlwZSA+PSBDSElQ
X1ZFR0ExMCkgJiYKIAkgICAgIShhZGV2LT5mbGFncyAmIEFNRF9JU19BUFUpKQotCQlkZXZpY2Vf
cmVtb3ZlX2ZpbGUoYWRldi0+ZGV2LCAmZGV2X2F0dHJfcHBmZWF0dXJlcyk7CisJCWRldmljZV9y
ZW1vdmVfZmlsZShhZGV2LT5kZXYsICZkZXZfYXR0cl9wcF9mZWF0dXJlcyk7CiB9CiAKIHZvaWQg
YW1kZ3B1X3BtX2NvbXB1dGVfY2xvY2tzKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jCmluZGV4IGU4ODFkZTk1NTM4
OC4uOTA4MzNmZjJmZTAwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxh
eS9hbWRncHVfc211LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1
X3NtdS5jCkBAIC01NSw2ICs1NSw2NyBAQCBjb25zdCBjaGFyICpzbXVfZ2V0X2ZlYXR1cmVfbmFt
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfZmVhdHVyZV9tYXNrCiAJcmV0dXJu
IF9fc211X2ZlYXR1cmVfbmFtZXNbZmVhdHVyZV07CiB9CiAKK3NpemVfdCBzbXVfc3lzX2dldF9w
cF9mZWF0dXJlX21hc2soc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNoYXIgKmJ1ZikKK3sKKwlz
aXplX3Qgc2l6ZSA9IDA7CisJaW50IHJldCA9IDAsIGkgPSAwOworCXVpbnQzMl90IGZlYXR1cmVf
bWFza1syXSA9IHsgMCB9OworCWludDMyX3QgZmVhdHVyZV9pbmRleCA9IDA7CisJdWludDMyX3Qg
Y291bnQgPSAwOworCisJcmV0ID0gc211X2ZlYXR1cmVfZ2V0X2VuYWJsZWRfbWFzayhzbXUsIGZl
YXR1cmVfbWFzaywgMik7CisJaWYgKHJldCkKKwkJZ290byBmYWlsZWQ7CisKKwlzaXplID0gIHNw
cmludGYoYnVmICsgc2l6ZSwgImZlYXR1cmVzIGhpZ2g6IDB4JTA4eCBsb3c6IDB4JTA4eFxuIiwK
KwkJCWZlYXR1cmVfbWFza1sxXSwgZmVhdHVyZV9tYXNrWzBdKTsKKworCWZvciAoaSA9IDA7IGkg
PCBTTVVfRkVBVFVSRV9DT1VOVDsgaSsrKSB7CisJCWZlYXR1cmVfaW5kZXggPSBzbXVfZmVhdHVy
ZV9nZXRfaW5kZXgoc211LCBpKTsKKwkJaWYgKGZlYXR1cmVfaW5kZXggPCAwKQorCQkJY29udGlu
dWU7CisJCXNpemUgKz0gc3ByaW50ZihidWYgKyBzaXplLCAiJTAyZC4gJS0yMHMgKCUyZCkgOiAl
c1xuIiwKKwkJCSAgICAgICBjb3VudCsrLAorCQkJICAgICAgIHNtdV9nZXRfZmVhdHVyZV9uYW1l
KHNtdSwgaSksCisJCQkgICAgICAgZmVhdHVyZV9pbmRleCwKKwkJCSAgICAgICAhIXNtdV9mZWF0
dXJlX2lzX2VuYWJsZWQoc211LCBpKSA/ICJlbmFiZWxkIiA6ICJkaXNhYmxlZCIpOworCX0KKwor
ZmFpbGVkOgorCXJldHVybiBzaXplOworfQorCitpbnQgc211X3N5c19zZXRfcHBfZmVhdHVyZV9t
YXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50NjRfdCBuZXdfbWFzaykKK3sKKwlpbnQg
cmV0ID0gMDsKKwl1aW50MzJfdCBmZWF0dXJlX21hc2tbMl0gPSB7IDAgfTsKKwl1aW50NjRfdCBm
ZWF0dXJlXzJfZW5hYmxlZCA9IDA7CisJdWludDY0X3QgZmVhdHVyZV8yX2Rpc2FibGVkID0gMDsK
Kwl1aW50NjRfdCBmZWF0dXJlX2VuYWJsZXMgPSAwOworCisJcmV0ID0gc211X2ZlYXR1cmVfZ2V0
X2VuYWJsZWRfbWFzayhzbXUsIGZlYXR1cmVfbWFzaywgMik7CisJaWYgKHJldCkKKwkJcmV0dXJu
IHJldDsKKworCWZlYXR1cmVfZW5hYmxlcyA9ICgodWludDY0X3QpZmVhdHVyZV9tYXNrWzFdIDw8
IDMyIHwgKHVpbnQ2NF90KWZlYXR1cmVfbWFza1swXSk7CisKKwlmZWF0dXJlXzJfZW5hYmxlZCAg
PSB+ZmVhdHVyZV9lbmFibGVzICYgbmV3X21hc2s7CisJZmVhdHVyZV8yX2Rpc2FibGVkID0gZmVh
dHVyZV9lbmFibGVzICYgfm5ld19tYXNrOworCisJaWYgKGZlYXR1cmVfMl9lbmFibGVkKSB7CisJ
CXJldCA9IHNtdV9mZWF0dXJlX3VwZGF0ZV9lbmFibGVfc3RhdGUoc211LCBmZWF0dXJlXzJfZW5h
YmxlZCwgdHJ1ZSk7CisJCWlmIChyZXQpCisJCQlyZXQ7CisJfQorCWlmIChmZWF0dXJlXzJfZGlz
YWJsZWQpIHsKKwkJcmV0ID0gc211X2ZlYXR1cmVfdXBkYXRlX2VuYWJsZV9zdGF0ZShzbXUsIGZl
YXR1cmVfMl9kaXNhYmxlZCwgZmFsc2UpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwl9
CisKKwlyZXR1cm4gcmV0OworfQorCiBpbnQgc211X2dldF9zbWNfdmVyc2lvbihzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwgdWludDMyX3QgKmlmX3ZlcnNpb24sIHVpbnQzMl90ICpzbXVfdmVyc2lv
bikKIHsKIAlpbnQgcmV0ID0gMDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93
ZXJwbGF5L2luYy9hbWRncHVfc211LmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9p
bmMvYW1kZ3B1X3NtdS5oCmluZGV4IGFiYzI2NDRiNGMwNy4uYWM5ZTlkNWQ4YTVjIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1X3NtdS5oCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2luYy9hbWRncHVfc211LmgKQEAgLTQzMiw4
ICs0MzIsNiBAQCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyB7CiAJCQkJICAgICAgdWludDMyX3QgKm1j
bGtfbWFzaywKIAkJCQkgICAgICB1aW50MzJfdCAqc29jX21hc2spOwogCWludCAoKnNldF9jcHVf
cG93ZXJfc3RhdGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQlpbnQgKCpzZXRfcHBmZWF0
dXJlX3N0YXR1cykoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQ2NF90IHBwZmVhdHVyZXMp
OwotCWludCAoKmdldF9wcGZlYXR1cmVfc3RhdHVzKShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwg
Y2hhciAqYnVmKTsKIAlib29sICgqaXNfZHBtX3J1bm5pbmcpKHN0cnVjdCBzbXVfY29udGV4dCAq
c211KTsKIAlpbnQgKCp0YWJsZXNfaW5pdCkoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHN0cnVj
dCBzbXVfdGFibGUgKnRhYmxlcyk7CiAJaW50ICgqc2V0X3RoZXJtYWxfZmFuX3RhYmxlKShzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSk7CkBAIC03MTMsMTAgKzcxMSw2IEBAIHN0cnVjdCBzbXVfZnVu
Y3MKIAkoKHNtdSktPnBwdF9mdW5jcy0+ZHBtX3NldF92Y2VfZW5hYmxlID8gKHNtdSktPnBwdF9m
dW5jcy0+ZHBtX3NldF92Y2VfZW5hYmxlKChzbXUpLCAoZW5hYmxlKSkgOiAwKQogI2RlZmluZSBz
bXVfc2V0X3hnbWlfcHN0YXRlKHNtdSwgcHN0YXRlKSBcCiAJCSgoc211KS0+ZnVuY3MtPnNldF94
Z21pX3BzdGF0ZSA/IChzbXUpLT5mdW5jcy0+c2V0X3hnbWlfcHN0YXRlKChzbXUpLCAocHN0YXRl
KSkgOiAwKQotI2RlZmluZSBzbXVfc2V0X3BwZmVhdHVyZV9zdGF0dXMoc211LCBwcGZlYXR1cmVz
KSBcCi0JKChzbXUpLT5wcHRfZnVuY3MtPnNldF9wcGZlYXR1cmVfc3RhdHVzID8gKHNtdSktPnBw
dF9mdW5jcy0+c2V0X3BwZmVhdHVyZV9zdGF0dXMoKHNtdSksIChwcGZlYXR1cmVzKSkgOiAtRUlO
VkFMKQotI2RlZmluZSBzbXVfZ2V0X3BwZmVhdHVyZV9zdGF0dXMoc211LCBidWYpIFwKLQkoKHNt
dSktPnBwdF9mdW5jcy0+Z2V0X3BwZmVhdHVyZV9zdGF0dXMgPyAoc211KS0+cHB0X2Z1bmNzLT5n
ZXRfcHBmZWF0dXJlX3N0YXR1cygoc211KSwgKGJ1ZikpIDogLUVJTlZBTCkKICNkZWZpbmUgc211
X3NldF93YXRlcm1hcmtzX3RhYmxlKHNtdSwgdGFiLCBjbG9ja19yYW5nZXMpIFwKIAkoKHNtdSkt
PnBwdF9mdW5jcy0+c2V0X3dhdGVybWFya3NfdGFibGUgPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRf
d2F0ZXJtYXJrc190YWJsZSgoc211KSwgKHRhYiksIChjbG9ja19yYW5nZXMpKSA6IDApCiAjZGVm
aW5lIHNtdV9nZXRfY3VycmVudF9jbGtfZnJlcV9ieV90YWJsZShzbXUsIGNsa190eXBlLCB2YWx1
ZSkgXApAQCAtODA0LDUgKzc5OCw3IEBAIGJvb2wgc211X2Nsa19kcG1faXNfZW5hYmxlZChzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUpCiBpbnQgc211
X2ZlYXR1cmVfdXBkYXRlX2VuYWJsZV9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWlu
dDY0X3QgZmVhdHVyZV9tYXNrLCBib29sIGVuYWJsZWQpOwogY29uc3QgY2hhciAqc211X2dldF9t
ZXNzYWdlX25hbWUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X21lc3NhZ2VfdHlw
ZSB0eXBlKTsKIGNvbnN0IGNoYXIgKnNtdV9nZXRfZmVhdHVyZV9uYW1lKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCBlbnVtIHNtdV9mZWF0dXJlX21hc2sgZmVhdHVyZSk7CitzaXplX3Qgc211X3N5
c19nZXRfcHBfZmVhdHVyZV9tYXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBjaGFyICpidWYp
OworaW50IHNtdV9zeXNfc2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwgdWludDY0X3QgbmV3X21hc2spOwogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvcG93ZXJwbGF5L25hdmkxMF9wcHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93
ZXJwbGF5L25hdmkxMF9wcHQuYwppbmRleCBjODczMjI4YmYwNWYuLmNkMDkyMDA5M2E1ZSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L25hdmkxMF9wcHQuYwpAQCAtMTQyMiwxNjkg
KzE0MjIsNiBAQCBzdGF0aWMgaW50IG5hdmkxMF9nZXRfdWNsa19kcG1fc3RhdGVzKHN0cnVjdCBz
bXVfY29udGV4dCAqc211LCB1aW50MzJfdCAqY2xvY2tzXwogCXJldHVybiAwOwogfQogCi1zdGF0
aWMgaW50IG5hdmkxMF9nZXRfcHBmZWF0dXJlX3N0YXR1cyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwKLQkJCQkgICAgICAgY2hhciAqYnVmKQotewotCXN0YXRpYyBjb25zdCBjaGFyICpwcGZlYXR1
cmVfbmFtZVtdID0gewotCQkJCSJEUE1fUFJFRkVUQ0hFUiIsCi0JCQkJIkRQTV9HRlhDTEsiLAot
CQkJCSJEUE1fR0ZYX1BBQ0UiLAotCQkJCSJEUE1fVUNMSyIsCi0JCQkJIkRQTV9TT0NDTEsiLAot
CQkJCSJEUE1fTVAwQ0xLIiwKLQkJCQkiRFBNX0xJTksiLAotCQkJCSJEUE1fRENFRkNMSyIsCi0J
CQkJIk1FTV9WRERDSV9TQ0FMSU5HIiwKLQkJCQkiTUVNX01WRERfU0NBTElORyIsCi0JCQkJIkRT
X0dGWENMSyIsCi0JCQkJIkRTX1NPQ0NMSyIsCi0JCQkJIkRTX0xDTEsiLAotCQkJCSJEU19EQ0VG
Q0xLIiwKLQkJCQkiRFNfVUNMSyIsCi0JCQkJIkdGWF9VTFYiLAotCQkJCSJGV19EU1RBVEUiLAot
CQkJCSJHRlhPRkYiLAotCQkJCSJCQUNPIiwKLQkJCQkiVkNOX1BHIiwKLQkJCQkiSlBFR19QRyIs
Ci0JCQkJIlVTQl9QRyIsCi0JCQkJIlJTTVVfU01OX0NHIiwKLQkJCQkiUFBUIiwKLQkJCQkiVERD
IiwKLQkJCQkiR0ZYX0VEQyIsCi0JCQkJIkFQQ0NfUExVUyIsCi0JCQkJIkdUSFIiLAotCQkJCSJB
Q0RDIiwKLQkJCQkiVlIwSE9UIiwKLQkJCQkiVlIxSE9UIiwKLQkJCQkiRldfQ1RGIiwKLQkJCQki
RkFOX0NPTlRST0wiLAotCQkJCSJUSEVSTUFMIiwKLQkJCQkiR0ZYX0RDUyIsCi0JCQkJIlJNIiwK
LQkJCQkiTEVEX0RJU1BMQVkiLAotCQkJCSJHRlhfU1MiLAotCQkJCSJPVVRfT0ZfQkFORF9NT05J
VE9SIiwKLQkJCQkiVEVNUF9ERVBFTkRFTlRfVk1JTiIsCi0JCQkJIk1NSFVCX1BHIiwKLQkJCQki
QVRIVUJfUEcifTsKLQlzdGF0aWMgY29uc3QgY2hhciAqb3V0cHV0X3RpdGxlW10gPSB7Ci0JCQkJ
IkZFQVRVUkVTIiwKLQkJCQkiQklUTUFTSyIsCi0JCQkJIkVOQUJMRU1FTlQifTsKLQl1aW50NjRf
dCBmZWF0dXJlc19lbmFibGVkOwotCXVpbnQzMl90IGZlYXR1cmVfbWFza1syXTsKLQlpbnQgaTsK
LQlpbnQgcmV0ID0gMDsKLQlpbnQgc2l6ZSA9IDA7Ci0KLQlyZXQgPSBzbXVfZmVhdHVyZV9nZXRf
ZW5hYmxlZF9tYXNrKHNtdSwgZmVhdHVyZV9tYXNrLCAyKTsKLQlQUF9BU1NFUlRfV0lUSF9DT0RF
KCFyZXQsCi0JCQkiW0dldFBQZmVhdHVyZVN0YXR1c10gRmFpbGVkIHRvIGdldCBlbmFibGVkIHNt
YyBmZWF0dXJlcyEiLAotCQkJcmV0dXJuIHJldCk7Ci0JZmVhdHVyZXNfZW5hYmxlZCA9ICh1aW50
NjRfdClmZWF0dXJlX21hc2tbMF0gfAotCQkJICAgKHVpbnQ2NF90KWZlYXR1cmVfbWFza1sxXSA8
PCAzMjsKLQotCXNpemUgKz0gc3ByaW50ZihidWYgKyBzaXplLCAiQ3VycmVudCBwcGZlYXR1cmVz
OiAweCUwMTZsbHhcbiIsIGZlYXR1cmVzX2VuYWJsZWQpOwotCXNpemUgKz0gc3ByaW50ZihidWYg
KyBzaXplLCAiJS0xOXMgJS0yMnMgJXNcbiIsCi0JCQkJb3V0cHV0X3RpdGxlWzBdLAotCQkJCW91
dHB1dF90aXRsZVsxXSwKLQkJCQlvdXRwdXRfdGl0bGVbMl0pOwotCWZvciAoaSA9IDA7IGkgPCAo
c2l6ZW9mKHBwZmVhdHVyZV9uYW1lKSAvIHNpemVvZihwcGZlYXR1cmVfbmFtZVswXSkpOyBpKysp
IHsKLQkJc2l6ZSArPSBzcHJpbnRmKGJ1ZiArIHNpemUsICIlLTE5cyAweCUwMTZsbHggJTZzXG4i
LAotCQkJCQlwcGZlYXR1cmVfbmFtZVtpXSwKLQkJCQkJMVVMTCA8PCBpLAotCQkJCQkoZmVhdHVy
ZXNfZW5hYmxlZCAmICgxVUxMIDw8IGkpKSA/ICJZIiA6ICJOIik7Ci0JfQotCi0JcmV0dXJuIHNp
emU7Ci19Ci0KLXN0YXRpYyBpbnQgbmF2aTEwX2VuYWJsZV9zbWNfZmVhdHVyZXMoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsCi0JCQkJICAgICAgYm9vbCBlbmFibGVkLAotCQkJCSAgICAgIHVpbnQ2
NF90IGZlYXR1cmVfbWFza3MpCi17Ci0Jc3RydWN0IHNtdV9mZWF0dXJlICpmZWF0dXJlID0gJnNt
dS0+c211X2ZlYXR1cmU7Ci0JdWludDMyX3QgZmVhdHVyZV9sb3csIGZlYXR1cmVfaGlnaDsKLQl1
aW50MzJfdCBmZWF0dXJlX21hc2tbMl07Ci0JaW50IHJldCA9IDA7Ci0KLQlmZWF0dXJlX2xvdyA9
ICh1aW50MzJfdCkoZmVhdHVyZV9tYXNrcyAmIDB4RkZGRkZGRkYpOwotCWZlYXR1cmVfaGlnaCA9
ICh1aW50MzJfdCkoKGZlYXR1cmVfbWFza3MgJiAweEZGRkZGRkZGMDAwMDAwMDBVTEwpID4+IDMy
KTsKLQotCWlmIChlbmFibGVkKSB7Ci0JCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJh
bShzbXUsIFNNVV9NU0dfRW5hYmxlU211RmVhdHVyZXNMb3csCi0JCQkJCQkgIGZlYXR1cmVfbG93
KTsKLQkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7Ci0JCXJldCA9IHNtdV9zZW5kX3NtY19tc2df
d2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfRW5hYmxlU211RmVhdHVyZXNIaWdoLAotCQkJCQkJICBm
ZWF0dXJlX2hpZ2gpOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQl9IGVsc2UgewotCQly
ZXQgPSBzbXVfc2VuZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211LCBTTVVfTVNHX0Rpc2FibGVTbXVG
ZWF0dXJlc0xvdywKLQkJCQkJCSAgZmVhdHVyZV9sb3cpOwotCQlpZiAocmV0KQotCQkJcmV0dXJu
IHJldDsKLQkJcmV0ID0gc211X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwgU01VX01TR19E
aXNhYmxlU211RmVhdHVyZXNIaWdoLAotCQkJCQkJICBmZWF0dXJlX2hpZ2gpOwotCQlpZiAocmV0
KQotCQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlyZXQgPSBzbXVfZmVhdHVyZV9nZXRfZW5hYmxlZF9t
YXNrKHNtdSwgZmVhdHVyZV9tYXNrLCAyKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCi0J
bXV0ZXhfbG9jaygmZmVhdHVyZS0+bXV0ZXgpOwotCWJpdG1hcF9jb3B5KGZlYXR1cmUtPmVuYWJs
ZWQsICh1bnNpZ25lZCBsb25nICopJmZlYXR1cmVfbWFzaywKLQkJICAgIGZlYXR1cmUtPmZlYXR1
cmVfbnVtKTsKLQltdXRleF91bmxvY2soJmZlYXR1cmUtPm11dGV4KTsKLQotCXJldHVybiAwOwot
fQotCi1zdGF0aWMgaW50IG5hdmkxMF9zZXRfcHBmZWF0dXJlX3N0YXR1cyhzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwKLQkJCQkgICAgICAgdWludDY0X3QgbmV3X3BwZmVhdHVyZV9tYXNrcykKLXsK
LQl1aW50NjRfdCBmZWF0dXJlc19lbmFibGVkOwotCXVpbnQzMl90IGZlYXR1cmVfbWFza1syXTsK
LQl1aW50NjRfdCBmZWF0dXJlc190b19lbmFibGU7Ci0JdWludDY0X3QgZmVhdHVyZXNfdG9fZGlz
YWJsZTsKLQlpbnQgcmV0ID0gMDsKLQotCXJldCA9IHNtdV9mZWF0dXJlX2dldF9lbmFibGVkX21h
c2soc211LCBmZWF0dXJlX21hc2ssIDIpOwotCVBQX0FTU0VSVF9XSVRIX0NPREUoIXJldCwKLQkJ
CSJbU2V0UFBmZWF0dXJlU3RhdHVzXSBGYWlsZWQgdG8gZ2V0IGVuYWJsZWQgc21jIGZlYXR1cmVz
ISIsCi0JCQlyZXR1cm4gcmV0KTsKLQlmZWF0dXJlc19lbmFibGVkID0gKHVpbnQ2NF90KWZlYXR1
cmVfbWFza1swXSB8Ci0JCQkgICAodWludDY0X3QpZmVhdHVyZV9tYXNrWzFdIDw8IDMyOwotCi0J
ZmVhdHVyZXNfdG9fZGlzYWJsZSA9Ci0JCWZlYXR1cmVzX2VuYWJsZWQgJiB+bmV3X3BwZmVhdHVy
ZV9tYXNrczsKLQlmZWF0dXJlc190b19lbmFibGUgPQotCQl+ZmVhdHVyZXNfZW5hYmxlZCAmIG5l
d19wcGZlYXR1cmVfbWFza3M7Ci0KLQlwcl9kZWJ1ZygiZmVhdHVyZXNfdG9fZGlzYWJsZSAweCVs
bHhcbiIsIGZlYXR1cmVzX3RvX2Rpc2FibGUpOwotCXByX2RlYnVnKCJmZWF0dXJlc190b19lbmFi
bGUgMHglbGx4XG4iLCBmZWF0dXJlc190b19lbmFibGUpOwotCi0JaWYgKGZlYXR1cmVzX3RvX2Rp
c2FibGUpIHsKLQkJcmV0ID0gbmF2aTEwX2VuYWJsZV9zbWNfZmVhdHVyZXMoc211LCBmYWxzZSwg
ZmVhdHVyZXNfdG9fZGlzYWJsZSk7Ci0JCVBQX0FTU0VSVF9XSVRIX0NPREUoIXJldCwKLQkJCQki
W1NldFBQZmVhdHVyZVN0YXR1c10gRmFpbGVkIHRvIGRpc2FibGUgc21jIGZlYXR1cmVzISIsCi0J
CQkJcmV0dXJuIHJldCk7Ci0JfQotCi0JaWYgKGZlYXR1cmVzX3RvX2VuYWJsZSkgewotCQlyZXQg
PSBuYXZpMTBfZW5hYmxlX3NtY19mZWF0dXJlcyhzbXUsIHRydWUsIGZlYXR1cmVzX3RvX2VuYWJs
ZSk7Ci0JCVBQX0FTU0VSVF9XSVRIX0NPREUoIXJldCwKLQkJCQkiW1NldFBQZmVhdHVyZVN0YXR1
c10gRmFpbGVkIHRvIGVuYWJsZSBzbWMgZmVhdHVyZXMhIiwKLQkJCQlyZXR1cm4gcmV0KTsKLQl9
Ci0KLQlyZXR1cm4gMDsKLX0KLQogc3RhdGljIGludCBuYXZpMTBfc2V0X3BlYWtfY2xvY2tfYnlf
ZGV2aWNlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogewogCXN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2ID0gc211LT5hZGV2OwpAQCAtMTY4OSw4ICsxNTI2LDYgQEAgc3RhdGljIGNvbnN0IHN0
cnVjdCBwcHRhYmxlX2Z1bmNzIG5hdmkxMF9wcHRfZnVuY3MgPSB7CiAJLnNldF93YXRlcm1hcmtz
X3RhYmxlID0gbmF2aTEwX3NldF93YXRlcm1hcmtzX3RhYmxlLAogCS5yZWFkX3NlbnNvciA9IG5h
dmkxMF9yZWFkX3NlbnNvciwKIAkuZ2V0X3VjbGtfZHBtX3N0YXRlcyA9IG5hdmkxMF9nZXRfdWNs
a19kcG1fc3RhdGVzLAotCS5nZXRfcHBmZWF0dXJlX3N0YXR1cyA9IG5hdmkxMF9nZXRfcHBmZWF0
dXJlX3N0YXR1cywKLQkuc2V0X3BwZmVhdHVyZV9zdGF0dXMgPSBuYXZpMTBfc2V0X3BwZmVhdHVy
ZV9zdGF0dXMsCiAJLnNldF9wZXJmb3JtYW5jZV9sZXZlbCA9IG5hdmkxMF9zZXRfcGVyZm9ybWFu
Y2VfbGV2ZWwsCiAJLmdldF90aGVybWFsX3RlbXBlcmF0dXJlX3JhbmdlID0gbmF2aTEwX2dldF90
aGVybWFsX3RlbXBlcmF0dXJlX3JhbmdlLAogfTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvcG93ZXJwbGF5L3ZlZ2EyMF9wcHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJw
bGF5L3ZlZ2EyMF9wcHQuYwppbmRleCBjMDZhOTQ3MmMzYjIuLjUyYzhmYzlmMWZmNCAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvdmVnYTIwX3BwdC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3ZlZ2EyMF9wcHQuYwpAQCAtMjg1OCwxNTcgKzI4
NTgsNiBAQCBzdGF0aWMgaW50IHZlZ2EyMF9kcG1fc2V0X3ZjZV9lbmFibGUoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIGJvb2wgZW5hYmxlKQogCXJldHVybiBzbXVfZmVhdHVyZV9zZXRfZW5hYmxl
ZChzbXUsIFNNVV9GRUFUVVJFX0RQTV9WQ0VfQklULCBlbmFibGUpOwogfQogCi1zdGF0aWMgaW50
IHZlZ2EyMF9nZXRfZW5hYmxlZF9zbWNfZmVhdHVyZXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
Ci0JCXVpbnQ2NF90ICpmZWF0dXJlc19lbmFibGVkKQotewotCXVpbnQzMl90IGZlYXR1cmVfbWFz
a1syXSA9IHswLCAwfTsKLQlpbnQgcmV0ID0gMDsKLQotCXJldCA9IHNtdV9mZWF0dXJlX2dldF9l
bmFibGVkX21hc2soc211LCBmZWF0dXJlX21hc2ssIDIpOwotCWlmIChyZXQpCi0JCXJldHVybiBy
ZXQ7Ci0KLQkqZmVhdHVyZXNfZW5hYmxlZCA9ICgoKCh1aW50NjRfdClmZWF0dXJlX21hc2tbMF0g
PDwgU01VX0ZFQVRVUkVTX0xPV19TSElGVCkgJiBTTVVfRkVBVFVSRVNfTE9XX01BU0spIHwKLQkJ
CSgoKHVpbnQ2NF90KWZlYXR1cmVfbWFza1sxXSA8PCBTTVVfRkVBVFVSRVNfSElHSF9TSElGVCkg
JiBTTVVfRkVBVFVSRVNfSElHSF9NQVNLKSk7Ci0KLQlyZXR1cm4gcmV0OwotfQotCi1zdGF0aWMg
aW50IHZlZ2EyMF9lbmFibGVfc21jX2ZlYXR1cmVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAot
CQlib29sIGVuYWJsZSwgdWludDY0X3QgZmVhdHVyZV9tYXNrKQotewotCXVpbnQzMl90IHNtdV9m
ZWF0dXJlc19sb3csIHNtdV9mZWF0dXJlc19oaWdoOwotCWludCByZXQgPSAwOwotCi0Jc211X2Zl
YXR1cmVzX2xvdyA9ICh1aW50MzJfdCkoKGZlYXR1cmVfbWFzayAmIFNNVV9GRUFUVVJFU19MT1df
TUFTSykgPj4gU01VX0ZFQVRVUkVTX0xPV19TSElGVCk7Ci0Jc211X2ZlYXR1cmVzX2hpZ2ggPSAo
dWludDMyX3QpKChmZWF0dXJlX21hc2sgJiBTTVVfRkVBVFVSRVNfSElHSF9NQVNLKSA+PiBTTVVf
RkVBVFVSRVNfSElHSF9TSElGVCk7Ci0KLQlpZiAoZW5hYmxlKSB7Ci0JCXJldCA9IHNtdV9zZW5k
X3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfRW5hYmxlU211RmVhdHVyZXNMb3csCi0J
CQkJCQkgIHNtdV9mZWF0dXJlc19sb3cpOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQkJ
cmV0ID0gc211X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwgU01VX01TR19FbmFibGVTbXVG
ZWF0dXJlc0hpZ2gsCi0JCQkJCQkgIHNtdV9mZWF0dXJlc19oaWdoKTsKLQkJaWYgKHJldCkKLQkJ
CXJldHVybiByZXQ7Ci0JfSBlbHNlIHsKLQkJcmV0ID0gc211X3NlbmRfc21jX21zZ193aXRoX3Bh
cmFtKHNtdSwgU01VX01TR19EaXNhYmxlU211RmVhdHVyZXNMb3csCi0JCQkJCQkgIHNtdV9mZWF0
dXJlc19sb3cpOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQkJcmV0ID0gc211X3NlbmRf
c21jX21zZ193aXRoX3BhcmFtKHNtdSwgU01VX01TR19EaXNhYmxlU211RmVhdHVyZXNIaWdoLAot
CQkJCQkJICBzbXVfZmVhdHVyZXNfaGlnaCk7Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm4gcmV0Owot
CX0KLQotCXJldHVybiAwOwotCi19Ci0KLXN0YXRpYyBpbnQgdmVnYTIwX2dldF9wcGZlYXR1cmVf
c3RhdHVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBjaGFyICpidWYpCi17Ci0Jc3RhdGljIGNv
bnN0IGNoYXIgKnBwZmVhdHVyZV9uYW1lW10gPSB7Ci0JCQkJIkRQTV9QUkVGRVRDSEVSIiwKLQkJ
CQkiR0ZYQ0xLX0RQTSIsCi0JCQkJIlVDTEtfRFBNIiwKLQkJCQkiU09DQ0xLX0RQTSIsCi0JCQkJ
IlVWRF9EUE0iLAotCQkJCSJWQ0VfRFBNIiwKLQkJCQkiVUxWIiwKLQkJCQkiTVAwQ0xLX0RQTSIs
Ci0JCQkJIkxJTktfRFBNIiwKLQkJCQkiRENFRkNMS19EUE0iLAotCQkJCSJHRlhDTEtfRFMiLAot
CQkJCSJTT0NDTEtfRFMiLAotCQkJCSJMQ0xLX0RTIiwKLQkJCQkiUFBUIiwKLQkJCQkiVERDIiwK
LQkJCQkiVEhFUk1BTCIsCi0JCQkJIkdGWF9QRVJfQ1VfQ0ciLAotCQkJCSJSTSIsCi0JCQkJIkRD
RUZDTEtfRFMiLAotCQkJCSJBQ0RDIiwKLQkJCQkiVlIwSE9UIiwKLQkJCQkiVlIxSE9UIiwKLQkJ
CQkiRldfQ1RGIiwKLQkJCQkiTEVEX0RJU1BMQVkiLAotCQkJCSJGQU5fQ09OVFJPTCIsCi0JCQkJ
IkdGWF9FREMiLAotCQkJCSJHRlhPRkYiLAotCQkJCSJDRyIsCi0JCQkJIkZDTEtfRFBNIiwKLQkJ
CQkiRkNMS19EUyIsCi0JCQkJIk1QMUNMS19EUyIsCi0JCQkJIk1QMENMS19EUyIsCi0JCQkJIlhH
TUkiLAotCQkJCSJFQ0MifTsKLQlzdGF0aWMgY29uc3QgY2hhciAqb3V0cHV0X3RpdGxlW10gPSB7
Ci0JCQkJIkZFQVRVUkVTIiwKLQkJCQkiQklUTUFTSyIsCi0JCQkJIkVOQUJMRU1FTlQifTsKLQl1
aW50NjRfdCBmZWF0dXJlc19lbmFibGVkOwotCWludCBpOwotCWludCByZXQgPSAwOwotCWludCBz
aXplID0gMDsKLQotCXJldCA9IHZlZ2EyMF9nZXRfZW5hYmxlZF9zbWNfZmVhdHVyZXMoc211LCAm
ZmVhdHVyZXNfZW5hYmxlZCk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCXNpemUgKz0g
c3ByaW50ZihidWYgKyBzaXplLCAiQ3VycmVudCBwcGZlYXR1cmVzOiAweCUwMTZsbHhcbiIsIGZl
YXR1cmVzX2VuYWJsZWQpOwotCXNpemUgKz0gc3ByaW50ZihidWYgKyBzaXplLCAiJS0xOXMgJS0y
MnMgJXNcbiIsCi0JCQkJb3V0cHV0X3RpdGxlWzBdLAotCQkJCW91dHB1dF90aXRsZVsxXSwKLQkJ
CQlvdXRwdXRfdGl0bGVbMl0pOwotCWZvciAoaSA9IDA7IGkgPCBHTkxEX0ZFQVRVUkVTX01BWDsg
aSsrKSB7Ci0JCXNpemUgKz0gc3ByaW50ZihidWYgKyBzaXplLCAiJS0xOXMgMHglMDE2bGx4ICU2
c1xuIiwKLQkJCQkJcHBmZWF0dXJlX25hbWVbaV0sCi0JCQkJCTFVTEwgPDwgaSwKLQkJCQkJKGZl
YXR1cmVzX2VuYWJsZWQgJiAoMVVMTCA8PCBpKSkgPyAiWSIgOiAiTiIpOwotCX0KLQotCXJldHVy
biBzaXplOwotfQotCi1zdGF0aWMgaW50IHZlZ2EyMF9zZXRfcHBmZWF0dXJlX3N0YXR1cyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDY0X3QgbmV3X3BwZmVhdHVyZV9tYXNrcykKLXsKLQl1
aW50NjRfdCBmZWF0dXJlc19lbmFibGVkOwotCXVpbnQ2NF90IGZlYXR1cmVzX3RvX2VuYWJsZTsK
LQl1aW50NjRfdCBmZWF0dXJlc190b19kaXNhYmxlOwotCWludCByZXQgPSAwOwotCi0JaWYgKG5l
d19wcGZlYXR1cmVfbWFza3MgPj0gKDFVTEwgPDwgR05MRF9GRUFUVVJFU19NQVgpKQotCQlyZXR1
cm4gLUVJTlZBTDsKLQotCXJldCA9IHZlZ2EyMF9nZXRfZW5hYmxlZF9zbWNfZmVhdHVyZXMoc211
LCAmZmVhdHVyZXNfZW5hYmxlZCk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCWZlYXR1
cmVzX3RvX2Rpc2FibGUgPQotCQlmZWF0dXJlc19lbmFibGVkICYgfm5ld19wcGZlYXR1cmVfbWFz
a3M7Ci0JZmVhdHVyZXNfdG9fZW5hYmxlID0KLQkJfmZlYXR1cmVzX2VuYWJsZWQgJiBuZXdfcHBm
ZWF0dXJlX21hc2tzOwotCi0JcHJfZGVidWcoImZlYXR1cmVzX3RvX2Rpc2FibGUgMHglbGx4XG4i
LCBmZWF0dXJlc190b19kaXNhYmxlKTsKLQlwcl9kZWJ1ZygiZmVhdHVyZXNfdG9fZW5hYmxlIDB4
JWxseFxuIiwgZmVhdHVyZXNfdG9fZW5hYmxlKTsKLQotCWlmIChmZWF0dXJlc190b19kaXNhYmxl
KSB7Ci0JCXJldCA9IHZlZ2EyMF9lbmFibGVfc21jX2ZlYXR1cmVzKHNtdSwgZmFsc2UsIGZlYXR1
cmVzX3RvX2Rpc2FibGUpOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlpZiAo
ZmVhdHVyZXNfdG9fZW5hYmxlKSB7Ci0JCXJldCA9IHZlZ2EyMF9lbmFibGVfc21jX2ZlYXR1cmVz
KHNtdSwgdHJ1ZSwgZmVhdHVyZXNfdG9fZW5hYmxlKTsKLQkJaWYgKHJldCkKLQkJCXJldHVybiBy
ZXQ7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KIHN0YXRpYyBib29sIHZlZ2EyMF9pc19kcG1fcnVu
bmluZyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIHsKIAlpbnQgcmV0ID0gMDsKQEAgLTMzMTEs
OCArMzE2MCw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyB2ZWdhMjBfcHB0
X2Z1bmNzID0gewogCS5mb3JjZV9kcG1fbGltaXRfdmFsdWUgPSB2ZWdhMjBfZm9yY2VfZHBtX2xp
bWl0X3ZhbHVlLAogCS51bmZvcmNlX2RwbV9sZXZlbHMgPSB2ZWdhMjBfdW5mb3JjZV9kcG1fbGV2
ZWxzLAogCS5nZXRfcHJvZmlsaW5nX2Nsa19tYXNrID0gdmVnYTIwX2dldF9wcm9maWxpbmdfY2xr
X21hc2ssCi0JLnNldF9wcGZlYXR1cmVfc3RhdHVzID0gdmVnYTIwX3NldF9wcGZlYXR1cmVfc3Rh
dHVzLAotCS5nZXRfcHBmZWF0dXJlX3N0YXR1cyA9IHZlZ2EyMF9nZXRfcHBmZWF0dXJlX3N0YXR1
cywKIAkuaXNfZHBtX3J1bm5pbmcgPSB2ZWdhMjBfaXNfZHBtX3J1bm5pbmcsCiAJLnNldF90aGVy
bWFsX2Zhbl90YWJsZSA9IHZlZ2EyMF9zZXRfdGhlcm1hbF9mYW5fdGFibGUsCiAJLmdldF9mYW5f
c3BlZWRfcGVyY2VudCA9IHZlZ2EyMF9nZXRfZmFuX3NwZWVkX3BlcmNlbnQsCi0tIAoyLjIyLjAK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZngg
bWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
