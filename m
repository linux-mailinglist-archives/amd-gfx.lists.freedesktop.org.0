Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 56A0C242C63
	for <lists+amd-gfx@lfdr.de>; Wed, 12 Aug 2020 17:54:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DE89A6E913;
	Wed, 12 Aug 2020 15:54:00 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-ej1-x642.google.com (mail-ej1-x642.google.com
 [IPv6:2a00:1450:4864:20::642])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0EE186E913
 for <amd-gfx@lists.freedesktop.org>; Wed, 12 Aug 2020 15:53:59 +0000 (UTC)
Received: by mail-ej1-x642.google.com with SMTP id g19so2795344ejc.9
 for <amd-gfx@lists.freedesktop.org>; Wed, 12 Aug 2020 08:53:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=mExAG7b2a5MB92Rv6Jdqbx+KYlSewFYT2pDukCgEKks=;
 b=hxSAv8zRDm/YOv5qH5FWHzMo47yweYVbBuzXz1/utOsmP7JIPRxIrm7M9NzjG+dcke
 3XaqkwEQiY2+XAduOJs1nQRfD1dKh/YJB1ElmfD1KrqChwRUk95Q34VbnEvuPiv8eK5s
 nuOJHQJDo/pzLqSbSw9lcXZvETsSFppXOvaQt69LN8yJ/ISNi5eAWn8hPJ6Bz72jkyAP
 4s6kC+MGprTRSaSaf5IBUVEE+m3pPz3tB+Zf+jZmLa6cqIUCeqlsoIpjL65NZn/KSsoy
 SNqtFQFqtRgHaJ7ii7wAvYdVnwy0kE7XWi4TI/yxMHBpTehtOGMeCRIPeL1H6mOnQofZ
 RAZQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=mExAG7b2a5MB92Rv6Jdqbx+KYlSewFYT2pDukCgEKks=;
 b=dp0SUTg2BG50ilvz81fKFoISWXokw/2R8x/aWdp057Skb5AsdcPGnLyLjZIiZ/LQV7
 J3kT6aVvb7Bu0VHKlyk9XL96VsjQXlfgwUn7j5HciwVP6qhzi8PawjnGJeOCzpVoHs48
 HAIY0VqnchYPMV2jYeUAMUukERv3G0hqezhtP4Xj286OTkaiwQUKH/8FR1DzWjMoIAGk
 5Z84be5BhoY840WGB22VvXf/Fcg2tf8/TXLUsnDIntfkiHykyn9pmvwNfHUhy4fghd/9
 qAXYNtYy95rUKMR0Up7SWiPjXuWyIhGD+a2ZMb5l0cNdfmBnHHlAZvKkune4w3gfoIHP
 Yfyw==
X-Gm-Message-State: AOAM531WXNjajXR9/w+amhTa/aELVB/5Nx+VoTc6brLcO0o+iykao2jJ
 /bJgLu8Y1UhQ6EFQf+ozu97JN7XD
X-Google-Smtp-Source: ABdhPJwOiIAvoHzit7ALr7pWAGjQXtoTtJnEeGnquEplrPk22Dpa3Yn/hhI8WunYA+C8UrhdfsTkfA==
X-Received: by 2002:a17:907:20e1:: with SMTP id
 rh1mr462793ejb.106.1597247635558; 
 Wed, 12 Aug 2020 08:53:55 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:7b:206a:6262:53e4])
 by smtp.gmail.com with ESMTPSA id p20sm1764017ejy.107.2020.08.12.08.53.54
 for <amd-gfx@lists.freedesktop.org>
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 12 Aug 2020 08:53:54 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: amd-gfx@lists.freedesktop.org
Subject: [PATCH] drm/amdgpu: revert "fix system hang issue during GPU reset"
Date: Wed, 12 Aug 2020 17:53:53 +0200
Message-Id: <20200812155353.105959-1-christian.koenig@amd.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VGhlIHdob2xlIGFwcHJvYWNoIHdhc24ndCB0aG91Z2h0IHRocm91Z2ggdGlsbCB0aGUgZW5kLgoK
V2UgYWxyZWFkeSBoYWQgYSByZXNldCBsb2NrIGxpa2UgdGhpcyBpbiB0aGUgcGFzdCBhbmQgaXQg
Y2F1c2VkIHRoZSBzYW1lIHByb2JsZW1zIGxpa2UgdGhpcyBvbmUuCgpDb21wbGV0ZWx5IHJldmVy
dCB0aGUgcGF0Y2ggZm9yIG5vdyBhbmQgYWRkIGluZGl2aWR1YWwgdHJ5bG9jayBwcm90ZWN0aW9u
IHRvIHRoZSBoYXJkd2FyZSBhY2Nlc3MgZnVuY3Rpb25zIGFzIG5lY2Vzc2FyeS4KClRoaXMgcmV2
ZXJ0cyBjb21taXQgZWRhZDgzMTJjYmJmOWEzM2M4Njg3M2ZjNDA5MzY2NGYxNTBkZDVjMS4KClNp
Z25lZC1vZmYtYnk6IENocmlzdGlhbiBLw7ZuaWcgPGNocmlzdGlhbi5rb2VuaWdAYW1kLmNvbT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaCAgICAgICAgICAgfCAgIDkg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmQuYyAgICB8ICA0MCAr
LQogLi4uL2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3YxMC5jICAgIHwgICAyICst
CiAuLi4vZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y3LmMgfCAgIDIgKy0K
IC4uLi9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjguYyB8ICAgMiArLQog
Li4uL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OS5jIHwgICAyICstCiAu
Li4vZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ3B1dm0uYyAgfCAgIDcgLQogZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMgICAgICAgIHwgICA0IC0KIGRyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jdHguYyAgICAgICB8ICAgNCAtCiBkcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGVidWdmcy5jICAgfCAgMTQgKy0KIGRyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYyAgICB8ICA1NyArKy0KIGRyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZW0uYyAgICAgICB8ICAgNCAtCiBkcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZ2Z4LmMgICAgICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9qb2IuYyAgICAgICB8ICAxNCArLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jICAgICAgIHwgICA0IC0KIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jICAgICAgICB8IDM1MyArKysrLS0tLS0tLS0tLS0tLS0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wc3AuYyAgICAgICB8ICAgNCArLQog
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Jhcy5jICAgICAgIHwgICA0ICstCiBk
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMgICAgICAgfCAgIDIgKy0KIGRy
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV91Y29kZS5jICAgICB8ICAgMyArLQogZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3ZpcnQuYyAgICAgIHwgICAyICstCiBkcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmlydC5oICAgICAgfCAgIDQgKy0KIGRyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV94Z21pLmMgICAgICB8ICAxMSArLQogZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuaCAgICAgIHwgICAzICstCiBkcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hdG9tLmMgICAgICAgICAgICAgfCAgIDEgLQogZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3YxMF8wLmMgICAgICAgIHwgIDEwICstCiBkcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhfMC5jICAgICAgICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8wLmMgICAgICAgICB8ICAxMCArLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvZ21jX3YxMF8wLmMgICAgICAgIHwgICA0ICstCiBkcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9nbWNfdjdfMC5jICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2dtY192OF8wLmMgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvZ21jX3Y5XzAuYyAgICAgICAgIHwgICA3ICstCiBkcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9teGdwdV9haS5jICAgICAgICAgfCAgMTMgKy0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L214Z3B1X252LmMgICAgICAgICB8ICAxMyArLQogLi4uL2RybS9hbWQvYW1ka2Zk
L2tmZF9kZXZpY2VfcXVldWVfbWFuYWdlci5jIHwgIDE2ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGtmZC9rZmRfcHJvY2Vzcy5jICAgICAgfCAgIDQgLQogLi4uL2dwdS9kcm0vYW1kL2Rpc3Bs
YXkvYW1kZ3B1X2RtL2FtZGdwdV9kbS5jIHwgICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bv
d2VycGxheS9hbWRncHVfc211LmMgICAgfCAgIDIgKy0KIC4uLi9kcm0vYW1kL3Bvd2VycGxheS9o
d21nci92ZWdhMjBfaHdtZ3IuYyAgICB8ICAgMiArLQogMzkgZmlsZXMgY2hhbmdlZCwgMTg0IGlu
c2VydGlvbnMoKyksIDQ2OSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHUuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dS5oCmluZGV4IDFmOWQ5N2Y2MWFhNS4uOWM2ZmIzOGNlNTlkIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHUuaApAQCAtOTUyLDkgKzk1Miw5IEBAIHN0cnVjdCBhbWRncHVfZGV2aWNlIHsK
IAlib29sICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluX3N1c3BlbmQ7CiAJYm9vbAkJCQlp
bl9oaWJlcm5hdGU7CiAKLQlhdG9taWNfdCAgICAgICAgICAgICAgICAgICAgICAgIGluX2dwdV9y
ZXNldDsKKwlib29sICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluX2dwdV9yZXNldDsKIAll
bnVtIHBwX21wMV9zdGF0ZSAgICAgICAgICAgICAgIG1wMV9zdGF0ZTsKLQlzdHJ1Y3Qgcndfc2Vt
YXBob3JlCXJlc2V0X3NlbTsKKwlzdHJ1Y3QgbXV0ZXggIGxvY2tfcmVzZXQ7CiAJc3RydWN0IGFt
ZGdwdV9kb29yYmVsbF9pbmRleCBkb29yYmVsbF9pbmRleDsKIAogCXN0cnVjdCBtdXRleAkJCW5v
dGlmaWVyX2xvY2s7CkBAIC0xMjY5LDkgKzEyNjksNCBAQCBzdGF0aWMgaW5saW5lIGJvb2wgYW1k
Z3B1X2lzX3RteihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKICAgICAgICByZXR1cm4gYWRl
di0+Z21jLnRtel9lbmFibGVkOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgYW1kZ3B1X2luX3Jl
c2V0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQotewotCXJldHVybiBhdG9taWNfcmVhZCgm
YWRldi0+aW5fZ3B1X3Jlc2V0KSA/IHRydWUgOiBmYWxzZTsKLX0KLQogI2VuZGlmCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkLmMgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkLmMKaW5kZXggOTczOGRjY2IxYzJjLi4w
ZWZmYzFkNDY4MjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hbWRrZmQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2Zk
LmMKQEAgLTI0NCwxNCArMjQ0LDExIEBAIGludCBhbWRncHVfYW1ka2ZkX2FsbG9jX2d0dF9tZW0o
c3RydWN0IGtnZF9kZXYgKmtnZCwgc2l6ZV90IHNpemUsCiAJaWYgKGNwX21xZF9nZng5KQogCQli
cC5mbGFncyB8PSBBTURHUFVfR0VNX0NSRUFURV9DUF9NUURfR0ZYOTsKIAotCWlmICghZG93bl9y
ZWFkX3RyeWxvY2soJmFkZXYtPnJlc2V0X3NlbSkpCi0JCXJldHVybiAtRUlPOwotCiAJciA9IGFt
ZGdwdV9ib19jcmVhdGUoYWRldiwgJmJwLCAmYm8pOwogCWlmIChyKSB7CiAJCWRldl9lcnIoYWRl
di0+ZGV2LAogCQkJImZhaWxlZCB0byBhbGxvY2F0ZSBCTyBmb3IgYW1ka2ZkICglZClcbiIsIHIp
OwotCQlnb3RvIGVycjsKKwkJcmV0dXJuIHI7CiAJfQogCiAJLyogbWFwIHRoZSBidWZmZXIgKi8K
QEAgLTI4Niw3ICsyODMsNiBAQCBpbnQgYW1kZ3B1X2FtZGtmZF9hbGxvY19ndHRfbWVtKHN0cnVj
dCBrZ2RfZGV2ICprZ2QsIHNpemVfdCBzaXplLAogCiAJYW1kZ3B1X2JvX3VucmVzZXJ2ZShibyk7
CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCXJldHVybiAwOwogCiBhbGxvY2F0ZV9t
ZW1fa21hcF9ib19mYWlsZWQ6CkBAIC0yOTUsMjUgKzI5MSwxOSBAQCBpbnQgYW1kZ3B1X2FtZGtm
ZF9hbGxvY19ndHRfbWVtKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHNpemVfdCBzaXplLAogCWFtZGdw
dV9ib191bnJlc2VydmUoYm8pOwogYWxsb2NhdGVfbWVtX3Jlc2VydmVfYm9fZmFpbGVkOgogCWFt
ZGdwdV9ib191bnJlZigmYm8pOwotZXJyOgotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisK
IAlyZXR1cm4gcjsKIH0KIAogdm9pZCBhbWRncHVfYW1ka2ZkX2ZyZWVfZ3R0X21lbShzdHJ1Y3Qg
a2dkX2RldiAqa2dkLCB2b2lkICptZW1fb2JqKQogewotCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gKHN0cnVjdCBhbWRncHVfZGV2aWNlICopa2dkOwogCXN0cnVjdCBhbWRncHVfYm8gKmJv
ID0gKHN0cnVjdCBhbWRncHVfYm8gKikgbWVtX29iajsKIAotCWRvd25fcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKLQogCWFtZGdwdV9ib19yZXNlcnZlKGJvLCB0cnVlKTsKIAlhbWRncHVfYm9fa3Vu
bWFwKGJvKTsKIAlhbWRncHVfYm9fdW5waW4oYm8pOwogCWFtZGdwdV9ib191bnJlc2VydmUoYm8p
OwogCWFtZGdwdV9ib191bnJlZigmKGJvKSk7Ci0KLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0p
OwogfQogCiBpbnQgYW1kZ3B1X2FtZGtmZF9hbGxvY19nd3Moc3RydWN0IGtnZF9kZXYgKmtnZCwg
c2l6ZV90IHNpemUsCkBAIC0zNDUsMTQgKzMzNSw5IEBAIGludCBhbWRncHVfYW1ka2ZkX2FsbG9j
X2d3cyhzdHJ1Y3Qga2dkX2RldiAqa2dkLCBzaXplX3Qgc2l6ZSwKIAogdm9pZCBhbWRncHVfYW1k
a2ZkX2ZyZWVfZ3dzKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1lbV9vYmopCiB7Ci0Jc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKilrZ2Q7CiAJ
c3RydWN0IGFtZGdwdV9ibyAqYm8gPSAoc3RydWN0IGFtZGdwdV9ibyAqKW1lbV9vYmo7CiAKLQlk
b3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlhbWRncHVfYm9fdW5yZWYoJmJvKTsKLQot
CXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiB9CiAKIHVpbnQzMl90IGFtZGdwdV9hbWRrZmRf
Z2V0X2Z3X3ZlcnNpb24oc3RydWN0IGtnZF9kZXYgKmtnZCwKQEAgLTYyNiwxNSArNjExLDggQEAg
aW50IGFtZGdwdV9hbWRrZmRfc3VibWl0X2liKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIGVudW0ga2dk
X2VuZ2luZV90eXBlIGVuZ2luZSwKIAkvKiBUaGlzIHdvcmtzIGZvciBOT19IV1MuIFRPRE86IG5l
ZWQgdG8gaGFuZGxlIHdpdGhvdXQga25vd2luZyBWTUlEICovCiAJam9iLT52bWlkID0gdm1pZDsK
IAotCWlmICghZG93bl9yZWFkX3RyeWxvY2soJmFkZXYtPnJlc2V0X3NlbSkpIHsKLQkJcmV0ID0g
LUVJTzsKLQkJZ290byBlcnJfaWJfc2NoZWQ7Ci0JfQotCiAJcmV0ID0gYW1kZ3B1X2liX3NjaGVk
dWxlKHJpbmcsIDEsIGliLCBqb2IsICZmKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
Ci0KIAlpZiAocmV0KSB7CiAJCURSTV9FUlJPUigiYW1kZ3B1OiBmYWlsZWQgdG8gc2NoZWR1bGUg
SUIuXG4iKTsKIAkJZ290byBlcnJfaWJfc2NoZWQ7CkBAIC02NzAsOSArNjQ4LDYgQEAgaW50IGFt
ZGdwdV9hbWRrZmRfZmx1c2hfZ3B1X3RsYl92bWlkKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHVpbnQx
Nl90IHZtaWQpCiB7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSAoc3RydWN0IGFtZGdw
dV9kZXZpY2UgKilrZ2Q7CiAKLQlpZiAoIWRvd25fcmVhZF90cnlsb2NrKCZhZGV2LT5yZXNldF9z
ZW0pKQotCQlyZXR1cm4gLUVJTzsKLQogCWlmIChhZGV2LT5mYW1pbHkgPT0gQU1ER1BVX0ZBTUlM
WV9BSSkgewogCQlpbnQgaTsKIApAQCAtNjgyLDggKzY1Nyw2IEBAIGludCBhbWRncHVfYW1ka2Zk
X2ZsdXNoX2dwdV90bGJfdm1pZChzdHJ1Y3Qga2dkX2RldiAqa2dkLCB1aW50MTZfdCB2bWlkKQog
CQlhbWRncHVfZ21jX2ZsdXNoX2dwdV90bGIoYWRldiwgdm1pZCwgQU1ER1BVX0dGWEhVQl8wLCAw
KTsKIAl9CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcmV0dXJuIDA7CiB9CiAK
QEAgLTY5MiwxOCArNjY1LDExIEBAIGludCBhbWRncHVfYW1ka2ZkX2ZsdXNoX2dwdV90bGJfcGFz
aWQoc3RydWN0IGtnZF9kZXYgKmtnZCwgdWludDE2X3QgcGFzaWQpCiAJc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKilrZ2Q7CiAJY29uc3QgdWludDMy
X3QgZmx1c2hfdHlwZSA9IDA7CiAJYm9vbCBhbGxfaHViID0gZmFsc2U7Ci0JaW50IHJldCA9IC1F
SU87CiAKIAlpZiAoYWRldi0+ZmFtaWx5ID09IEFNREdQVV9GQU1JTFlfQUkpCiAJCWFsbF9odWIg
PSB0cnVlOwogCi0JaWYgKGRvd25fcmVhZF90cnlsb2NrKCZhZGV2LT5yZXNldF9zZW0pKSB7Ci0J
CXJldCA9IGFtZGdwdV9nbWNfZmx1c2hfZ3B1X3RsYl9wYXNpZChhZGV2LAotCQkJCQlwYXNpZCwg
Zmx1c2hfdHlwZSwgYWxsX2h1Yik7Ci0JCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0JfQot
Ci0JcmV0dXJuIHJldDsKKwlyZXR1cm4gYW1kZ3B1X2dtY19mbHVzaF9ncHVfdGxiX3Bhc2lkKGFk
ZXYsIHBhc2lkLCBmbHVzaF90eXBlLCBhbGxfaHViKTsKIH0KIAogYm9vbCBhbWRncHVfYW1ka2Zk
X2hhdmVfYXRvbWljc19zdXBwb3J0KHN0cnVjdCBrZ2RfZGV2ICprZ2QpCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3YxMC5jCmluZGV4IGI4NzJj
ZGIwYjcwNS4uNjkxYzg5NzA1YmNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYwpAQCAtNTQzLDcgKzU0Myw3IEBAIHN0YXRpYyBp
bnQga2dkX2hxZF9kZXN0cm95KHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCwKIAl1aW50
MzJfdCB0ZW1wOwogCXN0cnVjdCB2MTBfY29tcHV0ZV9tcWQgKm0gPSBnZXRfbXFkKG1xZCk7CiAK
LQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJ
CXJldHVybiAtRUlPOwogCiAjaWYgMApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjcuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y3LmMKaW5kZXggODMyYTIwMGJiNjJmLi4wYjdlNzg3NDg1NDAg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4
X3Y3LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhf
djcuYwpAQCAtNDI1LDcgKzQyNSw3IEBAIHN0YXRpYyBpbnQga2dkX2hxZF9kZXN0cm95KHN0cnVj
dCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCwKIAl1bnNpZ25lZCBsb25nIGZsYWdzLCBlbmRfamlm
ZmllczsKIAlpbnQgcmV0cnk7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRUlPOwogCiAJYWNxdWlyZV9xdWV1ZShrZ2Qs
IHBpcGVfaWQsIHF1ZXVlX2lkKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfYW1ka2ZkX2dmeF92OC5jCmluZGV4IGQwOTQwMTIxYTZhOS4uY2NkNjM1YjgxMmI1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92
OC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4
LmMKQEAgLTQyMSw3ICs0MjEsNyBAQCBzdGF0aWMgaW50IGtnZF9ocWRfZGVzdHJveShzdHJ1Y3Qg
a2dkX2RldiAqa2dkLCB2b2lkICptcWQsCiAJaW50IHJldHJ5OwogCXN0cnVjdCB2aV9tcWQgKm0g
PSBnZXRfbXFkKG1xZCk7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2
LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRUlPOwogCiAJYWNxdWlyZV9xdWV1ZShrZ2QsIHBp
cGVfaWQsIHF1ZXVlX2lkKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y5LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2dmeF92OS5jCmluZGV4IDdlMTE2MjViNDE5ZS4uOTYxNDI0YmM3YTFmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y5LmMK
QEAgLTU0MSw3ICs1NDEsNyBAQCBpbnQga2dkX2dmeF92OV9ocWRfZGVzdHJveShzdHJ1Y3Qga2dk
X2RldiAqa2dkLCB2b2lkICptcWQsCiAJdWludDMyX3QgdGVtcDsKIAlzdHJ1Y3QgdjlfbXFkICpt
ID0gZ2V0X21xZChtcWQpOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRl
di0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVJTzsKIAogCWFjcXVpcmVfcXVldWUoa2dkLCBw
aXBlX2lkLCBxdWV1ZV9pZCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2dwdXZtLmMKaW5kZXggMGQ3NTcyNmJkMjI4Li43ZTIzOTRiNTBmYmYgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ3B1dm0uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMKQEAg
LTExOTQsOSArMTE5NCw2IEBAIGludCBhbWRncHVfYW1ka2ZkX2dwdXZtX2FsbG9jX21lbW9yeV9v
Zl9ncHUoCiAJCXJldHVybiAtRUlOVkFMOwogCX0KIAotCWlmICghZG93bl9yZWFkX3RyeWxvY2so
JmFkZXYtPnJlc2V0X3NlbSkpCi0JCXJldHVybiAtRUlPOwotCiAJKm1lbSA9IGt6YWxsb2Moc2l6
ZW9mKHN0cnVjdCBrZ2RfbWVtKSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCEqbWVtKSB7CiAJCXJldCA9
IC1FTk9NRU07CkBAIC0xMjYzLDcgKzEyNjAsNiBAQCBpbnQgYW1kZ3B1X2FtZGtmZF9ncHV2bV9h
bGxvY19tZW1vcnlfb2ZfZ3B1KAogCWlmIChvZmZzZXQpCiAJCSpvZmZzZXQgPSBhbWRncHVfYm9f
bW1hcF9vZmZzZXQoYm8pOwogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAlyZXR1cm4g
MDsKIAogYWxsb2NhdGVfaW5pdF91c2VyX3BhZ2VzX2ZhaWxlZDoKQEAgLTEyODEsOSArMTI3Nyw2
IEBAIGludCBhbWRncHVfYW1ka2ZkX2dwdXZtX2FsbG9jX21lbW9yeV9vZl9ncHUoCiAJCXNnX2Zy
ZWVfdGFibGUoc2cpOwogCQlrZnJlZShzZyk7CiAJfQotCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsKLQogCXJldHVybiByZXQ7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2NzLmMKaW5kZXggYTk0YjNmODYyZmMyLi5mZmJjYWY0YmZiOGIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9jcy5jCkBAIC0xMjkyLDggKzEyOTIsNiBAQCBpbnQgYW1kZ3B1X2Nz
X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsIHN0cnVjdCBkcm1fZmls
ZSAqZmlscCkKIAlwYXJzZXIuYWRldiA9IGFkZXY7CiAJcGFyc2VyLmZpbHAgPSBmaWxwOwogCi0J
ZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJciA9IGFtZGdwdV9jc19wYXJzZXJfaW5p
dCgmcGFyc2VyLCBkYXRhKTsKIAlpZiAocikgewogCQlEUk1fRVJST1IoIkZhaWxlZCB0byBpbml0
aWFsaXplIHBhcnNlciAlZCFcbiIsIHIpOwpAQCAtMTMzMyw4ICsxMzMxLDYgQEAgaW50IGFtZGdw
dV9jc19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLCBzdHJ1Y3QgZHJt
X2ZpbGUgKmZpbHApCiBvdXQ6CiAJYW1kZ3B1X2NzX3BhcnNlcl9maW5pKCZwYXJzZXIsIHIsIHJl
c2VydmVkX2J1ZmZlcnMpOwogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCXJldHVy
biByOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
Y3R4LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfY3R4LmMKaW5kZXggZDg1
ZDEzZjdhMDQzLi44ODQyYzU1ZDQ0OTAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9jdHguYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfY3R4LmMKQEAgLTM1OCw4ICszNTgsNiBAQCBzdGF0aWMgaW50IGFtZGdwdV9jdHhfcXVlcnky
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCWlmIChhdG9taWNfcmVhZCgmY3R4LT5ndWls
dHkpKQogCQlvdXQtPnN0YXRlLmZsYWdzIHw9IEFNREdQVV9DVFhfUVVFUlkyX0ZMQUdTX0dVSUxU
WTsKIAotCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCS8qcXVlcnkgdWUgY291bnQq
LwogCXJhc19jb3VudGVyID0gYW1kZ3B1X3Jhc19xdWVyeV9lcnJvcl9jb3VudChhZGV2LCBmYWxz
ZSk7CiAJLypyYXMgY291bnRlciBpcyBtb25vdG9uaWMgaW5jcmVhc2luZyovCkBAIC0zNzUsOCAr
MzczLDYgQEAgc3RhdGljIGludCBhbWRncHVfY3R4X3F1ZXJ5MihzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiwKIAkJY3R4LT5yYXNfY291bnRlcl9jZSA9IHJhc19jb3VudGVyOwogCX0KIAotCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAltdXRleF91bmxvY2soJm1nci0+bG9jayk7CiAJ
cmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RlYnVnZnMu
YwppbmRleCAwYWYyNDlhMWUzNWIuLjM1ZmVkNzVhNDM5NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RlYnVnZnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHVfZGVidWdmcy5jCkBAIC0xMDEsMTQgKzEwMSwxNCBAQCBzdGF0aWMg
aW50IGFtZGdwdV9kZWJ1Z2ZzX2F1dG9kdW1wX29wZW4oc3RydWN0IGlub2RlICppbm9kZSwgc3Ry
dWN0IGZpbGUgKmZpbGUpCiAKIAlmaWxlLT5wcml2YXRlX2RhdGEgPSBhZGV2OwogCi0JZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCW11dGV4X2xvY2soJmFkZXYtPmxvY2tfcmVzZXQpOwog
CWlmIChhZGV2LT5hdXRvZHVtcC5kdW1waW5nLmRvbmUpIHsKIAkJcmVpbml0X2NvbXBsZXRpb24o
JmFkZXYtPmF1dG9kdW1wLmR1bXBpbmcpOwogCQlyZXQgPSAwOwogCX0gZWxzZSB7CiAJCXJldCA9
IC1FQlVTWTsKIAl9Ci0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKKwltdXRleF91bmxvY2so
JmFkZXYtPmxvY2tfcmVzZXQpOwogCiAJcmV0dXJuIHJldDsKIH0KQEAgLTEyNyw3ICsxMjcsNyBA
QCBzdGF0aWMgdW5zaWduZWQgaW50IGFtZGdwdV9kZWJ1Z2ZzX2F1dG9kdW1wX3BvbGwoc3RydWN0
IGZpbGUgKmZpbGUsIHN0cnVjdCBwb2xsXwogCiAJcG9sbF93YWl0KGZpbGUsICZhZGV2LT5hdXRv
ZHVtcC5ncHVfaGFuZywgcG9sbF90YWJsZSk7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYp
KQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiBQT0xMSU4gfCBQT0xMUkROT1JN
IHwgUE9MTFdSTk9STTsKIAogCXJldHVybiAwOwpAQCAtMTI0Miw3ICsxMjQyLDcgQEAgc3RhdGlj
IGludCBhbWRncHVfZGVidWdmc190ZXN0X2liKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0
YSkKIAl9CiAKIAkvKiBBdm9pZCBhY2NpZGVudGx5IHVucGFya2luZyB0aGUgc2NoZWQgdGhyZWFk
IGR1cmluZyBHUFUgcmVzZXQgKi8KLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisJbXV0
ZXhfbG9jaygmYWRldi0+bG9ja19yZXNldCk7CiAKIAkvKiBob2xkIG9uIHRoZSBzY2hlZHVsZXIg
Ki8KIAlmb3IgKGkgPSAwOyBpIDwgQU1ER1BVX01BWF9SSU5HUzsgaSsrKSB7CkBAIC0xMjY5LDcg
KzEyNjksNyBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3Rlc3RfaWIoc3RydWN0IHNlcV9m
aWxlICptLCB2b2lkICpkYXRhKQogCQlrdGhyZWFkX3VucGFyayhyaW5nLT5zY2hlZC50aHJlYWQp
OwogCX0KIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CisJbXV0ZXhfdW5sb2NrKCZhZGV2
LT5sb2NrX3Jlc2V0KTsKIAogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGV2LT5kZXYpOwog
CXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRldi0+ZGV2KTsKQEAgLTE0NTksNyArMTQ1OSw3
IEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2RlYnVnZnNfaWJfcHJlZW1wdCh2b2lkICpkYXRhLCB1NjQg
dmFsKQogCQlyZXR1cm4gLUVOT01FTTsKIAogCS8qIEF2b2lkIGFjY2lkZW50bHkgdW5wYXJraW5n
IHRoZSBzY2hlZCB0aHJlYWQgZHVyaW5nIEdQVSByZXNldCAqLwotCWRvd25fcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKKwltdXRleF9sb2NrKCZhZGV2LT5sb2NrX3Jlc2V0KTsKIAogCS8qIHN0b3Ag
dGhlIHNjaGVkdWxlciAqLwogCWt0aHJlYWRfcGFyayhyaW5nLT5zY2hlZC50aHJlYWQpOwpAQCAt
MTUwMCw3ICsxNTAwLDcgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdmc19pYl9wcmVlbXB0KHZv
aWQgKmRhdGEsIHU2NCB2YWwpCiAJLyogcmVzdGFydCB0aGUgc2NoZWR1bGVyICovCiAJa3RocmVh
ZF91bnBhcmsocmluZy0+c2NoZWQudGhyZWFkKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7CisJbXV0ZXhfdW5sb2NrKCZhZGV2LT5sb2NrX3Jlc2V0KTsKIAogCXR0bV9ib191bmxvY2tf
ZGVsYXllZF93b3JrcXVldWUoJmFkZXYtPm1tYW4uYmRldiwgcmVzY2hlZCk7CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYwppbmRleCBmZTg4Nzg3NjFjMjkuLjE5
YWEwZDczMzRjNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2RldmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2Uu
YwpAQCAtMTk0MCw3ICsxOTQwLDcgQEAgc3RhdGljIGludCBhbWRncHVfZGV2aWNlX2Z3X2xvYWRp
bmcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJCQlpZiAoYWRldi0+aXBfYmxvY2tzW2ld
LnN0YXR1cy5odyA9PSB0cnVlKQogCQkJCWJyZWFrOwogCi0JCQlpZiAoYW1kZ3B1X2luX3Jlc2V0
KGFkZXYpIHx8IGFkZXYtPmluX3N1c3BlbmQpIHsKKwkJCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQg
fHwgYWRldi0+aW5fc3VzcGVuZCkgewogCQkJCXIgPSBhZGV2LT5pcF9ibG9ja3NbaV0udmVyc2lv
bi0+ZnVuY3MtPnJlc3VtZShhZGV2KTsKIAkJCQlpZiAocikgewogCQkJCQlEUk1fRVJST1IoInJl
c3VtZSBvZiBJUCBibG9jayA8JXM+IGZhaWxlZCAlZFxuIiwKQEAgLTIxMTcsNyArMjExNyw3IEBA
IHN0YXRpYyBib29sIGFtZGdwdV9kZXZpY2VfY2hlY2tfdnJhbV9sb3N0KHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2KQogCQkJQU1ER1BVX1JFU0VUX01BR0lDX05VTSkpCiAJCXJldHVybiB0cnVl
OwogCi0JaWYgKCFhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKCFhZGV2LT5pbl9ncHVfcmVz
ZXQpCiAJCXJldHVybiBmYWxzZTsKIAogCS8qCkBAIC0zMDU1LDggKzMwNTUsNyBAQCBpbnQgYW1k
Z3B1X2RldmljZV9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCW11dGV4X2luaXQo
JmFkZXYtPm1uX2xvY2spOwogCW11dGV4X2luaXQoJmFkZXYtPnZpcnQudmZfZXJyb3JzLmxvY2sp
OwogCWhhc2hfaW5pdChhZGV2LT5tbl9oYXNoKTsKLQlpbml0X3J3c2VtKCZhZGV2LT5yZXNldF9z
ZW0pOwotCWF0b21pY19zZXQoJmFkZXYtPmluX2dwdV9yZXNldCwgMCk7CisJbXV0ZXhfaW5pdCgm
YWRldi0+bG9ja19yZXNldCk7CiAJbXV0ZXhfaW5pdCgmYWRldi0+cHNwLm11dGV4KTsKIAltdXRl
eF9pbml0KCZhZGV2LT5ub3RpZmllcl9sb2NrKTsKIApAQCAtNDA4NCwxMSArNDA4Myw4IEBAIHN0
YXRpYyBpbnQgYW1kZ3B1X2RvX2FzaWNfcmVzZXQoc3RydWN0IGFtZGdwdV9oaXZlX2luZm8gKmhp
dmUsCiAJbGlzdF9mb3JfZWFjaF9lbnRyeSh0bXBfYWRldiwgZGV2aWNlX2xpc3RfaGFuZGxlLCBn
bWMueGdtaS5oZWFkKSB7CiAJCWlmIChuZWVkX2Z1bGxfcmVzZXQpIHsKIAkJCS8qIHBvc3QgY2Fy
ZCAqLwotCQkJaWYgKGFtZGdwdV9hdG9tX2FzaWNfaW5pdCh0bXBfYWRldi0+bW9kZV9pbmZvLmF0
b21fY29udGV4dCkpIHsKLQkJCQlkZXZfd2Fybih0bXBfYWRldi0+ZGV2LCAiYXNpYyBhdG9tIGlu
aXQgZmFpbGVkISIpOwotCQkJCXIgPSAtRUFHQUlOOwotCQkJCWdvdG8gb3V0OwotCQkJfQorCQkJ
aWYgKGFtZGdwdV9hdG9tX2FzaWNfaW5pdCh0bXBfYWRldi0+bW9kZV9pbmZvLmF0b21fY29udGV4
dCkpCisJCQkJRFJNX1dBUk4oImFzaWMgYXRvbSBpbml0IGZhaWxlZCEiKTsKIAogCQkJaWYgKCFy
KSB7CiAJCQkJZGV2X2luZm8odG1wX2FkZXYtPmRldiwgIkdQVSByZXNldCBzdWNjZWVkZWQsIHRy
eWluZyB0byByZXN1bWVcbiIpOwpAQCAtNDE3OCwxOCArNDE3NCwxNiBAQCBzdGF0aWMgaW50IGFt
ZGdwdV9kb19hc2ljX3Jlc2V0KHN0cnVjdCBhbWRncHVfaGl2ZV9pbmZvICpoaXZlLAogCXJldHVy
biByOwogfQogCi1zdGF0aWMgYm9vbCBhbWRncHVfZGV2aWNlX2xvY2tfYWRldihzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiwgc3RydWN0IGFtZGdwdV9oaXZlX2luZm8gKmhpdmUpCitzdGF0aWMg
Ym9vbCBhbWRncHVfZGV2aWNlX2xvY2tfYWRldihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwg
Ym9vbCB0cnlsb2NrKQogewotCWlmIChhdG9taWNfY21weGNoZygmYWRldi0+aW5fZ3B1X3Jlc2V0
LCAwLCAxKSAhPSAwKQotCQlyZXR1cm4gZmFsc2U7Ci0KLQlpZiAoaGl2ZSkgewotCQlkb3duX3dy
aXRlX25lc3RfbG9jaygmYWRldi0+cmVzZXRfc2VtLCAmaGl2ZS0+aGl2ZV9sb2NrKTsKLQl9IGVs
c2UgewotCQlkb3duX3dyaXRlKCZhZGV2LT5yZXNldF9zZW0pOwotCX0KKwlpZiAodHJ5bG9jaykg
eworCQlpZiAoIW11dGV4X3RyeWxvY2soJmFkZXYtPmxvY2tfcmVzZXQpKQorCQkJcmV0dXJuIGZh
bHNlOworCX0gZWxzZQorCQltdXRleF9sb2NrKCZhZGV2LT5sb2NrX3Jlc2V0KTsKIAogCWF0b21p
Y19pbmMoJmFkZXYtPmdwdV9yZXNldF9jb3VudGVyKTsKKwlhZGV2LT5pbl9ncHVfcmVzZXQgPSB0
cnVlOwogCXN3aXRjaCAoYW1kZ3B1X2FzaWNfcmVzZXRfbWV0aG9kKGFkZXYpKSB7CiAJY2FzZSBB
TURfUkVTRVRfTUVUSE9EX01PREUxOgogCQlhZGV2LT5tcDFfc3RhdGUgPSBQUF9NUDFfU1RBVEVf
U0hVVERPV047CkBAIC00MjA5LDggKzQyMDMsOCBAQCBzdGF0aWMgdm9pZCBhbWRncHVfZGV2aWNl
X3VubG9ja19hZGV2KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogewogCWFtZGdwdV92Zl9l
cnJvcl90cmFuc19hbGwoYWRldik7CiAJYWRldi0+bXAxX3N0YXRlID0gUFBfTVAxX1NUQVRFX05P
TkU7Ci0JYXRvbWljX3NldCgmYWRldi0+aW5fZ3B1X3Jlc2V0LCAwKTsKLQl1cF93cml0ZSgmYWRl
di0+cmVzZXRfc2VtKTsKKwlhZGV2LT5pbl9ncHVfcmVzZXQgPSBmYWxzZTsKKwltdXRleF91bmxv
Y2soJmFkZXYtPmxvY2tfcmVzZXQpOwogfQogCiBzdGF0aWMgdm9pZCBhbWRncHVfZGV2aWNlX3Jl
c3VtZV9kaXNwbGF5X2F1ZGlvKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQpAQCAtNDMyMCwx
NCArNDMxNCwxMiBAQCBpbnQgYW1kZ3B1X2RldmljZV9ncHVfcmVjb3ZlcihzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiwKIAkgKiBXZSBhbHdheXMgcmVzZXQgYWxsIHNjaGVkdWxlcnMgZm9yIGRl
dmljZSBhbmQgYWxsIGRldmljZXMgZm9yIFhHTUkKIAkgKiBoaXZlIHNvIHRoYXQgc2hvdWxkIHRh
a2UgY2FyZSBvZiB0aGVtIHRvby4KIAkgKi8KLQloaXZlID0gYW1kZ3B1X2dldF94Z21pX2hpdmUo
YWRldiwgZmFsc2UpOwotCWlmIChoaXZlKSB7Ci0JCWlmIChhdG9taWNfY21weGNoZygmaGl2ZS0+
aW5fcmVzZXQsIDAsIDEpICE9IDApIHsKLQkJCURSTV9JTkZPKCJCYWlsaW5nIG9uIFREUiBmb3Ig
c19qb2I6JWxseCwgaGl2ZTogJWxseCBhcyBhbm90aGVyIGFscmVhZHkgaW4gcHJvZ3Jlc3MiLAot
CQkJCWpvYiA/IGpvYi0+YmFzZS5pZCA6IC0xLCBoaXZlLT5oaXZlX2lkKTsKLQkJCXJldHVybiAw
OwotCQl9Ci0JCW11dGV4X2xvY2soJmhpdmUtPmhpdmVfbG9jayk7CisJaGl2ZSA9IGFtZGdwdV9n
ZXRfeGdtaV9oaXZlKGFkZXYsIHRydWUpOworCWlmIChoaXZlICYmICFtdXRleF90cnlsb2NrKCZo
aXZlLT5yZXNldF9sb2NrKSkgeworCQlEUk1fSU5GTygiQmFpbGluZyBvbiBURFIgZm9yIHNfam9i
OiVsbHgsIGhpdmU6ICVsbHggYXMgYW5vdGhlciBhbHJlYWR5IGluIHByb2dyZXNzIiwKKwkJCSAg
am9iID8gam9iLT5iYXNlLmlkIDogLTEsIGhpdmUtPmhpdmVfaWQpOworCQltdXRleF91bmxvY2so
JmhpdmUtPmhpdmVfbG9jayk7CisJCXJldHVybiAwOwogCX0KIAogCS8qCkBAIC00MzQ5LDExICs0
MzQxLDExIEBAIGludCBhbWRncHVfZGV2aWNlX2dwdV9yZWNvdmVyKHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2LAogCiAJLyogYmxvY2sgYWxsIHNjaGVkdWxlcnMgYW5kIHJlc2V0IGdpdmVuIGpv
YidzIHJpbmcgKi8KIAlsaXN0X2Zvcl9lYWNoX2VudHJ5KHRtcF9hZGV2LCBkZXZpY2VfbGlzdF9o
YW5kbGUsIGdtYy54Z21pLmhlYWQpIHsKLQkJaWYgKCFhbWRncHVfZGV2aWNlX2xvY2tfYWRldih0
bXBfYWRldiwgaGl2ZSkpIHsKKwkJaWYgKCFhbWRncHVfZGV2aWNlX2xvY2tfYWRldih0bXBfYWRl
diwgIWhpdmUpKSB7CiAJCQlEUk1fSU5GTygiQmFpbGluZyBvbiBURFIgZm9yIHNfam9iOiVsbHgs
IGFzIGFub3RoZXIgYWxyZWFkeSBpbiBwcm9ncmVzcyIsCiAJCQkJICBqb2IgPyBqb2ItPmJhc2Uu
aWQgOiAtMSk7Ci0JCQlyID0gMDsKLQkJCWdvdG8gc2tpcF9yZWNvdmVyeTsKKwkJCW11dGV4X3Vu
bG9jaygmaGl2ZS0+aGl2ZV9sb2NrKTsKKwkJCXJldHVybiAwOwogCQl9CiAKIAkJLyoKQEAgLTQ0
ODYsOSArNDQ3OCw4IEBAIGludCBhbWRncHVfZGV2aWNlX2dwdV9yZWNvdmVyKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LAogCQlhbWRncHVfZGV2aWNlX3VubG9ja19hZGV2KHRtcF9hZGV2KTsK
IAl9CiAKLXNraXBfcmVjb3Zlcnk6CiAJaWYgKGhpdmUpIHsKLQkJYXRvbWljX3NldCgmaGl2ZS0+
aW5fcmVzZXQsIDApOworCQltdXRleF91bmxvY2soJmhpdmUtPnJlc2V0X2xvY2spOwogCQltdXRl
eF91bmxvY2soJmhpdmUtPmhpdmVfbG9jayk7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfZ2VtLmMKaW5kZXggZWUxZThmZmY4M2IyLi44YzY0ZDhkNmNiODIgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZW0uYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZ2VtLmMKQEAgLTY3MCw4ICs2NzAsNiBAQCBpbnQg
YW1kZ3B1X2dlbV92YV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAog
CQlib192YSA9IE5VTEw7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJ
c3dpdGNoIChhcmdzLT5vcGVyYXRpb24pIHsKIAljYXNlIEFNREdQVV9WQV9PUF9NQVA6CiAJCXZh
X2ZsYWdzID0gYW1kZ3B1X2dlbV92YV9tYXBfZmxhZ3MoYWRldiwgYXJncy0+ZmxhZ3MpOwpAQCAt
NzAxLDggKzY5OSw2IEBAIGludCBhbWRncHVfZ2VtX3ZhX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHZvaWQgKmRhdGEsCiAJCWFtZGdwdV9nZW1fdmFfdXBkYXRlX3ZtKGFkZXYsICZmcHJp
di0+dm0sIGJvX3ZhLAogCQkJCQlhcmdzLT5vcGVyYXRpb24pOwogCi0JdXBfcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKLQogZXJyb3JfYmFja29mZjoKIAl0dG1fZXVfYmFja29mZl9yZXNlcnZhdGlv
bigmdGlja2V0LCAmbGlzdCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9nZnguYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9nZngu
YwppbmRleCA4Y2NkMTdkMDJjYzYuLmE4MTkzNjBhNGI2YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dmeC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9nZnguYwpAQCAtNzE5LDcgKzcxOSw3IEBAIHVpbnQzMl90IGFtZGdwdV9r
aXFfcnJlZyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdWludDMyX3QgcmVnKQogCSAqCiAJ
ICogYWxzbyBkb24ndCB3YWl0IGFueW1vcmUgZm9yIElSUSBjb250ZXh0CiAJICogKi8KLQlpZiAo
ciA8IDEgJiYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSB8fCBpbl9pbnRlcnJ1cHQoKSkpCisJaWYg
KHIgPCAxICYmIChhZGV2LT5pbl9ncHVfcmVzZXQgfHwgaW5faW50ZXJydXB0KCkpKQogCQlnb3Rv
IGZhaWxlZF9raXFfcmVhZDsKIAogCW1pZ2h0X3NsZWVwKCk7CkBAIC03NzcsNyArNzc3LDcgQEAg
dm9pZCBhbWRncHVfa2lxX3dyZWcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQzMl90
IHJlZywgdWludDMyX3QgdikKIAkgKgogCSAqIGFsc28gZG9uJ3Qgd2FpdCBhbnltb3JlIGZvciBJ
UlEgY29udGV4dAogCSAqICovCi0JaWYgKHIgPCAxICYmIChhbWRncHVfaW5fcmVzZXQoYWRldikg
fHwgaW5faW50ZXJydXB0KCkpKQorCWlmIChyIDwgMSAmJiAoYWRldi0+aW5fZ3B1X3Jlc2V0IHx8
IGluX2ludGVycnVwdCgpKSkKIAkJZ290byBmYWlsZWRfa2lxX3dyaXRlOwogCiAJbWlnaHRfc2xl
ZXAoKTsKQEAgLTc5Niw1ICs3OTYsNSBAQCB2b2lkIGFtZGdwdV9raXFfd3JlZyhzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiwgdWludDMyX3QgcmVnLCB1aW50MzJfdCB2KQogCWFtZGdwdV9yaW5n
X3VuZG8ocmluZyk7CiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgma2lxLT5yaW5nX2xvY2ssIGZs
YWdzKTsKIGZhaWxlZF9raXFfd3JpdGU6Ci0JZGV2X3dhcm4oYWRldi0+ZGV2LCAiZmFpbGVkIHRv
IHdyaXRlIHJlZzoleFxuIiwgcmVnKTsKKwlwcl9lcnIoImZhaWxlZCB0byB3cml0ZSByZWc6JXhc
biIsIHJlZyk7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfam9iLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfam9iLmMKaW5kZXgg
NzVkMzdkZmI1MWFhLi45MzcwMjlhZDUyNzEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9qb2IuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfam9iLmMKQEAgLTIyMCwxNyArMjIwLDE3IEBAIHN0YXRpYyBzdHJ1Y3QgZG1hX2ZlbmNl
ICphbWRncHVfam9iX3J1bihzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAqc2NoZWRfam9iKQogCiAJdHJh
Y2VfYW1kZ3B1X3NjaGVkX3J1bl9qb2Ioam9iKTsKIAotCWlmIChkb3duX3JlYWRfdHJ5bG9jaygm
cmluZy0+YWRldi0+cmVzZXRfc2VtKSkgeworCWlmIChqb2ItPnZyYW1fbG9zdF9jb3VudGVyICE9
IGF0b21pY19yZWFkKCZyaW5nLT5hZGV2LT52cmFtX2xvc3RfY291bnRlcikpCisJCWRtYV9mZW5j
ZV9zZXRfZXJyb3IoZmluaXNoZWQsIC1FQ0FOQ0VMRUQpOy8qIHNraXAgSUIgYXMgd2VsbCBpZiBW
UkFNIGxvc3QgKi8KKworCWlmIChmaW5pc2hlZC0+ZXJyb3IgPCAwKSB7CisJCURSTV9JTkZPKCJT
a2lwIHNjaGVkdWxpbmcgSUJzIVxuIik7CisJfSBlbHNlIHsKIAkJciA9IGFtZGdwdV9pYl9zY2hl
ZHVsZShyaW5nLCBqb2ItPm51bV9pYnMsIGpvYi0+aWJzLCBqb2IsCi0JCQkJCSZmZW5jZSk7Ci0J
CXVwX3JlYWQoJnJpbmctPmFkZXYtPnJlc2V0X3NlbSk7CisJCQkJICAgICAgICZmZW5jZSk7CiAJ
CWlmIChyKQogCQkJRFJNX0VSUk9SKCJFcnJvciBzY2hlZHVsaW5nIElCcyAoJWQpXG4iLCByKTsK
LQl9IGVsc2UgewotCQlkbWFfZmVuY2Vfc2V0X2Vycm9yKGZpbmlzaGVkLCAtRUNBTkNFTEVEKTsK
LQkJRFJNX0lORk8oIlNraXAgc2NoZWR1bGluZyBJQnMhXG4iKTsKIAl9Ci0KIAkvKiBpZiBncHUg
cmVzZXQsIGh3IGZlbmNlIHdpbGwgYmUgcmVwbGFjZWQgaGVyZSAqLwogCWRtYV9mZW5jZV9wdXQo
am9iLT5mZW5jZSk7CiAJam9iLT5mZW5jZSA9IGRtYV9mZW5jZV9nZXQoZmVuY2UpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jCmluZGV4IGY4ZGU5NDlkMjUxMC4uYjRhOWUw
NDc4ZjI1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfa21z
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jCkBAIC0xMDg3
LDggKzEwODcsNiBAQCB2b2lkIGFtZGdwdV9kcml2ZXJfcG9zdGNsb3NlX2ttcyhzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2LAogCWlmICghZnByaXYpCiAJCXJldHVybjsKIAotCWRvd25fcmVhZCgmYWRl
di0+cmVzZXRfc2VtKTsKLQogCXBtX3J1bnRpbWVfZ2V0X3N5bmMoZGV2LT5kZXYpOwogCiAJaWYg
KGFtZGdwdV9kZXZpY2VfaXBfZ2V0X2lwX2Jsb2NrKGFkZXYsIEFNRF9JUF9CTE9DS19UWVBFX1VW
RCkgIT0gTlVMTCkKQEAgLTExMjcsOCArMTEyNSw2IEBAIHZvaWQgYW1kZ3B1X2RyaXZlcl9wb3N0
Y2xvc2Vfa21zKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAKIAlwbV9ydW50aW1lX21hcmtfbGFz
dF9idXN5KGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZXYtPmRldik7
Ci0KLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogfQogCiAvKgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfcG0uYwppbmRleCAxNzA1ZTMyOGM2ZmMuLjY1YWQxNzRiYjk3NiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMKQEAgLTE2Myw3ICsxNjMsNyBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3Bvd2VyX2RwbV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsCiAJZW51bSBhbWRfcG1fc3RhdGVfdHlwZSBwbTsKIAlpbnQgcmV0OwogCi0JaWYgKGFtZGdw
dV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQ
RVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtMTcyLDgg
KzE3Miw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcG93ZXJfZHBtX3N0YXRlKHN0cnVj
dCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsKIAkJaWYgKGFkZXYt
PnNtdS5wcHRfZnVuY3MtPmdldF9jdXJyZW50X3Bvd2VyX3N0YXRlKQogCQkJcG0gPSBzbXVfZ2V0
X2N1cnJlbnRfcG93ZXJfc3RhdGUoJmFkZXYtPnNtdSk7CkBAIC0xODUsOCArMTgzLDYgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2dldF9wb3dlcl9kcG1fc3RhdGUoc3RydWN0IGRldmljZSAqZGV2
LAogCQlwbSA9IGFkZXYtPnBtLmRwbS51c2VyX3N0YXRlOwogCX0KIAotCXVwX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJ
cG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMjA1LDcgKzIwMSw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJfZHBtX3N0YXRlKHN0cnVjdCBkZXZp
Y2UgKmRldiwKIAllbnVtIGFtZF9wbV9zdGF0ZV90eXBlICBzdGF0ZTsKIAlpbnQgcmV0OwogCi0J
aWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQly
ZXR1cm4gLUVQRVJNOwogCiAJaWYgKHN0cm5jbXAoImJhdHRlcnkiLCBidWYsIHN0cmxlbigiYmF0
dGVyeSIpKSA9PSAwKQpAQCAtMjIzLDggKzIxOSw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9z
ZXRfcG93ZXJfZHBtX3N0YXRlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9
CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19z
bXUoYWRldikpIHsKIAkJbXV0ZXhfbG9jaygmYWRldi0+cG0ubXV0ZXgpOwogCQlhZGV2LT5wbS5k
cG0udXNlcl9zdGF0ZSA9IHN0YXRlOwpAQCAtMjM4LDkgKzIzMiw2IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9zZXRfcG93ZXJfZHBtX3N0YXRlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAogCQlhbWRn
cHVfcG1fY29tcHV0ZV9jbG9ja3MoYWRldik7CiAJfQotCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsKLQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50
aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0zMTYsNyArMzA3LDcgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2dldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwo
c3RydWN0IGRldmljZSAqZGV2LAogCWVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWwgPSAw
eGZmOwogCWludCByZXQ7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2
LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dl
dF9zeW5jKGRkZXYtPmRldik7CkBAIC0zMjUsOCArMzE2LDYgQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X2dldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAq
ZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsK
LQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJbGV2ZWwgPSBzbXVfZ2V0X3BlcmZv
cm1hbmNlX2xldmVsKCZhZGV2LT5zbXUpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9m
dW5jcy0+Z2V0X3BlcmZvcm1hbmNlX2xldmVsKQpAQCAtMzM0LDggKzMyMyw2IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9nZXRfcG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVj
dCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCWxldmVsID0gYWRldi0+cG0uZHBtLmZvcmNlZF9sZXZl
bDsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFz
dF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2
KTsKIApAQCAtMzYyLDcgKzM0OSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJf
ZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbnVtIGFt
ZF9kcG1fZm9yY2VkX2xldmVsIGN1cnJlbnRfbGV2ZWwgPSAweGZmOwogCWludCByZXQgPSAwOwog
Ci0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQog
CQlyZXR1cm4gLUVQRVJNOwogCiAJaWYgKHN0cm5jbXAoImxvdyIsIGJ1Ziwgc3RybGVuKCJsb3ci
KSkgPT0gMCkgewpAQCAtMzkzLDggKzM4MCw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRf
cG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJ
cmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAo
aXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCWN1cnJlbnRfbGV2ZWwgPSBzbXVfZ2V0X3BlcmZv
cm1hbmNlX2xldmVsKCZhZGV2LT5zbXUpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9m
dW5jcy0+Z2V0X3BlcmZvcm1hbmNlX2xldmVsKQpAQCAtNDAzLDggKzM4OCw3IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVj
dCBkZXZpY2UgKmRldiwKIAlpZiAoY3VycmVudF9sZXZlbCA9PSBsZXZlbCkgewogCQlwbV9ydW50
aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNw
ZW5kKGRkZXYtPmRldik7Ci0JCXJldCA9IGNvdW50OwotCQlnb3RvIHByb19lbmQ7CisJCXJldHVy
biBjb3VudDsKIAl9CiAKIAlpZiAoYWRldi0+YXNpY190eXBlID09IENISVBfUkFWRU4pIHsKQEAg
LTQyNSw4ICs0MDksNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bvd2VyX2RwbV9mb3Jj
ZV9wZXJmb3JtYW5jZV9sZXZlbChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXByX2VycigiQ3VycmVu
dGx5IG5vdCBpbiBhbnkgcHJvZmlsZSBtb2RlIVxuIik7CiAJCXBtX3J1bnRpbWVfbWFya19sYXN0
X2J1c3koZGRldi0+ZGV2KTsKIAkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2
KTsKLQkJcmV0ID0gLUVJTlZBTDsKLQkJZ290byBwcm9fZW5kOworCQlyZXR1cm4gLUVJTlZBTDsK
IAl9CiAKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsKQEAgLTQzNCw4ICs0MTcsNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bvd2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9s
ZXZlbChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCWlmIChyZXQpIHsKIAkJCXBtX3J1bnRpbWVfbWFy
a19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRk
ZXYtPmRldik7Ci0JCQlyZXQgPSAtRUlOVkFMOwotCQkJZ290byBwcm9fZW5kOworCQkJcmV0dXJu
IC1FSU5WQUw7CiAJCX0KIAl9IGVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9y
Y2VfcGVyZm9ybWFuY2VfbGV2ZWwpIHsKIAkJbXV0ZXhfbG9jaygmYWRldi0+cG0ubXV0ZXgpOwpA
QCAtNDQzLDE2ICs0MjUsMTQgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wb3dlcl9kcG1f
Zm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LAogCQkJbXV0ZXhfdW5s
b2NrKCZhZGV2LT5wbS5tdXRleCk7CiAJCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYt
PmRldik7CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwotCQkJcmV0
ID0gLUVJTlZBTDsKLQkJCWdvdG8gcHJvX2VuZDsKKwkJCXJldHVybiAtRUlOVkFMOwogCQl9CiAJ
CXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoYWRldiwgbGV2ZWwpOwog
CQlpZiAocmV0KSB7CiAJCQltdXRleF91bmxvY2soJmFkZXYtPnBtLm11dGV4KTsKIAkJCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9z
dXNwZW5kKGRkZXYtPmRldik7Ci0JCQlyZXQgPSAtRUlOVkFMOwotCQkJZ290byBwcm9fZW5kOwor
CQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0gZWxzZSB7CiAJCQlhZGV2LT5wbS5kcG0uZm9yY2VkX2xl
dmVsID0gbGV2ZWw7CiAJCX0KQEAgLTQ2MSw5ICs0NDEsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfc2V0X3Bvd2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9sZXZlbChzdHJ1Y3QgZGV2aWNlICpk
ZXYsCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVf
cHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKLXByb19lbmQ6Ci0JdXBfcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKLQlyZXR1cm4gcmV0OworCXJldHVybiBjb3VudDsKIH0KIAogc3RhdGljIHNz
aXplX3QgYW1kZ3B1X2dldF9wcF9udW1fc3RhdGVzKHN0cnVjdCBkZXZpY2UgKmRldiwKQEAgLTQ3
NSw3ICs0NTMsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX251bV9zdGF0ZXMoc3Ry
dWN0IGRldmljZSAqZGV2LAogCXN0cnVjdCBwcF9zdGF0ZXNfaW5mbyBkYXRhOwogCWludCBpLCBi
dWZfbGVuLCByZXQ7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5p
bl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9z
eW5jKGRkZXYtPmRldik7CkBAIC01MTksNyArNDk3LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2dldF9wcF9jdXJfc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LAogCWVudW0gYW1kX3BtX3N0YXRl
X3R5cGUgcG0gPSAwOwogCWludCBpID0gMCwgcmV0ID0gMDsKIAotCWlmIChhbWRncHVfaW5fcmVz
ZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAog
CXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTU2MCw3ICs1MzgsNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZvcmNlX3N0YXRlKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGRldiA9IGRldl9nZXRfZHJ2ZGF0YShkZXYpOwog
CXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7CiAKLQlpZiAo
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVy
biAtRVBFUk07CiAKIAlpZiAoYWRldi0+cHBfZm9yY2Vfc3RhdGVfZW5hYmxlZCkKQEAgLTU4MCw3
ICs1NTgsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2ZvcmNlX3N0YXRlKHN0cnVj
dCBkZXZpY2UgKmRldiwKIAl1bnNpZ25lZCBsb25nIGlkeDsKIAlpbnQgcmV0OwogCi0JaWYgKGFt
ZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4g
LUVQRVJNOwogCiAJaWYgKHN0cmxlbihidWYpID09IDEpCkBAIC02MDYsNyArNTg0LDYgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9mb3JjZV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJCQlyZXR1cm4gcmV0OwogCQl9CiAKLQkJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwog
CQkvKiBvbmx5IHNldCB1c2VyIHNlbGVjdGVkIHBvd2VyIHN0YXRlcyAqLwogCQlpZiAoc3RhdGUg
IT0gUE9XRVJfU1RBVEVfVFlQRV9JTlRFUk5BTF9CT09UICYmCiAJCSAgICBzdGF0ZSAhPSBQT1dF
Ul9TVEFURV9UWVBFX0RFRkFVTFQpIHsKQEAgLTYxNCw4ICs1OTEsNiBAQCBzdGF0aWMgc3NpemVf
dCBhbWRncHVfc2V0X3BwX2ZvcmNlX3N0YXRlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJCQkJQU1E
X1BQX1RBU0tfRU5BQkxFX1VTRVJfU1RBVEUsICZzdGF0ZSk7CiAJCQlhZGV2LT5wcF9mb3JjZV9z
dGF0ZV9lbmFibGVkID0gdHJ1ZTsKIAkJfQotCQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwot
CiAJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAkJcG1fcnVudGltZV9w
dXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIAl9CkBAIC02NDMsNyArNjE4LDcgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X2dldF9wcF90YWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJY2hhciAq
dGFibGUgPSBOVUxMOwogCWludCBzaXplLCByZXQ7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFk
ZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQg
PSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC02ODcsNyArNjYyLDcgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF90YWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsKIAlpbnQgcmV0ID0g
MDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNl
dCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+
ZGV2KTsKQEAgLTY5NiwyMSArNjcxLDE2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBf
dGFibGUoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewog
CQlyZXQgPSBzbXVfc3lzX3NldF9wcF90YWJsZSgmYWRldi0+c211LCAodm9pZCAqKWJ1ZiwgY291
bnQpOwogCQlpZiAocmV0KSB7CiAJCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRl
dik7CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwotCQkJdXBfcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkJCXJldHVybiByZXQ7CiAJCX0KIAl9IGVsc2UgaWYgKGFk
ZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3BwX3RhYmxlKQogCQlhbWRncHVfZHBtX3NldF9w
cF90YWJsZShhZGV2LCBidWYsIGNvdW50KTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9w
dXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtODQ1LDcgKzgxNSw3IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9zZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmljZSAqZGV2LAog
CWNvbnN0IGNoYXIgZGVsaW1pdGVyWzNdID0geycgJywgJ1xuJywgJ1wwJ307CiAJdWludDMyX3Qg
dHlwZTsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9y
ZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCWlmIChjb3VudCA+IDEyNykKQEAgLTg4OSwxMCAr
ODU5LDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9vZF9jbGtfdm9sdGFnZShzdHJ1
Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCi0JcmV0ID0gY291bnQ7Ci0KLQlk
b3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRl
dikpIHsKIAkJcmV0ID0gc211X29kX2VkaXRfZHBtX3RhYmxlKCZhZGV2LT5zbXUsIHR5cGUsCiAJ
CQkJCSAgICBwYXJhbWV0ZXIsIHBhcmFtZXRlcl9zaXplKTsKQEAgLTkwMCw4ICs4NjYsNyBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX29kX2Nsa192b2x0YWdlKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJaWYgKHJldCkgewogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5k
ZXYpOwogCQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKLQkJCXJldCA9
IC1FSU5WQUw7Ci0JCQlnb3RvIHByb19lbmQ7CisJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQogCX0g
ZWxzZSB7CiAJCWlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPm9kbl9lZGl0X2RwbV90YWJs
ZSkgewpAQCAtOTEwLDggKzg3NSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfb2Rf
Y2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmljZSAqZGV2LAogCQkJaWYgKHJldCkgewogCQkJCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAkJCQlwbV9ydW50aW1lX3B1dF9hdXRv
c3VzcGVuZChkZGV2LT5kZXYpOwotCQkJCXJldCA9IC1FSU5WQUw7Ci0JCQkJZ290byBwcm9fZW5k
OworCQkJCXJldHVybiAtRUlOVkFMOwogCQkJfQogCQl9CiAKQEAgLTkyMiwyMiArODg2LDE4IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmlj
ZSAqZGV2LAogCQkJCQkJTlVMTCk7CiAJCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2
LT5kZXYpOwogCQkJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7Ci0JCQkJ
cmV0ID0gY291bnQ7Ci0JCQkJZ290byBwcm9fZW5kOworCQkJCXJldHVybiBjb3VudDsKIAkJCX0g
ZWxzZSB7CiAJCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCQkJCXBt
X3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7Ci0JCQkJcmV0ID0gLUVJTlZBTDsK
LQkJCQlnb3RvIHByb19lbmQ7CisJCQkJcmV0dXJuIC1FSU5WQUw7CiAJCQl9CiAJCX0KIAl9CiAJ
cG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKLXByb19lbmQ6Ci0JdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsKLQlyZXR1cm4gcmV0OworCXJldHVybiBjb3VudDsKIH0KIAogc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X2dldF9wcF9vZF9jbGtfdm9sdGFnZShzdHJ1Y3QgZGV2aWNlICpkZXYsCkBAIC05NDks
NyArOTA5LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9vZF9jbGtfdm9sdGFnZShz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBzaXplOwogCWludCByZXQ7CiAKLQlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAt
RVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0xMDAz
LDcgKzk2Myw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZmVhdHVyZXMoc3RydWN0
IGRldmljZSAqZGV2LAogCXVpbnQ2NF90IGZlYXR1cmVtYXNrOwogCWludCByZXQ7CiAKLQlpZiAo
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVy
biAtRVBFUk07CiAKIAlyZXQgPSBrc3RydG91NjQoYnVmLCAwLCAmZmVhdHVyZW1hc2spOwpAQCAt
MTAxOCwxMyArOTc4LDExIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZmVhdHVyZXMo
c3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgmYWRl
di0+cmVzZXRfc2VtKTsKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsKIAkJcmV0ID0g
c211X3N5c19zZXRfcHBfZmVhdHVyZV9tYXNrKCZhZGV2LT5zbXUsIGZlYXR1cmVtYXNrKTsKIAkJ
aWYgKHJldCkgewogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCQkJ
cG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKLQkJCXVwX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7CiAJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQogCX0gZWxzZSBpZiAoYWRldi0+
cG93ZXJwbGF5LnBwX2Z1bmNzLT5zZXRfcHBmZWF0dXJlX3N0YXR1cykgewpAQCAtMTAzMiwxMiAr
OTkwLDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9mZWF0dXJlcyhzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJCWlmIChyZXQpIHsKIAkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRl
di0+ZGV2KTsKIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7Ci0JCQl1
cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0KIAl9Ci0J
dXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3ko
ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBA
IC0xMDUzLDcgKzEwMDgsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZlYXR1cmVz
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzc2l6ZV90IHNpemU7CiAJaW50IHJldDsKIAotCWlmIChh
bWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJu
IC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTEw
NjIsOCArMTAxNyw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZmVhdHVyZXMoc3Ry
dWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJc2l6ZSA9IHNt
dV9zeXNfZ2V0X3BwX2ZlYXR1cmVfbWFzaygmYWRldi0+c211LCBidWYpOwogCWVsc2UgaWYgKGFk
ZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X3BwZmVhdHVyZV9zdGF0dXMpCkBAIC0xMDcxLDgg
KzEwMjQsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZlYXR1cmVzKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAllbHNlCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxu
Iik7CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xh
c3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRl
dik7CiAKQEAgLTExMTgsNyArMTA2OSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBf
ZHBtX3NjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsKIAlpbnQgcmV0Owog
Ci0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQog
CQlyZXR1cm4gLUVQRVJNOwogCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYp
OwpAQCAtMTEyNyw4ICsxMDc4LDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1f
c2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCi0JZG93bl9yZWFk
KCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQlz
aXplID0gc211X3ByaW50X2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1NDTEssIGJ1Zik7CiAJ
ZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5wcmludF9jbG9ja19sZXZlbHMpCkBA
IC0xMTM2LDggKzEwODUsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9zY2xr
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0Vf
U0laRSwgIlxuIik7CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGlt
ZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5k
KGRkZXYtPmRldik7CiAKQEAgLTExOTAsNyArMTEzNyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdw
dV9zZXRfcHBfZHBtX3NjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWludCByZXQ7CiAJdWludDMy
X3QgbWFzayA9IDA7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5p
bl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBhbWRncHVfcmVhZF9tYXNr
KGJ1ZiwgY291bnQsICZtYXNrKTsKQEAgLTEyMDMsMTUgKzExNTAsMTEgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X3NldF9wcF9kcG1fc2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiBy
ZXQ7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBv
cnRfc3dfc211KGFkZXYpKQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211
LCBTTVVfU0NMSywgbWFzayk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5m
b3JjZV9jbG9ja19sZXZlbCkKIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9ja19sZXZlbChh
ZGV2LCBQUF9TQ0xLLCBtYXNrKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0
b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTIzMCw3ICsxMTczLDcgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2dldF9wcF9kcG1fbWNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBz
aXplOwogCWludCByZXQ7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2
LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dl
dF9zeW5jKGRkZXYtPmRldik7CkBAIC0xMjM5LDggKzExODIsNiBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfZ2V0X3BwX2RwbV9tY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsK
IAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9z
d19zbXUoYWRldikpCiAJCXNpemUgPSBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBT
TVVfTUNMSywgYnVmKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50
X2Nsb2NrX2xldmVscykKQEAgLTEyNDgsOCArMTE4OSw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdw
dV9nZXRfcHBfZHBtX21jbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJc2l6ZSA9IHNu
cHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiXG4iKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTI2Niw3ICsxMjA1LDcgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fbWNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJ
dWludDMyX3QgbWFzayA9IDA7CiAJaW50IHJldDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRl
dikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9
IGFtZGdwdV9yZWFkX21hc2soYnVmLCBjb3VudCwgJm1hc2spOwpAQCAtMTI3OSwxNSArMTIxOCwx
MSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9tY2xrKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXJldCA9IHNtdV9mb3JjZV9jbGtf
bGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9NQ0xLLCBtYXNrKTsKIAllbHNlIGlmIChhZGV2LT5wb3dl
cnBsYXkucHBfZnVuY3MtPmZvcmNlX2Nsb2NrX2xldmVsKQogCQlyZXQgPSBhbWRncHVfZHBtX2Zv
cmNlX2Nsb2NrX2xldmVsKGFkZXYsIFBQX01DTEssIG1hc2spOwogCi0JdXBfcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKLQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlw
bV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0xMzA2LDcgKzEyNDEs
NyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9zb2NjbGsoc3RydWN0IGRldmlj
ZSAqZGV2LAogCXNzaXplX3Qgc2l6ZTsKIAlpbnQgcmV0OwogCi0JaWYgKGFtZGdwdV9pbl9yZXNl
dChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJ
cmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtMTMxNSw4ICsxMjUwLDYg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXNpemUgPSBzbXVfcHJpbnRfY2xr
X2xldmVscygmYWRldi0+c211LCBTTVVfU09DQ0xLLCBidWYpOwogCWVsc2UgaWYgKGFkZXYtPnBv
d2VycGxheS5wcF9mdW5jcy0+cHJpbnRfY2xvY2tfbGV2ZWxzKQpAQCAtMTMyNCw4ICsxMjU3LDYg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAllbHNlCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7CiAK
LQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVz
eShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAK
QEAgLTEzNDIsNyArMTI3Myw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3Nv
Y2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IHJldDsKIAl1aW50MzJfdCBtYXNrID0gMDsK
IAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkK
IAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IGFtZGdwdV9yZWFkX21hc2soYnVmLCBjb3VudCwg
Jm1hc2spOwpAQCAtMTM1NSw4ICsxMjg2LDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9w
cF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlk
b3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRl
dikpCiAJCXJldCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TT0NDTEss
IG1hc2spOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tf
bGV2ZWwpCkBAIC0xMzY0LDggKzEyOTMsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bw
X2RwbV9zb2NjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJcmV0ID0gMDsKIAotCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRk
ZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAt
MTM4NCw3ICsxMzExLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fZmNsayhz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBzaXplOwogCWludCByZXQ7CiAKLQlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAt
RVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0xMzkz
LDggKzEzMjAsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9mY2xrKHN0cnVj
dCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXNpemUgPSBzbXVf
cHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRkNMSywgYnVmKTsKIAllbHNlIGlmIChh
ZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50X2Nsb2NrX2xldmVscykKQEAgLTE0MDIsOCAr
MTMyNyw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX2ZjbGsoc3RydWN0IGRl
dmljZSAqZGV2LAogCWVsc2UKIAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiXG4i
KTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFz
dF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2
KTsKIApAQCAtMTQyMCw3ICsxMzQzLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9k
cG1fZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IHJldDsKIAl1aW50MzJfdCBtYXNrID0g
MDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNl
dCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IGFtZGdwdV9yZWFkX21hc2soYnVmLCBjb3Vu
dCwgJm1hc2spOwpAQCAtMTQzMyw4ICsxMzU2LDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3Nl
dF9wcF9kcG1fZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCi0J
ZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFk
ZXYpKQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRkNMSywg
bWFzayk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9jbG9ja19s
ZXZlbCkKQEAgLTE0NDIsOCArMTM2Myw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBf
ZHBtX2ZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJcmV0ID0gMDsKIAotCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYt
PmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTQ2
Miw3ICsxMzgxLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fZGNlZmNsayhz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBzaXplOwogCWludCByZXQ7CiAKLQlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAt
RVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0xNDcx
LDggKzEzOTAsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9kY2VmY2xrKHN0
cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXNpemUgPSBz
bXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRENFRkNMSywgYnVmKTsKIAllbHNl
IGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50X2Nsb2NrX2xldmVscykKQEAgLTE0
ODAsOCArMTM5Nyw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX2RjZWZjbGso
c3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9T
SVpFLCAiXG4iKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1l
X21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQo
ZGRldi0+ZGV2KTsKIApAQCAtMTQ5OCw3ICsxNDEzLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X3NldF9wcF9kcG1fZGNlZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IHJldDsKIAl1aW50
MzJfdCBtYXNrID0gMDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYt
PmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IGFtZGdwdV9yZWFkX21h
c2soYnVmLCBjb3VudCwgJm1hc2spOwpAQCAtMTUxMSw4ICsxNDI2LDYgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X3NldF9wcF9kcG1fZGNlZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVy
biByZXQ7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1
cHBvcnRfc3dfc211KGFkZXYpKQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+
c211LCBTTVVfRENFRkNMSywgbWFzayk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1
bmNzLT5mb3JjZV9jbG9ja19sZXZlbCkKQEAgLTE1MjAsOCArMTQzMyw2IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UK
IAkJcmV0ID0gMDsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1l
X21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQo
ZGRldi0+ZGV2KTsKIApAQCAtMTU0MCw3ICsxNDUxLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2dldF9wcF9kcG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBzaXplOwogCWlu
dCByZXQ7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVf
cmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRk
ZXYtPmRldik7CkBAIC0xNTQ5LDggKzE0NjAsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0
X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlk
b3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRl
dikpCiAJCXNpemUgPSBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfUENJRSwg
YnVmKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50X2Nsb2NrX2xl
dmVscykKQEAgLTE1NTgsOCArMTQ2Nyw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBf
ZHBtX3BjaWUoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJc2l6ZSA9IHNucHJpbnRmKGJ1
ZiwgUEFHRV9TSVpFLCAiXG4iKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0
b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTU3Niw3ICsxNDgzLDcgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X3NldF9wcF9kcG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IHJldDsK
IAl1aW50MzJfdCBtYXNrID0gMDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYg
KGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IGFtZGdwdV9y
ZWFkX21hc2soYnVmLCBjb3VudCwgJm1hc2spOwpAQCAtMTU4OSw4ICsxNDk2LDYgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJl
dHVybiByZXQ7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlz
X3N1cHBvcnRfc3dfc211KGFkZXYpKQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRl
di0+c211LCBTTVVfUENJRSwgbWFzayk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1
bmNzLT5mb3JjZV9jbG9ja19sZXZlbCkKQEAgLTE1OTgsOCArMTUwMyw2IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3BjaWUoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJ
cmV0ID0gMDsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21h
cmtfbGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRl
di0+ZGV2KTsKIApAQCAtMTYxOCw3ICsxNTIxLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dl
dF9wcF9zY2xrX29kKHN0cnVjdCBkZXZpY2UgKmRldiwKIAl1aW50MzJfdCB2YWx1ZSA9IDA7CiAJ
aW50IHJldDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dw
dV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMo
ZGRldi0+ZGV2KTsKQEAgLTE2MjcsMTUgKzE1MzAsMTEgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2dldF9wcF9zY2xrX29kKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAK
LQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUo
YWRldikpCiAJCXZhbHVlID0gc211X2dldF9vZF9wZXJjZW50YWdlKCYoYWRldi0+c211KSwgU01V
X09EX1NDTEspOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X3NjbGtf
b2QpCiAJCXZhbHVlID0gYW1kZ3B1X2RwbV9nZXRfc2Nsa19vZChhZGV2KTsKIAotCXVwX3JlYWQo
JmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRl
dik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsKIApAQCAtMTY1Miw3
ICsxNTUxLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9zY2xrX29kKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAlpbnQgcmV0OwogCWxvbmcgaW50IHZhbHVlOwogCi0JaWYgKGFtZGdwdV9p
bl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJN
OwogCiAJcmV0ID0ga3N0cnRvbChidWYsIDAsICZ2YWx1ZSk7CkBAIC0xNjY2LDggKzE1NjUsNiBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX3NjbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2
LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQog
CWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewogCQl2YWx1ZSA9IHNtdV9zZXRfb2RfcGVy
Y2VudGFnZSgmKGFkZXYtPnNtdSksIFNNVV9PRF9TQ0xLLCAodWludDMyX3QpdmFsdWUpOwogCX0g
ZWxzZSB7CkBAIC0xNjgyLDggKzE1NzksNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bw
X3NjbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LAogCQl9CiAJfQogCi0JdXBfcmVhZCgmYWRldi0+
cmVzZXRfc2VtKTsKLQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlw
bV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0xNjk5LDcgKzE1OTQs
NyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmljZSAq
ZGV2LAogCXVpbnQzMl90IHZhbHVlID0gMDsKIAlpbnQgcmV0OwogCi0JaWYgKGFtZGdwdV9pbl9y
ZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJNOwog
CiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOwpAQCAtMTcwOCwxNSArMTYw
MywxMSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmlj
ZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJdmFsdWUgPSBzbXVfZ2V0X29k
X3BlcmNlbnRhZ2UoJihhZGV2LT5zbXUpLCBTTVVfT0RfTUNMSyk7CiAJZWxzZSBpZiAoYWRldi0+
cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfbWNsa19vZCkKIAkJdmFsdWUgPSBhbWRncHVfZHBtX2dl
dF9tY2xrX29kKGFkZXYpOwogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3Vz
cGVuZChkZGV2LT5kZXYpOwogCkBAIC0xNzMzLDcgKzE2MjQsNyBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfc2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LAogCWludCByZXQ7CiAJbG9u
ZyBpbnQgdmFsdWU7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5p
bl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyZXQgPSBrc3RydG9sKGJ1ZiwgMCwg
JnZhbHVlKTsKQEAgLTE3NDcsOCArMTYzOCw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRf
cHBfbWNsa19vZChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCi0JZG93
bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYp
KSB7CiAJCXZhbHVlID0gc211X3NldF9vZF9wZXJjZW50YWdlKCYoYWRldi0+c211KSwgU01VX09E
X01DTEssICh1aW50MzJfdCl2YWx1ZSk7CiAJfSBlbHNlIHsKQEAgLTE3NjMsOCArMTY1Miw2IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfbWNsa19vZChzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJCX0KIAl9CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9t
YXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRk
ZXYtPmRldik7CiAKQEAgLTE4MDAsNyArMTY4Nyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9n
ZXRfcHBfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlzc2l6ZV90IHNp
emU7CiAJaW50IHJldDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYt
PmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0
X3N5bmMoZGRldi0+ZGV2KTsKQEAgLTE4MDksOCArMTY5Niw2IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9nZXRfcHBfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0
dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNf
c3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXNpemUgPSBzbXVfZ2V0X3Bvd2VyX3Byb2ZpbGVfbW9k
ZSgmYWRldi0+c211LCBidWYpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+
Z2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkKQEAgLTE4MTgsOCArMTcwMyw2IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9nZXRfcHBfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBkZXZpY2UgKmRldiwK
IAllbHNlCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7CiAKLQl1cF9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2
LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTE4
NDQsNyArMTcyNyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfcG93ZXJfcHJvZmls
ZV9tb2RlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlsb25nIGludCBwcm9maWxlX21vZGUgPSAwOwog
CWNvbnN0IGNoYXIgZGVsaW1pdGVyWzNdID0geycgJywgJ1xuJywgJ1wwJ307CiAKLQlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAt
RVBFUk07CiAKIAl0bXBbMF0gPSAqKGJ1Zik7CkBAIC0xODc4LDE1ICsxNzYxLDExIEBAIHN0YXRp
YyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
Ci0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCiAJCXJldCA9IHNtdV9zZXRfcG93ZXJf
cHJvZmlsZV9tb2RlKCZhZGV2LT5zbXUsIHBhcmFtZXRlciwgcGFyYW1ldGVyX3NpemUsIHRydWUp
OwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVf
bW9kZSkKIAkJcmV0ID0gYW1kZ3B1X2RwbV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKGFkZXYsIHBh
cmFtZXRlciwgcGFyYW1ldGVyX3NpemUpOwogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsK
LQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1
dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOwogCkBAIC0xOTEyLDcgKzE3OTEsNyBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfZ2V0X2dwdV9idXN5X3BlcmNlbnQoc3RydWN0IGRldmljZSAqZGV2LAog
CXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7CiAJaW50IHIs
IHZhbHVlLCBzaXplID0gc2l6ZW9mKHZhbHVlKTsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRl
dikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXIgPSBw
bV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7CkBAIC0xOTIxLDExICsxODAwLDkgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2dldF9ncHVfYnVzeV9wZXJjZW50KHN0cnVjdCBkZXZpY2UgKmRl
diwKIAkJcmV0dXJuIHI7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCS8q
IHJlYWQgdGhlIElQIGJ1c3kgc2Vuc29yICovCiAJciA9IGFtZGdwdV9kcG1fcmVhZF9zZW5zb3Io
YWRldiwgQU1ER1BVX1BQX1NFTlNPUl9HUFVfTE9BRCwKIAkJCQkgICAodm9pZCAqKSZ2YWx1ZSwg
JnNpemUpOwotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAKIAlwbV9ydW50aW1lX21hcmtf
bGFzdF9idXN5KGRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+
ZGV2KTsKQEAgLTE5NTIsNyArMTgyOSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfbWVt
X2J1c3lfcGVyY2VudChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsKIAlpbnQgciwgdmFsdWUsIHNpemUgPSBzaXplb2Yo
dmFsdWUpOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1
X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRl
di0+ZGV2KTsKQEAgLTE5NjEsMTQgKzE4MzgsMTAgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dl
dF9tZW1fYnVzeV9wZXJjZW50KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJfQog
Ci0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJLyogcmVhZCB0aGUgSVAgYnVzeSBz
ZW5zb3IgKi8KIAlyID0gYW1kZ3B1X2RwbV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VO
U09SX01FTV9MT0FELAogCQkJCSAgICh2b2lkICopJnZhbHVlLCAmc2l6ZSk7CiAKLQl1cF9yZWFk
KCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5k
ZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7CiAKQEAgLTE5OTks
NyArMTg3Miw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcGNpZV9idyhzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJdWludDY0X3QgY291bnQwID0gMCwgY291bnQxID0gMDsKIAlpbnQgcmV0Owog
Ci0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQog
CQlyZXR1cm4gLUVQRVJNOwogCiAJaWYgKGFkZXYtPmZsYWdzICYgQU1EX0lTX0FQVSkKQEAgLTIw
MTQsMTIgKzE4ODcsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BjaWVfYncoc3RydWN0
IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKLQogCWFtZGdwdV9hc2ljX2dldF9wY2llX3VzYWdlKGFkZXYsICZjb3VudDAsICZj
b3VudDEpOwogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCXBtX3J1bnRpbWVfbWFy
a19sYXN0X2J1c3koZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2
LT5kZXYpOwogCkBAIC0yMDQ0LDcgKzE5MTMsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0
X3VuaXF1ZV9pZChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3RydWN0IGRybV9kZXZpY2UgKmRkZXYg
PSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRk
ZXYtPmRldl9wcml2YXRlOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRl
di0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJaWYgKGFkZXYtPnVuaXF1ZV9p
ZCkKQEAgLTIxNDIsNyArMjAxMSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfZ3B1X21l
dHJpY3Moc3RydWN0IGRldmljZSAqZGV2LAogCXNzaXplX3Qgc2l6ZSA9IDA7CiAJaW50IHJldDsK
IAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkK
IAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2
KTsKQEAgLTIxNTEsMTIgKzIwMjAsMTAgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9ncHVf
bWV0cmljcyhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByZXQ7CiAJfQogCi0JZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJ
c2l6ZSA9IHNtdV9zeXNfZ2V0X2dwdV9tZXRyaWNzKCZhZGV2LT5zbXUsICZncHVfbWV0cmljcyk7
CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfZ3B1X21ldHJpY3MpCiAJ
CXNpemUgPSBhbWRncHVfZHBtX2dldF9ncHVfbWV0cmljcyhhZGV2LCAmZ3B1X21ldHJpY3MpOwot
CXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAKIAlpZiAoc2l6ZSA8PSAwKQogCQlnb3RvIG91
dDsKQEAgLTIzNjgsNyArMjIzNSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93
X3RlbXAoc3RydWN0IGRldmljZSAqZGV2LAogCWludCBjaGFubmVsID0gdG9fc2Vuc29yX2Rldl9h
dHRyKGF0dHIpLT5pbmRleDsKIAlpbnQgciwgdGVtcCA9IDAsIHNpemUgPSBzaXplb2YodGVtcCk7
CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQp
CiAJCXJldHVybiAtRVBFUk07CiAKIAlpZiAoY2hhbm5lbCA+PSBQUF9URU1QX01BWCkKQEAgLTIz
ODAsOCArMjI0Nyw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X3RlbXAoc3Ry
dWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcjsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7Ci0KIAlzd2l0Y2ggKGNoYW5uZWwpIHsKIAljYXNlIFBQX1RFTVBfSlVOQ1RJT046
CiAJCS8qIGdldCBjdXJyZW50IGp1bmN0aW9uIHRlbXBlcmF0dXJlICovCkBAIC0yNDAzLDggKzIy
NjgsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd190ZW1wKHN0cnVjdCBkZXZp
Y2UgKmRldiwKIAkJYnJlYWs7CiAJfQogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQog
CXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1l
X3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwogCkBAIC0yNTA4LDcgKzIzNzEsNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X3B3bTFfZW5hYmxlKHN0cnVjdCBkZXZp
Y2UgKmRldiwKIAl1MzIgcHdtX21vZGUgPSAwOwogCWludCByZXQ7CiAKLQlpZiAoYW1kZ3B1X2lu
X3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07
CiAKIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7CkBAIC0yNTE3
LDIzICsyMzgwLDE4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfcHdtMV9lbmFi
bGUoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRvd25fcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewogCQlw
d21fbW9kZSA9IHNtdV9nZXRfZmFuX2NvbnRyb2xfbW9kZSgmYWRldi0+c211KTsKIAl9IGVsc2Ug
ewogCQlpZiAoIWFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X2Zhbl9jb250cm9sX21vZGUp
IHsKIAkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAkJCXBt
X3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7Ci0JCQl1cF9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOwogCQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0KIAogCQlwd21fbW9kZSA9
IGFtZGdwdV9kcG1fZ2V0X2Zhbl9jb250cm9sX21vZGUoYWRldik7CiAJfQogCi0JdXBfcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsKLQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRl
di0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwog
CkBAIC0yNTQ5LDcgKzI0MDcsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X3B3
bTFfZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlpbnQgZXJyLCByZXQ7CiAJaW50IHZhbHVl
OwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0
KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJZXJyID0ga3N0cnRvaW50KGJ1ZiwgMTAsICZ2YWx1ZSk7
CkBAIC0yNTYyLDIzICsyNDIwLDE4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zZXRf
cHdtMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCX0KIAotCWRv
d25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2
KSkgewogCQlzbXVfc2V0X2Zhbl9jb250cm9sX21vZGUoJmFkZXYtPnNtdSwgdmFsdWUpOwogCX0g
ZWxzZSB7CiAJCWlmICghYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5zZXRfZmFuX2NvbnRyb2xf
bW9kZSkgewogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwog
CQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKLQkJCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQogCiAJCWFtZGdw
dV9kcG1fc2V0X2Zhbl9jb250cm9sX21vZGUoYWRldiwgdmFsdWUpOwogCX0KIAotCXVwX3JlYWQo
JmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRk
ZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsK
IApAQCAtMjYwOCw3ICsyNDYxLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9w
d20xKHN0cnVjdCBkZXZpY2UgKmRldiwKIAl1MzIgdmFsdWU7CiAJdTMyIHB3bV9tb2RlOwogCi0J
aWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQly
ZXR1cm4gLUVQRVJNOwogCiAJZXJyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5k
ZXYpOwpAQCAtMjYxNywxNSArMjQ3MCwxMSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25f
c2V0X3B3bTEoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0KIAotCWRvd25f
cmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkK
IAkJcHdtX21vZGUgPSBzbXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoJmFkZXYtPnNtdSk7CiAJZWxz
ZQogCQlwd21fbW9kZSA9IGFtZGdwdV9kcG1fZ2V0X2Zhbl9jb250cm9sX21vZGUoYWRldik7CiAK
LQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKHB3bV9tb2RlICE9IEFNRF9GQU5f
Q1RSTF9NQU5VQUwpIHsKIAkJcHJfaW5mbygibWFudWFsIGZhbiBzcGVlZCBjb250cm9sIHNob3Vs
ZCBiZSBlbmFibGVkIGZpcnN0XG4iKTsKIAkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2
LT5kZGV2LT5kZXYpOwpAQCAtMjY2Niw3ICsyNTE1LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2h3bW9uX2dldF9wd20xKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlpbnQgZXJyOwogCXUzMiBzcGVl
ZCA9IDA7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVf
cmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAllcnIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFk
ZXYtPmRkZXYtPmRldik7CkBAIC0yNjc1LDggKzI1MjQsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfaHdtb25fZ2V0X3B3bTEoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0K
IAotCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3Nt
dShhZGV2KSkKIAkJZXJyID0gc211X2dldF9mYW5fc3BlZWRfcGVyY2VudCgmYWRldi0+c211LCAm
c3BlZWQpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X2Zhbl9zcGVl
ZF9wZXJjZW50KQpAQCAtMjY4NCw4ICsyNTMxLDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3
bW9uX2dldF9wd20xKHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCWVyciA9IC1FSU5WQUw7
CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xhc3Rf
YnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYt
PmRkZXYtPmRldik7CiAKQEAgLTI3MDUsNyArMjU1MCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdw
dV9od21vbl9nZXRfZmFuMV9pbnB1dChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IGVycjsKIAl1
MzIgc3BlZWQgPSAwOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+
aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJZXJyID0gcG1fcnVudGltZV9nZXRf
c3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMjcxNCw4ICsyNTU5LDYgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX2lucHV0KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0
dXJuIGVycjsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNf
c3VwcG9ydF9zd19zbXUoYWRldikpCiAJCWVyciA9IHNtdV9nZXRfZmFuX3NwZWVkX3JwbSgmYWRl
di0+c211LCAmc3BlZWQpOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0
X2Zhbl9zcGVlZF9ycG0pCkBAIC0yNzIzLDggKzI1NjYsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfaHdtb25fZ2V0X2ZhbjFfaW5wdXQoc3RydWN0IGRldmljZSAqZGV2LAogCWVsc2UKIAkJZXJy
ID0gLUVJTlZBTDsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1l
X21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1
c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKIApAQCAtMjc0Myw3ICsyNTg0LDcgQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX21pbihzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdTMy
IHNpemUgPSBzaXplb2YobWluX3JwbSk7CiAJaW50IHI7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0
KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAly
ID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMjc1MiwxMyArMjU5
Myw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV9taW4oc3RydWN0IGRl
dmljZSAqZGV2LAogCQlyZXR1cm4gcjsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7Ci0KIAlyID0gYW1kZ3B1X2RwbV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09S
X01JTl9GQU5fUlBNLAogCQkJCSAgICh2b2lkICopJm1pbl9ycG0sICZzaXplKTsKIAotCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYt
PmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2
KTsKIApAQCAtMjc3Nyw3ICsyNjE0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dl
dF9mYW4xX21heChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdTMyIHNpemUgPSBzaXplb2YobWF4X3Jw
bSk7CiAJaW50IHI7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5p
bl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAlyID0gcG1fcnVudGltZV9nZXRfc3lu
YyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMjc4NiwxMyArMjYyMyw5IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9od21vbl9nZXRfZmFuMV9tYXgoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4g
cjsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlyID0gYW1kZ3B1X2Rw
bV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX01BWF9GQU5fUlBNLAogCQkJCSAg
ICh2b2lkICopJm1heF9ycG0sICZzaXplKTsKIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVu
dGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKIApAQCAtMjgxMCw3ICsyNjQz
LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX3RhcmdldChzdHJ1Y3Qg
ZGV2aWNlICpkZXYsCiAJaW50IGVycjsKIAl1MzIgcnBtID0gMDsKIAotCWlmIChhbWRncHVfaW5f
cmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsK
IAogCWVyciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI4MTks
OCArMjY1Miw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV90YXJnZXQo
c3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0KIAotCWRvd25fcmVhZCgmYWRl
di0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKIAkJZXJyID0g
c211X2dldF9mYW5fc3BlZWRfcnBtKCZhZGV2LT5zbXUsICZycG0pOwogCWVsc2UgaWYgKGFkZXYt
PnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9ycG0pCkBAIC0yODI4LDggKzI2NTks
NiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X2ZhbjFfdGFyZ2V0KHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAllbHNlCiAJCWVyciA9IC1FSU5WQUw7CiAKLQl1cF9yZWFkKCZhZGV2LT5y
ZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYp
OwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CiAKQEAgLTI4
NDgsNyArMjY3Nyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zZXRfZmFuMV90YXJn
ZXQoc3RydWN0IGRldmljZSAqZGV2LAogCXUzMiB2YWx1ZTsKIAl1MzIgcHdtX21vZGU7CiAKLQlp
ZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJl
dHVybiAtRVBFUk07CiAKIAllcnIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRl
dik7CkBAIC0yODU3LDE1ICsyNjg2LDExIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9z
ZXRfZmFuMV90YXJnZXQoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gZXJyOwogCX0KIAot
CWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShh
ZGV2KSkKIAkJcHdtX21vZGUgPSBzbXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoJmFkZXYtPnNtdSk7
CiAJZWxzZQogCQlwd21fbW9kZSA9IGFtZGdwdV9kcG1fZ2V0X2Zhbl9jb250cm9sX21vZGUoYWRl
dik7CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKHB3bV9tb2RlICE9IEFN
RF9GQU5fQ1RSTF9NQU5VQUwpIHsKIAkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5k
ZGV2LT5kZXYpOwogCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYp
OwpAQCAtMjg3OSw4ICsyNzA0LDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9m
YW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiBlcnI7CiAJfQogCi0JZG93
bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYp
KQogCQllcnIgPSBzbXVfc2V0X2Zhbl9zcGVlZF9ycG0oJmFkZXYtPnNtdSwgdmFsdWUpOwogCWVs
c2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X2Zhbl9zcGVlZF9ycG0pCkBAIC0y
ODg4LDggKzI3MTEsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X2ZhbjFfdGFy
Z2V0KHN0cnVjdCBkZXZpY2UgKmRldiwKIAllbHNlCiAJCWVyciA9IC1FSU5WQUw7CiAKLQl1cF9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2
LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRl
dik7CiAKQEAgLTI5MDcsNyArMjcyOCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9n
ZXRfZmFuMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LAogCXUzMiBwd21fbW9kZSA9IDA7CiAJ
aW50IHJldDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dw
dV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMo
YWRldi0+ZGRldi0+ZGV2KTsKQEAgLTI5MTYsMjMgKzI3MzcsMTggQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X2h3bW9uX2dldF9mYW4xX2VuYWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVy
biByZXQ7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1
cHBvcnRfc3dfc211KGFkZXYpKSB7CiAJCXB3bV9tb2RlID0gc211X2dldF9mYW5fY29udHJvbF9t
b2RlKCZhZGV2LT5zbXUpOwogCX0gZWxzZSB7CiAJCWlmICghYWRldi0+cG93ZXJwbGF5LnBwX2Z1
bmNzLT5nZXRfZmFuX2NvbnRyb2xfbW9kZSkgewogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVz
eShhZGV2LT5kZGV2LT5kZXYpOwogCQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+
ZGRldi0+ZGV2KTsKLQkJCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJCQlyZXR1cm4gLUVJ
TlZBTDsKIAkJfQogCiAJCXB3bV9tb2RlID0gYW1kZ3B1X2RwbV9nZXRfZmFuX2NvbnRyb2xfbW9k
ZShhZGV2KTsKIAl9CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGlt
ZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9z
dXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CiAKQEAgLTI5NDksNyArMjc2NSw3IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9od21vbl9zZXRfZmFuMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LAog
CWludCB2YWx1ZTsKIAl1MzIgcHdtX21vZGU7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYp
KQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAllcnIgPSBr
c3RydG9pbnQoYnVmLCAxMCwgJnZhbHVlKTsKQEAgLTI5NjksMjIgKzI3ODUsMTcgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9mYW4xX2VuYWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJCXJldHVybiBlcnI7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJ
aWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7CiAJCXNtdV9zZXRfZmFuX2NvbnRyb2xfbW9k
ZSgmYWRldi0+c211LCBwd21fbW9kZSk7CiAJfSBlbHNlIHsKIAkJaWYgKCFhZGV2LT5wb3dlcnBs
YXkucHBfZnVuY3MtPnNldF9mYW5fY29udHJvbF9tb2RlKSB7CiAJCQlwbV9ydW50aW1lX21hcmtf
bGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVu
ZChhZGV2LT5kZGV2LT5kZXYpOwotCQkJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAkJCXJl
dHVybiAtRUlOVkFMOwogCQl9CiAJCWFtZGdwdV9kcG1fc2V0X2Zhbl9jb250cm9sX21vZGUoYWRl
diwgcHdtX21vZGUpOwogCX0KIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlwbV9y
dW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRf
YXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKIApAQCAtMjk5OSw3ICsyODEwLDcgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfdmRkZ2Z4KHN0cnVjdCBkZXZpY2UgKmRldiwK
IAl1MzIgdmRkZ2Z4OwogCWludCByLCBzaXplID0gc2l6ZW9mKHZkZGdmeCk7CiAKLQlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAt
RVBFUk07CiAKIAlyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAt
MzAwOCwxMSArMjgxOSw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X3ZkZGdm
eChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiByOwogCX0KIAotCWRvd25fcmVhZCgmYWRl
di0+cmVzZXRfc2VtKTsKIAkvKiBnZXQgdGhlIHZvbHRhZ2UgKi8KIAlyID0gYW1kZ3B1X2RwbV9y
ZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX1ZEREdGWCwKIAkJCQkgICAodm9pZCAq
KSZ2ZGRnZngsICZzaXplKTsKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCiAJcG1fcnVu
dGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7CkBAIC0zMDM4LDcgKzI4NDcsNyBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfaHdtb25fc2hvd192ZGRuYihzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJdTMy
IHZkZG5iOwogCWludCByLCBzaXplID0gc2l6ZW9mKHZkZG5iKTsKIAotCWlmIChhbWRncHVfaW5f
cmVzZXQoYWRldikpCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsK
IAogCS8qIG9ubHkgQVBVcyBoYXZlIHZkZG5iICovCkBAIC0zMDUxLDExICsyODYwLDkgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfdmRkbmIoc3RydWN0IGRldmljZSAqZGV2LAog
CQlyZXR1cm4gcjsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAJLyogZ2V0
IHRoZSB2b2x0YWdlICovCiAJciA9IGFtZGdwdV9kcG1fcmVhZF9zZW5zb3IoYWRldiwgQU1ER1BV
X1BQX1NFTlNPUl9WREROQiwKIAkJCQkgICAodm9pZCAqKSZ2ZGRuYiwgJnNpemUpOwotCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAKIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYt
PmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2
KTsKQEAgLTMwODIsNyArMjg4OSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93
X3Bvd2VyX2F2ZyhzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJaW50IHIsIHNpemUgPSBzaXplb2YodTMy
KTsKIAl1bnNpZ25lZCB1dzsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFk
ZXYtPmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCXIgPSBwbV9ydW50aW1lX2dl
dF9zeW5jKGFkZXYtPmRkZXYtPmRldik7CkBAIC0zMDkxLDExICsyODk4LDkgQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfYXZnKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJ
cmV0dXJuIHI7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCS8qIGdldCB0
aGUgdm9sdGFnZSAqLwogCXIgPSBhbWRncHVfZHBtX3JlYWRfc2Vuc29yKGFkZXYsIEFNREdQVV9Q
UF9TRU5TT1JfR1BVX1BPV0VSLAogCQkJCSAgICh2b2lkICopJnF1ZXJ5LCAmc2l6ZSk7Ci0JdXBf
cmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRl
di0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5k
ZXYpOwpAQCAtMzEyNSw3ICsyOTMwLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3No
b3dfcG93ZXJfY2FwX21heChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJc3NpemVfdCBzaXplOwogCWlu
dCByOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jl
c2V0KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+
ZGRldi0+ZGV2KTsKQEAgLTMxMzQsOCArMjkzOSw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9o
d21vbl9zaG93X3Bvd2VyX2NhcF9tYXgoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcjsK
IAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7Ci0KIAlpZiAoaXNfc3VwcG9ydF9z
d19zbXUoYWRldikpIHsKIAkJc211X2dldF9wb3dlcl9saW1pdCgmYWRldi0+c211LCAmbGltaXQs
IHRydWUpOwogCQlzaXplID0gc25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIldVxuIiwgbGltaXQg
KiAxMDAwMDAwKTsKQEAgLTMxNDYsOCArMjk0OSw2IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9o
d21vbl9zaG93X3Bvd2VyX2NhcF9tYXgoc3RydWN0IGRldmljZSAqZGV2LAogCQlzaXplID0gc25w
cmludGYoYnVmLCBQQUdFX1NJWkUsICJcbiIpOwogCX0KIAotCXVwX3JlYWQoJmFkZXYtPnJlc2V0
X3NlbSk7Ci0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJ
cG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsKIApAQCAtMzE2Myw3
ICsyOTY0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2FwKHN0
cnVjdCBkZXZpY2UgKmRldiwKIAlzc2l6ZV90IHNpemU7CiAJaW50IHI7CiAKLQlpZiAoYW1kZ3B1
X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBF
Uk07CiAKIAlyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMzE3
Miw4ICsyOTczLDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2Fw
KHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7CiAJCXNtdV9n
ZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCBmYWxzZSk7CiAJCXNpemUgPSBzbnBy
aW50ZihidWYsIFBBR0VfU0laRSwgIiV1XG4iLCBsaW1pdCAqIDEwMDAwMDApOwpAQCAtMzE4NCw4
ICsyOTgzLDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2FwKHN0
cnVjdCBkZXZpY2UgKmRldiwKIAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiXG4i
KTsKIAl9CiAKLQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJcG1fcnVudGltZV9tYXJr
X2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5k
KGFkZXYtPmRkZXYtPmRldik7CiAKQEAgLTMyMDIsNyArMjk5OSw3IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9od21vbl9zZXRfcG93ZXJfY2FwKHN0cnVjdCBkZXZpY2UgKmRldiwKIAlpbnQgZXJy
OwogCXUzMiB2YWx1ZTsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpCisJaWYgKGFkZXYt
PmluX2dwdV9yZXNldCkKIAkJcmV0dXJuIC1FUEVSTTsKIAogCWlmIChhbWRncHVfc3Jpb3ZfdmYo
YWRldikpCkBAIC0zMjIxLDggKzMwMTgsNiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25f
c2V0X3Bvd2VyX2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJCXJldHVybiBlcnI7CiAJfQogCi0J
ZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwotCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFk
ZXYpKQogCQllcnIgPSBzbXVfc2V0X3Bvd2VyX2xpbWl0KCZhZGV2LT5zbXUsIHZhbHVlKTsKIAll
bHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MgJiYgYWRldi0+cG93ZXJwbGF5LnBwX2Z1
bmNzLT5zZXRfcG93ZXJfbGltaXQpCkBAIC0zMjMwLDggKzMwMjUsNiBAQCBzdGF0aWMgc3NpemVf
dCBhbWRncHVfaHdtb25fc2V0X3Bvd2VyX2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsCiAJZWxzZQog
CQllcnIgPSAtRUlOVkFMOwogCi0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKLQogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOwogCkBAIC0zMjQ5LDcgKzMwNDIsNyBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19zY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAl1
aW50MzJfdCBzY2xrOwogCWludCByLCBzaXplID0gc2l6ZW9mKHNjbGspOwogCi0JaWYgKGFtZGdw
dV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQ
RVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTMy
NTgsMTEgKzMwNTEsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19zY2xrKHN0
cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHI7CiAJfQogCi0JZG93bl9yZWFkKCZhZGV2LT5y
ZXNldF9zZW0pOwogCS8qIGdldCB0aGUgc2NsayAqLwogCXIgPSBhbWRncHVfZHBtX3JlYWRfc2Vu
c29yKGFkZXYsIEFNREdQVV9QUF9TRU5TT1JfR0ZYX1NDTEssCiAJCQkJICAgKHZvaWQgKikmc2Ns
aywgJnNpemUpOwotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAKIAlwbV9ydW50aW1lX21h
cmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3Bl
bmQoYWRldi0+ZGRldi0+ZGV2KTsKQEAgLTMyODgsNyArMzA3OSw3IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9od21vbl9zaG93X21jbGsoc3RydWN0IGRldmljZSAqZGV2LAogCXVpbnQzMl90IG1j
bGs7CiAJaW50IHIsIHNpemUgPSBzaXplb2YobWNsayk7CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0
KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVybiAtRVBFUk07CiAKIAly
ID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOwpAQCAtMzI5NywxMSArMzA4
OCw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X21jbGsoc3RydWN0IGRldmlj
ZSAqZGV2LAogCQlyZXR1cm4gcjsKIAl9CiAKLQlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
CiAJLyogZ2V0IHRoZSBzY2xrICovCiAJciA9IGFtZGdwdV9kcG1fcmVhZF9zZW5zb3IoYWRldiwg
QU1ER1BVX1BQX1NFTlNPUl9HRlhfTUNMSywKIAkJCQkgICAodm9pZCAqKSZtY2xrLCAmc2l6ZSk7
Ci0JdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsKIAogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1
c3koYWRldi0+ZGRldi0+ZGV2KTsKIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5k
ZGV2LT5kZXYpOwpAQCAtNDE4OCw3ICszOTc3LDcgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdm
c19wbV9pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAl1MzIgZmxhZ3MgPSAw
OwogCWludCByOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5f
Z3B1X3Jlc2V0KQogCQlyZXR1cm4gLUVQRVJNOwogCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMo
ZGV2LT5kZXYpOwpAQCAtNDIwNCw3ICszOTkzLDYgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdm
c19wbV9pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkJcmV0dXJuIDA7CiAJ
fQogCi0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOwogCWlmICghaXNfc3VwcG9ydF9zd19z
bXUoYWRldikgJiYKIAkgICAgYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5kZWJ1Z2ZzX3ByaW50
X2N1cnJlbnRfcGVyZm9ybWFuY2VfbGV2ZWwpIHsKIAkJbXV0ZXhfbG9jaygmYWRldi0+cG0ubXV0
ZXgpOwpAQCAtNDIxNywxMyArNDAwNSwxMCBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3Bt
X2luZm8oc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogCX0gZWxzZSB7CiAJCXIgPSBh
bWRncHVfZGVidWdmc19wbV9pbmZvX3BwKG0sIGFkZXYpOwogCX0KLQl1cF9yZWFkKCZhZGV2LT5y
ZXNldF9zZW0pOwogCWlmIChyKQogCQlnb3RvIG91dDsKIAotCWRvd25fcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsKIAlhbWRncHVfZGV2aWNlX2lwX2dldF9jbG9ja2dhdGluZ19zdGF0ZShhZGV2LCAm
ZmxhZ3MpOwotCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7CiAKIAlzZXFfcHJpbnRmKG0sICJD
bG9jayBHYXRpbmcgRmxhZ3MgTWFzazogMHgleFxuIiwgZmxhZ3MpOwogCWFtZGdwdV9wYXJzZV9j
Z19zdGF0ZShtLCBmbGFncyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfcHNwLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfcHNwLmMK
aW5kZXggMTE2YTg5OTkwZjM5Li5hYTFlNzdjNjBjMGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wc3AuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfcHNwLmMKQEAgLTE4NjksNyArMTg2OSw3IEBAIHN0YXRpYyBpbnQgcHNwX2xv
YWRfc211X2Z3KHN0cnVjdCBwc3BfY29udGV4dCAqcHNwKQogCQlyZXR1cm4gMDsKIAogCi0JaWYg
KGFtZGdwdV9pbl9yZXNldChhZGV2KSAmJiByYXMgJiYgcmFzLT5zdXBwb3J0ZWQpIHsKKwlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0ICYmIHJhcyAmJiByYXMtPnN1cHBvcnRlZCkgewogCQlyZXQgPSBh
bWRncHVfZHBtX3NldF9tcDFfc3RhdGUoYWRldiwgUFBfTVAxX1NUQVRFX1VOTE9BRCk7CiAJCWlm
IChyZXQpIHsKIAkJCURSTV9XQVJOKCJGYWlsZWQgdG8gc2V0IE1QMSBzdGF0ZSBwcmVwYXJlIGZv
ciByZWxvYWRcbiIpOwpAQCAtMTk4NCw3ICsxOTg0LDcgQEAgc3RhdGljIGludCBwc3BfbG9hZF9m
dyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikKIAlpbnQgcmV0OwogCXN0cnVjdCBwc3BfY29u
dGV4dCAqcHNwID0gJmFkZXYtPnBzcDsKIAotCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYg
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7CisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiBh
ZGV2LT5pbl9ncHVfcmVzZXQpIHsKIAkJcHNwX3Jpbmdfc3RvcChwc3AsIFBTUF9SSU5HX1RZUEVf
X0tNKTsgLyogc2hvdWxkIG5vdCBkZXN0cm95IHJpbmcsIG9ubHkgc3RvcCAqLwogCQlnb3RvIHNr
aXBfbWVtYWxsb2M7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3Jhcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Jhcy5jCmlu
ZGV4IGNkMTQwM2Y4M2RjZi4uZjA5MDgyNTc4ODY1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfcmFzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X3Jhcy5jCkBAIC0yMDc5LDcgKzIwNzksNyBAQCBpbnQgYW1kZ3B1X3Jhc19sYXRl
X2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJCQlhbWRncHVfcmFzX3JlcXVlc3Rf
cmVzZXRfb25fYm9vdChhZGV2LAogCQkJCQlyYXNfYmxvY2stPmJsb2NrKTsKIAkJCXJldHVybiAw
OwotCQl9IGVsc2UgaWYgKGFkZXYtPmluX3N1c3BlbmQgfHwgYW1kZ3B1X2luX3Jlc2V0KGFkZXYp
KSB7CisJCX0gZWxzZSBpZiAoYWRldi0+aW5fc3VzcGVuZCB8fCBhZGV2LT5pbl9ncHVfcmVzZXQp
IHsKIAkJCS8qIGluIHJlc3VtZSBwaGFzZSwgaWYgZmFpbCB0byBlbmFibGUgcmFzLAogCQkJICog
Y2xlYW4gdXAgYWxsIHJhcyBmcyBub2RlcywgYW5kIGRpc2FibGUgcmFzICovCiAJCQlnb3RvIGNs
ZWFudXA7CkBAIC0yMDg4LDcgKzIwODgsNyBAQCBpbnQgYW1kZ3B1X3Jhc19sYXRlX2luaXQoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCiAJfQogCiAJLyogaW4gcmVzdW1lIHBoYXNlLCBubyBu
ZWVkIHRvIGNyZWF0ZSByYXMgZnMgbm9kZSAqLwotCWlmIChhZGV2LT5pbl9zdXNwZW5kIHx8IGFt
ZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fc3VzcGVuZCB8fCBhZGV2LT5pbl9n
cHVfcmVzZXQpCiAJCXJldHVybiAwOwogCiAJaWYgKGloX2luZm8tPmNiKSB7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMKaW5kZXggMjBmYTA0OTdhYWE0Li4xZTE5ZDEzMDQ3
M2YgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90dG0uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdHRtLmMKQEAgLTIxMDMsNyAr
MjEwMyw3IEBAIHZvaWQgYW1kZ3B1X3R0bV9zZXRfYnVmZmVyX2Z1bmNzX3N0YXR1cyhzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldiwgYm9vbCBlbmFibGUpCiAJdWludDY0X3Qgc2l6ZTsKIAlpbnQg
cjsKIAotCWlmICghYWRldi0+bW1hbi5pbml0aWFsaXplZCB8fCBhbWRncHVfaW5fcmVzZXQoYWRl
dikgfHwKKwlpZiAoIWFkZXYtPm1tYW4uaW5pdGlhbGl6ZWQgfHwgYWRldi0+aW5fZ3B1X3Jlc2V0
IHx8CiAJICAgIGFkZXYtPm1tYW4uYnVmZmVyX2Z1bmNzX2VuYWJsZWQgPT0gZW5hYmxlKQogCQly
ZXR1cm47CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV91
Y29kZS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Vjb2RlLmMKaW5kZXgg
MDM5MjQ1Yzk4ZmY4Li4xODM3NDNjNWZiN2IgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV91Y29kZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV91Y29kZS5jCkBAIC02MjgsOCArNjI4LDcgQEAgaW50IGFtZGdwdV91Y29kZV9pbml0
X2JvKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQogCXN0cnVjdCBhbWRncHVfZmlybXdhcmVf
aW5mbyAqdWNvZGUgPSBOVUxMOwogCiAgLyogZm9yIGJhcmVtZXRhbCwgdGhlIHVjb2RlIGlzIGFs
bG9jYXRlZCBpbiBndHQsIHNvIGRvbid0IG5lZWQgdG8gZmlsbCB0aGUgYm8gd2hlbiByZXNldC9z
dXNwZW5kICovCi0JaWYgKCFhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYKLQkJKGFtZGdwdV9pbl9y
ZXNldChhZGV2KSB8fCBhZGV2LT5pbl9zdXNwZW5kKSkKKwlpZiAoIWFtZGdwdV9zcmlvdl92Zihh
ZGV2KSAmJiAoYWRldi0+aW5fZ3B1X3Jlc2V0IHx8IGFkZXYtPmluX3N1c3BlbmQpKQogCQlyZXR1
cm4gMDsKIAkvKgogCSAqIGlmIFNNVSBsb2FkZWQgZmlybXdhcmUsIGl0IG5lZWRuJ3QgYWRkIFNN
QywgVVZELCBhbmQgVkNFCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfdmlydC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3ZpcnQuYwpp
bmRleCAxZTIxMTU0NGYyZGMuLmFlNzIwYTZkYzVhMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3ZpcnQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfdmlydC5jCkBAIC05Myw3ICs5Myw3IEBAIHZvaWQgYW1kZ3B1X3ZpcnRfa2lx
X3JlZ193cml0ZV9yZWdfd2FpdChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKIAlhbWRncHVf
cmluZ191bmRvKHJpbmcpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmtpcS0+cmluZ19sb2Nr
LCBmbGFncyk7CiBmYWlsZWRfa2lxOgotCWRldl93YXJuKGFkZXYtPmRldiwgImZhaWxlZCB0byB3
cml0ZSByZWcgJXggd2FpdCByZWcgJXhcbiIsIHJlZzAsIHJlZzEpOworCXByX2VycigiZmFpbGVk
IHRvIHdyaXRlIHJlZyAleCB3YWl0IHJlZyAleFxuIiwgcmVnMCwgcmVnMSk7CiB9CiAKIC8qKgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3ZpcnQuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmgKaW5kZXggYjIwNDZjM2E0MDRk
Li5mODI2OTQ1OTg5YzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Ft
ZGdwdV92aXJ0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3ZpcnQu
aApAQCAtMzI1LDkgKzMyNSw5IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpc192aXJ0dWFsX21hY2hp
bmUodm9pZCkKICNkZWZpbmUgYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSBcCiAJKChh
ZGV2KS0+dmlydC5naW1fZmVhdHVyZSAmIEFNREdJTV9GRUFUVVJFX1BQX09ORV9WRikKICNkZWZp
bmUgYW1kZ3B1X3NyaW92X2lzX2RlYnVnKGFkZXYpIFwKLQkoKCFhbWRncHVfaW5fcmVzZXQoYWRl
dikpICYmIGFkZXYtPnZpcnQudGRyX2RlYnVnKQorCSgoIWFkZXYtPmluX2dwdV9yZXNldCkgJiYg
YWRldi0+dmlydC50ZHJfZGVidWcpCiAjZGVmaW5lIGFtZGdwdV9zcmlvdl9pc19ub3JtYWwoYWRl
dikgXAotCSgoIWFtZGdwdV9pbl9yZXNldChhZGV2KSkgJiYgKCFhZGV2LT52aXJ0LnRkcl9kZWJ1
ZykpCisJKCghYWRldi0+aW5fZ3B1X3Jlc2V0KSAmJiAoIWFkZXYtPnZpcnQudGRyX2RlYnVnKSkK
IAogYm9vbCBhbWRncHVfdmlydF9tbWlvX2Jsb2NrZWQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYpOwogdm9pZCBhbWRncHVfdmlydF9pbml0X3NldHRpbmcoc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hn
bWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV94Z21pLmMKaW5kZXggNjdh
NzU2ZjQzMzdiLi5jZDZlNmViN2Q5NjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV94Z21pLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X3hnbWkuYwpAQCAtMzcyLDcgKzM3Miw3IEBAIHN0cnVjdCBhbWRncHVfaGl2ZV9pbmZvICph
bWRncHVfZ2V0X3hnbWlfaGl2ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgaW50IGxvCiAJ
dG1wLT5oaXZlX2lkID0gYWRldi0+Z21jLnhnbWkuaGl2ZV9pZDsKIAlJTklUX0xJU1RfSEVBRCgm
dG1wLT5kZXZpY2VfbGlzdCk7CiAJbXV0ZXhfaW5pdCgmdG1wLT5oaXZlX2xvY2spOwotCWF0b21p
Y19zZXQoJnRtcC0+aW5fcmVzZXQsIDApOworCW11dGV4X2luaXQoJnRtcC0+cmVzZXRfbG9jayk7
CiAJdGFza19iYXJyaWVyX2luaXQoJnRtcC0+dGIpOwogCiAJaWYgKGxvY2spCkBAIC0zOTcsNyAr
Mzk3LDYgQEAgaW50IGFtZGdwdV94Z21pX3NldF9wc3RhdGUoc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYsIGludCBwc3RhdGUpCiAJCQkJCQloaXZlLT5oaV9yZXFfZ3B1IDogYWRldjsKIAlib29s
IGlzX2hpX3JlcSA9IHBzdGF0ZSA9PSBBTURHUFVfWEdNSV9QU1RBVEVfTUFYX1ZFR0EyMDsKIAli
b29sIGluaXRfbG93ID0gaGl2ZS0+cHN0YXRlID09IEFNREdQVV9YR01JX1BTVEFURV9VTktOT1dO
OwotCWJvb2wgbG9ja2VkOwogCiAJLyogZncgYnVnIHNvIHRlbXBvcmFyaWx5IGRpc2FibGUgcHN0
YXRlIHN3aXRjaGluZyAqLwogCXJldHVybiAwOwpAQCAtNDA1LDkgKzQwNCw3IEBAIGludCBhbWRn
cHVfeGdtaV9zZXRfcHN0YXRlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBpbnQgcHN0YXRl
KQogCWlmICghaGl2ZSB8fCBhZGV2LT5hc2ljX3R5cGUgIT0gQ0hJUF9WRUdBMjApCiAJCXJldHVy
biAwOwogCi0JbG9ja2VkID0gYXRvbWljX3JlYWQoJmhpdmUtPmluX3Jlc2V0KSA/IGZhbHNlIDog
dHJ1ZTsKLQlpZiAobG9ja2VkKQotCQltdXRleF9sb2NrKCZoaXZlLT5oaXZlX2xvY2spOworCW11
dGV4X2xvY2soJmhpdmUtPmhpdmVfbG9jayk7CiAKIAlpZiAoaXNfaGlfcmVxKQogCQloaXZlLT5o
aV9yZXFfY291bnQrKzsKQEAgLTQ0Miw4ICs0MzksNyBAQCBpbnQgYW1kZ3B1X3hnbWlfc2V0X3Bz
dGF0ZShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgaW50IHBzdGF0ZSkKIAkJCQkJCQlhZGV2
IDogTlVMTDsKIAl9CiBvdXQ6Ci0JaWYgKGxvY2tlZCkKLQkJbXV0ZXhfdW5sb2NrKCZoaXZlLT5o
aXZlX2xvY2spOworCW11dGV4X3VubG9jaygmaGl2ZS0+aGl2ZV9sb2NrKTsKIAlyZXR1cm4gcmV0
OwogfQogCkBAIC01OTgsNiArNTk0LDcgQEAgaW50IGFtZGdwdV94Z21pX3JlbW92ZV9kZXZpY2Uo
c3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJaWYoISgtLWhpdmUtPm51bWJlcl9kZXZpY2Vz
KSl7CiAJCWFtZGdwdV94Z21pX3N5c2ZzX2Rlc3Ryb3koYWRldiwgaGl2ZSk7CiAJCW11dGV4X2Rl
c3Ryb3koJmhpdmUtPmhpdmVfbG9jayk7CisJCW11dGV4X2Rlc3Ryb3koJmhpdmUtPnJlc2V0X2xv
Y2spOwogCX0KIAogCXJldHVybiBwc3BfeGdtaV90ZXJtaW5hdGUoJmFkZXYtPnBzcCk7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfeGdtaS5oIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuaAppbmRleCA2MTcyMGNkNGExZWUuLjY5
OTllYWIxNmE3MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X3hnbWkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfeGdtaS5oCkBA
IC0zMCw4ICszMCw3IEBAIHN0cnVjdCBhbWRncHVfaGl2ZV9pbmZvIHsKIAl1aW50NjRfdAkJaGl2
ZV9pZDsKIAlzdHJ1Y3QgbGlzdF9oZWFkCWRldmljZV9saXN0OwogCWludCBudW1iZXJfZGV2aWNl
czsKLQlzdHJ1Y3QgbXV0ZXggaGl2ZV9sb2NrOwotCWF0b21pY190IGluX3Jlc2V0OworCXN0cnVj
dCBtdXRleCBoaXZlX2xvY2ssIHJlc2V0X2xvY2s7CiAJc3RydWN0IGtvYmplY3QgKmtvYmo7CiAJ
c3RydWN0IGRldmljZV9hdHRyaWJ1dGUgZGV2X2F0dHI7CiAJc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXY7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hdG9tLmMgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hdG9tLmMKaW5kZXggODM0MWJkOTY1MjAyLi40Y2Zj
Nzg2Njk5YzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2F0b20uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hdG9tLmMKQEAgLTc1NSw3ICs3NTUsNiBA
QCBzdGF0aWMgdm9pZCBhdG9tX29wX2p1bXAoYXRvbV9leGVjX2NvbnRleHQgKmN0eCwgaW50ICpw
dHIsIGludCBhcmcpCiAJCQkJLyogamlmZmllcyB3cmFwIGFyb3VuZCB3ZSB3aWxsIGp1c3Qgd2Fp
dCBhIGxpdHRsZSBsb25nZXIgKi8KIAkJCQljdHgtPmxhc3RfanVtcF9qaWZmaWVzID0gamlmZmll
czsKIAkJCX0KLQkJCXNjaGVkdWxlKCk7CiAJCX0gZWxzZSB7CiAJCQljdHgtPmxhc3RfanVtcCA9
IGN0eC0+c3RhcnQgKyB0YXJnZXQ7CiAJCQljdHgtPmxhc3RfanVtcF9qaWZmaWVzID0gamlmZmll
czsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3YxMF8wLmMKaW5kZXggZGU2ZTZkZTQxODY3
Li5lODdkNDM1MzcwMTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dm
eF92MTBfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jCkBA
IC02MjAxLDcgKzYyMDEsNyBAQCBzdGF0aWMgaW50IGdmeF92MTBfMF9nZnhfaW5pdF9xdWV1ZShz
dHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJc3RydWN0IHYxMF9nZnhfbXFkICptcWQgPSByaW5n
LT5tcWRfcHRyOwogCWludCBtcWRfaWR4ID0gcmluZyAtICZhZGV2LT5nZnguZ2Z4X3JpbmdbMF07
CiAKLQlpZiAoIWFtZGdwdV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgewor
CWlmICghYWRldi0+aW5fZ3B1X3Jlc2V0ICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7CiAJCW1lbXNl
dCgodm9pZCAqKW1xZCwgMCwgc2l6ZW9mKCptcWQpKTsKIAkJbXV0ZXhfbG9jaygmYWRldi0+c3Ji
bV9tdXRleCk7CiAJCW52X2dyYm1fc2VsZWN0KGFkZXYsIHJpbmctPm1lLCByaW5nLT5waXBlLCBy
aW5nLT5xdWV1ZSwgMCk7CkBAIC02MjEzLDcgKzYyMTMsNyBAQCBzdGF0aWMgaW50IGdmeF92MTBf
MF9nZnhfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAJCW11dGV4X3VubG9j
aygmYWRldi0+c3JibV9tdXRleCk7CiAJCWlmIChhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRf
aWR4XSkKIAkJCW1lbWNweShhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRfaWR4XSwgbXFkLCBz
aXplb2YoKm1xZCkpOwotCX0gZWxzZSBpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7CisJfSBl
bHNlIGlmIChhZGV2LT5pbl9ncHVfcmVzZXQpIHsKIAkJLyogcmVzZXQgbXFkIHdpdGggdGhlIGJh
Y2t1cCBjb3B5ICovCiAJCWlmIChhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRfaWR4XSkKIAkJ
CW1lbWNweShtcWQsIGFkZXYtPmdmeC5tZS5tcWRfYmFja3VwW21xZF9pZHhdLCBzaXplb2YoKm1x
ZCkpOwpAQCAtNjU2Niw3ICs2NTY2LDcgQEAgc3RhdGljIGludCBnZnhfdjEwXzBfa2lxX2luaXRf
cXVldWUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJZ2Z4X3YxMF8wX2tpcV9zZXR0aW5n
KHJpbmcpOwogCi0JaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkgeyAvKiBmb3IgR1BVX1JFU0VU
IGNhc2UgKi8KKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7IC8qIGZvciBHUFVfUkVTRVQgY2Fz
ZSAqLwogCQkvKiByZXNldCBNUUQgdG8gYSBjbGVhbiBzdGF0dXMgKi8KIAkJaWYgKGFkZXYtPmdm
eC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSkKIAkJCW1lbWNweShtcWQsIGFkZXYtPmdmeC5tZWMu
bXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6ZW9mKCptcWQpKTsKQEAgLTY2MDIsNyArNjYwMiw3IEBA
IHN0YXRpYyBpbnQgZ2Z4X3YxMF8wX2tjcV9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVfcmluZyAq
cmluZykKIAlzdHJ1Y3QgdjEwX2NvbXB1dGVfbXFkICptcWQgPSByaW5nLT5tcWRfcHRyOwogCWlu
dCBtcWRfaWR4ID0gcmluZyAtICZhZGV2LT5nZnguY29tcHV0ZV9yaW5nWzBdOwogCi0JaWYgKCFh
bWRncHVfaW5fcmVzZXQoYWRldikgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKKwlpZiAoIWFkZXYt
PmluX2dwdV9yZXNldCAmJiAhYWRldi0+aW5fc3VzcGVuZCkgewogCQltZW1zZXQoKHZvaWQgKilt
cWQsIDAsIHNpemVvZigqbXFkKSk7CiAJCW11dGV4X2xvY2soJmFkZXYtPnNyYm1fbXV0ZXgpOwog
CQludl9ncmJtX3NlbGVjdChhZGV2LCByaW5nLT5tZSwgcmluZy0+cGlwZSwgcmluZy0+cXVldWUs
IDApOwpAQCAtNjYxMiw3ICs2NjEyLDcgQEAgc3RhdGljIGludCBnZnhfdjEwXzBfa2NxX2luaXRf
cXVldWUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJCWlmIChhZGV2LT5nZngubWVjLm1x
ZF9iYWNrdXBbbXFkX2lkeF0pCiAJCQltZW1jcHkoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21x
ZF9pZHhdLCBtcWQsIHNpemVvZigqbXFkKSk7Ci0JfSBlbHNlIGlmIChhbWRncHVfaW5fcmVzZXQo
YWRldikpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCisJfSBlbHNlIGlmIChhZGV2LT5pbl9n
cHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCiAJCS8qIHJlc2V0IE1RRCB0byBh
IGNsZWFuIHN0YXR1cyAqLwogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhd
KQogCQkJbWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhdLCBzaXpl
b2YoKm1xZCkpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3Y4
XzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OF8wLmMKaW5kZXggN2RmNTY3
YTY2NTZkLi4xNGZkMDRiNjk5ZGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2dmeF92OF8wLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ2Z4X3Y4XzAu
YwpAQCAtNDYzMyw3ICs0NjMzLDcgQEAgc3RhdGljIGludCBnZnhfdjhfMF9raXFfaW5pdF9xdWV1
ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpCiAKIAlnZnhfdjhfMF9raXFfc2V0dGluZyhyaW5n
KTsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNl
ICovCisJaWYgKGFkZXYtPmluX2dwdV9yZXNldCkgeyAvKiBmb3IgR1BVX1JFU0VUIGNhc2UgKi8K
IAkJLyogcmVzZXQgTVFEIHRvIGEgY2xlYW4gc3RhdHVzICovCiAJCWlmIChhZGV2LT5nZngubWVj
Lm1xZF9iYWNrdXBbbXFkX2lkeF0pCiAJCQltZW1jcHkobXFkLCBhZGV2LT5nZngubWVjLm1xZF9i
YWNrdXBbbXFkX2lkeF0sIHNpemVvZihzdHJ1Y3QgdmlfbXFkX2FsbG9jYXRpb24pKTsKQEAgLTQ2
NzAsNyArNDY3MCw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y4XzBfa2NxX2luaXRfcXVldWUoc3RydWN0
IGFtZGdwdV9yaW5nICpyaW5nKQogCXN0cnVjdCB2aV9tcWQgKm1xZCA9IHJpbmctPm1xZF9wdHI7
CiAJaW50IG1xZF9pZHggPSByaW5nIC0gJmFkZXYtPmdmeC5jb21wdXRlX3JpbmdbMF07CiAKLQlp
ZiAoIWFtZGdwdV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgeworCWlmICgh
YWRldi0+aW5fZ3B1X3Jlc2V0ICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7CiAJCW1lbXNldCgodm9p
ZCAqKW1xZCwgMCwgc2l6ZW9mKHN0cnVjdCB2aV9tcWRfYWxsb2NhdGlvbikpOwogCQkoKHN0cnVj
dCB2aV9tcWRfYWxsb2NhdGlvbiAqKW1xZCktPmR5bmFtaWNfY3VfbWFzayA9IDB4RkZGRkZGRkY7
CiAJCSgoc3RydWN0IHZpX21xZF9hbGxvY2F0aW9uICopbXFkKS0+ZHluYW1pY19yYl9tYXNrID0g
MHhGRkZGRkZGRjsKQEAgLTQ2ODIsNyArNDY4Miw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y4XzBfa2Nx
X2luaXRfcXVldWUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQogCiAJCWlmIChhZGV2LT5nZngu
bWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0pCiAJCQltZW1jcHkoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFj
a3VwW21xZF9pZHhdLCBtcWQsIHNpemVvZihzdHJ1Y3QgdmlfbXFkX2FsbG9jYXRpb24pKTsKLQl9
IGVsc2UgaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkgeyAvKiBmb3IgR1BVX1JFU0VUIGNhc2Ug
Ki8KKwl9IGVsc2UgaWYgKGFkZXYtPmluX2dwdV9yZXNldCkgeyAvKiBmb3IgR1BVX1JFU0VUIGNh
c2UgKi8KIAkJLyogcmVzZXQgTVFEIHRvIGEgY2xlYW4gc3RhdHVzICovCiAJCWlmIChhZGV2LT5n
ZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0pCiAJCQltZW1jcHkobXFkLCBhZGV2LT5nZngubWVj
Lm1xZF9iYWNrdXBbbXFkX2lkeF0sIHNpemVvZihzdHJ1Y3QgdmlfbXFkX2FsbG9jYXRpb24pKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8wLmMgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjlfMC5jCmluZGV4IDkzYzYzZmYzYjM1ZS4uMmM1
YmIyODJjYzAxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjlf
MC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8wLmMKQEAgLTM2ODYs
NyArMzY4Niw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y5XzBfa2lxX2luaXRfcXVldWUoc3RydWN0IGFt
ZGdwdV9yaW5nICpyaW5nKQogCiAJZ2Z4X3Y5XzBfa2lxX3NldHRpbmcocmluZyk7CiAKLQlpZiAo
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLworCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCiAJCS8qIHJlc2V0
IE1RRCB0byBhIGNsZWFuIHN0YXR1cyAqLwogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3Vw
W21xZF9pZHhdKQogCQkJbWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9p
ZHhdLCBzaXplb2Yoc3RydWN0IHY5X21xZF9hbGxvY2F0aW9uKSk7CkBAIC0zNzI0LDcgKzM3MjQs
NyBAQCBzdGF0aWMgaW50IGdmeF92OV8wX2tjcV9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVfcmlu
ZyAqcmluZykKIAlzdHJ1Y3QgdjlfbXFkICptcWQgPSByaW5nLT5tcWRfcHRyOwogCWludCBtcWRf
aWR4ID0gcmluZyAtICZhZGV2LT5nZnguY29tcHV0ZV9yaW5nWzBdOwogCi0JaWYgKCFhbWRncHVf
aW5fcmVzZXQoYWRldikgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsKKwlpZiAoIWFkZXYtPmluX2dw
dV9yZXNldCAmJiAhYWRldi0+aW5fc3VzcGVuZCkgewogCQltZW1zZXQoKHZvaWQgKiltcWQsIDAs
IHNpemVvZihzdHJ1Y3QgdjlfbXFkX2FsbG9jYXRpb24pKTsKIAkJKChzdHJ1Y3QgdjlfbXFkX2Fs
bG9jYXRpb24gKiltcWQpLT5keW5hbWljX2N1X21hc2sgPSAweEZGRkZGRkZGOwogCQkoKHN0cnVj
dCB2OV9tcWRfYWxsb2NhdGlvbiAqKW1xZCktPmR5bmFtaWNfcmJfbWFzayA9IDB4RkZGRkZGRkY7
CkBAIC0zNzM2LDcgKzM3MzYsNyBAQCBzdGF0aWMgaW50IGdmeF92OV8wX2tjcV9pbml0X3F1ZXVl
KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykKIAogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFj
a3VwW21xZF9pZHhdKQogCQkJbWVtY3B5KGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4
XSwgbXFkLCBzaXplb2Yoc3RydWN0IHY5X21xZF9hbGxvY2F0aW9uKSk7Ci0JfSBlbHNlIGlmIChh
bWRncHVfaW5fcmVzZXQoYWRldikpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCisJfSBlbHNl
IGlmIChhZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovCiAJCS8q
IHJlc2V0IE1RRCB0byBhIGNsZWFuIHN0YXR1cyAqLwogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRf
YmFja3VwW21xZF9pZHhdKQogCQkJbWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3Vw
W21xZF9pZHhdLCBzaXplb2Yoc3RydWN0IHY5X21xZF9hbGxvY2F0aW9uKSk7CkBAIC0zOTMwLDcg
KzM5MzAsNyBAQCBzdGF0aWMgaW50IGdmeF92OV8wX2h3X2Zpbmkodm9pZCAqaGFuZGxlKQogCS8q
IFVzZSBkZWluaXRpYWxpemUgc2VxdWVuY2UgZnJvbSBDQUlMIHdoZW4gdW5iaW5kaW5nIGRldmlj
ZSBmcm9tIGRyaXZlciwKIAkgKiBvdGhlcndpc2UgS0lRIGlzIGhhbmdpbmcgd2hlbiBiaW5kaW5n
IGJhY2sKIAkgKi8KLQlpZiAoIWFtZGdwdV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3Vz
cGVuZCkgeworCWlmICghYWRldi0+aW5fZ3B1X3Jlc2V0ICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7
CiAJCW11dGV4X2xvY2soJmFkZXYtPnNyYm1fbXV0ZXgpOwogCQlzb2MxNV9ncmJtX3NlbGVjdChh
ZGV2LCBhZGV2LT5nZngua2lxLnJpbmcubWUsCiAJCQkJYWRldi0+Z2Z4LmtpcS5yaW5nLnBpcGUs
CkBAIC00MDg4LDcgKzQwODgsNyBAQCBzdGF0aWMgdWludDY0X3QgZ2Z4X3Y5XzBfa2lxX3JlYWRf
Y2xvY2soc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpCiAJICoKIAkgKiBhbHNvIGRvbid0IHdh
aXQgYW55bW9yZSBmb3IgSVJRIGNvbnRleHQKIAkgKiAqLwotCWlmIChyIDwgMSAmJiAoYW1kZ3B1
X2luX3Jlc2V0KGFkZXYpIHx8IGluX2ludGVycnVwdCgpKSkKKwlpZiAociA8IDEgJiYgKGFkZXYt
PmluX2dwdV9yZXNldCB8fCBpbl9pbnRlcnJ1cHQoKSkpCiAJCWdvdG8gZmFpbGVkX2tpcV9yZWFk
OwogCiAJbWlnaHRfc2xlZXAoKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2dtY192MTBfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3YxMF8wLmMK
aW5kZXggOWQzYjEyNDVhMzM5Li5lYzhjMGFmMzk1NTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2dtY192MTBfMC5jCkBAIC0yODcsNyArMjg3LDcgQEAgc3RhdGljIHZvaWQgZ21jX3YxMF8w
X2ZsdXNoX2dwdV90bGIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQzMl90IHZtaWQs
CiAJICovCiAJaWYgKGFkZXYtPmdmeC5raXEucmluZy5zY2hlZC5yZWFkeSAmJgogCSAgICAoYW1k
Z3B1X3NyaW92X3J1bnRpbWUoYWRldikgfHwgIWFtZGdwdV9zcmlvdl92ZihhZGV2KSkgJiYKLQkg
ICAgIWFtZGdwdV9pbl9yZXNldChhZGV2KSkgeworCSAgICAhYWRldi0+aW5fZ3B1X3Jlc2V0KSB7
CiAKIAkJc3RydWN0IGFtZGdwdV92bWh1YiAqaHViID0gJmFkZXYtPnZtaHViW3ZtaHViXTsKIAkJ
Y29uc3QgdW5zaWduZWQgZW5nID0gMTc7CkBAIC0zMTIsNyArMzEyLDcgQEAgc3RhdGljIHZvaWQg
Z21jX3YxMF8wX2ZsdXNoX2dwdV90bGIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQz
Ml90IHZtaWQsCiAKIAlpZiAoIWFkZXYtPm1tYW4uYnVmZmVyX2Z1bmNzX2VuYWJsZWQgfHwKIAkg
ICAgIWFkZXYtPmliX3Bvb2xfcmVhZHkgfHwKLQkgICAgYW1kZ3B1X2luX3Jlc2V0KGFkZXYpIHx8
CisJICAgIGFkZXYtPmluX2dwdV9yZXNldCB8fAogCSAgICByaW5nLT5zY2hlZC5yZWFkeSA9PSBm
YWxzZSkgewogCQlnbWNfdjEwXzBfZmx1c2hfdm1faHViKGFkZXYsIHZtaWQsIEFNREdQVV9HRlhI
VUJfMCwgMCk7CiAJCW11dGV4X3VubG9jaygmYWRldi0+bW1hbi5ndHRfd2luZG93X2xvY2spOwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y3XzAuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192N18wLmMKaW5kZXggODBjMTQ2ZGYzMzhhLi4zY2U1
YzFkMmZkZjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192N18w
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y3XzAuYwpAQCAtNDM0LDcg
KzQzNCw3IEBAIHN0YXRpYyBpbnQgZ21jX3Y3XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldiwKIAlpbnQgdm1pZDsKIAl1bnNpZ25lZCBpbnQgdG1wOwogCi0J
aWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQly
ZXR1cm4gLUVJTzsKIAogCWZvciAodm1pZCA9IDE7IHZtaWQgPCAxNjsgdm1pZCsrKSB7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjhfMC5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y4XzAuYwppbmRleCA5YWI2NWNhN2RmNzcuLjNlNjYxNWY5
ZDM5YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y4XzAuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjhfMC5jCkBAIC02MzUsNyArNjM1
LDcgQEAgc3RhdGljIGludCBnbWNfdjhfMF9mbHVzaF9ncHVfdGxiX3Bhc2lkKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LAogCWludCB2bWlkOwogCXVuc2lnbmVkIGludCB0bXA7CiAKLQlpZiAo
YW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQorCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpCiAJCXJldHVy
biAtRUlPOwogCiAJZm9yICh2bWlkID0gMTsgdm1pZCA8IDE2OyB2bWlkKyspIHsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192OV8wLmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jCmluZGV4IDc3M2VlMTFiM2QxNy4uNmE3ODBiNjc0MDE4
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192OV8wLmMKQEAgLTUwMSw3ICs1MDEsNyBA
QCBzdGF0aWMgdm9pZCBnbWNfdjlfMF9mbHVzaF9ncHVfdGxiKHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2LCB1aW50MzJfdCB2bWlkLAogCSAqLwogCWlmIChhZGV2LT5nZngua2lxLnJpbmcuc2No
ZWQucmVhZHkgJiYKIAkJCShhbWRncHVfc3Jpb3ZfcnVudGltZShhZGV2KSB8fCAhYW1kZ3B1X3Ny
aW92X3ZmKGFkZXYpKSAmJgotCQkJIWFtZGdwdV9pbl9yZXNldChhZGV2KSkgeworCQkJIWFkZXYt
PmluX2dwdV9yZXNldCkgewogCQl1aW50MzJfdCByZXEgPSBodWItPnZtX2ludl9lbmcwX3JlcSAr
IGh1Yi0+ZW5nX2Rpc3RhbmNlICogZW5nOwogCQl1aW50MzJfdCBhY2sgPSBodWItPnZtX2ludl9l
bmcwX2FjayArIGh1Yi0+ZW5nX2Rpc3RhbmNlICogZW5nOwogCkBAIC01OTYsNyArNTk2LDcgQEAg
c3RhdGljIGludCBnbWNfdjlfMF9mbHVzaF9ncHVfdGxiX3Bhc2lkKHN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2LAogCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZyA9ICZhZGV2LT5nZngua2lxLnJp
bmc7CiAJc3RydWN0IGFtZGdwdV9raXEgKmtpcSA9ICZhZGV2LT5nZngua2lxOwogCi0JaWYgKGFt
ZGdwdV9pbl9yZXNldChhZGV2KSkKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQogCQlyZXR1cm4g
LUVJTzsKIAogCWlmIChyaW5nLT5zY2hlZC5yZWFkeSkgewpAQCAtNjMzLDggKzYzMyw3IEBAIHN0
YXRpYyBpbnQgZ21jX3Y5XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiwKIAkJc3Bpbl91bmxvY2soJmFkZXYtPmdmeC5raXEucmluZ19sb2NrKTsKIAkJciA9
IGFtZGdwdV9mZW5jZV93YWl0X3BvbGxpbmcocmluZywgc2VxLCBhZGV2LT51c2VjX3RpbWVvdXQp
OwogCQlpZiAociA8IDEpIHsKLQkJCWRldl9pbmZvKGFkZXYtPmRldiwKLQkJCQkid2FpdCBmb3Ig
a2lxIGZlbmNlIGVycm9yOiAlbGRcbiIsIHIpOworCQkJRFJNX0VSUk9SKCJ3YWl0IGZvciBraXEg
ZmVuY2UgZXJyb3I6ICVsZC5cbiIsIHIpOwogCQkJcmV0dXJuIC1FVElNRTsKIAkJfQogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9haS5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvbXhncHVfYWkuYwppbmRleCBmZTMxY2JlY2NmZTkuLjVmZDY3ZTFj
YzJhMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfYWkuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9haS5jCkBAIC0yMzgsMTYgKzIz
OCwyMCBAQCBzdGF0aWMgdm9pZCB4Z3B1X2FpX21haWxib3hfZmxyX3dvcmsoc3RydWN0IHdvcmtf
c3RydWN0ICp3b3JrKQogCXN0cnVjdCBhbWRncHVfdmlydCAqdmlydCA9IGNvbnRhaW5lcl9vZih3
b3JrLCBzdHJ1Y3QgYW1kZ3B1X3ZpcnQsIGZscl93b3JrKTsKIAlzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiA9IGNvbnRhaW5lcl9vZih2aXJ0LCBzdHJ1Y3QgYW1kZ3B1X2RldmljZSwgdmlydCk7
CiAJaW50IHRpbWVvdXQgPSBBSV9NQUlMQk9YX1BPTExfRkxSX1RJTUVET1VUOworCWludCBsb2Nr
ZWQ7CiAKIAkvKiBibG9jayBhbWRncHVfZ3B1X3JlY292ZXIgdGlsbCBtc2cgRkxSIENPTVBMRVRF
IHJlY2VpdmVkLAogCSAqIG90aGVyd2lzZSB0aGUgbWFpbGJveCBtc2cgd2lsbCBiZSBydWluZWQv
cmVzZXRlZCBieQogCSAqIHRoZSBWRiBGTFIuCiAJICoKLQkgKiB3ZSBjYW4gdW5sb2NrIHRoZSBy
ZXNldF9zZW0gdG8gYWxsb3cgImFtZGdwdV9qb2JfdGltZWRvdXQiCisJICogd2UgY2FuIHVubG9j
ayB0aGUgbG9ja19yZXNldCB0byBhbGxvdyAiYW1kZ3B1X2pvYl90aW1lZG91dCIKIAkgKiB0byBy
dW4gZ3B1X3JlY292ZXIoKSBhZnRlciBGTFJfTk9USUZJQ0FUSU9OX0NNUEwgcmVjZWl2ZWQKIAkg
KiB3aGljaCBtZWFucyBob3N0IHNpZGUgaGFkIGZpbmlzaGVkIHRoaXMgVkYncyBGTFIuCiAJICov
Ci0JZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCWxvY2tlZCA9IG11dGV4X3RyeWxvY2so
JmFkZXYtPmxvY2tfcmVzZXQpOworCWlmIChsb2NrZWQpCisJCWFkZXYtPmluX2dwdV9yZXNldCA9
IHRydWU7CisKIAlkbyB7CiAJCWlmICh4Z3B1X2FpX21haWxib3hfcGVla19tc2coYWRldikgPT0g
SURIX0ZMUl9OT1RJRklDQVRJT05fQ01QTCkKIAkJCWdvdG8gZmxyX2RvbmU7CkBAIC0yNTcsNyAr
MjYxLDEwIEBAIHN0YXRpYyB2b2lkIHhncHVfYWlfbWFpbGJveF9mbHJfd29yayhzdHJ1Y3Qgd29y
a19zdHJ1Y3QgKndvcmspCiAJfSB3aGlsZSAodGltZW91dCA+IDEpOwogCiBmbHJfZG9uZToKLQl1
cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCWlmIChsb2NrZWQpIHsKKwkJYWRldi0+aW5fZ3B1
X3Jlc2V0ID0gZmFsc2U7CisJCW11dGV4X3VubG9jaygmYWRldi0+bG9ja19yZXNldCk7CisJfQog
CiAJLyogVHJpZ2dlciByZWNvdmVyeSBmb3Igd29ybGQgc3dpdGNoIGZhaWx1cmUgaWYgbm8gVERS
ICovCiAJaWYgKGFtZGdwdV9kZXZpY2Vfc2hvdWxkX3JlY292ZXJfZ3B1KGFkZXYpCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9udi5jIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvbXhncHVfbnYuYwppbmRleCA2ZjU1MTcyZTgzMzcuLmNlMmJmMWZiNzll
ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfbnYuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9udi5jCkBAIC0yNTksMTYgKzI1OSwy
MCBAQCBzdGF0aWMgdm9pZCB4Z3B1X252X21haWxib3hfZmxyX3dvcmsoc3RydWN0IHdvcmtfc3Ry
dWN0ICp3b3JrKQogCXN0cnVjdCBhbWRncHVfdmlydCAqdmlydCA9IGNvbnRhaW5lcl9vZih3b3Jr
LCBzdHJ1Y3QgYW1kZ3B1X3ZpcnQsIGZscl93b3JrKTsKIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiA9IGNvbnRhaW5lcl9vZih2aXJ0LCBzdHJ1Y3QgYW1kZ3B1X2RldmljZSwgdmlydCk7CiAJ
aW50IHRpbWVvdXQgPSBOVl9NQUlMQk9YX1BPTExfRkxSX1RJTUVET1VUOworCWludCBsb2NrZWQ7
CiAKIAkvKiBibG9jayBhbWRncHVfZ3B1X3JlY292ZXIgdGlsbCBtc2cgRkxSIENPTVBMRVRFIHJl
Y2VpdmVkLAogCSAqIG90aGVyd2lzZSB0aGUgbWFpbGJveCBtc2cgd2lsbCBiZSBydWluZWQvcmVz
ZXRlZCBieQogCSAqIHRoZSBWRiBGTFIuCiAJICoKLQkgKiB3ZSBjYW4gdW5sb2NrIHRoZSByZXNl
dF9zZW0gdG8gYWxsb3cgImFtZGdwdV9qb2JfdGltZWRvdXQiCisJICogd2UgY2FuIHVubG9jayB0
aGUgbG9ja19yZXNldCB0byBhbGxvdyAiYW1kZ3B1X2pvYl90aW1lZG91dCIKIAkgKiB0byBydW4g
Z3B1X3JlY292ZXIoKSBhZnRlciBGTFJfTk9USUZJQ0FUSU9OX0NNUEwgcmVjZWl2ZWQKIAkgKiB3
aGljaCBtZWFucyBob3N0IHNpZGUgaGFkIGZpbmlzaGVkIHRoaXMgVkYncyBGTFIuCiAJICovCi0J
ZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCWxvY2tlZCA9IG11dGV4X3RyeWxvY2soJmFk
ZXYtPmxvY2tfcmVzZXQpOworCWlmIChsb2NrZWQpCisJCWFkZXYtPmluX2dwdV9yZXNldCA9IHRy
dWU7CisKIAlkbyB7CiAJCWlmICh4Z3B1X252X21haWxib3hfcGVla19tc2coYWRldikgPT0gSURI
X0ZMUl9OT1RJRklDQVRJT05fQ01QTCkKIAkJCWdvdG8gZmxyX2RvbmU7CkBAIC0yNzgsNyArMjgy
LDEwIEBAIHN0YXRpYyB2b2lkIHhncHVfbnZfbWFpbGJveF9mbHJfd29yayhzdHJ1Y3Qgd29ya19z
dHJ1Y3QgKndvcmspCiAJfSB3aGlsZSAodGltZW91dCA+IDEpOwogCiBmbHJfZG9uZToKLQl1cF9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOworCWlmIChsb2NrZWQpIHsKKwkJYWRldi0+aW5fZ3B1X3Jl
c2V0ID0gZmFsc2U7CisJCW11dGV4X3VubG9jaygmYWRldi0+bG9ja19yZXNldCk7CisJfQogCiAJ
LyogVHJpZ2dlciByZWNvdmVyeSBmb3Igd29ybGQgc3dpdGNoIGZhaWx1cmUgaWYgbm8gVERSICov
CiAJaWYgKGFtZGdwdV9kZXZpY2Vfc2hvdWxkX3JlY292ZXJfZ3B1KGFkZXYpCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGtmZC9rZmRfZGV2aWNlX3F1ZXVlX21hbmFnZXIuYyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1ka2ZkL2tmZF9kZXZpY2VfcXVldWVfbWFuYWdlci5jCmlu
ZGV4IDdhZDE1Mzc4MjBiNS4uZTBlNjBiMGQwNjY5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGtmZC9rZmRfZGV2aWNlX3F1ZXVlX21hbmFnZXIuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGtmZC9rZmRfZGV2aWNlX3F1ZXVlX21hbmFnZXIuYwpAQCAtMzA0LDE3ICsz
MDQsMTUgQEAgc3RhdGljIHZvaWQgZGVhbGxvY2F0ZV92bWlkKHN0cnVjdCBkZXZpY2VfcXVldWVf
bWFuYWdlciAqZHFtLAogCQkJCXN0cnVjdCBxY21fcHJvY2Vzc19kZXZpY2UgKnFwZCwKIAkJCQlz
dHJ1Y3QgcXVldWUgKnEpCiB7Ci0JaWYgKCFkcW0tPmlzX3Jlc2V0dGluZykgewotCQkvKiBPbiBH
RlggdjcsIENQIGRvZXNuJ3QgZmx1c2ggVEMgYXQgZGVxdWV1ZSAqLwotCQlpZiAocS0+ZGV2aWNl
LT5kZXZpY2VfaW5mby0+YXNpY19mYW1pbHkgPT0gQ0hJUF9IQVdBSUkpCi0JCQlpZiAoZmx1c2hf
dGV4dHVyZV9jYWNoZV9ub2Nwc2NoKHEtPmRldmljZSwgcXBkKSkKLQkJCQlwcl9lcnIoIkZhaWxl
ZCB0byBmbHVzaCBUQ1xuIik7CisJLyogT24gR0ZYIHY3LCBDUCBkb2Vzbid0IGZsdXNoIFRDIGF0
IGRlcXVldWUgKi8KKwlpZiAocS0+ZGV2aWNlLT5kZXZpY2VfaW5mby0+YXNpY19mYW1pbHkgPT0g
Q0hJUF9IQVdBSUkpCisJCWlmIChmbHVzaF90ZXh0dXJlX2NhY2hlX25vY3BzY2gocS0+ZGV2aWNl
LCBxcGQpKQorCQkJcHJfZXJyKCJGYWlsZWQgdG8gZmx1c2ggVENcbiIpOwogCi0JCWtmZF9mbHVz
aF90bGIocXBkX3RvX3BkZChxcGQpKTsKKwlrZmRfZmx1c2hfdGxiKHFwZF90b19wZGQocXBkKSk7
CiAKLQkJLyogUmVsZWFzZSB0aGUgdm1pZCBtYXBwaW5nICovCi0JCXNldF9wYXNpZF92bWlkX21h
cHBpbmcoZHFtLCAwLCBxcGQtPnZtaWQpOwotCX0KKwkvKiBSZWxlYXNlIHRoZSB2bWlkIG1hcHBp
bmcgKi8KKwlzZXRfcGFzaWRfdm1pZF9tYXBwaW5nKGRxbSwgMCwgcXBkLT52bWlkKTsKIAlkcW0t
PnZtaWRfcGFzaWRbcXBkLT52bWlkXSA9IDA7CiAKIAlxcGQtPnZtaWQgPSAwOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRrZmQva2ZkX3Byb2Nlc3MuYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1ka2ZkL2tmZF9wcm9jZXNzLmMKaW5kZXggNzFiZTg5N2Q0YzJhLi4wMTNjMmIw
MThlZGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1ka2ZkL2tmZF9wcm9jZXNz
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRrZmQva2ZkX3Byb2Nlc3MuYwpAQCAtMTU1
MSwxMCArMTU1MSw2IEBAIGludCBrZmRfcmVzZXJ2ZWRfbWVtX21tYXAoc3RydWN0IGtmZF9kZXYg
KmRldiwgc3RydWN0IGtmZF9wcm9jZXNzICpwcm9jZXNzLAogdm9pZCBrZmRfZmx1c2hfdGxiKHN0
cnVjdCBrZmRfcHJvY2Vzc19kZXZpY2UgKnBkZCkKIHsKIAlzdHJ1Y3Qga2ZkX2RldiAqZGV2ID0g
cGRkLT5kZXY7Ci0Jc3RydWN0IGRldmljZV9xdWV1ZV9tYW5hZ2VyICpkcW0gPSBkZXYtPmRxbTsK
LQotCWlmIChkcW0tPmlzX3Jlc2V0dGluZykKLQkJcmV0dXJuOwogCiAJaWYgKGRldi0+ZHFtLT5z
Y2hlZF9wb2xpY3kgPT0gS0ZEX1NDSEVEX1BPTElDWV9OT19IV1MpIHsKIAkJLyogTm90aGluZyB0
byBmbHVzaCB1bnRpbCBhIFZNSUQgaXMgYXNzaWduZWQsIHdoaWNoCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2FtZGdwdV9kbS5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG0uYwppbmRleCBmZjVmN2Y3Y2Vl
YzYuLmM0ZGFhMjI5MDRkYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L2FtZGdwdV9kbS9hbWRncHVfZG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkv
YW1kZ3B1X2RtL2FtZGdwdV9kbS5jCkBAIC0xNjU4LDcgKzE2NTgsNyBAQCBzdGF0aWMgaW50IGRt
X3N1c3BlbmQodm9pZCAqaGFuZGxlKQogCXN0cnVjdCBhbWRncHVfZGlzcGxheV9tYW5hZ2VyICpk
bSA9ICZhZGV2LT5kbTsKIAlpbnQgcmV0ID0gMDsKIAotCWlmIChhbWRncHVfaW5fcmVzZXQoYWRl
dikpIHsKKwlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7CiAJCW11dGV4X2xvY2soJmRtLT5kY19s
b2NrKTsKIAkJZG0tPmNhY2hlZF9kY19zdGF0ZSA9IGRjX2NvcHlfc3RhdGUoZG0tPmRjLT5jdXJy
ZW50X3N0YXRlKTsKIApAQCAtMTg0NCw3ICsxODQ0LDcgQEAgc3RhdGljIGludCBkbV9yZXN1bWUo
dm9pZCAqaGFuZGxlKQogCXN0cnVjdCBkY19zdGF0ZSAqZGNfc3RhdGU7CiAJaW50IGksIHIsIGo7
CiAKLQlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7CisJaWYgKGFkZXYtPmluX2dwdV9yZXNl
dCkgewogCQlkY19zdGF0ZSA9IGRtLT5jYWNoZWRfZGNfc3RhdGU7CiAKIAkJciA9IGRtX2RtdWJf
aHdfaW5pdChhZGV2KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L2FtZGdwdV9zbXUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUu
YwppbmRleCAxZmZhY2M3MTJlNTMuLmM4ZTMwZDU5ZTY1OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9wb3dlcnBsYXkvYW1kZ3B1X3NtdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUuYwpAQCAtMTExMCw3ICsxMTEwLDcgQEAgc3RhdGljIGlu
dCBzbXVfZGlzYWJsZV9kcG1zKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogCXN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2ID0gc211LT5hZGV2OwogCWludCByZXQgPSAwOwogCWJvb2wgdXNlX2Jh
Y28gPSAhc211LT5pc19hcHUgJiYKLQkJKChhbWRncHVfaW5fcmVzZXQoYWRldikgJiYKKwkJKChh
ZGV2LT5pbl9ncHVfcmVzZXQgJiYKIAkJICAoYW1kZ3B1X2FzaWNfcmVzZXRfbWV0aG9kKGFkZXYp
ID09IEFNRF9SRVNFVF9NRVRIT0RfQkFDTykpIHx8CiAJCSAoKGFkZXYtPmluX3J1bnBtIHx8IGFk
ZXYtPmluX2hpYmVybmF0ZSkgJiYgYW1kZ3B1X2FzaWNfc3VwcG9ydHNfYmFjbyhhZGV2KSkpOwog
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMjBf
aHdtZ3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL3ZlZ2EyMF9od21n
ci5jCmluZGV4IGRhODQwMTJiN2ZkNS4uYzcyMTYzNjJiNjhkIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMjBfaHdtZ3IuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMjBfaHdtZ3IuYwpAQCAtNDg5LDcgKzQ4
OSw3IEBAIHN0YXRpYyBpbnQgdmVnYTIwX3NldHVwX2FzaWNfdGFzayhzdHJ1Y3QgcHBfaHdtZ3Ig
Kmh3bWdyKQogewogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICopKGh3bWdyLT5hZGV2KTsKIAlpbnQgcmV0ID0gMDsKLQlib29sIHVzZV9iYWNvID0g
KGFtZGdwdV9pbl9yZXNldChhZGV2KSAmJgorCWJvb2wgdXNlX2JhY28gPSAoYWRldi0+aW5fZ3B1
X3Jlc2V0ICYmCiAJCQkgKGFtZGdwdV9hc2ljX3Jlc2V0X21ldGhvZChhZGV2KSA9PSBBTURfUkVT
RVRfTUVUSE9EX0JBQ08pKSB8fAogCQkoYWRldi0+aW5fcnVucG0gJiYgYW1kZ3B1X2FzaWNfc3Vw
cG9ydHNfYmFjbyhhZGV2KSk7CiAKLS0gCjIuMTcuMQoKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KYW1kLWdmeCBtYWlsaW5nIGxpc3QKYW1kLWdmeEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9hbWQtZ2Z4Cg==
