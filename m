Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3156522BC14
	for <lists+amd-gfx@lfdr.de>; Fri, 24 Jul 2020 04:39:33 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9663B6E8EC;
	Fri, 24 Jul 2020 02:39:31 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM04-CO1-obe.outbound.protection.outlook.com
 (mail-eopbgr690066.outbound.protection.outlook.com [40.107.69.66])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7D2566E3FC
 for <amd-gfx@lists.freedesktop.org>; Fri, 24 Jul 2020 02:39:29 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=QtfATlVKfv7ATWcvRlzFEiMf47Z+unxlj6nBz9V3rnDJdtASmvDOXlspaF670mD8wr++aUq0mVJsLjnQccfSiL7gLXMSCHDpZ6ioU9Ecn9eUSNMWM+tVQFxkXApKWiBQu8+9Q0bYENHSg/OWmp1FratPMyANKgEfmJ0PoW6Hi3goQSLbdRuMQgZimemXBQAbZxnJouZxUSbXcInMHOhiD3UX4gYy15xveefJnN3Z3vjVEQAph1+kTNAdct5qnZ08qIVYrWZz/gC8nrF3FqRK8yCQEyPIC1r9qy9OqkDnksGeuNKrfPrNTx+FRC4bM6gnOqGq2SQ6DPEZleW1VlEWEg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=BeFavJ1+RU4ihG6pj4K+Aa/z0cyVy+NCJPdIJweSwgU=;
 b=niARGEIUE2eK+jJuCE5T7eotrf2yHExUhIY2E2zDLcyfGdAuNklnjkIzBlGUPhUXzj+o4TSbC41FF20dDx8vl9TLHYewvy4O8xGnIOFRHHkXLIJnnMekt3w2AIud5gWEjKOq1DkhMQIX0/Xypir/2LpJzJHXhIB7wFkubtp0nEkabB8GDEfeHJWT0NrnCgJK6FGA6cUPM8hvEqKRl1k8owzX3s0JK7hjhbUug+0htDbdhxyKGmjGhRN42oe9hc+8mP3NEBu1tb4mpklVeb2UOWjy4H5z326rZr1hXo9okg0+6P3QD0a48KiRsgzAjTMmHzu+L0Aa+0PQTkwKIltBZQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=BeFavJ1+RU4ihG6pj4K+Aa/z0cyVy+NCJPdIJweSwgU=;
 b=xPsVMIoEkrB6wRyqrs3K36wLGwAHnbz4StIHihOBFZstQTlFC77U5HJ8cKOXNfQlhHWYL9BMl4IkpvFLvFh/w23H5Wn/po7lI0Murj13fjeYQ9izCHdidPZIgW+cBsO95sxF3n3jogW18V5UvKWyxmYtR720Gcu/cjZSYbxMMbk=
Received: from DM6PR12MB4075.namprd12.prod.outlook.com (2603:10b6:5:21d::8) by
 DM6PR12MB2825.namprd12.prod.outlook.com (2603:10b6:5:75::11) with
 Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.3216.23; Fri, 24 Jul 2020 02:39:22 +0000
Received: from DM6PR12MB4075.namprd12.prod.outlook.com
 ([fe80::84dc:a0e7:6158:ce4e]) by DM6PR12MB4075.namprd12.prod.outlook.com
 ([fe80::84dc:a0e7:6158:ce4e%8]) with mapi id 15.20.3216.021; Fri, 24 Jul 2020
 02:39:22 +0000
From: "Zhang, Hawking" <Hawking.Zhang@amd.com>
To: "Li, Dennis" <Dennis.Li@amd.com>, "amd-gfx@lists.freedesktop.org"
 <amd-gfx@lists.freedesktop.org>, "Deucher, Alexander"
 <Alexander.Deucher@amd.com>, "Zhou1, Tao" <Tao.Zhou1@amd.com>, "Chen, Guchun"
 <Guchun.Chen@amd.com>
Subject: RE: [PATCH v5] drm/amdgpu: fix system hang issue during GPU reset
Thread-Topic: [PATCH v5] drm/amdgpu: fix system hang issue during GPU reset
Thread-Index: AQHWXN+oC+DIXHUe4ESGzt0Pi06MEqkWDWRQ
Date: Fri, 24 Jul 2020 02:39:22 +0000
Message-ID: <DM6PR12MB4075F0D270349623DE17FCE1FC770@DM6PR12MB4075.namprd12.prod.outlook.com>
References: <20200718084416.24891-1-Dennis.Li@amd.com>
In-Reply-To: <20200718084416.24891-1-Dennis.Li@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
msip_labels: MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_Enabled=true;
 MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_SetDate=2020-07-24T02:39:15Z; 
 MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_Method=Privileged;
 MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_Name=Public_0;
 MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_SiteId=3dd8961f-e488-4e60-8e11-a82d994e183d;
 MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_ActionId=faecffee-5ac8-4697-9a12-00008f97284e;
 MSIP_Label_0d814d60-469d-470c-8cb0-58434e2bf457_ContentBits=1
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_enabled: true
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_setdate: 2020-07-24T02:39:09Z
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_method: Standard
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_name: Internal Use Only -
 Unrestricted
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_siteid: 3dd8961f-e488-4e60-8e11-a82d994e183d
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_actionid: a73b2b14-e381-46ed-b89f-000046b5d4c4
msip_label_76546daa-41b6-470c-bb85-f6f40f044d7f_contentbits: 0
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_enabled: true
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_setdate: 2020-07-24T02:39:16Z
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_method: Privileged
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_name: Public_0
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_siteid: 3dd8961f-e488-4e60-8e11-a82d994e183d
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_actionid: efd2c5dd-ade3-4fbd-b68c-000048cd64c9
msip_label_0d814d60-469d-470c-8cb0-58434e2bf457_contentbits: 0
authentication-results: amd.com; dkim=none (message not signed)
 header.d=none;amd.com; dmarc=none action=none header.from=amd.com;
x-originating-ip: [58.247.170.242]
x-ms-publictraffictype: Email
x-ms-office365-filtering-ht: Tenant
x-ms-office365-filtering-correlation-id: 7ca26acd-3fd9-4c9a-f204-08d82f7ac623
x-ms-traffictypediagnostic: DM6PR12MB2825:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <DM6PR12MB28256F8BB5871984985D31FCFC770@DM6PR12MB2825.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:110;
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: xxM2Gk3muV2l4i0w+JDDTeToOSxHzu1kRj026M2sNZul0qn8AIMahxlu5lDihSETUxP2hfCHkfO5/MlXCn7AtZ0qF5tVWo/ycvydiphoGkUuAFYUm/+VCcNRCVzSbXpyviNrlwsQdngNbFZ0hmUDJCKfpBRKoF90l/cdEvYaT5FRv+UL8mxWU1+tV67424Y/3XkRXORNk5H3bun9R66CZadzs/08fwj2xhZW0qRJaOdnE9E1PkrVME/KhGlEvR3N/zRExmLGI3iIK57ERLe70luMStJe+q+m5F5cPL9S/uTRiT+Evz/EmfK1zT3DelBV8sbdfkzSrLdKjOAtPrRoFA==
x-forefront-antispam-report: CIP:255.255.255.255; CTRY:; LANG:en; SCL:1; SRV:;
 IPV:NLI; SFV:NSPM; H:DM6PR12MB4075.namprd12.prod.outlook.com; PTR:; CAT:NONE;
 SFTY:;
 SFS:(4636009)(39860400002)(396003)(136003)(366004)(346002)(376002)(55016002)(8936002)(66946007)(2906002)(8676002)(76116006)(5660300002)(316002)(4326008)(33656002)(86362001)(6636002)(9686003)(52536014)(6506007)(26005)(66574015)(7696005)(53546011)(478600001)(71200400001)(83380400001)(64756008)(66476007)(66446008)(66556008)(186003)(110136005)(30864003)(579004)(559001);
 DIR:OUT; SFP:1101; 
x-ms-exchange-antispam-messagedata: k8Fye4fOoLJPE6kjj52YRw8/dUoLaOinv/y5GeQhMWQtZaTrorTK0xImpO17npWbET335lATQXeYo/uZaqpcIBPUy016N3EaKxqn3+x2dCqzy1BO6OV0X99DNbMh8BLRgFtX2Nwe6frEi295Gmp4movNcaApdPul1xkW7KiVS7v8WxtRKGuevAQCAn2MnF22fEgZuXfxZEOf93ZRV9h7wa0fqHLkIopcC8qcr/7SjF2VZIdLJ2J3pLY+lnH7Q5DM14kolCFGrHfJZ1IkVcOW22S6VH+Z7oA35GgxJs+j1J+kPOAgK/qG8nwOoixoMAkMv4Ucd5B5xcjifj59Q506HqEXLRRvQYQBCLP2F0rRY8YH0bR0OwF2mZoYe0PYwJtfnzPboDPqi/XD0fUDByWN46QaWfOTOHnLQBg+v2AMWlXJmjd/xnKFPR1TUQG78pg9s6G9RJaVLYEOASAnYUJpetTlmwbqc66Dd/eeAYfnQSbo4/geVc8r2Iu1N24IvHb6
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-AuthSource: DM6PR12MB4075.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 7ca26acd-3fd9-4c9a-f204-08d82f7ac623
X-MS-Exchange-CrossTenant-originalarrivaltime: 24 Jul 2020 02:39:22.8480 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: u3iqwHhvOBNx273NRdzkgkM2CdB5pRegDMqSVAZSVQyeiMBHeec4K5vjbamnc1B8gpDSLLS1DsnWzSOUmAemiQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB2825
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Li, Dennis" <Dennis.Li@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

W0FNRCBQdWJsaWMgVXNlXQ0KDQpSZXZpZXdlZC1ieTogSGF3a2luZyBaaGFuZyA8SGF3a2luZy5a
aGFuZ0BhbWQuY29tPg0KDQpSZWdhcmRzLA0KSGF3a2luZw0KLS0tLS1PcmlnaW5hbCBNZXNzYWdl
LS0tLS0NCkZyb206IERlbm5pcyBMaSA8RGVubmlzLkxpQGFtZC5jb20+IA0KU2VudDogU2F0dXJk
YXksIEp1bHkgMTgsIDIwMjAgMTY6NDQNClRvOiBhbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZzsgRGV1Y2hlciwgQWxleGFuZGVyIDxBbGV4YW5kZXIuRGV1Y2hlckBhbWQuY29tPjsgWmhvdTEs
IFRhbyA8VGFvLlpob3UxQGFtZC5jb20+OyBaaGFuZywgSGF3a2luZyA8SGF3a2luZy5aaGFuZ0Bh
bWQuY29tPjsgQ2hlbiwgR3VjaHVuIDxHdWNodW4uQ2hlbkBhbWQuY29tPg0KQ2M6IExpLCBEZW5u
aXMgPERlbm5pcy5MaUBhbWQuY29tPg0KU3ViamVjdDogW1BBVENIIHY1XSBkcm0vYW1kZ3B1OiBm
aXggc3lzdGVtIGhhbmcgaXNzdWUgZHVyaW5nIEdQVSByZXNldA0KDQp3aGVuIEdQVSBoYW5nLCBk
cml2ZXIgaGFzIG11bHRpLXBhdGhzIHRvIGVudGVyIGFtZGdwdV9kZXZpY2VfZ3B1X3JlY292ZXIs
DQp0aGUgYXRvbWljIGFkZXYtPmluX2dwdV9yZXNldCBhbmQgaGl2ZS0+aW5fcmVzZXQgYXJlIHVz
ZWQgdG8gYXZvaWQNCnJlLWVudGVyaW5nIEdQVSByZWNvdmVyeS4NCg0KRHVyaW5nIEdQVSByZXNl
dCBhbmQgcmVzdW1lLCBpdCBpcyB1bnNhZmUgdGhhdCBvdGhlciB0aHJlYWRzIGFjY2VzcyBHUFUs
DQp3aGljaCBtYXliZSBjYXVzZSBHUFUgcmVzZXQgZmFpbGVkLiBUaGVyZWZvcmUgdGhlIG5ldyBy
d19zZW1hcGhvcmUNCmFkZXYtPnJlc2V0X3NlbSBpcyBpbnRyb2R1Y2VkLCB3aGljaCBwcm90ZWN0
IEdQVSBmcm9tIGJlaW5nIGFjY2Vzc2VkIGJ5DQpleHRlcm5hbCB0aHJlYWRzIGR1cmluZyByZWNv
dmVyeS4NCg0KdjI6DQoxLiBhZGQgcndsb2NrIGZvciBzb21lIGlvY3RscywgZGVidWdmcyBhbmQg
ZmlsZS1jbG9zZSBmdW5jdGlvbi4NCjIuIGNoYW5nZSB0byB1c2UgZHFtLT5pc19yZXNldHRpbmcg
YW5kIGRxbV9sb2NrIGZvciBwcm90ZWN0aW9uIGluIGtmZA0KZHJpdmVyLg0KMy4gcmVtb3ZlIHRy
eV9sb2NrIGFuZCBjaGFuZ2UgYWRldi0+aW5fZ3B1X3Jlc2V0IGFzIGF0b21pYywgdG8gYXZvaWQN
CnJlLWVudGVyIEdQVSByZWNvdmVyeSBmb3IgdGhlIHNhbWUgR1BVIGhhbmcuDQoNCnYzOg0KMS4g
Y2hhbmdlIGJhY2sgdG8gdXNlIGFkZXYtPnJlc2V0X3NlbSB0byBwcm90ZWN0IGtmZCBjYWxsYmFj
aw0KZnVuY3Rpb25zLCBiZWNhdXNlIGRxbV9sb2NrIGNvdWxkbid0IHByb3RlY3QgYWxsIGNvZGVz
LCBmb3IgZXhhbXBsZToNCmZyZWVfbXFkIG11c3QgYmUgY2FsbGVkIG91dHNpZGUgb2YgZHFtX2xv
Y2s7DQoNClsgMTIzMC4xNzYxOTldIEhhcmR3YXJlIG5hbWU6IFN1cGVybWljcm8gU1lTLTcwNDlH
UC1UUlQvWDExRFBHLVFULCBCSU9TIDMuMSAwNS8yMy8yMDE5DQpbIDEyMzAuMTc3MjIxXSBDYWxs
IFRyYWNlOg0KWyAxMjMwLjE3ODI0OV0gIGR1bXBfc3RhY2srMHg5OC8weGQ1DQpbIDEyMzAuMTc5
NDQzXSAgYW1kZ3B1X3ZpcnRfa2lxX3JlZ193cml0ZV9yZWdfd2FpdCsweDE4MS8weDE5MCBbYW1k
Z3B1XQ0KWyAxMjMwLjE4MDY3M10gIGdtY192OV8wX2ZsdXNoX2dwdV90bGIrMHhjYy8weDMxMCBb
YW1kZ3B1XQ0KWyAxMjMwLjE4MTg4Ml0gIGFtZGdwdV9nYXJ0X3VuYmluZCsweGE5LzB4ZTAgW2Ft
ZGdwdV0NClsgMTIzMC4xODMwOThdICBhbWRncHVfdHRtX2JhY2tlbmRfdW5iaW5kKzB4NDYvMHgx
ODAgW2FtZGdwdV0NClsgMTIzMC4xODQyMzldICA/IHR0bV9ib19wdXQrMHgxNzEvMHg1ZjAgW3R0
bV0NClsgMTIzMC4xODUzOTRdICB0dG1fdHRfdW5iaW5kKzB4MjEvMHg0MCBbdHRtXQ0KWyAxMjMw
LjE4NjU1OF0gIHR0bV90dF9kZXN0cm95LnBhcnQuMTIrMHgxMi8weDYwIFt0dG1dDQpbIDEyMzAu
MTg3NzA3XSAgdHRtX3R0X2Rlc3Ryb3krMHgxMy8weDIwIFt0dG1dDQpbIDEyMzAuMTg4ODMyXSAg
dHRtX2JvX2NsZWFudXBfbWVtdHlwZV91c2UrMHgzNi8weDgwIFt0dG1dDQpbIDEyMzAuMTg5OTc5
XSAgdHRtX2JvX3B1dCsweDFiZS8weDVmMCBbdHRtXQ0KWyAxMjMwLjE5MTIzMF0gIGFtZGdwdV9i
b191bnJlZisweDFlLzB4MzAgW2FtZGdwdV0NClsgMTIzMC4xOTI1MjJdICBhbWRncHVfYW1ka2Zk
X2ZyZWVfZ3R0X21lbSsweGFmLzB4MTQwIFthbWRncHVdDQpbIDEyMzAuMTkzODMzXSAgZnJlZV9t
cWQrMHgyNS8weDQwIFthbWRncHVdDQpbIDEyMzAuMTk1MTQzXSAgZGVzdHJveV9xdWV1ZV9jcHNj
aCsweDFhNy8weDI3MCBbYW1kZ3B1XQ0KWyAxMjMwLjE5NjQ3NV0gIHBxbV9kZXN0cm95X3F1ZXVl
KzB4MTA1LzB4MjYwIFthbWRncHVdDQpbIDEyMzAuMTk3ODE5XSAga2ZkX2lvY3RsX2Rlc3Ryb3lf
cXVldWUrMHgzNy8weDcwIFthbWRncHVdDQpbIDEyMzAuMTk5MTU0XSAga2ZkX2lvY3RsKzB4Mjc3
LzB4NTAwIFthbWRncHVdDQpbIDEyMzAuMjAwNDU4XSAgPyBrZmRfaW9jdGxfZ2V0X2Nsb2NrX2Nv
dW50ZXJzKzB4NjAvMHg2MCBbYW1kZ3B1XQ0KWyAxMjMwLjIwMTY1Nl0gID8gdG9tb3lvX2ZpbGVf
aW9jdGwrMHgxOS8weDIwDQpbIDEyMzAuMjAyODMxXSAga3N5c19pb2N0bCsweDk4LzB4YjANClsg
MTIzMC4yMDQwMDRdICBfX3g2NF9zeXNfaW9jdGwrMHgxYS8weDIwDQpbIDEyMzAuMjA1MTc0XSAg
ZG9fc3lzY2FsbF82NCsweDVmLzB4MjUwDQpbIDEyMzAuMjA2MzM5XSAgZW50cnlfU1lTQ0FMTF82
NF9hZnRlcl9od2ZyYW1lKzB4NDkvMHhiZQ0KDQoyLiByZW1vdmUgdHJ5X2xvY2sgYW5kIGludHJv
ZHVjZSBhdG9taWMgaGl2ZS0+aW5fcmVzZXQsIHRvIGF2b2lkDQpyZS1lbnRlciBHUFUgcmVjb3Zl
cnkuDQoNCnY0Og0KMS4gcmVtb3ZlIGFuIHVubmVjZXNzYXJ5IHdoaXRlc3BhY2UgY2hhbmdlIGlu
IGtmZF9jaGFyZGV2LmMNCjIuIHJlbW92ZSBjb21tZW50IGNvZGVzIGluIGFtZGdwdV9kZXZpY2Uu
Yw0KMy4gYWRkIG1vcmUgZGV0YWlsZWQgY29tbWVudCBpbiBjb21taXQgbWVzc2FnZQ0KNC4gZGVm
aW5lIGEgd3JhcCBmdW5jdGlvbiBhbWRncHVfaW5fcmVzZXQNCg0KdjU6DQoxLiBGaXggc29tZSBz
dHlsZSBpc3N1ZXMuDQoNClNpZ25lZC1vZmYtYnk6IERlbm5pcyBMaSA8RGVubmlzLkxpQGFtZC5j
b20+DQpSZXZpZXdlZC1ieTogQW5kcmV5IEdyb2R6b3Zza3kgPGFuZHJleS5ncm9kem92c2t5QGFt
ZC5jb20+DQpSZXZpZXdlZC1ieTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0Bh
bWQuY29tPg0KUmV2aWV3ZWQtYnk6IEZlbGl4IEt1ZWhsaW5nIDxGZWxpeC5LdWVobGluZ0BhbWQu
Y29tPg0KUmV2aWV3ZWQtYnk6IExpam8gTGF6YXIgPExpam8uTGF6YXJAYW1kLmNvbT4NClN1Z2dl
c3RlZC1ieTogTHViZW4gVHVrb3YgPGx1YmVuLnR1aWtvdkBhbWQuY29tPg0KDQpDaGFuZ2UtSWQ6
IEk3Zjc3YTcyNzk1NDYyNTg3ZWQ3ZDVmNTFmZTUzYTU5NGEwZjFmNzA4DQoNCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaCBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdS5oDQppbmRleCA4MGYzMmIzYmViODguLmJlOGJkM2FlNzgzYSAxMDA2
NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdS5oDQorKysgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaA0KQEAgLTk2Myw5ICs5NjMsOSBAQCBzdHJ1
Y3QgYW1kZ3B1X2RldmljZSB7DQogCWJvb2wgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5f
c3VzcGVuZDsNCiAJYm9vbAkJCQlpbl9oaWJlcm5hdGU7DQogDQotCWJvb2wgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgaW5fZ3B1X3Jlc2V0Ow0KKwlhdG9taWNfdCAgICAgICAgICAgICAgICAg
ICAgICAgIGluX2dwdV9yZXNldDsNCiAJZW51bSBwcF9tcDFfc3RhdGUgICAgICAgICAgICAgICBt
cDFfc3RhdGU7DQotCXN0cnVjdCBtdXRleCAgbG9ja19yZXNldDsNCisJc3RydWN0IHJ3X3NlbWFw
aG9yZQlyZXNldF9zZW07DQogCXN0cnVjdCBhbWRncHVfZG9vcmJlbGxfaW5kZXggZG9vcmJlbGxf
aW5kZXg7DQogDQogCXN0cnVjdCBtdXRleAkJCW5vdGlmaWVyX2xvY2s7DQpAQCAtMTI4MCw0ICsx
MjgwLDkgQEAgc3RhdGljIGlubGluZSBib29sIGFtZGdwdV9pc190bXooc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYpDQogICAgICAgIHJldHVybiBhZGV2LT5nbWMudG16X2VuYWJsZWQ7DQogfQ0K
IA0KK3N0YXRpYyBpbmxpbmUgYm9vbCBhbWRncHVfaW5fcmVzZXQoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYpDQorew0KKwlyZXR1cm4gYXRvbWljX3JlYWQoJmFkZXYtPmluX2dwdV9yZXNldCkg
PyB0cnVlIDogZmFsc2U7DQorfQ0KKw0KICNlbmRpZg0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9hbWRrZmQuYw0KaW5kZXggMWI4NjVmZWQ3NGNhLi5hMGVhNjYzZWNkYmMgMTAw
NjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkLmMNCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmQuYw0KQEAgLTI0NCwx
MSArMjQ0LDE0IEBAIGludCBhbWRncHVfYW1ka2ZkX2FsbG9jX2d0dF9tZW0oc3RydWN0IGtnZF9k
ZXYgKmtnZCwgc2l6ZV90IHNpemUsDQogCWlmIChjcF9tcWRfZ2Z4OSkNCiAJCWJwLmZsYWdzIHw9
IEFNREdQVV9HRU1fQ1JFQVRFX0NQX01RRF9HRlg5Ow0KIA0KKwlpZiAoIWRvd25fcmVhZF90cnls
b2NrKCZhZGV2LT5yZXNldF9zZW0pKQ0KKwkJcmV0dXJuIC1FSU87DQorDQogCXIgPSBhbWRncHVf
Ym9fY3JlYXRlKGFkZXYsICZicCwgJmJvKTsNCiAJaWYgKHIpIHsNCiAJCWRldl9lcnIoYWRldi0+
ZGV2LA0KIAkJCSJmYWlsZWQgdG8gYWxsb2NhdGUgQk8gZm9yIGFtZGtmZCAoJWQpXG4iLCByKTsN
Ci0JCXJldHVybiByOw0KKwkJZ290byBlcnI7DQogCX0NCiANCiAJLyogbWFwIHRoZSBidWZmZXIg
Ki8NCkBAIC0yODMsNiArMjg2LDcgQEAgaW50IGFtZGdwdV9hbWRrZmRfYWxsb2NfZ3R0X21lbShz
dHJ1Y3Qga2dkX2RldiAqa2dkLCBzaXplX3Qgc2l6ZSwNCiANCiAJYW1kZ3B1X2JvX3VucmVzZXJ2
ZShibyk7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogCXJldHVybiAwOw0KIA0K
IGFsbG9jYXRlX21lbV9rbWFwX2JvX2ZhaWxlZDoNCkBAIC0yOTEsMTkgKzI5NSwyNSBAQCBpbnQg
YW1kZ3B1X2FtZGtmZF9hbGxvY19ndHRfbWVtKHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHNpemVfdCBz
aXplLA0KIAlhbWRncHVfYm9fdW5yZXNlcnZlKGJvKTsNCiBhbGxvY2F0ZV9tZW1fcmVzZXJ2ZV9i
b19mYWlsZWQ6DQogCWFtZGdwdV9ib191bnJlZigmYm8pOw0KLQ0KK2VycjoNCisJdXBfcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsNCiAJcmV0dXJuIHI7DQogfQ0KIA0KIHZvaWQgYW1kZ3B1X2FtZGtm
ZF9mcmVlX2d0dF9tZW0oc3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbWVtX29iaikNCiB7DQor
CXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gKHN0cnVjdCBhbWRncHVfZGV2aWNlICopa2dk
Ow0KIAlzdHJ1Y3QgYW1kZ3B1X2JvICpibyA9IChzdHJ1Y3QgYW1kZ3B1X2JvICopIG1lbV9vYmo7
DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJYW1kZ3B1X2JvX3Jlc2Vy
dmUoYm8sIHRydWUpOw0KIAlhbWRncHVfYm9fa3VubWFwKGJvKTsNCiAJYW1kZ3B1X2JvX3VucGlu
KGJvKTsNCiAJYW1kZ3B1X2JvX3VucmVzZXJ2ZShibyk7DQogCWFtZGdwdV9ib191bnJlZigmKGJv
KSk7DQorDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogfQ0KIA0KIGludCBhbWRncHVf
YW1ka2ZkX2FsbG9jX2d3cyhzdHJ1Y3Qga2dkX2RldiAqa2dkLCBzaXplX3Qgc2l6ZSwNCkBAIC0z
MzUsOSArMzQ1LDE0IEBAIGludCBhbWRncHVfYW1ka2ZkX2FsbG9jX2d3cyhzdHJ1Y3Qga2dkX2Rl
diAqa2dkLCBzaXplX3Qgc2l6ZSwNCiANCiB2b2lkIGFtZGdwdV9hbWRrZmRfZnJlZV9nd3Moc3Ry
dWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbWVtX29iaikNCiB7DQorCXN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2ID0gKHN0cnVjdCBhbWRncHVfZGV2aWNlICopa2dkOw0KIAlzdHJ1Y3QgYW1kZ3B1
X2JvICpibyA9IChzdHJ1Y3QgYW1kZ3B1X2JvICopbWVtX29iajsNCiANCisJZG93bl9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlhbWRncHVfYm9fdW5yZWYoJmJvKTsNCisNCisJdXBfcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsNCiB9DQogDQogdWludDMyX3QgYW1kZ3B1X2FtZGtmZF9nZXRf
ZndfdmVyc2lvbihzdHJ1Y3Qga2dkX2RldiAqa2dkLA0KQEAgLTYxMSwxMiArNjI2LDE5IEBAIGlu
dCBhbWRncHVfYW1ka2ZkX3N1Ym1pdF9pYihzdHJ1Y3Qga2dkX2RldiAqa2dkLCBlbnVtIGtnZF9l
bmdpbmVfdHlwZSBlbmdpbmUsDQogCS8qIFRoaXMgd29ya3MgZm9yIE5PX0hXUy4gVE9ETzogbmVl
ZCB0byBoYW5kbGUgd2l0aG91dCBrbm93aW5nIFZNSUQgKi8NCiAJam9iLT52bWlkID0gdm1pZDsN
CiANCisJaWYgKCFkb3duX3JlYWRfdHJ5bG9jaygmYWRldi0+cmVzZXRfc2VtKSkgew0KKwkJcmV0
ID0gLUVJTzsNCisJCWdvdG8gZXJyX2liX3NjaGVkOw0KKwl9DQorDQogCXJldCA9IGFtZGdwdV9p
Yl9zY2hlZHVsZShyaW5nLCAxLCBpYiwgam9iLCAmZik7DQogCWlmIChyZXQpIHsNCiAJCURSTV9F
UlJPUigiYW1kZ3B1OiBmYWlsZWQgdG8gc2NoZWR1bGUgSUIuXG4iKTsNCiAJCWdvdG8gZXJyX2li
X3NjaGVkOw0KIAl9DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXJldCA9
IGRtYV9mZW5jZV93YWl0KGYsIGZhbHNlKTsNCiANCiBlcnJfaWJfc2NoZWQ6DQpAQCAtNjQ3LDYg
KzY2OSw5IEBAIGludCBhbWRncHVfYW1ka2ZkX2ZsdXNoX2dwdV90bGJfdm1pZChzdHJ1Y3Qga2dk
X2RldiAqa2dkLCB1aW50MTZfdCB2bWlkKQ0KIHsNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKilrZ2Q7DQogDQorCWlmICghZG93bl9yZWFkX3Ry
eWxvY2soJmFkZXYtPnJlc2V0X3NlbSkpDQorCQlyZXR1cm4gLUVJTzsNCisNCiAJaWYgKGFkZXYt
PmZhbWlseSA9PSBBTURHUFVfRkFNSUxZX0FJKSB7DQogCQlpbnQgaTsNCiANCkBAIC02NTYsNiAr
NjgxLDggQEAgaW50IGFtZGdwdV9hbWRrZmRfZmx1c2hfZ3B1X3RsYl92bWlkKHN0cnVjdCBrZ2Rf
ZGV2ICprZ2QsIHVpbnQxNl90IHZtaWQpDQogCQlhbWRncHVfZ21jX2ZsdXNoX2dwdV90bGIoYWRl
diwgdm1pZCwgQU1ER1BVX0dGWEhVQl8wLCAwKTsNCiAJfQ0KIA0KKwl1cF9yZWFkKCZhZGV2LT5y
ZXNldF9zZW0pOw0KKw0KIAlyZXR1cm4gMDsNCiB9DQogDQpAQCAtNjY0LDExICs2OTEsMTggQEAg
aW50IGFtZGdwdV9hbWRrZmRfZmx1c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3Qga2dkX2RldiAqa2dk
LCB1aW50MTZfdCBwYXNpZCkNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSAoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKilrZ2Q7DQogCWNvbnN0IHVpbnQzMl90IGZsdXNoX3R5cGUgPSAwOw0K
IAlib29sIGFsbF9odWIgPSBmYWxzZTsNCisJaW50IHJldCA9IC1FSU87DQogDQogCWlmIChhZGV2
LT5mYW1pbHkgPT0gQU1ER1BVX0ZBTUlMWV9BSSkNCiAJCWFsbF9odWIgPSB0cnVlOw0KIA0KLQly
ZXR1cm4gYW1kZ3B1X2dtY19mbHVzaF9ncHVfdGxiX3Bhc2lkKGFkZXYsIHBhc2lkLCBmbHVzaF90
eXBlLCBhbGxfaHViKTsNCisJaWYgKGRvd25fcmVhZF90cnlsb2NrKCZhZGV2LT5yZXNldF9zZW0p
KSB7DQorCQlyZXQgPSBhbWRncHVfZ21jX2ZsdXNoX2dwdV90bGJfcGFzaWQoYWRldiwNCisJCQkJ
CXBhc2lkLCBmbHVzaF90eXBlLCBhbGxfaHViKTsNCisJCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7DQorCX0NCisNCisJcmV0dXJuIHJldDsNCiB9DQogDQogYm9vbCBhbWRncHVfYW1ka2ZkX2hh
dmVfYXRvbWljc19zdXBwb3J0KHN0cnVjdCBrZ2RfZGV2ICprZ2QpDQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjEwLmMgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYw0KaW5kZXggNjkxYzg5
NzA1YmNkLi5iODcyY2RiMGI3MDUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92MTAuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjEwLmMNCkBAIC01NDMsNyArNTQzLDcgQEAgc3RhdGlj
IGludCBrZ2RfaHFkX2Rlc3Ryb3koc3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbXFkLA0KIAl1
aW50MzJfdCB0ZW1wOw0KIAlzdHJ1Y3QgdjEwX2NvbXB1dGVfbXFkICptID0gZ2V0X21xZChtcWQp
Ow0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFk
ZXYpKQ0KIAkJcmV0dXJuIC1FSU87DQogDQogI2lmIDANCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92Ny5jIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjcuYw0KaW5kZXggMGI3ZTc4NzQ4NTQwLi44
MzJhMjAwYmI2MmYgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2dmeF92Ny5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfYW1ka2ZkX2dmeF92Ny5jDQpAQCAtNDI1LDcgKzQyNSw3IEBAIHN0YXRpYyBpbnQga2dkX2hx
ZF9kZXN0cm95KHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQgKm1xZCwNCiAJdW5zaWduZWQgbG9u
ZyBmbGFncywgZW5kX2ppZmZpZXM7DQogCWludCByZXRyeTsNCiANCi0JaWYgKGFkZXYtPmluX2dw
dV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRUlPOw0K
IA0KIAlhY3F1aXJlX3F1ZXVlKGtnZCwgcGlwZV9pZCwgcXVldWVfaWQpOw0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OC5jDQppbmRleCBjY2Q2
MzViODEyYjUuLmQwOTQwMTIxYTZhOSAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ2Z4X3Y4LmMNCkBAIC00MjEsNyArNDIxLDcgQEAgc3RhdGlj
IGludCBrZ2RfaHFkX2Rlc3Ryb3koc3RydWN0IGtnZF9kZXYgKmtnZCwgdm9pZCAqbXFkLA0KIAlp
bnQgcmV0cnk7DQogCXN0cnVjdCB2aV9tcWQgKm0gPSBnZXRfbXFkKG1xZCk7DQogDQotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1
cm4gLUVJTzsNCiANCiAJYWNxdWlyZV9xdWV1ZShrZ2QsIHBpcGVfaWQsIHF1ZXVlX2lkKTsNCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92
OS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2FtZGtmZF9nZnhfdjkuYw0K
aW5kZXggZGY4NDFjMmFjNWU3Li4wMzJkM2M4NjYyODAgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OS5jDQorKysgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dmeF92OS5jDQpAQCAtNTQxLDcgKzU0MSw3
IEBAIGludCBrZ2RfZ2Z4X3Y5X2hxZF9kZXN0cm95KHN0cnVjdCBrZ2RfZGV2ICprZ2QsIHZvaWQg
Km1xZCwNCiAJdWludDMyX3QgdGVtcDsNCiAJc3RydWN0IHY5X21xZCAqbSA9IGdldF9tcWQobXFk
KTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChh
ZGV2KSkNCiAJCXJldHVybiAtRUlPOw0KIA0KIAlhY3F1aXJlX3F1ZXVlKGtnZCwgcGlwZV9pZCwg
cXVldWVfaWQpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9hbWRrZmRfZ3B1dm0uYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRr
ZmRfZ3B1dm0uYw0KaW5kZXggYzQwODkzNmU4Zjk4Li44NzAzYWExZmU0YTUgMTAwNjQ0DQotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfYW1ka2ZkX2dwdXZtLmMNCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9hbWRrZmRfZ3B1dm0uYw0KQEAgLTEx
OTAsNiArMTE5MCw5IEBAIGludCBhbWRncHVfYW1ka2ZkX2dwdXZtX2FsbG9jX21lbW9yeV9vZl9n
cHUoDQogCQlyZXR1cm4gLUVJTlZBTDsNCiAJfQ0KIA0KKwlpZiAoIWRvd25fcmVhZF90cnlsb2Nr
KCZhZGV2LT5yZXNldF9zZW0pKQ0KKwkJcmV0dXJuIC1FSU87DQorDQogCSptZW0gPSBremFsbG9j
KHNpemVvZihzdHJ1Y3Qga2dkX21lbSksIEdGUF9LRVJORUwpOw0KIAlpZiAoISptZW0pIHsNCiAJ
CXJldCA9IC1FTk9NRU07DQpAQCAtMTI1Niw2ICsxMjU5LDcgQEAgaW50IGFtZGdwdV9hbWRrZmRf
Z3B1dm1fYWxsb2NfbWVtb3J5X29mX2dwdSgNCiAJaWYgKG9mZnNldCkNCiAJCSpvZmZzZXQgPSBh
bWRncHVfYm9fbW1hcF9vZmZzZXQoYm8pOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0p
Ow0KIAlyZXR1cm4gMDsNCiANCiBhbGxvY2F0ZV9pbml0X3VzZXJfcGFnZXNfZmFpbGVkOg0KQEAg
LTEyNzMsNiArMTI3Nyw5IEBAIGludCBhbWRncHVfYW1ka2ZkX2dwdXZtX2FsbG9jX21lbW9yeV9v
Zl9ncHUoDQogCQlzZ19mcmVlX3RhYmxlKHNnKTsNCiAJCWtmcmVlKHNnKTsNCiAJfQ0KKw0KKwl1
cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlyZXR1cm4gcmV0Ow0KIH0NCiANCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfY3MuYyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jcy5jDQppbmRleCBmZmJjYWY0YmZiOGIuLmE5NGIz
Zjg2MmZjMiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9j
cy5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfY3MuYw0KQEAgLTEy
OTIsNiArMTI5Miw4IEBAIGludCBhbWRncHVfY3NfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgdm9pZCAqZGF0YSwgc3RydWN0IGRybV9maWxlICpmaWxwKQ0KIAlwYXJzZXIuYWRldiA9IGFk
ZXY7DQogCXBhcnNlci5maWxwID0gZmlscDsNCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOw0KKw0KIAlyID0gYW1kZ3B1X2NzX3BhcnNlcl9pbml0KCZwYXJzZXIsIGRhdGEpOw0KIAlp
ZiAocikgew0KIAkJRFJNX0VSUk9SKCJGYWlsZWQgdG8gaW5pdGlhbGl6ZSBwYXJzZXIgJWQhXG4i
LCByKTsNCkBAIC0xMzMxLDYgKzEzMzMsOCBAQCBpbnQgYW1kZ3B1X2NzX2lvY3RsKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsIHN0cnVjdCBkcm1fZmlsZSAqZmlscCkNCiBvdXQ6
DQogCWFtZGdwdV9jc19wYXJzZXJfZmluaSgmcGFyc2VyLCByLCByZXNlcnZlZF9idWZmZXJzKTsN
CiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcmV0dXJuIHI7DQogfQ0KIA0K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jdHguYyBiL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jdHguYw0KaW5kZXggODg0MmM1NWQ0NDkw
Li5kODVkMTNmN2EwNDMgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfY3R4LmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9jdHgu
Yw0KQEAgLTM1OCw2ICszNTgsOCBAQCBzdGF0aWMgaW50IGFtZGdwdV9jdHhfcXVlcnkyKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAlpZiAoYXRvbWljX3JlYWQoJmN0eC0+Z3VpbHR5KSkN
CiAJCW91dC0+c3RhdGUuZmxhZ3MgfD0gQU1ER1BVX0NUWF9RVUVSWTJfRkxBR1NfR1VJTFRZOw0K
IA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCS8qcXVlcnkgdWUgY291bnQq
Lw0KIAlyYXNfY291bnRlciA9IGFtZGdwdV9yYXNfcXVlcnlfZXJyb3JfY291bnQoYWRldiwgZmFs
c2UpOw0KIAkvKnJhcyBjb3VudGVyIGlzIG1vbm90b25pYyBpbmNyZWFzaW5nKi8NCkBAIC0zNzMs
NiArMzc1LDggQEAgc3RhdGljIGludCBhbWRncHVfY3R4X3F1ZXJ5MihzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiwNCiAJCWN0eC0+cmFzX2NvdW50ZXJfY2UgPSByYXNfY291bnRlcjsNCiAJfQ0K
IA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAltdXRleF91bmxvY2soJm1nci0+
bG9jayk7DQogCXJldHVybiAwOw0KIH0NCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X2RlYnVnZnMuYw0KaW5kZXggYWVhZGE3YzlmYmVhLi4xYmI0YzhiNmE4NjYgMTAwNjQ0DQot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGVidWdmcy5jDQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGVidWdmcy5jDQpAQCAtMTAwLDE0ICsx
MDAsMTQgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdmc19hdXRvZHVtcF9vcGVuKHN0cnVjdCBp
bm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQ0KIA0KIAlmaWxlLT5wcml2YXRlX2RhdGEg
PSBhZGV2Ow0KIA0KLQltdXRleF9sb2NrKCZhZGV2LT5sb2NrX3Jlc2V0KTsNCisJZG93bl9yZWFk
KCZhZGV2LT5yZXNldF9zZW0pOw0KIAlpZiAoYWRldi0+YXV0b2R1bXAuZHVtcGluZy5kb25lKSB7
DQogCQlyZWluaXRfY29tcGxldGlvbigmYWRldi0+YXV0b2R1bXAuZHVtcGluZyk7DQogCQlyZXQg
PSAwOw0KIAl9IGVsc2Ugew0KIAkJcmV0ID0gLUVCVVNZOw0KIAl9DQotCW11dGV4X3VubG9jaygm
YWRldi0+bG9ja19yZXNldCk7DQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogDQogCXJl
dHVybiByZXQ7DQogfQ0KQEAgLTEyNiw3ICsxMjYsNyBAQCBzdGF0aWMgdW5zaWduZWQgaW50IGFt
ZGdwdV9kZWJ1Z2ZzX2F1dG9kdW1wX3BvbGwoc3RydWN0IGZpbGUgKmZpbGUsIHN0cnVjdCBwb2xs
Xw0KIA0KIAlwb2xsX3dhaXQoZmlsZSwgJmFkZXYtPmF1dG9kdW1wLmdwdV9oYW5nLCBwb2xsX3Rh
YmxlKTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNl
dChhZGV2KSkNCiAJCXJldHVybiBQT0xMSU4gfCBQT0xMUkROT1JNIHwgUE9MTFdSTk9STTsNCiAN
CiAJcmV0dXJuIDA7DQpAQCAtMTE4OCw3ICsxMTg4LDcgQEAgc3RhdGljIGludCBhbWRncHVfZGVi
dWdmc190ZXN0X2liKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkNCiAJfQ0KIA0KIAkv
KiBBdm9pZCBhY2NpZGVudGx5IHVucGFya2luZyB0aGUgc2NoZWQgdGhyZWFkIGR1cmluZyBHUFUg
cmVzZXQgKi8NCi0JbXV0ZXhfbG9jaygmYWRldi0+bG9ja19yZXNldCk7DQorCWRvd25fcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsNCiANCiAJLyogaG9sZCBvbiB0aGUgc2NoZWR1bGVyICovDQogCWZv
ciAoaSA9IDA7IGkgPCBBTURHUFVfTUFYX1JJTkdTOyBpKyspIHsNCkBAIC0xMjE1LDcgKzEyMTUs
NyBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3Rlc3RfaWIoc3RydWN0IHNlcV9maWxlICpt
LCB2b2lkICpkYXRhKQ0KIAkJa3RocmVhZF91bnBhcmsocmluZy0+c2NoZWQudGhyZWFkKTsNCiAJ
fQ0KIA0KLQltdXRleF91bmxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOw0KKwl1cF9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOw0KIA0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRldi0+ZGV2KTsN
CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGV2LT5kZXYpOw0KQEAgLTEzOTUsNyArMTM5
NSw3IEBAIHN0YXRpYyBpbnQgYW1kZ3B1X2RlYnVnZnNfaWJfcHJlZW1wdCh2b2lkICpkYXRhLCB1
NjQgdmFsKQ0KIAkJcmV0dXJuIC1FTk9NRU07DQogDQogCS8qIEF2b2lkIGFjY2lkZW50bHkgdW5w
YXJraW5nIHRoZSBzY2hlZCB0aHJlYWQgZHVyaW5nIEdQVSByZXNldCAqLw0KLQltdXRleF9sb2Nr
KCZhZGV2LT5sb2NrX3Jlc2V0KTsNCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIA0K
IAkvKiBzdG9wIHRoZSBzY2hlZHVsZXIgKi8NCiAJa3RocmVhZF9wYXJrKHJpbmctPnNjaGVkLnRo
cmVhZCk7DQpAQCAtMTQzNiw3ICsxNDM2LDcgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdmc19p
Yl9wcmVlbXB0KHZvaWQgKmRhdGEsIHU2NCB2YWwpDQogCS8qIHJlc3RhcnQgdGhlIHNjaGVkdWxl
ciAqLw0KIAlrdGhyZWFkX3VucGFyayhyaW5nLT5zY2hlZC50aHJlYWQpOw0KIA0KLQltdXRleF91
bmxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOw0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0K
IA0KIAl0dG1fYm9fdW5sb2NrX2RlbGF5ZWRfd29ya3F1ZXVlKCZhZGV2LT5tbWFuLmJkZXYsIHJl
c2NoZWQpOw0KIA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9kZXZpY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYw0K
aW5kZXggMjkxM2U0MWY2M2E1Li41ZjAyMDFmZDJkYjUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfZGV2aWNlLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYw0KQEAgLTE5MjksNyArMTkyOSw3IEBAIHN0YXRpYyBp
bnQgYW1kZ3B1X2RldmljZV9md19sb2FkaW5nKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQ0K
IAkJCWlmIChhZGV2LT5pcF9ibG9ja3NbaV0uc3RhdHVzLmh3ID09IHRydWUpDQogCQkJCWJyZWFr
Ow0KIA0KLQkJCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQgfHwgYWRldi0+aW5fc3VzcGVuZCkgew0K
KwkJCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikgfHwgYWRldi0+aW5fc3VzcGVuZCkgew0KIAkJ
CQlyID0gYWRldi0+aXBfYmxvY2tzW2ldLnZlcnNpb24tPmZ1bmNzLT5yZXN1bWUoYWRldik7DQog
CQkJCWlmIChyKSB7DQogCQkJCQlEUk1fRVJST1IoInJlc3VtZSBvZiBJUCBibG9jayA8JXM+IGZh
aWxlZCAlZFxuIiwNCkBAIC0yMTAwLDcgKzIxMDAsNyBAQCBzdGF0aWMgYm9vbCBhbWRncHVfZGV2
aWNlX2NoZWNrX3ZyYW1fbG9zdChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikNCiAJCQlBTURH
UFVfUkVTRVRfTUFHSUNfTlVNKSkNCiAJCXJldHVybiB0cnVlOw0KIA0KLQlpZiAoIWFkZXYtPmlu
X2dwdV9yZXNldCkNCisJaWYgKCFhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gZmFs
c2U7DQogDQogCS8qDQpAQCAtMzAyNiw3ICszMDI2LDggQEAgaW50IGFtZGdwdV9kZXZpY2VfaW5p
dChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCiAJbXV0ZXhfaW5pdCgmYWRldi0+bW5fbG9j
ayk7DQogCW11dGV4X2luaXQoJmFkZXYtPnZpcnQudmZfZXJyb3JzLmxvY2spOw0KIAloYXNoX2lu
aXQoYWRldi0+bW5faGFzaCk7DQotCW11dGV4X2luaXQoJmFkZXYtPmxvY2tfcmVzZXQpOw0KKwlp
bml0X3J3c2VtKCZhZGV2LT5yZXNldF9zZW0pOw0KKwlhdG9taWNfc2V0KCZhZGV2LT5pbl9ncHVf
cmVzZXQsIDApOw0KIAltdXRleF9pbml0KCZhZGV2LT5wc3AubXV0ZXgpOw0KIAltdXRleF9pbml0
KCZhZGV2LT5ub3RpZmllcl9sb2NrKTsNCiANCkBAIC00MDU0LDggKzQwNTUsMTEgQEAgc3RhdGlj
IGludCBhbWRncHVfZG9fYXNpY19yZXNldChzdHJ1Y3QgYW1kZ3B1X2hpdmVfaW5mbyAqaGl2ZSwN
CiAJbGlzdF9mb3JfZWFjaF9lbnRyeSh0bXBfYWRldiwgZGV2aWNlX2xpc3RfaGFuZGxlLCBnbWMu
eGdtaS5oZWFkKSB7DQogCQlpZiAobmVlZF9mdWxsX3Jlc2V0KSB7DQogCQkJLyogcG9zdCBjYXJk
ICovDQotCQkJaWYgKGFtZGdwdV9hdG9tX2FzaWNfaW5pdCh0bXBfYWRldi0+bW9kZV9pbmZvLmF0
b21fY29udGV4dCkpDQotCQkJCURSTV9XQVJOKCJhc2ljIGF0b20gaW5pdCBmYWlsZWQhIik7DQor
CQkJaWYgKGFtZGdwdV9hdG9tX2FzaWNfaW5pdCh0bXBfYWRldi0+bW9kZV9pbmZvLmF0b21fY29u
dGV4dCkpIHsNCisJCQkJZGV2X3dhcm4odG1wX2FkZXYtPmRldiwgImFzaWMgYXRvbSBpbml0IGZh
aWxlZCEiKTsNCisJCQkJciA9IC1FQUdBSU47DQorCQkJCWdvdG8gb3V0Ow0KKwkJCX0NCiANCiAJ
CQlpZiAoIXIpIHsNCiAJCQkJZGV2X2luZm8odG1wX2FkZXYtPmRldiwgIkdQVSByZXNldCBzdWNj
ZWVkZWQsIHRyeWluZyB0byByZXN1bWVcbiIpOw0KQEAgLTQxMzEsMTYgKzQxMzUsMTQgQEAgc3Rh
dGljIGludCBhbWRncHVfZG9fYXNpY19yZXNldChzdHJ1Y3QgYW1kZ3B1X2hpdmVfaW5mbyAqaGl2
ZSwNCiAJcmV0dXJuIHI7DQogfQ0KIA0KLXN0YXRpYyBib29sIGFtZGdwdV9kZXZpY2VfbG9ja19h
ZGV2KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBib29sIHRyeWxvY2spDQorc3RhdGljIGJv
b2wgYW1kZ3B1X2RldmljZV9sb2NrX2FkZXYoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpDQog
ew0KLQlpZiAodHJ5bG9jaykgew0KLQkJaWYgKCFtdXRleF90cnlsb2NrKCZhZGV2LT5sb2NrX3Jl
c2V0KSkNCi0JCQlyZXR1cm4gZmFsc2U7DQotCX0gZWxzZQ0KLQkJbXV0ZXhfbG9jaygmYWRldi0+
bG9ja19yZXNldCk7DQorCWlmIChhdG9taWNfY21weGNoZygmYWRldi0+aW5fZ3B1X3Jlc2V0LCAw
LCAxKSAhPSAwKQ0KKwkJcmV0dXJuIGZhbHNlOw0KKw0KKwlkb3duX3dyaXRlKCZhZGV2LT5yZXNl
dF9zZW0pOw0KIA0KIAlhdG9taWNfaW5jKCZhZGV2LT5ncHVfcmVzZXRfY291bnRlcik7DQotCWFk
ZXYtPmluX2dwdV9yZXNldCA9IHRydWU7DQogCXN3aXRjaCAoYW1kZ3B1X2FzaWNfcmVzZXRfbWV0
aG9kKGFkZXYpKSB7DQogCWNhc2UgQU1EX1JFU0VUX01FVEhPRF9NT0RFMToNCiAJCWFkZXYtPm1w
MV9zdGF0ZSA9IFBQX01QMV9TVEFURV9TSFVURE9XTjsNCkBAIC00MTYwLDggKzQxNjIsOCBAQCBz
dGF0aWMgdm9pZCBhbWRncHVfZGV2aWNlX3VubG9ja19hZGV2KHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2KQ0KIHsNCiAJYW1kZ3B1X3ZmX2Vycm9yX3RyYW5zX2FsbChhZGV2KTsNCiAJYWRldi0+
bXAxX3N0YXRlID0gUFBfTVAxX1NUQVRFX05PTkU7DQotCWFkZXYtPmluX2dwdV9yZXNldCA9IGZh
bHNlOw0KLQltdXRleF91bmxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOw0KKwlhdG9taWNfc2V0KCZh
ZGV2LT5pbl9ncHVfcmVzZXQsIDApOw0KKwl1cF93cml0ZSgmYWRldi0+cmVzZXRfc2VtKTsNCiB9
DQogDQogc3RhdGljIHZvaWQgYW1kZ3B1X2RldmljZV9yZXN1bWVfZGlzcGxheV9hdWRpbyhzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldikNCkBAIC00MjcwLDEyICs0MjcyLDE0IEBAIGludCBhbWRn
cHVfZGV2aWNlX2dwdV9yZWNvdmVyKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAkgKiBX
ZSBhbHdheXMgcmVzZXQgYWxsIHNjaGVkdWxlcnMgZm9yIGRldmljZSBhbmQgYWxsIGRldmljZXMg
Zm9yIFhHTUkNCiAJICogaGl2ZSBzbyB0aGF0IHNob3VsZCB0YWtlIGNhcmUgb2YgdGhlbSB0b28u
DQogCSAqLw0KLQloaXZlID0gYW1kZ3B1X2dldF94Z21pX2hpdmUoYWRldiwgdHJ1ZSk7DQotCWlm
IChoaXZlICYmICFtdXRleF90cnlsb2NrKCZoaXZlLT5yZXNldF9sb2NrKSkgew0KLQkJRFJNX0lO
Rk8oIkJhaWxpbmcgb24gVERSIGZvciBzX2pvYjolbGx4LCBoaXZlOiAlbGx4IGFzIGFub3RoZXIg
YWxyZWFkeSBpbiBwcm9ncmVzcyIsDQotCQkJICBqb2IgPyBqb2ItPmJhc2UuaWQgOiAtMSwgaGl2
ZS0+aGl2ZV9pZCk7DQotCQltdXRleF91bmxvY2soJmhpdmUtPmhpdmVfbG9jayk7DQotCQlyZXR1
cm4gMDsNCisJaGl2ZSA9IGFtZGdwdV9nZXRfeGdtaV9oaXZlKGFkZXYsIGZhbHNlKTsNCisJaWYg
KGhpdmUpIHsNCisJCWlmIChhdG9taWNfY21weGNoZygmaGl2ZS0+aW5fcmVzZXQsIDAsIDEpICE9
IDApIHsNCisJCQlEUk1fSU5GTygiQmFpbGluZyBvbiBURFIgZm9yIHNfam9iOiVsbHgsIGhpdmU6
ICVsbHggYXMgYW5vdGhlciBhbHJlYWR5IGluIHByb2dyZXNzIiwNCisJCQkJam9iID8gam9iLT5i
YXNlLmlkIDogLTEsIGhpdmUtPmhpdmVfaWQpOw0KKwkJCXJldHVybiAwOw0KKwkJfQ0KKwkJbXV0
ZXhfbG9jaygmaGl2ZS0+aGl2ZV9sb2NrKTsNCiAJfQ0KIA0KIAkvKg0KQEAgLTQyOTcsMTEgKzQz
MDEsMTEgQEAgaW50IGFtZGdwdV9kZXZpY2VfZ3B1X3JlY292ZXIoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYsDQogDQogCS8qIGJsb2NrIGFsbCBzY2hlZHVsZXJzIGFuZCByZXNldCBnaXZlbiBq
b2IncyByaW5nICovDQogCWxpc3RfZm9yX2VhY2hfZW50cnkodG1wX2FkZXYsIGRldmljZV9saXN0
X2hhbmRsZSwgZ21jLnhnbWkuaGVhZCkgew0KLQkJaWYgKCFhbWRncHVfZGV2aWNlX2xvY2tfYWRl
dih0bXBfYWRldiwgIWhpdmUpKSB7DQorCQlpZiAoIWFtZGdwdV9kZXZpY2VfbG9ja19hZGV2KHRt
cF9hZGV2KSkgew0KIAkJCURSTV9JTkZPKCJCYWlsaW5nIG9uIFREUiBmb3Igc19qb2I6JWxseCwg
YXMgYW5vdGhlciBhbHJlYWR5IGluIHByb2dyZXNzIiwNCiAJCQkJICBqb2IgPyBqb2ItPmJhc2Uu
aWQgOiAtMSk7DQotCQkJbXV0ZXhfdW5sb2NrKCZoaXZlLT5oaXZlX2xvY2spOw0KLQkJCXJldHVy
biAwOw0KKwkJCXIgPSAwOw0KKwkJCWdvdG8gc2tpcF9yZWNvdmVyeTsNCiAJCX0NCiANCiAJCS8q
DQpAQCAtNDQzNCw4ICs0NDM4LDkgQEAgaW50IGFtZGdwdV9kZXZpY2VfZ3B1X3JlY292ZXIoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQogCQlhbWRncHVfZGV2aWNlX3VubG9ja19hZGV2KHRt
cF9hZGV2KTsNCiAJfQ0KIA0KK3NraXBfcmVjb3Zlcnk6DQogCWlmIChoaXZlKSB7DQotCQltdXRl
eF91bmxvY2soJmhpdmUtPnJlc2V0X2xvY2spOw0KKwkJYXRvbWljX3NldCgmaGl2ZS0+aW5fcmVz
ZXQsIDApOw0KIAkJbXV0ZXhfdW5sb2NrKCZoaXZlLT5oaXZlX2xvY2spOw0KIAl9DQogDQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dlbS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dlbS5jDQppbmRleCA3N2Q5ODhhMDAzM2YuLjk2
ZGYzNjY5YTlkMiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9nZW0uYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dlbS5jDQpA
QCAtNjcwLDYgKzY3MCw4IEBAIGludCBhbWRncHVfZ2VtX3ZhX2lvY3RsKHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYsIHZvaWQgKmRhdGEsDQogCQlib192YSA9IE5VTEw7DQogCX0NCiANCisJZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlzd2l0Y2ggKGFyZ3MtPm9wZXJhdGlvbikgew0K
IAljYXNlIEFNREdQVV9WQV9PUF9NQVA6DQogCQl2YV9mbGFncyA9IGFtZGdwdV9nZW1fdmFfbWFw
X2ZsYWdzKGFkZXYsIGFyZ3MtPmZsYWdzKTsNCkBAIC02OTksNiArNzAxLDggQEAgaW50IGFtZGdw
dV9nZW1fdmFfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwNCiAJCWFt
ZGdwdV9nZW1fdmFfdXBkYXRlX3ZtKGFkZXYsICZmcHJpdi0+dm0sIGJvX3ZhLA0KIAkJCQkJYXJn
cy0+b3BlcmF0aW9uKTsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiBlcnJv
cl9iYWNrb2ZmOg0KIAl0dG1fZXVfYmFja29mZl9yZXNlcnZhdGlvbigmdGlja2V0LCAmbGlzdCk7
DQogDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dmeC5j
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2dmeC5jDQppbmRleCBkNjEyMDMz
YTIzYWMuLjRhM2ZlMTkxM2IwYSAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9nZnguYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2dmeC5jDQpAQCAtNzEwLDcgKzcxMCw3IEBAIHVpbnQzMl90IGFtZGdwdV9raXFfcnJlZyhzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdWludDMyX3QgcmVnKQ0KIAkgKg0KIAkgKiBhbHNvIGRv
bid0IHdhaXQgYW55bW9yZSBmb3IgSVJRIGNvbnRleHQNCiAJICogKi8NCi0JaWYgKHIgPCAxICYm
IChhZGV2LT5pbl9ncHVfcmVzZXQgfHwgaW5faW50ZXJydXB0KCkpKQ0KKwlpZiAociA8IDEgJiYg
KGFtZGdwdV9pbl9yZXNldChhZGV2KSB8fCBpbl9pbnRlcnJ1cHQoKSkpDQogCQlnb3RvIGZhaWxl
ZF9raXFfcmVhZDsNCiANCiAJbWlnaHRfc2xlZXAoKTsNCkBAIC03NjgsNyArNzY4LDcgQEAgdm9p
ZCBhbWRncHVfa2lxX3dyZWcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQzMl90IHJl
ZywgdWludDMyX3QgdikNCiAJICoNCiAJICogYWxzbyBkb24ndCB3YWl0IGFueW1vcmUgZm9yIElS
USBjb250ZXh0DQogCSAqICovDQotCWlmIChyIDwgMSAmJiAoYWRldi0+aW5fZ3B1X3Jlc2V0IHx8
IGluX2ludGVycnVwdCgpKSkNCisJaWYgKHIgPCAxICYmIChhbWRncHVfaW5fcmVzZXQoYWRldikg
fHwgaW5faW50ZXJydXB0KCkpKQ0KIAkJZ290byBmYWlsZWRfa2lxX3dyaXRlOw0KIA0KIAltaWdo
dF9zbGVlcCgpOw0KQEAgLTc4Nyw1ICs3ODcsNSBAQCB2b2lkIGFtZGdwdV9raXFfd3JlZyhzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdWludDMyX3QgcmVnLCB1aW50MzJfdCB2KQ0KIAlhbWRn
cHVfcmluZ191bmRvKHJpbmcpOw0KIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZraXEtPnJpbmdf
bG9jaywgZmxhZ3MpOw0KIGZhaWxlZF9raXFfd3JpdGU6DQotCXByX2VycigiZmFpbGVkIHRvIHdy
aXRlIHJlZzoleFxuIiwgcmVnKTsNCisJZGV2X3dhcm4oYWRldi0+ZGV2LCAiZmFpbGVkIHRvIHdy
aXRlIHJlZzoleFxuIiwgcmVnKTsNCiB9DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X2pvYi5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X2pvYi5jDQppbmRleCA5MzcwMjlhZDUyNzEuLjc1ZDM3ZGZiNTFhYSAxMDA2NDQNCi0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9qb2IuYw0KKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2pvYi5jDQpAQCAtMjIwLDE3ICsyMjAsMTcgQEAgc3RhdGlj
IHN0cnVjdCBkbWFfZmVuY2UgKmFtZGdwdV9qb2JfcnVuKHN0cnVjdCBkcm1fc2NoZWRfam9iICpz
Y2hlZF9qb2IpDQogDQogCXRyYWNlX2FtZGdwdV9zY2hlZF9ydW5fam9iKGpvYik7DQogDQotCWlm
IChqb2ItPnZyYW1fbG9zdF9jb3VudGVyICE9IGF0b21pY19yZWFkKCZyaW5nLT5hZGV2LT52cmFt
X2xvc3RfY291bnRlcikpDQotCQlkbWFfZmVuY2Vfc2V0X2Vycm9yKGZpbmlzaGVkLCAtRUNBTkNF
TEVEKTsvKiBza2lwIElCIGFzIHdlbGwgaWYgVlJBTSBsb3N0ICovDQotDQotCWlmIChmaW5pc2hl
ZC0+ZXJyb3IgPCAwKSB7DQotCQlEUk1fSU5GTygiU2tpcCBzY2hlZHVsaW5nIElCcyFcbiIpOw0K
LQl9IGVsc2Ugew0KKwlpZiAoZG93bl9yZWFkX3RyeWxvY2soJnJpbmctPmFkZXYtPnJlc2V0X3Nl
bSkpIHsNCiAJCXIgPSBhbWRncHVfaWJfc2NoZWR1bGUocmluZywgam9iLT5udW1faWJzLCBqb2It
Pmlicywgam9iLA0KLQkJCQkgICAgICAgJmZlbmNlKTsNCisJCQkJCSZmZW5jZSk7DQorCQl1cF9y
ZWFkKCZyaW5nLT5hZGV2LT5yZXNldF9zZW0pOw0KIAkJaWYgKHIpDQogCQkJRFJNX0VSUk9SKCJF
cnJvciBzY2hlZHVsaW5nIElCcyAoJWQpXG4iLCByKTsNCisJfSBlbHNlIHsNCisJCWRtYV9mZW5j
ZV9zZXRfZXJyb3IoZmluaXNoZWQsIC1FQ0FOQ0VMRUQpOw0KKwkJRFJNX0lORk8oIlNraXAgc2No
ZWR1bGluZyBJQnMhXG4iKTsNCiAJfQ0KKw0KIAkvKiBpZiBncHUgcmVzZXQsIGh3IGZlbmNlIHdp
bGwgYmUgcmVwbGFjZWQgaGVyZSAqLw0KIAlkbWFfZmVuY2VfcHV0KGpvYi0+ZmVuY2UpOw0KIAlq
b2ItPmZlbmNlID0gZG1hX2ZlbmNlX2dldChmZW5jZSk7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X2ttcy5jDQppbmRleCA5YzJjNWU0ZWQxZWIuLmVlYmJlMjEwM2UzMiAxMDA2NDQN
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9rbXMuYw0KKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jDQpAQCAtMTA4NCw2ICsxMDg0LDgg
QEAgdm9pZCBhbWRncHVfZHJpdmVyX3Bvc3RjbG9zZV9rbXMoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwNCiAJaWYgKCFmcHJpdikNCiAJCXJldHVybjsNCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOw0KKw0KIAlwbV9ydW50aW1lX2dldF9zeW5jKGRldi0+ZGV2KTsNCiANCiAJaWYgKGFt
ZGdwdV9kZXZpY2VfaXBfZ2V0X2lwX2Jsb2NrKGFkZXYsIEFNRF9JUF9CTE9DS19UWVBFX1VWRCkg
IT0gTlVMTCkNCkBAIC0xMTIyLDYgKzExMjQsOCBAQCB2b2lkIGFtZGdwdV9kcml2ZXJfcG9zdGNs
b3NlX2ttcyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LA0KIA0KIAlwbV9ydW50aW1lX21hcmtfbGFz
dF9idXN5KGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGV2LT5kZXYp
Ow0KKw0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIH0NCiANCiAvKg0KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMNCmluZGV4IGQyNDAxMzc5YmQzMy4uYTc3ODYyMWVk
YzY1IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3BtLmMN
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jDQpAQCAtMTYzLDcg
KzE2Myw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcG93ZXJfZHBtX3N0YXRlKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJZW51bSBhbWRfcG1fc3RhdGVfdHlwZSBwbTsNCiAJaW50IHJldDsN
CiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2
KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRl
di0+ZGV2KTsNCkBAIC0xNzIsNiArMTcyLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9w
b3dlcl9kcG1fc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0K
IA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3
X3NtdShhZGV2KSkgew0KIAkJaWYgKGFkZXYtPnNtdS5wcHRfZnVuY3MtPmdldF9jdXJyZW50X3Bv
d2VyX3N0YXRlKQ0KIAkJCXBtID0gc211X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKCZhZGV2LT5z
bXUpOw0KQEAgLTE4Myw2ICsxODUsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3Bvd2Vy
X2RwbV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlwbSA9IGFkZXYtPnBtLmRwbS51c2Vy
X3N0YXRlOw0KIAl9DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1
c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0yMDEsNyArMjA1LDcgQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X3NldF9wb3dlcl9kcG1fc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAllbnVtIGFt
ZF9wbV9zdGF0ZV90eXBlICBzdGF0ZTsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dw
dV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07
DQogDQogCWlmIChzdHJuY21wKCJiYXR0ZXJ5IiwgYnVmLCBzdHJsZW4oImJhdHRlcnkiKSkgPT0g
MCkNCkBAIC0yMTksNiArMjIzLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wb3dlcl9k
cG1fc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlk
b3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShh
ZGV2KSkgew0KIAkJbXV0ZXhfbG9jaygmYWRldi0+cG0ubXV0ZXgpOw0KIAkJYWRldi0+cG0uZHBt
LnVzZXJfc3RhdGUgPSBzdGF0ZTsNCkBAIC0yMzIsNiArMjM4LDkgQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X3NldF9wb3dlcl9kcG1fc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIA0KIAkJYW1k
Z3B1X3BtX2NvbXB1dGVfY2xvY2tzKGFkZXYpOw0KIAl9DQorDQorCXVwX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJ
cG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0zMDcsNyArMzE2
LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFu
Y2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LA0KIAllbnVtIGFtZF9kcG1fZm9yY2VkX2xldmVs
IGxldmVsID0gMHhmZjsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkN
CisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXJl
dCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsNCkBAIC0zMTYsNiArMzI1LDggQEAg
c3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2
ZWwoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkN
CiAJCWxldmVsID0gc211X2dldF9wZXJmb3JtYW5jZV9sZXZlbCgmYWRldi0+c211KTsNCiAJZWxz
ZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfcGVyZm9ybWFuY2VfbGV2ZWwpDQpA
QCAtMzIzLDYgKzMzNCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcG93ZXJfZHBtX2Zv
cmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJZWxzZQ0KIAkJbGV2
ZWwgPSBhZGV2LT5wbS5kcG0uZm9yY2VkX2xldmVsOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOw0KKw0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCXBt
X3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7DQogDQpAQCAtMzQ5LDcgKzM2Miw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNl
X2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJZW51bSBhbWRfZHBtX2ZvcmNlZF9sZXZlbCBj
dXJyZW50X2xldmVsID0gMHhmZjsNCiAJaW50IHJldCA9IDA7DQogDQotCWlmIChhZGV2LT5pbl9n
cHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJN
Ow0KIA0KIAlpZiAoc3RybmNtcCgibG93IiwgYnVmLCBzdHJsZW4oImxvdyIpKSA9PSAwKSB7DQpA
QCAtMzgwLDYgKzM5Myw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJfZHBtX2Zv
cmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByZXQ7
DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlpZiAoaXNfc3Vw
cG9ydF9zd19zbXUoYWRldikpDQogCQljdXJyZW50X2xldmVsID0gc211X2dldF9wZXJmb3JtYW5j
ZV9sZXZlbCgmYWRldi0+c211KTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNz
LT5nZXRfcGVyZm9ybWFuY2VfbGV2ZWwpDQpAQCAtMzg4LDcgKzQwMyw4IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9zZXRfcG93ZXJfZHBtX2ZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBk
ZXZpY2UgKmRldiwNCiAJaWYgKGN1cnJlbnRfbGV2ZWwgPT0gbGV2ZWwpIHsNCiAJCXBtX3J1bnRp
bWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNw
ZW5kKGRkZXYtPmRldik7DQotCQlyZXR1cm4gY291bnQ7DQorCQlyZXQgPSBjb3VudDsNCisJCWdv
dG8gcHJvX2VuZDsNCiAJfQ0KIA0KIAlpZiAoYWRldi0+YXNpY190eXBlID09IENISVBfUkFWRU4p
IHsNCkBAIC00MDksNyArNDI1LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wb3dlcl9k
cG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcHJfZXJy
KCJDdXJyZW50bHkgbm90IGluIGFueSBwcm9maWxlIG1vZGUhXG4iKTsNCiAJCXBtX3J1bnRpbWVf
bWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5k
KGRkZXYtPmRldik7DQotCQlyZXR1cm4gLUVJTlZBTDsNCisJCXJldCA9IC1FSU5WQUw7DQorCQln
b3RvIHByb19lbmQ7DQogCX0NCiANCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7DQpA
QCAtNDE3LDcgKzQzNCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcG93ZXJfZHBtX2Zv
cmNlX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCWlmIChyZXQpIHsN
CiAJCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCQkJcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCi0JCQlyZXR1cm4gLUVJTlZBTDsNCisJCQly
ZXQgPSAtRUlOVkFMOw0KKwkJCWdvdG8gcHJvX2VuZDsNCiAJCX0NCiAJfSBlbHNlIGlmIChhZGV2
LT5wb3dlcnBsYXkucHBfZnVuY3MtPmZvcmNlX3BlcmZvcm1hbmNlX2xldmVsKSB7DQogCQltdXRl
eF9sb2NrKCZhZGV2LT5wbS5tdXRleCk7DQpAQCAtNDI1LDE0ICs0NDMsMTYgQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X3NldF9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0
IGRldmljZSAqZGV2LA0KIAkJCW11dGV4X3VubG9jaygmYWRldi0+cG0ubXV0ZXgpOw0KIAkJCXBt
X3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJCQlwbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChkZGV2LT5kZXYpOw0KLQkJCXJldHVybiAtRUlOVkFMOw0KKwkJCXJldCA9IC1F
SU5WQUw7DQorCQkJZ290byBwcm9fZW5kOw0KIAkJfQ0KIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3Jj
ZV9wZXJmb3JtYW5jZV9sZXZlbChhZGV2LCBsZXZlbCk7DQogCQlpZiAocmV0KSB7DQogCQkJbXV0
ZXhfdW5sb2NrKCZhZGV2LT5wbS5tdXRleCk7DQogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVz
eShkZGV2LT5kZXYpOw0KIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7
DQotCQkJcmV0dXJuIC1FSU5WQUw7DQorCQkJcmV0ID0gLUVJTlZBTDsNCisJCQlnb3RvIHByb19l
bmQ7DQogCQl9IGVsc2Ugew0KIAkJCWFkZXYtPnBtLmRwbS5mb3JjZWRfbGV2ZWwgPSBsZXZlbDsN
CiAJCX0NCkBAIC00NDEsNyArNDYxLDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wb3dl
cl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LA0KIAlwbV9y
dW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9z
dXNwZW5kKGRkZXYtPmRldik7DQogDQotCXJldHVybiBjb3VudDsNCitwcm9fZW5kOg0KKwl1cF9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKwlyZXR1cm4gcmV0Ow0KIH0NCiANCiBzdGF0aWMgc3Np
emVfdCBhbWRncHVfZ2V0X3BwX251bV9zdGF0ZXMoc3RydWN0IGRldmljZSAqZGV2LA0KQEAgLTQ1
Myw3ICs0NzUsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX251bV9zdGF0ZXMoc3Ry
dWN0IGRldmljZSAqZGV2LA0KIAlzdHJ1Y3QgcHBfc3RhdGVzX2luZm8gZGF0YTsNCiAJaW50IGks
IGJ1Zl9sZW4sIHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdw
dV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXJldCA9IHBtX3J1bnRp
bWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsNCkBAIC00OTcsNyArNTE5LDcgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2dldF9wcF9jdXJfc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAllbnVtIGFt
ZF9wbV9zdGF0ZV90eXBlIHBtID0gMDsNCiAJaW50IGkgPSAwLCByZXQgPSAwOw0KIA0KLQlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0
dXJuIC1FUEVSTTsNCiANCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOw0K
QEAgLTUzOCw3ICs1NjAsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZvcmNlX3N0
YXRlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3RydWN0IGRybV9kZXZpY2UgKmRkZXYgPSBkZXZf
Z2V0X2RydmRhdGEoZGV2KTsNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5k
ZXZfcHJpdmF0ZTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9p
bl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCWlmIChhZGV2LT5wcF9mb3Jj
ZV9zdGF0ZV9lbmFibGVkKQ0KQEAgLTU1OCw3ICs1ODAsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfc2V0X3BwX2ZvcmNlX3N0YXRlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJdW5zaWduZWQgbG9u
ZyBpZHg7DQogCWludCByZXQ7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChh
bWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlpZiAoc3RybGVu
KGJ1ZikgPT0gMSkNCkBAIC01ODQsNiArNjA2LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3Nl
dF9wcF9mb3JjZV9zdGF0ZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQkJcmV0dXJuIHJldDsNCiAJ
CX0NCiANCisJCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCiAJCS8qIG9ubHkgc2V0IHVz
ZXIgc2VsZWN0ZWQgcG93ZXIgc3RhdGVzICovDQogCQlpZiAoc3RhdGUgIT0gUE9XRVJfU1RBVEVf
VFlQRV9JTlRFUk5BTF9CT09UICYmDQogCQkgICAgc3RhdGUgIT0gUE9XRVJfU1RBVEVfVFlQRV9E
RUZBVUxUKSB7DQpAQCAtNTkxLDYgKzYxNCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRf
cHBfZm9yY2Vfc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJCQkJQU1EX1BQX1RBU0tfRU5B
QkxFX1VTRVJfU1RBVEUsICZzdGF0ZSk7DQogCQkJYWRldi0+cHBfZm9yY2Vfc3RhdGVfZW5hYmxl
ZCA9IHRydWU7DQogCQl9DQorCQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAkJcG1f
cnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAkJcG1fcnVudGltZV9wdXRfYXV0
b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiAJfQ0KQEAgLTYxOCw3ICs2NDMsNyBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfZ2V0X3BwX3RhYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJY2hhciAqdGFi
bGUgPSBOVUxMOw0KIAlpbnQgc2l6ZSwgcmV0Ow0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0
KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJ
cmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOw0KQEAgLTY2Miw3ICs2ODcsNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX3RhYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwN
CiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsNCiAJaW50
IHJldCA9IDA7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5f
cmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBwbV9ydW50aW1lX2dl
dF9zeW5jKGRkZXYtPmRldik7DQpAQCAtNjcxLDE2ICs2OTYsMjEgQEAgc3RhdGljIHNzaXplX3Qg
YW1kZ3B1X3NldF9wcF90YWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0K
IAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBv
cnRfc3dfc211KGFkZXYpKSB7DQogCQlyZXQgPSBzbXVfc3lzX3NldF9wcF90YWJsZSgmYWRldi0+
c211LCAodm9pZCAqKWJ1ZiwgY291bnQpOw0KIAkJaWYgKHJldCkgew0KIAkJCXBtX3J1bnRpbWVf
bWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVu
ZChkZGV2LT5kZXYpOw0KKwkJCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogCQkJcmV0dXJu
IHJldDsNCiAJCX0NCiAJfSBlbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnNldF9w
cF90YWJsZSkNCiAJCWFtZGdwdV9kcG1fc2V0X3BwX3RhYmxlKGFkZXYsIGJ1ZiwgY291bnQpOw0K
IA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlwbV9ydW50aW1lX21hcmtfbGFz
dF9idXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRl
dik7DQogDQpAQCAtNzY5LDcgKzc5OSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBf
b2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmljZSAqZGV2LA0KIAljb25zdCBjaGFyIGRlbGltaXRl
clszXSA9IHsnICcsICdcbicsICdcMCd9Ow0KIAl1aW50MzJfdCB0eXBlOw0KIA0KLQlpZiAoYWRl
di0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0dXJu
IC1FUEVSTTsNCiANCiAJaWYgKGNvdW50ID4gMTI3KQ0KQEAgLTgxMyw2ICs4NDMsMTAgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9vZF9jbGtfdm9sdGFnZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsDQogCQlyZXR1cm4gcmV0Ow0KIAl9DQogDQorCXJldCA9IGNvdW50Ow0KKw0KKwlkb3duX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkg
ew0KIAkJcmV0ID0gc211X29kX2VkaXRfZHBtX3RhYmxlKCZhZGV2LT5zbXUsIHR5cGUsDQogCQkJ
CQkgICAgcGFyYW1ldGVyLCBwYXJhbWV0ZXJfc2l6ZSk7DQpAQCAtODIwLDcgKzg1NCw4IEBAIHN0
YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmljZSAq
ZGV2LA0KIAkJaWYgKHJldCkgew0KIAkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+
ZGV2KTsNCiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOw0KLQkJCXJl
dHVybiAtRUlOVkFMOw0KKwkJCXJldCA9IC1FSU5WQUw7DQorCQkJZ290byBwcm9fZW5kOw0KIAkJ
fQ0KIAl9IGVsc2Ugew0KIAkJaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+b2RuX2VkaXRf
ZHBtX3RhYmxlKSB7DQpAQCAtODI5LDcgKzg2NCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9z
ZXRfcHBfb2RfY2xrX3ZvbHRhZ2Uoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJCWlmIChyZXQpIHsN
CiAJCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAkJCQlwbV9ydW50
aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOw0KLQkJCQlyZXR1cm4gLUVJTlZBTDsNCisJ
CQkJcmV0ID0gLUVJTlZBTDsNCisJCQkJZ290byBwcm9fZW5kOw0KIAkJCX0NCiAJCX0NCiANCkBA
IC04NDAsMTggKzg3NiwyMiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX29kX2Nsa192
b2x0YWdlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCQkJCQlOVUxMKTsNCiAJCQkJcG1fcnVudGlt
ZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAkJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3Vz
cGVuZChkZGV2LT5kZXYpOw0KLQkJCQlyZXR1cm4gY291bnQ7DQorCQkJCXJldCA9IGNvdW50Ow0K
KwkJCQlnb3RvIHByb19lbmQ7DQogCQkJfSBlbHNlIHsNCiAJCQkJcG1fcnVudGltZV9tYXJrX2xh
c3RfYnVzeShkZGV2LT5kZXYpOw0KIAkJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2
LT5kZXYpOw0KLQkJCQlyZXR1cm4gLUVJTlZBTDsNCisJCQkJcmV0ID0gLUVJTlZBTDsNCisJCQkJ
Z290byBwcm9fZW5kOw0KIAkJCX0NCiAJCX0NCiAJfQ0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9i
dXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7
DQogDQotCXJldHVybiBjb3VudDsNCitwcm9fZW5kOg0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOw0KKwlyZXR1cm4gcmV0Ow0KIH0NCiANCiBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3Bw
X29kX2Nsa192b2x0YWdlKHN0cnVjdCBkZXZpY2UgKmRldiwNCkBAIC04NjMsNyArOTAzLDcgQEAg
c3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9vZF9jbGtfdm9sdGFnZShzdHJ1Y3QgZGV2aWNl
ICpkZXYsDQogCXNzaXplX3Qgc2l6ZTsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dw
dV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07
DQogDQogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsNCkBAIC05MTcsNyAr
OTU3LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9mZWF0dXJlcyhzdHJ1Y3QgZGV2
aWNlICpkZXYsDQogCXVpbnQ2NF90IGZlYXR1cmVtYXNrOw0KIAlpbnQgcmV0Ow0KIA0KLQlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0
dXJuIC1FUEVSTTsNCiANCiAJcmV0ID0ga3N0cnRvdTY0KGJ1ZiwgMCwgJmZlYXR1cmVtYXNrKTsN
CkBAIC05MzIsMTEgKzk3MiwxMyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2ZlYXR1
cmVzKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByZXQ7DQogCX0NCiANCisJZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsN
CiAJCXJldCA9IHNtdV9zeXNfc2V0X3BwX2ZlYXR1cmVfbWFzaygmYWRldi0+c211LCBmZWF0dXJl
bWFzayk7DQogCQlpZiAocmV0KSB7DQogCQkJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2
LT5kZXYpOw0KIAkJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7DQorCQkJ
dXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCiAJCQlyZXR1cm4gLUVJTlZBTDsNCiAJCX0NCiAJ
fSBlbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnNldF9wcGZlYXR1cmVfc3RhdHVz
KSB7DQpAQCAtOTQ0LDkgKzk4NiwxMiBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2Zl
YXR1cmVzKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCWlmIChyZXQpIHsNCiAJCQlwbV9ydW50aW1l
X21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3Bl
bmQoZGRldi0+ZGV2KTsNCisJCQl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAkJCXJldHVy
biAtRUlOVkFMOw0KIAkJfQ0KIAl9DQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQog
CXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRf
YXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC05NjIsNyArMTAwNyw3IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9nZXRfcHBfZmVhdHVyZXMoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzc2l6
ZV90IHNpemU7DQogCWludCByZXQ7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlm
IChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBw
bV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7DQpAQCAtOTcxLDYgKzEwMTYsOCBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZlYXR1cmVzKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJ
CXJldHVybiByZXQ7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0K
IAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQlzaXplID0gc211X3N5c19nZXRfcHBf
ZmVhdHVyZV9tYXNrKCZhZGV2LT5zbXUsIGJ1Zik7DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxh
eS5wcF9mdW5jcy0+Z2V0X3BwZmVhdHVyZV9zdGF0dXMpDQpAQCAtOTc4LDYgKzEwMjUsOCBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZlYXR1cmVzKHN0cnVjdCBkZXZpY2UgKmRldiwN
CiAJZWxzZQ0KIAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiXG4iKTsNCiANCisJ
dXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVz
eShkZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOw0K
IA0KQEAgLTEwMjMsNyArMTA3Miw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBt
X3NjbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzc2l6ZV90IHNpemU7DQogCWludCByZXQ7DQog
DQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikp
DQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYt
PmRldik7DQpAQCAtMTAzMiw2ICsxMDgxLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9w
cF9kcG1fc2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0KIAl9DQogDQor
CWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211
KGFkZXYpKQ0KIAkJc2l6ZSA9IHNtdV9wcmludF9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9T
Q0xLLCBidWYpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50X2Ns
b2NrX2xldmVscykNCkBAIC0xMDM5LDYgKzEwOTAsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVf
Z2V0X3BwX2RwbV9zY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJZWxzZQ0KIAkJc2l6ZSA9IHNu
cHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiXG4iKTsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsNCisNCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAlwbV9y
dW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOw0KIA0KQEAgLTEwOTEsNyArMTE0NCw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3NjbGsoc3RydWN0IGRldmljZSAq
ZGV2LA0KIAlpbnQgcmV0Ow0KIAl1aW50MzJfdCBtYXNrID0gMDsNCiANCi0JaWYgKGFkZXYtPmlu
X2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBF
Uk07DQogDQogCXJldCA9IGFtZGdwdV9yZWFkX21hc2soYnVmLCBjb3VudCwgJm1hc2spOw0KQEAg
LTExMDQsMTEgKzExNTcsMTUgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fc2Ns
ayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0KIAl9DQogDQorCWRvd25fcmVh
ZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0K
IAkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1NDTEssIG1hc2ss
IHRydWUpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmZvcmNlX2Nsb2Nr
X2xldmVsKQ0KIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9ja19sZXZlbChhZGV2LCBQUF9T
Q0xLLCBtYXNrKTsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1fcnVu
dGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRvc3Vz
cGVuZChkZGV2LT5kZXYpOw0KIA0KQEAgLTExMjcsNyArMTE4NCw3IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9nZXRfcHBfZHBtX21jbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzc2l6ZV90IHNp
emU7DQogCWludCByZXQ7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRn
cHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBwbV9ydW50
aW1lX2dldF9zeW5jKGRkZXYtPmRldik7DQpAQCAtMTEzNiw2ICsxMTkzLDggQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fbWNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1
cm4gcmV0Ow0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYg
KGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJc2l6ZSA9IHNtdV9wcmludF9jbGtfbGV2ZWxz
KCZhZGV2LT5zbXUsIFNNVV9NQ0xLLCBidWYpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPnByaW50X2Nsb2NrX2xldmVscykNCkBAIC0xMTQzLDYgKzEyMDIsOCBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9tY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJ
ZWxzZQ0KIAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiXG4iKTsNCiANCisJdXBf
cmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShk
ZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOw0KIA0K
QEAgLTExNTksNyArMTIyMCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX21j
bGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1aW50MzJfdCBtYXNrID0gMDsNCiAJaW50IHJldDsN
CiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2
KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXJldCA9IGFtZGdwdV9yZWFkX21hc2soYnVmLCBj
b3VudCwgJm1hc2spOw0KQEAgLTExNzIsMTEgKzEyMzMsMTUgQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X3NldF9wcF9kcG1fbWNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0K
IAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBv
cnRfc3dfc211KGFkZXYpKQ0KIAkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNt
dSwgU01VX01DTEssIG1hc2ssIHRydWUpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBf
ZnVuY3MtPmZvcmNlX2Nsb2NrX2xldmVsKQ0KIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9j
a19sZXZlbChhZGV2LCBQUF9NQ0xLLCBtYXNrKTsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsNCisNCiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAlwbV9y
dW50aW1lX3B1dF9hdXRvc3VzcGVuZChkZGV2LT5kZXYpOw0KIA0KQEAgLTExOTUsNyArMTI2MCw3
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX3NvY2NsayhzdHJ1Y3QgZGV2aWNl
ICpkZXYsDQogCXNzaXplX3Qgc2l6ZTsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dw
dV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07
DQogDQogCXJldCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsNCkBAIC0xMjA0LDYg
KzEyNjksOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9zb2NjbGsoc3RydWN0
IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXNpemUg
PSBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfU09DQ0xLLCBidWYpOw0KIAll
bHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnByaW50X2Nsb2NrX2xldmVscykNCkBA
IC0xMjExLDYgKzEyNzgsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9zb2Nj
bGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAllbHNlDQogCQlzaXplID0gc25wcmludGYoYnVmLCBQ
QUdFX1NJWkUsICJcbiIpOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGRkZXYtPmRldik7DQogDQpAQCAtMTIyNyw3ICsxMjk2LDcgQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50
IHJldDsNCiAJdWludDMyX3QgbWFzayA9IDA7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQp
DQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAly
ZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsNCkBAIC0xMjQwLDYgKzEz
MDksOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9zb2NjbGsoc3RydWN0IGRl
dmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXJldCA9IHNt
dV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TT0NDTEssIG1hc2ssIHRydWUpOw0K
IAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmZvcmNlX2Nsb2NrX2xldmVsKQ0K
QEAgLTEyNDcsNiArMTMxOCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3Nv
Y2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UNCiAJCXJldCA9IDA7DQogDQorCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRl
di0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBA
IC0xMjY1LDcgKzEzMzgsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9mY2xr
KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3NpemVfdCBzaXplOw0KIAlpbnQgcmV0Ow0KIA0KLQlp
ZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJ
cmV0dXJuIC1FUEVSTTsNCiANCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYp
Ow0KQEAgLTEyNzQsNiArMTM0Nyw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBt
X2ZjbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3du
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2
KSkNCiAJCXNpemUgPSBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRkNMSywg
YnVmKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5wcmludF9jbG9ja19s
ZXZlbHMpDQpAQCAtMTI4MSw2ICsxMzU2LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9w
cF9kcG1fZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UNCiAJCXNpemUgPSBzbnByaW50
ZihidWYsIFBBR0VfU0laRSwgIlxuIik7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0xMjk3LDcgKzEzNzQsNyBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9mY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwN
CiAJaW50IHJldDsNCiAJdWludDMyX3QgbWFzayA9IDA7DQogDQotCWlmIChhZGV2LT5pbl9ncHVf
cmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0K
IA0KIAlyZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsNCkBAIC0xMzEw
LDYgKzEzODcsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9mY2xrKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByZXQ7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQlyZXQg
PSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRkNMSywgbWFzaywgdHJ1ZSk7
DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwp
DQpAQCAtMTMxNyw2ICsxMzk2LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1f
ZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UNCiAJCXJldCA9IDA7DQogDQorCXVwX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRl
di0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBA
IC0xMzM1LDcgKzE0MTYsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9kY2Vm
Y2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3NpemVfdCBzaXplOw0KIAlpbnQgcmV0Ow0KIA0K
LQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0K
IAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJcmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5k
ZXYpOw0KQEAgLTEzNDQsNiArMTQyNSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBf
ZHBtX2RjZWZjbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0K
Kwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3Nt
dShhZGV2KSkNCiAJCXNpemUgPSBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVf
RENFRkNMSywgYnVmKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5wcmlu
dF9jbG9ja19sZXZlbHMpDQpAQCAtMTM1MSw2ICsxNDM0LDggQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X2dldF9wcF9kcG1fZGNlZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UNCiAJCXNp
emUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7DQogDQorCXVwX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsN
CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0xMzY3LDcg
KzE0NTIsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9kY2VmY2xrKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJaW50IHJldDsNCiAJdWludDMyX3QgbWFzayA9IDA7DQogDQotCWlm
IChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQly
ZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZt
YXNrKTsNCkBAIC0xMzgwLDYgKzE0NjUsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3Bw
X2RwbV9kY2VmY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByZXQ7DQogCX0NCiAN
CisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19z
bXUoYWRldikpDQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVf
RENFRkNMSywgbWFzaywgdHJ1ZSk7DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5j
cy0+Zm9yY2VfY2xvY2tfbGV2ZWwpDQpAQCAtMTM4Nyw2ICsxNDc0LDggQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X3NldF9wcF9kcG1fZGNlZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UN
CiAJCXJldCA9IDA7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1
c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0xNDA1LDcgKzE0OTQsNyBAQCBzdGF0aWMgc3NpemVf
dCBhbWRncHVfZ2V0X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3NpemVfdCBz
aXplOw0KIAlpbnQgcmV0Ow0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJcmV0ID0gcG1fcnVu
dGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOw0KQEAgLTE0MTQsNiArMTUwMyw4IEBAIHN0YXRpYyBz
c2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX3BjaWUoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0
dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlm
IChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXNpemUgPSBzbXVfcHJpbnRfY2xrX2xldmVs
cygmYWRldi0+c211LCBTTVVfUENJRSwgYnVmKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5
LnBwX2Z1bmNzLT5wcmludF9jbG9ja19sZXZlbHMpDQpAQCAtMTQyMSw2ICsxNTEyLDggQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9kcG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQog
CWVsc2UNCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIlxuIik7DQogDQorCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3ko
ZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiAN
CkBAIC0xNDM3LDcgKzE1MzAsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9w
Y2llKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IHJldDsNCiAJdWludDMyX3QgbWFzayA9IDA7
DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRl
dikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBhbWRncHVfcmVhZF9tYXNrKGJ1Ziwg
Y291bnQsICZtYXNrKTsNCkBAIC0xNDUwLDYgKzE1NDMsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfc2V0X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByZXQ7DQog
CX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlpZiAoaXNfc3VwcG9y
dF9zd19zbXUoYWRldikpDQogCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211
LCBTTVVfUENJRSwgbWFzaywgdHJ1ZSk7DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9m
dW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpDQpAQCAtMTQ1Nyw2ICsxNTUyLDggQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UN
CiAJCXJldCA9IDA7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1
c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0xNDc1LDcgKzE1NzIsNyBAQCBzdGF0aWMgc3NpemVf
dCBhbWRncHVfZ2V0X3BwX3NjbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1aW50MzJfdCB2
YWx1ZSA9IDA7DQogCWludCByZXQ7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlm
IChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBw
bV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7DQpAQCAtMTQ4NCwxMSArMTU4MSwxNSBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX3NjbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0K
IAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQor
DQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXZhbHVlID0gc211X2dldF9vZF9w
ZXJjZW50YWdlKCYoYWRldi0+c211KSwgU01VX09EX1NDTEspOw0KIAllbHNlIGlmIChhZGV2LT5w
b3dlcnBsYXkucHBfZnVuY3MtPmdldF9zY2xrX29kKQ0KIAkJdmFsdWUgPSBhbWRncHVfZHBtX2dl
dF9zY2xrX29kKGFkZXYpOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGRkZXYtPmRldik7DQogDQpAQCAtMTUwNSw3ICsxNjA2LDcgQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X3NldF9wcF9zY2xrX29kKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IHJl
dDsNCiAJbG9uZyBpbnQgdmFsdWU7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlm
IChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBr
c3RydG9sKGJ1ZiwgMCwgJnZhbHVlKTsNCkBAIC0xNTE5LDYgKzE2MjAsOCBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfc2V0X3BwX3NjbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJu
IHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChp
c19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0KIAkJdmFsdWUgPSBzbXVfc2V0X29kX3BlcmNlbnRh
Z2UoJihhZGV2LT5zbXUpLCBTTVVfT0RfU0NMSywgKHVpbnQzMl90KXZhbHVlKTsNCiAJfSBlbHNl
IHsNCkBAIC0xNTMzLDYgKzE2MzYsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX3Nj
bGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJfQ0KIAl9DQogDQorCXVwX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsN
CiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0xNTQ4LDcg
KzE2NTMsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX21jbGtfb2Qoc3RydWN0IGRl
dmljZSAqZGV2LA0KIAl1aW50MzJfdCB2YWx1ZSA9IDA7DQogCWludCByZXQ7DQogDQotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1
cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7DQpA
QCAtMTU1NywxMSArMTY2MiwxNSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX21jbGtf
b2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3Jl
YWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkN
CiAJCXZhbHVlID0gc211X2dldF9vZF9wZXJjZW50YWdlKCYoYWRldi0+c211KSwgU01VX09EX01D
TEspOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9tY2xrX29kKQ0K
IAkJdmFsdWUgPSBhbWRncHVfZHBtX2dldF9tY2xrX29kKGFkZXYpOw0KIA0KKwl1cF9yZWFkKCZh
ZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRl
dik7DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7DQogDQpAQCAtMTU3
OCw3ICsxNjg3LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9tY2xrX29kKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJaW50IHJldDsNCiAJbG9uZyBpbnQgdmFsdWU7DQogDQotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1
cm4gLUVQRVJNOw0KIA0KIAlyZXQgPSBrc3RydG9sKGJ1ZiwgMCwgJnZhbHVlKTsNCkBAIC0xNTky
LDYgKzE3MDEsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX21jbGtfb2Qoc3RydWN0
IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0KIAkJdmFs
dWUgPSBzbXVfc2V0X29kX3BlcmNlbnRhZ2UoJihhZGV2LT5zbXUpLCBTTVVfT0RfTUNMSywgKHVp
bnQzMl90KXZhbHVlKTsNCiAJfSBlbHNlIHsNCkBAIC0xNjA2LDYgKzE3MTcsOCBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfc2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJfQ0K
IAl9DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFy
a19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGRl
di0+ZGV2KTsNCiANCkBAIC0xNjQxLDcgKzE3NTQsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVf
Z2V0X3BwX3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXNzaXplX3Qg
c2l6ZTsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFt
ZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXJldCA9IHBtX3J1
bnRpbWVfZ2V0X3N5bmMoZGRldi0+ZGV2KTsNCkBAIC0xNjUwLDYgKzE3NjMsOCBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfZ2V0X3BwX3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsDQogCQlyZXR1cm4gcmV0Ow0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJc2l6ZSA9IHNtdV9nZXRf
cG93ZXJfcHJvZmlsZV9tb2RlKCZhZGV2LT5zbXUsIGJ1Zik7DQogCWVsc2UgaWYgKGFkZXYtPnBv
d2VycGxheS5wcF9mdW5jcy0+Z2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkNCkBAIC0xNjU3LDYgKzE3
NzIsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX3Bvd2VyX3Byb2ZpbGVfbW9kZShz
dHJ1Y3QgZGV2aWNlICpkZXYsDQogCWVsc2UNCiAJCXNpemUgPSBzbnByaW50ZihidWYsIFBBR0Vf
U0laRSwgIlxuIik7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1
bnRpbWVfbWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1
c3BlbmQoZGRldi0+ZGV2KTsNCiANCkBAIC0xNjgxLDcgKzE3OTgsNyBAQCBzdGF0aWMgc3NpemVf
dCBhbWRncHVfc2V0X3BwX3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQog
CWxvbmcgaW50IHByb2ZpbGVfbW9kZSA9IDA7DQogCWNvbnN0IGNoYXIgZGVsaW1pdGVyWzNdID0g
eycgJywgJ1xuJywgJ1wwJ307DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChh
bWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAl0bXBbMF0gPSAq
KGJ1Zik7DQpAQCAtMTcxNSwxMSArMTgzMiwxNSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0
X3BwX3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0
Ow0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1
cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJcmV0ID0gc211X3NldF9wb3dlcl9wcm9maWxlX21vZGUo
JmFkZXYtPnNtdSwgcGFyYW1ldGVyLCBwYXJhbWV0ZXJfc2l6ZSwgdHJ1ZSk7DQogCWVsc2UgaWYg
KGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkNCiAJCXJl
dCA9IGFtZGdwdV9kcG1fc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShhZGV2LCBwYXJhbWV0ZXIsIHBh
cmFtZXRlcl9zaXplKTsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1f
cnVudGltZV9tYXJrX2xhc3RfYnVzeShkZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRv
c3VzcGVuZChkZGV2LT5kZXYpOw0KIA0KQEAgLTE3NDUsNyArMTg2Niw3IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9nZXRfZ3B1X2J1c3lfcGVyY2VudChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7DQogCWludCByLCB2
YWx1ZSwgc2l6ZSA9IHNpemVvZih2YWx1ZSk7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQp
DQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAly
ID0gcG1fcnVudGltZV9nZXRfc3luYyhkZGV2LT5kZXYpOw0KQEAgLTE3NTQsOSArMTg3NSwxMSBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X2dwdV9idXN5X3BlcmNlbnQoc3RydWN0IGRldmlj
ZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOw0KIAkvKiByZWFkIHRoZSBJUCBidXN5IHNlbnNvciAqLw0KIAlyID0gYW1kZ3B1X2RwbV9y
ZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX0dQVV9MT0FELA0KIAkJCQkgICAodm9p
ZCAqKSZ2YWx1ZSwgJnNpemUpOw0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIA0KIAlw
bV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGRkZXYtPmRldik7DQpAQCAtMTc4Myw3ICsxOTA2LDcgQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2dldF9tZW1fYnVzeV9wZXJjZW50KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsNCiAJaW50IHIsIHZh
bHVlLCBzaXplID0gc2l6ZW9mKHZhbHVlKTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkN
CisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXIg
PSBwbV9ydW50aW1lX2dldF9zeW5jKGRkZXYtPmRldik7DQpAQCAtMTc5MiwxMCArMTkxNSwxNCBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X21lbV9idXN5X3BlcmNlbnQoc3RydWN0IGRldmlj
ZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOw0KKw0KIAkvKiByZWFkIHRoZSBJUCBidXN5IHNlbnNvciAqLw0KIAlyID0gYW1kZ3B1X2Rw
bV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX01FTV9MT0FELA0KIAkJCQkgICAo
dm9pZCAqKSZ2YWx1ZSwgJnNpemUpOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0K
Kw0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVf
cHV0X2F1dG9zdXNwZW5kKGRkZXYtPmRldik7DQogDQpAQCAtMTgyNiw3ICsxOTUzLDcgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2dldF9wY2llX2J3KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJdWlu
dDY0X3QgY291bnQwID0gMCwgY291bnQxID0gMDsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYt
PmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAt
RVBFUk07DQogDQogCWlmIChhZGV2LT5mbGFncyAmIEFNRF9JU19BUFUpDQpAQCAtMTg0MSw4ICsx
OTY4LDEyIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcGNpZV9idyhzdHJ1Y3QgZGV2aWNl
ICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsNCisNCiAJYW1kZ3B1X2FzaWNfZ2V0X3BjaWVfdXNhZ2UoYWRldiwgJmNvdW50MCwgJmNv
dW50MSk7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVf
bWFya19sYXN0X2J1c3koZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQo
ZGRldi0+ZGV2KTsNCiANCkBAIC0xODY3LDcgKzE5OTgsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfZ2V0X3VuaXF1ZV9pZChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBkcm1fZGV2aWNl
ICpkZGV2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQor
CWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlpZiAo
YWRldi0+dW5pcXVlX2lkKQ0KQEAgLTIxMzQsNyArMjI2NSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9od21vbl9zaG93X3RlbXAoc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQgY2hhbm5lbCA9
IHRvX3NlbnNvcl9kZXZfYXR0cihhdHRyKS0+aW5kZXg7DQogCWludCByLCB0ZW1wID0gMCwgc2l6
ZSA9IHNpemVvZih0ZW1wKTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFt
ZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCWlmIChjaGFubmVs
ID49IFBQX1RFTVBfTUFYKQ0KQEAgLTIxNDYsNiArMjI3Nyw4IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9od21vbl9zaG93X3RlbXAoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQog
CX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlzd2l0Y2ggKGNoYW5u
ZWwpIHsNCiAJY2FzZSBQUF9URU1QX0pVTkNUSU9OOg0KIAkJLyogZ2V0IGN1cnJlbnQganVuY3Rp
b24gdGVtcGVyYXR1cmUgKi8NCkBAIC0yMTY3LDYgKzIzMDAsOCBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfaHdtb25fc2hvd190ZW1wKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCWJyZWFrOw0KIAl9
DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19s
YXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQo
YWRldi0+ZGRldi0+ZGV2KTsNCiANCkBAIC0yMjcwLDcgKzI0MDUsNyBAQCBzdGF0aWMgc3NpemVf
dCBhbWRncHVfaHdtb25fZ2V0X3B3bTFfZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJdTMy
IHB3bV9tb2RlID0gMDsNCiAJaW50IHJldDsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkN
CisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCXJl
dCA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsNCkBAIC0yMjc5LDE4ICsy
NDE0LDIzIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfcHdtMV9lbmFibGUoc3Ry
dWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFk
ZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0KIAkJ
cHdtX21vZGUgPSBzbXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoJmFkZXYtPnNtdSk7DQogCX0gZWxz
ZSB7DQogCQlpZiAoIWFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X2Zhbl9jb250cm9sX21v
ZGUpIHsNCiAJCQlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7DQog
CQkJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsNCisJCQl1cF9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAkJCXJldHVybiAtRUlOVkFMOw0KIAkJfQ0KIA0KIAkJ
cHdtX21vZGUgPSBhbWRncHVfZHBtX2dldF9mYW5fY29udHJvbF9tb2RlKGFkZXYpOw0KIAl9DQog
DQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0
X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRl
di0+ZGRldi0+ZGV2KTsNCiANCkBAIC0yMzA2LDcgKzI0NDYsNyBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfaHdtb25fc2V0X3B3bTFfZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IGVy
ciwgcmV0Ow0KIAlpbnQgdmFsdWU7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlm
IChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAllcnIgPSBr
c3RydG9pbnQoYnVmLCAxMCwgJnZhbHVlKTsNCkBAIC0yMzE5LDE4ICsyNDU5LDIzIEBAIHN0YXRp
YyBzc2l6ZV90IGFtZGdwdV9od21vbl9zZXRfcHdtMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2
LA0KIAkJcmV0dXJuIHJldDsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0KIAkJc211X3NldF9mYW5fY29u
dHJvbF9tb2RlKCZhZGV2LT5zbXUsIHZhbHVlKTsNCiAJfSBlbHNlIHsNCiAJCWlmICghYWRldi0+
cG93ZXJwbGF5LnBwX2Z1bmNzLT5zZXRfZmFuX2NvbnRyb2xfbW9kZSkgew0KIAkJCXBtX3J1bnRp
bWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsNCiAJCQlwbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOw0KKwkJCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7DQogCQkJcmV0dXJuIC1FSU5WQUw7DQogCQl9DQogDQogCQlhbWRncHVfZHBtX3NldF9mYW5f
Y29udHJvbF9tb2RlKGFkZXYsIHZhbHVlKTsNCiAJfQ0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOw0KKw0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7
DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7DQogDQpAQCAt
MjM2MCw3ICsyNTA1LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9wd20xKHN0
cnVjdCBkZXZpY2UgKmRldiwNCiAJdTMyIHZhbHVlOw0KIAl1MzIgcHdtX21vZGU7DQogDQotCWlm
IChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQly
ZXR1cm4gLUVQRVJNOw0KIA0KIAllcnIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYt
PmRldik7DQpAQCAtMjM2OSwxMSArMjUxNCwxNSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdt
b25fc2V0X3B3bTEoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIGVycjsNCiAJfQ0KIA0K
Kwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3Nt
dShhZGV2KSkNCiAJCXB3bV9tb2RlID0gc211X2dldF9mYW5fY29udHJvbF9tb2RlKCZhZGV2LT5z
bXUpOw0KIAllbHNlDQogCQlwd21fbW9kZSA9IGFtZGdwdV9kcG1fZ2V0X2Zhbl9jb250cm9sX21v
ZGUoYWRldik7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChwd21f
bW9kZSAhPSBBTURfRkFOX0NUUkxfTUFOVUFMKSB7DQogCQlwcl9pbmZvKCJtYW51YWwgZmFuIHNw
ZWVkIGNvbnRyb2wgc2hvdWxkIGJlIGVuYWJsZWQgZmlyc3RcbiIpOw0KIAkJcG1fcnVudGltZV9t
YXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KQEAgLTI0MTQsNyArMjU2Myw3IEBAIHN0
YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfcHdtMShzdHJ1Y3QgZGV2aWNlICpkZXYsDQog
CWludCBlcnI7DQogCXUzMiBzcGVlZCA9IDA7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQp
DQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0KIAll
cnIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7DQpAQCAtMjQyMyw2ICsy
NTcyLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9wd20xKHN0cnVjdCBkZXZp
Y2UgKmRldiwNCiAJCXJldHVybiBlcnI7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNl
dF9zZW0pOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQllcnIgPSBzbXVf
Z2V0X2Zhbl9zcGVlZF9wZXJjZW50KCZhZGV2LT5zbXUsICZzcGVlZCk7DQogCWVsc2UgaWYgKGFk
ZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9wZXJjZW50KQ0KQEAgLTI0MzAs
NiArMjU4MSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfcHdtMShzdHJ1Y3Qg
ZGV2aWNlICpkZXYsDQogCWVsc2UNCiAJCWVyciA9IC1FSU5WQUw7DQogDQorCXVwX3JlYWQoJmFk
ZXYtPnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRl
di0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsN
CiANCkBAIC0yNDQ5LDcgKzI2MDIsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0
X2ZhbjFfaW5wdXQoc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQgZXJyOw0KIAl1MzIgc3BlZWQg
PSAwOw0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0
KGFkZXYpKQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJZXJyID0gcG1fcnVudGltZV9nZXRfc3lu
YyhhZGV2LT5kZGV2LT5kZXYpOw0KQEAgLTI0NTgsNiArMjYxMSw4IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9od21vbl9nZXRfZmFuMV9pbnB1dChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1
cm4gZXJyOw0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYg
KGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJZXJyID0gc211X2dldF9mYW5fc3BlZWRfcnBt
KCZhZGV2LT5zbXUsICZzcGVlZCk7DQogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5j
cy0+Z2V0X2Zhbl9zcGVlZF9ycG0pDQpAQCAtMjQ2NSw2ICsyNjIwLDggQEAgc3RhdGljIHNzaXpl
X3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX2lucHV0KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJZWxz
ZQ0KIAkJZXJyID0gLUVJTlZBTDsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisN
CiAJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KIAlwbV9ydW50
aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOw0KIA0KQEAgLTI0ODMsNyArMjY0
MCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV9taW4oc3RydWN0IGRl
dmljZSAqZGV2LA0KIAl1MzIgc2l6ZSA9IHNpemVvZihtaW5fcnBtKTsNCiAJaW50IHI7DQogDQot
CWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQog
CQlyZXR1cm4gLUVQRVJNOw0KIA0KIAlyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2
LT5kZXYpOw0KQEAgLTI0OTIsOSArMjY0OSwxMyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdt
b25fZ2V0X2ZhbjFfbWluKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiByOw0KIAl9DQog
DQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJciA9IGFtZGdwdV9kcG1fcmVh
ZF9zZW5zb3IoYWRldiwgQU1ER1BVX1BQX1NFTlNPUl9NSU5fRkFOX1JQTSwNCiAJCQkJICAgKHZv
aWQgKikmbWluX3JwbSwgJnNpemUpOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0K
Kw0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7DQogCXBtX3J1
bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7DQogDQpAQCAtMjUxMyw3ICsy
Njc0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX21heChzdHJ1Y3Qg
ZGV2aWNlICpkZXYsDQogCXUzMiBzaXplID0gc2l6ZW9mKG1heF9ycG0pOw0KIAlpbnQgcjsNCiAN
Ci0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkN
CiAJCXJldHVybiAtRVBFUk07DQogDQogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRk
ZXYtPmRldik7DQpAQCAtMjUyMiw5ICsyNjgzLDEzIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9o
d21vbl9nZXRfZmFuMV9tYXgoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQogCX0N
CiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlyID0gYW1kZ3B1X2RwbV9y
ZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX01BWF9GQU5fUlBNLA0KIAkJCQkgICAo
dm9pZCAqKSZtYXhfcnBtLCAmc2l6ZSk7DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7
DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsNCiAJcG1f
cnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsNCiANCkBAIC0yNTQyLDcg
KzI3MDcsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X2ZhbjFfdGFyZ2V0KHN0
cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IGVycjsNCiAJdTMyIHJwbSA9IDA7DQogDQotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1
cm4gLUVQRVJNOw0KIA0KIAllcnIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRl
dik7DQpAQCAtMjU1MSw2ICsyNzE2LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dl
dF9mYW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gZXJyOw0KIAl9DQog
DQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3df
c211KGFkZXYpKQ0KIAkJZXJyID0gc211X2dldF9mYW5fc3BlZWRfcnBtKCZhZGV2LT5zbXUsICZy
cG0pOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9mYW5fc3BlZWRf
cnBtKQ0KQEAgLTI1NTgsNiArMjcyNSw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9n
ZXRfZmFuMV90YXJnZXQoc3RydWN0IGRldmljZSAqZGV2LA0KIAllbHNlDQogCQllcnIgPSAtRUlO
VkFMOw0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlwbV9ydW50aW1lX21h
cmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNw
ZW5kKGFkZXYtPmRkZXYtPmRldik7DQogDQpAQCAtMjU3Niw3ICsyNzQ1LDcgQEAgc3RhdGljIHNz
aXplX3QgYW1kZ3B1X2h3bW9uX3NldF9mYW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYsDQog
CXUzMiB2YWx1ZTsNCiAJdTMyIHB3bV9tb2RlOw0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0
KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJ
ZXJyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOw0KQEAgLTI1ODUsMTEg
KzI3NTQsMTUgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9mYW4xX3RhcmdldChz
dHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gZXJyOw0KIAl9DQogDQorCWRvd25fcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJ
cHdtX21vZGUgPSBzbXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoJmFkZXYtPnNtdSk7DQogCWVsc2UN
CiAJCXB3bV9tb2RlID0gYW1kZ3B1X2RwbV9nZXRfZmFuX2NvbnRyb2xfbW9kZShhZGV2KTsNCiAN
CisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKHB3bV9tb2RlICE9IEFNRF9G
QU5fQ1RSTF9NQU5VQUwpIHsNCiAJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRl
di0+ZGV2KTsNCiAJCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7
DQpAQCAtMjYwMyw2ICsyNzc2LDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9m
YW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gZXJyOw0KIAl9DQogDQor
CWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211
KGFkZXYpKQ0KIAkJZXJyID0gc211X3NldF9mYW5fc3BlZWRfcnBtKCZhZGV2LT5zbXUsIHZhbHVl
KTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5zZXRfZmFuX3NwZWVkX3Jw
bSkNCkBAIC0yNjEwLDYgKzI3ODUsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0
X2ZhbjFfdGFyZ2V0KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJZWxzZQ0KIAkJZXJyID0gLUVJTlZB
TDsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1fcnVudGltZV9tYXJr
X2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVu
ZChhZGV2LT5kZGV2LT5kZXYpOw0KIA0KQEAgLTI2MjcsNyArMjgwNCw3IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1
MzIgcHdtX21vZGUgPSAwOw0KIAlpbnQgcmV0Ow0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0
KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJ
cmV0ID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOw0KQEAgLTI2MzYsMTgg
KzI4MTMsMjMgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX2VuYWJsZShz
dHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcmV0Ow0KIAl9DQogDQorCWRvd25fcmVhZCgm
YWRldi0+cmVzZXRfc2VtKTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7DQog
CQlwd21fbW9kZSA9IHNtdV9nZXRfZmFuX2NvbnRyb2xfbW9kZSgmYWRldi0+c211KTsNCiAJfSBl
bHNlIHsNCiAJCWlmICghYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5nZXRfZmFuX2NvbnRyb2xf
bW9kZSkgew0KIAkJCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsN
CiAJCQlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOw0KKwkJCXVw
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogCQkJcmV0dXJuIC1FSU5WQUw7DQogCQl9DQogDQog
CQlwd21fbW9kZSA9IGFtZGdwdV9kcG1fZ2V0X2Zhbl9jb250cm9sX21vZGUoYWRldik7DQogCX0N
CiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1fcnVudGltZV9tYXJrX2xh
c3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChh
ZGV2LT5kZGV2LT5kZXYpOw0KIA0KQEAgLTI2NjQsNyArMjg0Niw3IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9od21vbl9zZXRfZmFuMV9lbmFibGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQg
dmFsdWU7DQogCXUzMiBwd21fbW9kZTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJ
aWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBFUk07DQogDQogCWVyciA9
IGtzdHJ0b2ludChidWYsIDEwLCAmdmFsdWUpOw0KQEAgLTI2ODQsMTcgKzI4NjYsMjIgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9mYW4xX2VuYWJsZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsDQogCQlyZXR1cm4gZXJyOw0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2Vt
KTsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7DQogCQlzbXVfc2V0X2Zhbl9j
b250cm9sX21vZGUoJmFkZXYtPnNtdSwgcHdtX21vZGUpOw0KIAl9IGVsc2Ugew0KIAkJaWYgKCFh
ZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPnNldF9mYW5fY29udHJvbF9tb2RlKSB7DQogCQkJcG1f
cnVudGltZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KIAkJCXBtX3J1bnRpbWVf
cHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7DQorCQkJdXBfcmVhZCgmYWRldi0+cmVz
ZXRfc2VtKTsNCiAJCQlyZXR1cm4gLUVJTlZBTDsNCiAJCX0NCiAJCWFtZGdwdV9kcG1fc2V0X2Zh
bl9jb250cm9sX21vZGUoYWRldiwgcHdtX21vZGUpOw0KIAl9DQogDQorCXVwX3JlYWQoJmFkZXYt
PnJlc2V0X3NlbSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+
ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsNCiAN
CkBAIC0yNzA5LDcgKzI4OTYsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd192
ZGRnZngoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1MzIgdmRkZ2Z4Ow0KIAlpbnQgciwgc2l6ZSA9
IHNpemVvZih2ZGRnZngpOw0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJciA9IHBtX3J1bnRp
bWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2KTsNCkBAIC0yNzE4LDkgKzI5MDUsMTEgQEAgc3Rh
dGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfdmRkZ2Z4KHN0cnVjdCBkZXZpY2UgKmRldiwN
CiAJCXJldHVybiByOw0KIAl9DQogDQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCiAJ
LyogZ2V0IHRoZSB2b2x0YWdlICovDQogCXIgPSBhbWRncHVfZHBtX3JlYWRfc2Vuc29yKGFkZXYs
IEFNREdQVV9QUF9TRU5TT1JfVkRER0ZYLA0KIAkJCQkgICAodm9pZCAqKSZ2ZGRnZngsICZzaXpl
KTsNCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCiANCiAJcG1fcnVudGltZV9tYXJrX2xh
c3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChh
ZGV2LT5kZGV2LT5kZXYpOw0KQEAgLTI3NDYsNyArMjkzNSw3IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9od21vbl9zaG93X3ZkZG5iKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJdTMyIHZkZG5iOw0K
IAlpbnQgciwgc2l6ZSA9IHNpemVvZih2ZGRuYik7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVz
ZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0K
IAkvKiBvbmx5IEFQVXMgaGF2ZSB2ZGRuYiAqLw0KQEAgLTI3NTksOSArMjk0OCwxMSBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd192ZGRuYihzdHJ1Y3QgZGV2aWNlICpkZXYsDQog
CQlyZXR1cm4gcjsNCiAJfQ0KIA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogCS8q
IGdldCB0aGUgdm9sdGFnZSAqLw0KIAlyID0gYW1kZ3B1X2RwbV9yZWFkX3NlbnNvcihhZGV2LCBB
TURHUFVfUFBfU0VOU09SX1ZERE5CLA0KIAkJCQkgICAodm9pZCAqKSZ2ZGRuYiwgJnNpemUpOw0K
Kwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIA0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9i
dXN5KGFkZXYtPmRkZXYtPmRldik7DQogCXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYt
PmRkZXYtPmRldik7DQpAQCAtMjc4OCw3ICsyOTc5LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2h3bW9uX3Nob3dfcG93ZXJfYXZnKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IHIsIHNpemUg
PSBzaXplb2YodTMyKTsNCiAJdW5zaWduZWQgdXc7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVz
ZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVQRVJNOw0KIA0K
IAlyID0gcG1fcnVudGltZV9nZXRfc3luYyhhZGV2LT5kZGV2LT5kZXYpOw0KQEAgLTI3OTcsOSAr
Mjk4OCwxMSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19wb3dlcl9hdmcoc3Ry
dWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOw0KIAkvKiBnZXQgdGhlIHZvbHRhZ2UgKi8NCiAJciA9IGFtZGdwdV9kcG1f
cmVhZF9zZW5zb3IoYWRldiwgQU1ER1BVX1BQX1NFTlNPUl9HUFVfUE9XRVIsDQogCQkJCSAgICh2
b2lkICopJnF1ZXJ5LCAmc2l6ZSk7DQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogDQog
CXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsNCiAJcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsNCkBAIC0yODI5LDcgKzMwMjIsNyBA
QCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19wb3dlcl9jYXBfbWF4KHN0cnVjdCBk
ZXZpY2UgKmRldiwNCiAJc3NpemVfdCBzaXplOw0KIAlpbnQgcjsNCiANCi0JaWYgKGFkZXYtPmlu
X2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVybiAtRVBF
Uk07DQogDQogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7DQpAQCAt
MjgzOCw2ICszMDMxLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJf
Y2FwX21heChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcjsNCiAJfQ0KIA0KKwlkb3du
X3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2
KSkgew0KIAkJc211X2dldF9wb3dlcl9saW1pdCgmYWRldi0+c211LCAmbGltaXQsIHRydWUpOw0K
IAkJc2l6ZSA9IHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiJXVcbiIsIGxpbWl0ICogMTAwMDAw
MCk7DQpAQCAtMjg0OCw2ICszMDQzLDggQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3No
b3dfcG93ZXJfY2FwX21heChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlzaXplID0gc25wcmludGYo
YnVmLCBQQUdFX1NJWkUsICJcbiIpOw0KIAl9DQogDQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3Nl
bSk7DQorDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2KTsNCiAJ
cG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsNCiANCkBAIC0yODYz
LDcgKzMwNjAsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd19wb3dlcl9jYXAo
c3RydWN0IGRldmljZSAqZGV2LA0KIAlzc2l6ZV90IHNpemU7DQogCWludCByOw0KIA0KLQlpZiAo
YWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKQ0KIAkJcmV0
dXJuIC1FUEVSTTsNCiANCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+ZGRldi0+ZGV2
KTsNCkBAIC0yODcyLDYgKzMwNjksOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hv
d19wb3dlcl9jYXAoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQogCX0NCiANCisJ
ZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUo
YWRldikpIHsNCiAJCXNtdV9nZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCBmYWxz
ZSk7DQogCQlzaXplID0gc25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIldVxuIiwgbGltaXQgKiAx
MDAwMDAwKTsNCkBAIC0yODgyLDYgKzMwODEsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdt
b25fc2hvd19wb3dlcl9jYXAoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJc2l6ZSA9IHNucHJpbnRm
KGJ1ZiwgUEFHRV9TSVpFLCAiXG4iKTsNCiAJfQ0KIA0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9z
ZW0pOw0KKw0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7DQog
CXBtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7DQogDQpAQCAtMjg5
OCw3ICszMDk5LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3NldF9wb3dlcl9jYXAo
c3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQgZXJyOw0KIAl1MzIgdmFsdWU7DQogDQotCWlmIChh
ZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1
cm4gLUVQRVJNOw0KIA0KIAlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpKQ0KQEAgLTI5MTcsNiAr
MzExOCw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zZXRfcG93ZXJfY2FwKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJCXJldHVybiBlcnI7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2
LT5yZXNldF9zZW0pOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQllcnIg
PSBzbXVfc2V0X3Bvd2VyX2xpbWl0KCZhZGV2LT5zbXUsIHZhbHVlKTsNCiAJZWxzZSBpZiAoYWRl
di0+cG93ZXJwbGF5LnBwX2Z1bmNzICYmIGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3Bv
d2VyX2xpbWl0KQ0KQEAgLTI5MjQsNiArMzEyNyw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9o
d21vbl9zZXRfcG93ZXJfY2FwKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJZWxzZQ0KIAkJZXJyID0g
LUVJTlZBTDsNCiANCisJdXBfcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCisNCiAJcG1fcnVudGlt
ZV9tYXJrX2xhc3RfYnVzeShhZGV2LT5kZGV2LT5kZXYpOw0KIAlwbV9ydW50aW1lX3B1dF9hdXRv
c3VzcGVuZChhZGV2LT5kZGV2LT5kZXYpOw0KIA0KQEAgLTI5NDEsNyArMzE0Niw3IEBAIHN0YXRp
YyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X3NjbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1
aW50MzJfdCBzY2xrOw0KIAlpbnQgciwgc2l6ZSA9IHNpemVvZihzY2xrKTsNCiANCi0JaWYgKGFk
ZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJCXJldHVy
biAtRVBFUk07DQogDQogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGFkZXYtPmRkZXYtPmRldik7
DQpAQCAtMjk1MCw5ICszMTU1LDExIEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93
X3NjbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAkJcmV0dXJuIHI7DQogCX0NCiANCisJZG93bl9y
ZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAkvKiBnZXQgdGhlIHNjbGsgKi8NCiAJciA9IGFtZGdw
dV9kcG1fcmVhZF9zZW5zb3IoYWRldiwgQU1ER1BVX1BQX1NFTlNPUl9HRlhfU0NMSywNCiAJCQkJ
ICAgKHZvaWQgKikmc2NsaywgJnNpemUpOw0KKwl1cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0K
IA0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5KGFkZXYtPmRkZXYtPmRldik7DQogCXBtX3J1
bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGFkZXYtPmRkZXYtPmRldik7DQpAQCAtMjk3OCw3ICszMTg1
LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfbWNsayhzdHJ1Y3QgZGV2aWNl
ICpkZXYsDQogCXVpbnQzMl90IG1jbGs7DQogCWludCByLCBzaXplID0gc2l6ZW9mKG1jbGspOw0K
IA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYp
KQ0KIAkJcmV0dXJuIC1FUEVSTTsNCiANCiAJciA9IHBtX3J1bnRpbWVfZ2V0X3N5bmMoYWRldi0+
ZGRldi0+ZGV2KTsNCkBAIC0yOTg3LDkgKzMxOTQsMTEgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X2h3bW9uX3Nob3dfbWNsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCQlyZXR1cm4gcjsNCiAJfQ0K
IA0KKwlkb3duX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogCS8qIGdldCB0aGUgc2NsayAqLw0K
IAlyID0gYW1kZ3B1X2RwbV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX0dGWF9N
Q0xLLA0KIAkJCQkgICAodm9pZCAqKSZtY2xrLCAmc2l6ZSk7DQorCXVwX3JlYWQoJmFkZXYtPnJl
c2V0X3NlbSk7DQogDQogCXBtX3J1bnRpbWVfbWFya19sYXN0X2J1c3koYWRldi0+ZGRldi0+ZGV2
KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYWRldi0+ZGRldi0+ZGV2KTsNCkBAIC0z
ODcwLDcgKzQwNzksNyBAQCBzdGF0aWMgaW50IGFtZGdwdV9kZWJ1Z2ZzX3BtX2luZm8oc3RydWN0
IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQ0KIAl1MzIgZmxhZ3MgPSAwOw0KIAlpbnQgcjsNCiAN
Ci0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkN
CiAJCXJldHVybiAtRVBFUk07DQogDQogCXIgPSBwbV9ydW50aW1lX2dldF9zeW5jKGRldi0+ZGV2
KTsNCkBAIC0zODc5LDcgKzQwODgsMTAgQEAgc3RhdGljIGludCBhbWRncHVfZGVidWdmc19wbV9p
bmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkNCiAJCXJldHVybiByOw0KIAl9DQog
DQorCWRvd25fcmVhZCgmYWRldi0+cmVzZXRfc2VtKTsNCiAJYW1kZ3B1X2RldmljZV9pcF9nZXRf
Y2xvY2tnYXRpbmdfc3RhdGUoYWRldiwgJmZsYWdzKTsNCisJdXBfcmVhZCgmYWRldi0+cmVzZXRf
c2VtKTsNCisNCiAJc2VxX3ByaW50ZihtLCAiQ2xvY2sgR2F0aW5nIEZsYWdzIE1hc2s6IDB4JXhc
biIsIGZsYWdzKTsNCiAJYW1kZ3B1X3BhcnNlX2NnX3N0YXRlKG0sIGZsYWdzKTsNCiAJc2VxX3By
aW50ZihtLCAiXG4iKTsNCkBAIC0zODkxLDYgKzQxMDMsNyBAQCBzdGF0aWMgaW50IGFtZGdwdV9k
ZWJ1Z2ZzX3BtX2luZm8oc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQ0KIAkJcmV0dXJu
IDA7DQogCX0NCiANCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAlpZiAoIWlzX3N1
cHBvcnRfc3dfc211KGFkZXYpICYmDQogCSAgICBhZGV2LT5wb3dlcnBsYXkucHBfZnVuY3MtPmRl
YnVnZnNfcHJpbnRfY3VycmVudF9wZXJmb3JtYW5jZV9sZXZlbCkgew0KIAkJbXV0ZXhfbG9jaygm
YWRldi0+cG0ubXV0ZXgpOw0KQEAgLTM5MDMsNiArNDExNiw3IEBAIHN0YXRpYyBpbnQgYW1kZ3B1
X2RlYnVnZnNfcG1faW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpDQogCX0gZWxz
ZSB7DQogCQlyID0gYW1kZ3B1X2RlYnVnZnNfcG1faW5mb19wcChtLCBhZGV2KTsNCiAJfQ0KKwl1
cF9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIA0KIAlwbV9ydW50aW1lX21hcmtfbGFzdF9idXN5
KGRldi0+ZGV2KTsNCiAJcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoZGV2LT5kZXYpOw0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wc3AuYyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wc3AuYw0KaW5kZXggZTIwNjk1YjQ0ZGJlLi45
ZjQxZGU4MGNhN2YgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfcHNwLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wc3AuYw0K
QEAgLTE2ODIsNyArMTY4Miw3IEBAIHN0YXRpYyBpbnQgcHNwX2xvYWRfc211X2Z3KHN0cnVjdCBw
c3BfY29udGV4dCAqcHNwKQ0KIAkJcmV0dXJuIDA7DQogDQogDQotCWlmIChhZGV2LT5pbl9ncHVf
cmVzZXQgJiYgcmFzICYmIHJhcy0+c3VwcG9ydGVkKSB7DQorCWlmIChhbWRncHVfaW5fcmVzZXQo
YWRldikgJiYgcmFzICYmIHJhcy0+c3VwcG9ydGVkKSB7DQogCQlyZXQgPSBhbWRncHVfZHBtX3Nl
dF9tcDFfc3RhdGUoYWRldiwgUFBfTVAxX1NUQVRFX1VOTE9BRCk7DQogCQlpZiAocmV0KSB7DQog
CQkJRFJNX1dBUk4oIkZhaWxlZCB0byBzZXQgTVAxIHN0YXRlIHByZXBhcmUgZm9yIHJlbG9hZFxu
Iik7DQpAQCAtMTc5Niw3ICsxNzk2LDcgQEAgc3RhdGljIGludCBwc3BfbG9hZF9mdyhzdHJ1Y3Qg
YW1kZ3B1X2RldmljZSAqYWRldikNCiAJaW50IHJldDsNCiAJc3RydWN0IHBzcF9jb250ZXh0ICpw
c3AgPSAmYWRldi0+cHNwOw0KIA0KLQlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIGFkZXYt
PmluX2dwdV9yZXNldCkgew0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIGFtZGdwdV9p
bl9yZXNldChhZGV2KSkgew0KIAkJcHNwX3Jpbmdfc3RvcChwc3AsIFBTUF9SSU5HX1RZUEVfX0tN
KTsgLyogc2hvdWxkIG5vdCBkZXN0cm95IHJpbmcsIG9ubHkgc3RvcCAqLw0KIAkJZ290byBza2lw
X21lbWFsbG9jOw0KIAl9DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3Jhcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Jhcy5jDQpp
bmRleCBhYjhlN2M5MWM2NDUuLjEwMDhmZDNlZjVmMCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9yYXMuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYW1kZ3B1X3Jhcy5jDQpAQCAtMTk3NSw3ICsxOTc1LDcgQEAgaW50IGFtZGdwdV9yYXNf
bGF0ZV9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAkJCWFtZGdwdV9yYXNfcmVx
dWVzdF9yZXNldF9vbl9ib290KGFkZXYsDQogCQkJCQlyYXNfYmxvY2stPmJsb2NrKTsNCiAJCQly
ZXR1cm4gMDsNCi0JCX0gZWxzZSBpZiAoYWRldi0+aW5fc3VzcGVuZCB8fCBhZGV2LT5pbl9ncHVf
cmVzZXQpIHsNCisJCX0gZWxzZSBpZiAoYWRldi0+aW5fc3VzcGVuZCB8fCBhbWRncHVfaW5fcmVz
ZXQoYWRldikpIHsNCiAJCQkvKiBpbiByZXN1bWUgcGhhc2UsIGlmIGZhaWwgdG8gZW5hYmxlIHJh
cywNCiAJCQkgKiBjbGVhbiB1cCBhbGwgcmFzIGZzIG5vZGVzLCBhbmQgZGlzYWJsZSByYXMgKi8N
CiAJCQlnb3RvIGNsZWFudXA7DQpAQCAtMTk4NCw3ICsxOTg0LDcgQEAgaW50IGFtZGdwdV9yYXNf
bGF0ZV9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAl9DQogDQogCS8qIGluIHJl
c3VtZSBwaGFzZSwgbm8gbmVlZCB0byBjcmVhdGUgcmFzIGZzIG5vZGUgKi8NCi0JaWYgKGFkZXYt
PmluX3N1c3BlbmQgfHwgYWRldi0+aW5fZ3B1X3Jlc2V0KQ0KKwlpZiAoYWRldi0+aW5fc3VzcGVu
ZCB8fCBhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gMDsNCiANCiAJaWYgKGloX2lu
Zm8tPmNiKSB7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X3R0bS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3R0bS5jDQppbmRleCA1
NmJlYWZiZDNhYjkuLjhiYzMyNmFjMDkzOCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV90dG0uYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3R0bS5jDQpAQCAtMjA5Myw3ICsyMDkzLDcgQEAgdm9pZCBhbWRncHVfdHRtX3NldF9i
dWZmZXJfZnVuY3Nfc3RhdHVzKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBib29sIGVuYWJs
ZSkNCiAJdWludDY0X3Qgc2l6ZTsNCiAJaW50IHI7DQogDQotCWlmICghYWRldi0+bW1hbi5pbml0
aWFsaXplZCB8fCBhZGV2LT5pbl9ncHVfcmVzZXQgfHwNCisJaWYgKCFhZGV2LT5tbWFuLmluaXRp
YWxpemVkIHx8IGFtZGdwdV9pbl9yZXNldChhZGV2KSB8fA0KIAkgICAgYWRldi0+bW1hbi5idWZm
ZXJfZnVuY3NfZW5hYmxlZCA9PSBlbmFibGUpDQogCQlyZXR1cm47DQogDQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Vjb2RlLmMgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9hbWRncHVfdWNvZGUuYw0KaW5kZXggNzQ0NDA0YTA1ZmVlLi43YjBhMDQy
MTZlNjggMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdWNv
ZGUuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Vjb2RlLmMNCkBA
IC02MjgsNyArNjI4LDggQEAgaW50IGFtZGdwdV91Y29kZV9pbml0X2JvKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2KQ0KIAlzdHJ1Y3QgYW1kZ3B1X2Zpcm13YXJlX2luZm8gKnVjb2RlID0gTlVM
TDsNCiANCiAgLyogZm9yIGJhcmVtZXRhbCwgdGhlIHVjb2RlIGlzIGFsbG9jYXRlZCBpbiBndHQs
IHNvIGRvbid0IG5lZWQgdG8gZmlsbCB0aGUgYm8gd2hlbiByZXNldC9zdXNwZW5kICovDQotCWlm
ICghYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIChhZGV2LT5pbl9ncHVfcmVzZXQgfHwgYWRldi0+
aW5fc3VzcGVuZCkpDQorCWlmICghYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmDQorCQkoYW1kZ3B1
X2luX3Jlc2V0KGFkZXYpIHx8IGFkZXYtPmluX3N1c3BlbmQpKQ0KIAkJcmV0dXJuIDA7DQogCS8q
DQogCSAqIGlmIFNNVSBsb2FkZWQgZmlybXdhcmUsIGl0IG5lZWRuJ3QgYWRkIFNNQywgVVZELCBh
bmQgVkNFDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Zp
cnQuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmMNCmluZGV4IDEy
MDNjMjA0OTFlNi4uNWNhZTM5ZDM1YzA0IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X3ZpcnQuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUv
YW1kZ3B1X3ZpcnQuYw0KQEAgLTkzLDcgKzkzLDcgQEAgdm9pZCBhbWRncHVfdmlydF9raXFfcmVn
X3dyaXRlX3JlZ193YWl0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAlhbWRncHVfcmlu
Z191bmRvKHJpbmcpOw0KIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZraXEtPnJpbmdfbG9jaywg
ZmxhZ3MpOw0KIGZhaWxlZF9raXE6DQotCXByX2VycigiZmFpbGVkIHRvIHdyaXRlIHJlZyAleCB3
YWl0IHJlZyAleFxuIiwgcmVnMCwgcmVnMSk7DQorCWRldl93YXJuKGFkZXYtPmRldiwgImZhaWxl
ZCB0byB3cml0ZSByZWcgJXggd2FpdCByZWcgJXhcbiIsIHJlZzAsIHJlZzEpOw0KIH0NCiANCiAv
KioNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmlydC5o
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3ZpcnQuaA0KaW5kZXggZjgyNjk0
NTk4OWM3Li5iMjA0NmMzYTQwNGQgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfdmlydC5oDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRn
cHVfdmlydC5oDQpAQCAtMzI1LDkgKzMyNSw5IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpc192aXJ0
dWFsX21hY2hpbmUodm9pZCkNCiAjZGVmaW5lIGFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRl
dikgXA0KIAkoKGFkZXYpLT52aXJ0LmdpbV9mZWF0dXJlICYgQU1ER0lNX0ZFQVRVUkVfUFBfT05F
X1ZGKQ0KICNkZWZpbmUgYW1kZ3B1X3NyaW92X2lzX2RlYnVnKGFkZXYpIFwNCi0JKCghYWRldi0+
aW5fZ3B1X3Jlc2V0KSAmJiBhZGV2LT52aXJ0LnRkcl9kZWJ1ZykNCisJKCghYW1kZ3B1X2luX3Jl
c2V0KGFkZXYpKSAmJiBhZGV2LT52aXJ0LnRkcl9kZWJ1ZykNCiAjZGVmaW5lIGFtZGdwdV9zcmlv
dl9pc19ub3JtYWwoYWRldikgXA0KLQkoKCFhZGV2LT5pbl9ncHVfcmVzZXQpICYmICghYWRldi0+
dmlydC50ZHJfZGVidWcpKQ0KKwkoKCFhbWRncHVfaW5fcmVzZXQoYWRldikpICYmICghYWRldi0+
dmlydC50ZHJfZGVidWcpKQ0KIA0KIGJvb2wgYW1kZ3B1X3ZpcnRfbW1pb19ibG9ja2VkKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KTsNCiB2b2lkIGFtZGdwdV92aXJ0X2luaXRfc2V0dGluZyhz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldik7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Ft
ZGdwdV94Z21pLmMNCmluZGV4IGUzYTM3NTVjYjk5OS4uNGUwMTdmMzc5ZWI2IDEwMDY0NA0KLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuYw0KKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3hnbWkuYw0KQEAgLTM3Miw3ICszNzIsNyBAQCBz
dHJ1Y3QgYW1kZ3B1X2hpdmVfaW5mbyAqYW1kZ3B1X2dldF94Z21pX2hpdmUoc3RydWN0IGFtZGdw
dV9kZXZpY2UgKmFkZXYsIGludCBsbw0KIAl0bXAtPmhpdmVfaWQgPSBhZGV2LT5nbWMueGdtaS5o
aXZlX2lkOw0KIAlJTklUX0xJU1RfSEVBRCgmdG1wLT5kZXZpY2VfbGlzdCk7DQogCW11dGV4X2lu
aXQoJnRtcC0+aGl2ZV9sb2NrKTsNCi0JbXV0ZXhfaW5pdCgmdG1wLT5yZXNldF9sb2NrKTsNCisJ
YXRvbWljX3NldCgmdG1wLT5pbl9yZXNldCwgMCk7DQogCXRhc2tfYmFycmllcl9pbml0KCZ0bXAt
PnRiKTsNCiANCiAJaWYgKGxvY2spDQpAQCAtMzk3LDYgKzM5Nyw3IEBAIGludCBhbWRncHVfeGdt
aV9zZXRfcHN0YXRlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBpbnQgcHN0YXRlKQ0KIAkJ
CQkJCWhpdmUtPmhpX3JlcV9ncHUgOiBhZGV2Ow0KIAlib29sIGlzX2hpX3JlcSA9IHBzdGF0ZSA9
PSBBTURHUFVfWEdNSV9QU1RBVEVfTUFYX1ZFR0EyMDsNCiAJYm9vbCBpbml0X2xvdyA9IGhpdmUt
PnBzdGF0ZSA9PSBBTURHUFVfWEdNSV9QU1RBVEVfVU5LTk9XTjsNCisJYm9vbCBsb2NrZWQ7DQog
DQogCS8qIGZ3IGJ1ZyBzbyB0ZW1wb3JhcmlseSBkaXNhYmxlIHBzdGF0ZSBzd2l0Y2hpbmcgKi8N
CiAJcmV0dXJuIDA7DQpAQCAtNDA0LDcgKzQwNSw5IEBAIGludCBhbWRncHVfeGdtaV9zZXRfcHN0
YXRlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBpbnQgcHN0YXRlKQ0KIAlpZiAoIWhpdmUg
fHwgYWRldi0+YXNpY190eXBlICE9IENISVBfVkVHQTIwKQ0KIAkJcmV0dXJuIDA7DQogDQotCW11
dGV4X2xvY2soJmhpdmUtPmhpdmVfbG9jayk7DQorCWxvY2tlZCA9IGF0b21pY19yZWFkKCZoaXZl
LT5pbl9yZXNldCkgPyBmYWxzZSA6IHRydWU7DQorCWlmIChsb2NrZWQpDQorCQltdXRleF9sb2Nr
KCZoaXZlLT5oaXZlX2xvY2spOw0KIA0KIAlpZiAoaXNfaGlfcmVxKQ0KIAkJaGl2ZS0+aGlfcmVx
X2NvdW50Kys7DQpAQCAtNDM5LDcgKzQ0Miw4IEBAIGludCBhbWRncHVfeGdtaV9zZXRfcHN0YXRl
KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBpbnQgcHN0YXRlKQ0KIAkJCQkJCQlhZGV2IDog
TlVMTDsNCiAJfQ0KIG91dDoNCi0JbXV0ZXhfdW5sb2NrKCZoaXZlLT5oaXZlX2xvY2spOw0KKwlp
ZiAobG9ja2VkKQ0KKwkJbXV0ZXhfdW5sb2NrKCZoaXZlLT5oaXZlX2xvY2spOw0KIAlyZXR1cm4g
cmV0Ow0KIH0NCiANCkBAIC01OTQsNyArNTk4LDYgQEAgaW50IGFtZGdwdV94Z21pX3JlbW92ZV9k
ZXZpY2Uoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpDQogCWlmKCEoLS1oaXZlLT5udW1iZXJf
ZGV2aWNlcykpew0KIAkJYW1kZ3B1X3hnbWlfc3lzZnNfZGVzdHJveShhZGV2LCBoaXZlKTsNCiAJ
CW11dGV4X2Rlc3Ryb3koJmhpdmUtPmhpdmVfbG9jayk7DQotCQltdXRleF9kZXN0cm95KCZoaXZl
LT5yZXNldF9sb2NrKTsNCiAJfQ0KIA0KIAlyZXR1cm4gcHNwX3hnbWlfdGVybWluYXRlKCZhZGV2
LT5wc3ApOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV94
Z21pLmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfeGdtaS5oDQppbmRleCA2
OTk5ZWFiMTZhNzIuLjYxNzIwY2Q0YTFlZSAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV94Z21pLmgNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV94Z21pLmgNCkBAIC0zMCw3ICszMCw4IEBAIHN0cnVjdCBhbWRncHVfaGl2ZV9pbmZv
IHsNCiAJdWludDY0X3QJCWhpdmVfaWQ7DQogCXN0cnVjdCBsaXN0X2hlYWQJZGV2aWNlX2xpc3Q7
DQogCWludCBudW1iZXJfZGV2aWNlczsNCi0Jc3RydWN0IG11dGV4IGhpdmVfbG9jaywgcmVzZXRf
bG9jazsNCisJc3RydWN0IG11dGV4IGhpdmVfbG9jazsNCisJYXRvbWljX3QgaW5fcmVzZXQ7DQog
CXN0cnVjdCBrb2JqZWN0ICprb2JqOw0KIAlzdHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSBkZXZfYXR0
cjsNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXY7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYXRvbS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYXRv
bS5jDQppbmRleCA0Y2ZjNzg2Njk5YzcuLjgzNDFiZDk2NTIwMiAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2F0b20uYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvYXRvbS5jDQpAQCAtNzU1LDYgKzc1NSw3IEBAIHN0YXRpYyB2b2lkIGF0b21fb3BfanVt
cChhdG9tX2V4ZWNfY29udGV4dCAqY3R4LCBpbnQgKnB0ciwgaW50IGFyZykNCiAJCQkJLyogamlm
ZmllcyB3cmFwIGFyb3VuZCB3ZSB3aWxsIGp1c3Qgd2FpdCBhIGxpdHRsZSBsb25nZXIgKi8NCiAJ
CQkJY3R4LT5sYXN0X2p1bXBfamlmZmllcyA9IGppZmZpZXM7DQogCQkJfQ0KKwkJCXNjaGVkdWxl
KCk7DQogCQl9IGVsc2Ugew0KIAkJCWN0eC0+bGFzdF9qdW1wID0gY3R4LT5zdGFydCArIHRhcmdl
dDsNCiAJCQljdHgtPmxhc3RfanVtcF9qaWZmaWVzID0gamlmZmllczsNCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2dmeF92MTBfMC5jDQppbmRleCBhNjE3MGEzNDZiMzkuLmQ1ZWZlZmM4MGRhZCAx
MDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92MTBfMC5jDQorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjEwXzAuYw0KQEAgLTYxMDIsNyArNjEw
Miw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3YxMF8wX2dmeF9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVf
cmluZyAqcmluZykNCiAJc3RydWN0IHYxMF9nZnhfbXFkICptcWQgPSByaW5nLT5tcWRfcHRyOw0K
IAlpbnQgbXFkX2lkeCA9IHJpbmcgLSAmYWRldi0+Z2Z4LmdmeF9yaW5nWzBdOw0KIA0KLQlpZiAo
IWFkZXYtPmluX2dwdV9yZXNldCAmJiAhYWRldi0+aW5fc3VzcGVuZCkgew0KKwlpZiAoIWFtZGdw
dV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgew0KIAkJbWVtc2V0KCh2b2lk
ICopbXFkLCAwLCBzaXplb2YoKm1xZCkpOw0KIAkJbXV0ZXhfbG9jaygmYWRldi0+c3JibV9tdXRl
eCk7DQogCQludl9ncmJtX3NlbGVjdChhZGV2LCByaW5nLT5tZSwgcmluZy0+cGlwZSwgcmluZy0+
cXVldWUsIDApOw0KQEAgLTYxMTQsNyArNjExNCw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3YxMF8wX2dm
eF9pbml0X3F1ZXVlKHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykNCiAJCW11dGV4X3VubG9jaygm
YWRldi0+c3JibV9tdXRleCk7DQogCQlpZiAoYWRldi0+Z2Z4Lm1lLm1xZF9iYWNrdXBbbXFkX2lk
eF0pDQogCQkJbWVtY3B5KGFkZXYtPmdmeC5tZS5tcWRfYmFja3VwW21xZF9pZHhdLCBtcWQsIHNp
emVvZigqbXFkKSk7DQotCX0gZWxzZSBpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7DQorCX0gZWxz
ZSBpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7DQogCQkvKiByZXNldCBtcWQgd2l0aCB0aGUg
YmFja3VwIGNvcHkgKi8NCiAJCWlmIChhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRfaWR4XSkN
CiAJCQltZW1jcHkobXFkLCBhZGV2LT5nZngubWUubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6ZW9m
KCptcWQpKTsNCkBAIC02NDYzLDcgKzY0NjMsNyBAQCBzdGF0aWMgaW50IGdmeF92MTBfMF9raXFf
aW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpDQogDQogCWdmeF92MTBfMF9raXFf
c2V0dGluZyhyaW5nKTsNCiANCi0JaWYgKGFkZXYtPmluX2dwdV9yZXNldCkgeyAvKiBmb3IgR1BV
X1JFU0VUIGNhc2UgKi8NCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkgeyAvKiBmb3IgR1BV
X1JFU0VUIGNhc2UgKi8NCiAJCS8qIHJlc2V0IE1RRCB0byBhIGNsZWFuIHN0YXR1cyAqLw0KIAkJ
aWYgKGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSkNCiAJCQltZW1jcHkobXFkLCBh
ZGV2LT5nZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0sIHNpemVvZigqbXFkKSk7DQpAQCAtNjQ5
OSw3ICs2NDk5LDcgQEAgc3RhdGljIGludCBnZnhfdjEwXzBfa2NxX2luaXRfcXVldWUoc3RydWN0
IGFtZGdwdV9yaW5nICpyaW5nKQ0KIAlzdHJ1Y3QgdjEwX2NvbXB1dGVfbXFkICptcWQgPSByaW5n
LT5tcWRfcHRyOw0KIAlpbnQgbXFkX2lkeCA9IHJpbmcgLSAmYWRldi0+Z2Z4LmNvbXB1dGVfcmlu
Z1swXTsNCiANCi0JaWYgKCFhZGV2LT5pbl9ncHVfcmVzZXQgJiYgIWFkZXYtPmluX3N1c3BlbmQp
IHsNCisJaWYgKCFhbWRncHVfaW5fcmVzZXQoYWRldikgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsN
CiAJCW1lbXNldCgodm9pZCAqKW1xZCwgMCwgc2l6ZW9mKCptcWQpKTsNCiAJCW11dGV4X2xvY2so
JmFkZXYtPnNyYm1fbXV0ZXgpOw0KIAkJbnZfZ3JibV9zZWxlY3QoYWRldiwgcmluZy0+bWUsIHJp
bmctPnBpcGUsIHJpbmctPnF1ZXVlLCAwKTsNCkBAIC02NTA5LDcgKzY1MDksNyBAQCBzdGF0aWMg
aW50IGdmeF92MTBfMF9rY3FfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpDQog
DQogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhdKQ0KIAkJCW1lbWNweShh
ZGV2LT5nZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0sIG1xZCwgc2l6ZW9mKCptcWQpKTsNCi0J
fSBlbHNlIGlmIChhZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICov
DQorCX0gZWxzZSBpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7IC8qIGZvciBHUFVfUkVTRVQg
Y2FzZSAqLw0KIAkJLyogcmVzZXQgTVFEIHRvIGEgY2xlYW4gc3RhdHVzICovDQogCQlpZiAoYWRl
di0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhdKQ0KIAkJCW1lbWNweShtcWQsIGFkZXYtPmdm
eC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6ZW9mKCptcWQpKTsNCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvZ2Z4X3Y4XzAuYw0KaW5kZXggMzNmMWM0YTQ2ZWJlLi44ZDcyMDg5NTljOTUgMTAw
NjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhfMC5jDQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjhfMC5jDQpAQCAtNDYzMiw3ICs0NjMyLDcg
QEAgc3RhdGljIGludCBnZnhfdjhfMF9raXFfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3Jpbmcg
KnJpbmcpDQogDQogCWdmeF92OF8wX2tpcV9zZXR0aW5nKHJpbmcpOw0KIA0KLQlpZiAoYWRldi0+
aW5fZ3B1X3Jlc2V0KSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLw0KKwlpZiAoYW1kZ3B1X2lu
X3Jlc2V0KGFkZXYpKSB7IC8qIGZvciBHUFVfUkVTRVQgY2FzZSAqLw0KIAkJLyogcmVzZXQgTVFE
IHRvIGEgY2xlYW4gc3RhdHVzICovDQogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21x
ZF9pZHhdKQ0KIAkJCW1lbWNweShtcWQsIGFkZXYtPmdmeC5tZWMubXFkX2JhY2t1cFttcWRfaWR4
XSwgc2l6ZW9mKHN0cnVjdCB2aV9tcWRfYWxsb2NhdGlvbikpOw0KQEAgLTQ2NjksNyArNDY2OSw3
IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y4XzBfa2NxX2luaXRfcXVldWUoc3RydWN0IGFtZGdwdV9yaW5n
ICpyaW5nKQ0KIAlzdHJ1Y3QgdmlfbXFkICptcWQgPSByaW5nLT5tcWRfcHRyOw0KIAlpbnQgbXFk
X2lkeCA9IHJpbmcgLSAmYWRldi0+Z2Z4LmNvbXB1dGVfcmluZ1swXTsNCiANCi0JaWYgKCFhZGV2
LT5pbl9ncHVfcmVzZXQgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsNCisJaWYgKCFhbWRncHVfaW5f
cmVzZXQoYWRldikgJiYgIWFkZXYtPmluX3N1c3BlbmQpIHsNCiAJCW1lbXNldCgodm9pZCAqKW1x
ZCwgMCwgc2l6ZW9mKHN0cnVjdCB2aV9tcWRfYWxsb2NhdGlvbikpOw0KIAkJKChzdHJ1Y3Qgdmlf
bXFkX2FsbG9jYXRpb24gKiltcWQpLT5keW5hbWljX2N1X21hc2sgPSAweEZGRkZGRkZGOw0KIAkJ
KChzdHJ1Y3QgdmlfbXFkX2FsbG9jYXRpb24gKiltcWQpLT5keW5hbWljX3JiX21hc2sgPSAweEZG
RkZGRkZGOw0KQEAgLTQ2ODEsNyArNDY4MSw3IEBAIHN0YXRpYyBpbnQgZ2Z4X3Y4XzBfa2NxX2lu
aXRfcXVldWUoc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKQ0KIA0KIAkJaWYgKGFkZXYtPmdmeC5t
ZWMubXFkX2JhY2t1cFttcWRfaWR4XSkNCiAJCQltZW1jcHkoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFj
a3VwW21xZF9pZHhdLCBtcWQsIHNpemVvZihzdHJ1Y3QgdmlfbXFkX2FsbG9jYXRpb24pKTsNCi0J
fSBlbHNlIGlmIChhZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICov
DQorCX0gZWxzZSBpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7IC8qIGZvciBHUFVfUkVTRVQg
Y2FzZSAqLw0KIAkJLyogcmVzZXQgTVFEIHRvIGEgY2xlYW4gc3RhdHVzICovDQogCQlpZiAoYWRl
di0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhdKQ0KIAkJCW1lbWNweShtcWQsIGFkZXYtPmdm
eC5tZWMubXFkX2JhY2t1cFttcWRfaWR4XSwgc2l6ZW9mKHN0cnVjdCB2aV9tcWRfYWxsb2NhdGlv
bikpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8wLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nZnhfdjlfMC5jDQppbmRleCBjYjlkNjBhNGUw
NWUuLmU0ZTc1MWY4NzA5MiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2dmeF92OV8wLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dmeF92OV8wLmMN
CkBAIC0zNjg0LDcgKzM2ODQsNyBAQCBzdGF0aWMgaW50IGdmeF92OV8wX2tpcV9pbml0X3F1ZXVl
KHN0cnVjdCBhbWRncHVfcmluZyAqcmluZykNCiANCiAJZ2Z4X3Y5XzBfa2lxX3NldHRpbmcocmlu
Zyk7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNl
ICovDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpIHsgLyogZm9yIEdQVV9SRVNFVCBjYXNl
ICovDQogCQkvKiByZXNldCBNUUQgdG8gYSBjbGVhbiBzdGF0dXMgKi8NCiAJCWlmIChhZGV2LT5n
ZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0pDQogCQkJbWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1l
Yy5tcWRfYmFja3VwW21xZF9pZHhdLCBzaXplb2Yoc3RydWN0IHY5X21xZF9hbGxvY2F0aW9uKSk7
DQpAQCAtMzcyMiw3ICszNzIyLDcgQEAgc3RhdGljIGludCBnZnhfdjlfMF9rY3FfaW5pdF9xdWV1
ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpDQogCXN0cnVjdCB2OV9tcWQgKm1xZCA9IHJpbmct
Pm1xZF9wdHI7DQogCWludCBtcWRfaWR4ID0gcmluZyAtICZhZGV2LT5nZnguY29tcHV0ZV9yaW5n
WzBdOw0KIA0KLQlpZiAoIWFkZXYtPmluX2dwdV9yZXNldCAmJiAhYWRldi0+aW5fc3VzcGVuZCkg
ew0KKwlpZiAoIWFtZGdwdV9pbl9yZXNldChhZGV2KSAmJiAhYWRldi0+aW5fc3VzcGVuZCkgew0K
IAkJbWVtc2V0KCh2b2lkICopbXFkLCAwLCBzaXplb2Yoc3RydWN0IHY5X21xZF9hbGxvY2F0aW9u
KSk7DQogCQkoKHN0cnVjdCB2OV9tcWRfYWxsb2NhdGlvbiAqKW1xZCktPmR5bmFtaWNfY3VfbWFz
ayA9IDB4RkZGRkZGRkY7DQogCQkoKHN0cnVjdCB2OV9tcWRfYWxsb2NhdGlvbiAqKW1xZCktPmR5
bmFtaWNfcmJfbWFzayA9IDB4RkZGRkZGRkY7DQpAQCAtMzczNCw3ICszNzM0LDcgQEAgc3RhdGlj
IGludCBnZnhfdjlfMF9rY3FfaW5pdF9xdWV1ZShzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpDQog
DQogCQlpZiAoYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhdKQ0KIAkJCW1lbWNweShh
ZGV2LT5nZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0sIG1xZCwgc2l6ZW9mKHN0cnVjdCB2OV9t
cWRfYWxsb2NhdGlvbikpOw0KLQl9IGVsc2UgaWYgKGFkZXYtPmluX2dwdV9yZXNldCkgeyAvKiBm
b3IgR1BVX1JFU0VUIGNhc2UgKi8NCisJfSBlbHNlIGlmIChhbWRncHVfaW5fcmVzZXQoYWRldikp
IHsgLyogZm9yIEdQVV9SRVNFVCBjYXNlICovDQogCQkvKiByZXNldCBNUUQgdG8gYSBjbGVhbiBz
dGF0dXMgKi8NCiAJCWlmIChhZGV2LT5nZngubWVjLm1xZF9iYWNrdXBbbXFkX2lkeF0pDQogCQkJ
bWVtY3B5KG1xZCwgYWRldi0+Z2Z4Lm1lYy5tcWRfYmFja3VwW21xZF9pZHhdLCBzaXplb2Yoc3Ry
dWN0IHY5X21xZF9hbGxvY2F0aW9uKSk7DQpAQCAtMzkyOCw3ICszOTI4LDcgQEAgc3RhdGljIGlu
dCBnZnhfdjlfMF9od19maW5pKHZvaWQgKmhhbmRsZSkNCiAJLyogVXNlIGRlaW5pdGlhbGl6ZSBz
ZXF1ZW5jZSBmcm9tIENBSUwgd2hlbiB1bmJpbmRpbmcgZGV2aWNlIGZyb20gZHJpdmVyLA0KIAkg
KiBvdGhlcndpc2UgS0lRIGlzIGhhbmdpbmcgd2hlbiBiaW5kaW5nIGJhY2sNCiAJICovDQotCWlm
ICghYWRldi0+aW5fZ3B1X3Jlc2V0ICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7DQorCWlmICghYW1k
Z3B1X2luX3Jlc2V0KGFkZXYpICYmICFhZGV2LT5pbl9zdXNwZW5kKSB7DQogCQltdXRleF9sb2Nr
KCZhZGV2LT5zcmJtX211dGV4KTsNCiAJCXNvYzE1X2dyYm1fc2VsZWN0KGFkZXYsIGFkZXYtPmdm
eC5raXEucmluZy5tZSwNCiAJCQkJYWRldi0+Z2Z4LmtpcS5yaW5nLnBpcGUsDQpAQCAtNDA4Niw3
ICs0MDg2LDcgQEAgc3RhdGljIHVpbnQ2NF90IGdmeF92OV8wX2tpcV9yZWFkX2Nsb2NrKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KQ0KIAkgKg0KIAkgKiBhbHNvIGRvbid0IHdhaXQgYW55bW9y
ZSBmb3IgSVJRIGNvbnRleHQNCiAJICogKi8NCi0JaWYgKHIgPCAxICYmIChhZGV2LT5pbl9ncHVf
cmVzZXQgfHwgaW5faW50ZXJydXB0KCkpKQ0KKwlpZiAociA8IDEgJiYgKGFtZGdwdV9pbl9yZXNl
dChhZGV2KSB8fCBpbl9pbnRlcnJ1cHQoKSkpDQogCQlnb3RvIGZhaWxlZF9raXFfcmVhZDsNCiAN
CiAJbWlnaHRfc2xlZXAoKTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9nbWNfdjEwXzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jDQpp
bmRleCA4ZjI5Zjc5ZjgyMGQuLjAzYjkzZTYyODU4MCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2dtY192MTBfMC5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9nbWNfdjEwXzAuYw0KQEAgLTM1Niw3ICszNTYsNyBAQCBzdGF0aWMgdm9pZCBnbWNfdjEw
XzBfZmx1c2hfZ3B1X3RsYihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdWludDMyX3Qgdm1p
ZCwNCiAJICovDQogCWlmIChhZGV2LT5nZngua2lxLnJpbmcuc2NoZWQucmVhZHkgJiYNCiAJICAg
IChhbWRncHVfc3Jpb3ZfcnVudGltZShhZGV2KSB8fCAhYW1kZ3B1X3NyaW92X3ZmKGFkZXYpKSAm
Jg0KLQkgICAgIWFkZXYtPmluX2dwdV9yZXNldCkgew0KKwkgICAgIWFtZGdwdV9pbl9yZXNldChh
ZGV2KSkgew0KIA0KIAkJc3RydWN0IGFtZGdwdV92bWh1YiAqaHViID0gJmFkZXYtPnZtaHViW3Zt
aHViXTsNCiAJCWNvbnN0IHVuc2lnbmVkIGVuZyA9IDE3Ow0KQEAgLTM4MSw3ICszODEsNyBAQCBz
dGF0aWMgdm9pZCBnbWNfdjEwXzBfZmx1c2hfZ3B1X3RsYihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiwgdWludDMyX3Qgdm1pZCwNCiANCiAJaWYgKCFhZGV2LT5tbWFuLmJ1ZmZlcl9mdW5jc19l
bmFibGVkIHx8DQogCSAgICAhYWRldi0+aWJfcG9vbF9yZWFkeSB8fA0KLQkgICAgYWRldi0+aW5f
Z3B1X3Jlc2V0IHx8DQorCSAgICBhbWRncHVfaW5fcmVzZXQoYWRldikgfHwNCiAJICAgIHJpbmct
PnNjaGVkLnJlYWR5ID09IGZhbHNlKSB7DQogCQlnbWNfdjEwXzBfZmx1c2hfdm1faHViKGFkZXYs
IHZtaWQsIEFNREdQVV9HRlhIVUJfMCwgMCk7DQogCQltdXRleF91bmxvY2soJmFkZXYtPm1tYW4u
Z3R0X3dpbmRvd19sb2NrKTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9nbWNfdjdfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y3XzAuYw0KaW5k
ZXggZTE4Mjk2ZGMxMzg2Li4wZjhlOGFmZjkxMTQgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGdwdS9nbWNfdjdfMC5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9nbWNfdjdfMC5jDQpAQCAtNDM0LDcgKzQzNCw3IEBAIHN0YXRpYyBpbnQgZ21jX3Y3XzBfZmx1
c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCiAJaW50IHZtaWQ7
DQogCXVuc2lnbmVkIGludCB0bXA7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVzZXQpDQorCWlm
IChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVJTzsNCiANCiAJZm9yICh2bWlk
ID0gMTsgdm1pZCA8IDE2OyB2bWlkKyspIHsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9nbWNfdjhfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y4
XzAuYw0KaW5kZXggYTllNzIyYjhhNDU4Li5hYmU2NDAxMGYwZDUgMTAwNjQ0DQotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjhfMC5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9nbWNfdjhfMC5jDQpAQCAtNjM1LDcgKzYzNSw3IEBAIHN0YXRpYyBpbnQgZ21j
X3Y4XzBfZmx1c2hfZ3B1X3RsYl9wYXNpZChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCiAJ
aW50IHZtaWQ7DQogCXVuc2lnbmVkIGludCB0bXA7DQogDQotCWlmIChhZGV2LT5pbl9ncHVfcmVz
ZXQpDQorCWlmIChhbWRncHVfaW5fcmVzZXQoYWRldikpDQogCQlyZXR1cm4gLUVJTzsNCiANCiAJ
Zm9yICh2bWlkID0gMTsgdm1pZCA8IDE2OyB2bWlkKyspIHsNCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvZ21jX3Y5XzAuYw0KaW5kZXggNmU0ZjNmZjQ4MTBmLi5jNWY5NGJhYjRhMDEgMTAwNjQ0DQot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jDQorKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2FtZGdwdS9nbWNfdjlfMC5jDQpAQCAtNTAxLDcgKzUwMSw3IEBAIHN0YXRp
YyB2b2lkIGdtY192OV8wX2ZsdXNoX2dwdV90bGIoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYs
IHVpbnQzMl90IHZtaWQsDQogCSAqLw0KIAlpZiAoYWRldi0+Z2Z4LmtpcS5yaW5nLnNjaGVkLnJl
YWR5ICYmDQogCQkJKGFtZGdwdV9zcmlvdl9ydW50aW1lKGFkZXYpIHx8ICFhbWRncHVfc3Jpb3Zf
dmYoYWRldikpICYmDQotCQkJIWFkZXYtPmluX2dwdV9yZXNldCkgew0KKwkJCSFhbWRncHVfaW5f
cmVzZXQoYWRldikpIHsNCiAJCXVpbnQzMl90IHJlcSA9IGh1Yi0+dm1faW52X2VuZzBfcmVxICsg
aHViLT5lbmdfZGlzdGFuY2UgKiBlbmc7DQogCQl1aW50MzJfdCBhY2sgPSBodWItPnZtX2ludl9l
bmcwX2FjayArIGh1Yi0+ZW5nX2Rpc3RhbmNlICogZW5nOw0KIA0KQEAgLTU5Niw3ICs1OTYsNyBA
QCBzdGF0aWMgaW50IGdtY192OV8wX2ZsdXNoX2dwdV90bGJfcGFzaWQoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsDQogCXN0cnVjdCBhbWRncHVfcmluZyAqcmluZyA9ICZhZGV2LT5nZngua2lx
LnJpbmc7DQogCXN0cnVjdCBhbWRncHVfa2lxICpraXEgPSAmYWRldi0+Z2Z4LmtpcTsNCiANCi0J
aWYgKGFkZXYtPmluX2dwdV9yZXNldCkNCisJaWYgKGFtZGdwdV9pbl9yZXNldChhZGV2KSkNCiAJ
CXJldHVybiAtRUlPOw0KIA0KIAlpZiAocmluZy0+c2NoZWQucmVhZHkpIHsNCkBAIC02MzMsNyAr
NjMzLDggQEAgc3RhdGljIGludCBnbWNfdjlfMF9mbHVzaF9ncHVfdGxiX3Bhc2lkKHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2LA0KIAkJc3Bpbl91bmxvY2soJmFkZXYtPmdmeC5raXEucmluZ19s
b2NrKTsNCiAJCXIgPSBhbWRncHVfZmVuY2Vfd2FpdF9wb2xsaW5nKHJpbmcsIHNlcSwgYWRldi0+
dXNlY190aW1lb3V0KTsNCiAJCWlmIChyIDwgMSkgew0KLQkJCURSTV9FUlJPUigid2FpdCBmb3Ig
a2lxIGZlbmNlIGVycm9yOiAlbGQuXG4iLCByKTsNCisJCQlkZXZfaW5mbyhhZGV2LT5kZXYsDQor
CQkJCSJ3YWl0IGZvciBraXEgZmVuY2UgZXJyb3I6ICVsZFxuIiwgcik7DQogCQkJcmV0dXJuIC1F
VElNRTsNCiAJCX0NCiANCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9t
eGdwdV9haS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfYWkuYw0KaW5kZXgg
NWZkNjdlMWNjMmEwLi5mZTMxY2JlY2NmZTkgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9teGdwdV9haS5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9t
eGdwdV9haS5jDQpAQCAtMjM4LDIwICsyMzgsMTYgQEAgc3RhdGljIHZvaWQgeGdwdV9haV9tYWls
Ym94X2Zscl93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykNCiAJc3RydWN0IGFtZGdwdV92
aXJ0ICp2aXJ0ID0gY29udGFpbmVyX29mKHdvcmssIHN0cnVjdCBhbWRncHVfdmlydCwgZmxyX3dv
cmspOw0KIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGNvbnRhaW5lcl9vZih2aXJ0LCBz
dHJ1Y3QgYW1kZ3B1X2RldmljZSwgdmlydCk7DQogCWludCB0aW1lb3V0ID0gQUlfTUFJTEJPWF9Q
T0xMX0ZMUl9USU1FRE9VVDsNCi0JaW50IGxvY2tlZDsNCiANCiAJLyogYmxvY2sgYW1kZ3B1X2dw
dV9yZWNvdmVyIHRpbGwgbXNnIEZMUiBDT01QTEVURSByZWNlaXZlZCwNCiAJICogb3RoZXJ3aXNl
IHRoZSBtYWlsYm94IG1zZyB3aWxsIGJlIHJ1aW5lZC9yZXNldGVkIGJ5DQogCSAqIHRoZSBWRiBG
TFIuDQogCSAqDQotCSAqIHdlIGNhbiB1bmxvY2sgdGhlIGxvY2tfcmVzZXQgdG8gYWxsb3cgImFt
ZGdwdV9qb2JfdGltZWRvdXQiDQorCSAqIHdlIGNhbiB1bmxvY2sgdGhlIHJlc2V0X3NlbSB0byBh
bGxvdyAiYW1kZ3B1X2pvYl90aW1lZG91dCINCiAJICogdG8gcnVuIGdwdV9yZWNvdmVyKCkgYWZ0
ZXIgRkxSX05PVElGSUNBVElPTl9DTVBMIHJlY2VpdmVkDQogCSAqIHdoaWNoIG1lYW5zIGhvc3Qg
c2lkZSBoYWQgZmluaXNoZWQgdGhpcyBWRidzIEZMUi4NCiAJICovDQotCWxvY2tlZCA9IG11dGV4
X3RyeWxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOw0KLQlpZiAobG9ja2VkKQ0KLQkJYWRldi0+aW5f
Z3B1X3Jlc2V0ID0gdHJ1ZTsNCi0NCisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAlk
byB7DQogCQlpZiAoeGdwdV9haV9tYWlsYm94X3BlZWtfbXNnKGFkZXYpID09IElESF9GTFJfTk9U
SUZJQ0FUSU9OX0NNUEwpDQogCQkJZ290byBmbHJfZG9uZTsNCkBAIC0yNjEsMTAgKzI1Nyw3IEBA
IHN0YXRpYyB2b2lkIHhncHVfYWlfbWFpbGJveF9mbHJfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3Qg
KndvcmspDQogCX0gd2hpbGUgKHRpbWVvdXQgPiAxKTsNCiANCiBmbHJfZG9uZToNCi0JaWYgKGxv
Y2tlZCkgew0KLQkJYWRldi0+aW5fZ3B1X3Jlc2V0ID0gZmFsc2U7DQotCQltdXRleF91bmxvY2so
JmFkZXYtPmxvY2tfcmVzZXQpOw0KLQl9DQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQog
DQogCS8qIFRyaWdnZXIgcmVjb3ZlcnkgZm9yIHdvcmxkIHN3aXRjaCBmYWlsdXJlIGlmIG5vIFRE
UiAqLw0KIAlpZiAoYW1kZ3B1X2RldmljZV9zaG91bGRfcmVjb3Zlcl9ncHUoYWRldikNCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9udi5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvbXhncHVfbnYuYw0KaW5kZXggY2UyYmYxZmI3OWVkLi42ZjU1MTcy
ZTgzMzcgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9udi5j
DQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9udi5jDQpAQCAtMjU5LDIw
ICsyNTksMTYgQEAgc3RhdGljIHZvaWQgeGdwdV9udl9tYWlsYm94X2Zscl93b3JrKHN0cnVjdCB3
b3JrX3N0cnVjdCAqd29yaykNCiAJc3RydWN0IGFtZGdwdV92aXJ0ICp2aXJ0ID0gY29udGFpbmVy
X29mKHdvcmssIHN0cnVjdCBhbWRncHVfdmlydCwgZmxyX3dvcmspOw0KIAlzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiA9IGNvbnRhaW5lcl9vZih2aXJ0LCBzdHJ1Y3QgYW1kZ3B1X2RldmljZSwg
dmlydCk7DQogCWludCB0aW1lb3V0ID0gTlZfTUFJTEJPWF9QT0xMX0ZMUl9USU1FRE9VVDsNCi0J
aW50IGxvY2tlZDsNCiANCiAJLyogYmxvY2sgYW1kZ3B1X2dwdV9yZWNvdmVyIHRpbGwgbXNnIEZM
UiBDT01QTEVURSByZWNlaXZlZCwNCiAJICogb3RoZXJ3aXNlIHRoZSBtYWlsYm94IG1zZyB3aWxs
IGJlIHJ1aW5lZC9yZXNldGVkIGJ5DQogCSAqIHRoZSBWRiBGTFIuDQogCSAqDQotCSAqIHdlIGNh
biB1bmxvY2sgdGhlIGxvY2tfcmVzZXQgdG8gYWxsb3cgImFtZGdwdV9qb2JfdGltZWRvdXQiDQor
CSAqIHdlIGNhbiB1bmxvY2sgdGhlIHJlc2V0X3NlbSB0byBhbGxvdyAiYW1kZ3B1X2pvYl90aW1l
ZG91dCINCiAJICogdG8gcnVuIGdwdV9yZWNvdmVyKCkgYWZ0ZXIgRkxSX05PVElGSUNBVElPTl9D
TVBMIHJlY2VpdmVkDQogCSAqIHdoaWNoIG1lYW5zIGhvc3Qgc2lkZSBoYWQgZmluaXNoZWQgdGhp
cyBWRidzIEZMUi4NCiAJICovDQotCWxvY2tlZCA9IG11dGV4X3RyeWxvY2soJmFkZXYtPmxvY2tf
cmVzZXQpOw0KLQlpZiAobG9ja2VkKQ0KLQkJYWRldi0+aW5fZ3B1X3Jlc2V0ID0gdHJ1ZTsNCi0N
CisJZG93bl9yZWFkKCZhZGV2LT5yZXNldF9zZW0pOw0KIAlkbyB7DQogCQlpZiAoeGdwdV9udl9t
YWlsYm94X3BlZWtfbXNnKGFkZXYpID09IElESF9GTFJfTk9USUZJQ0FUSU9OX0NNUEwpDQogCQkJ
Z290byBmbHJfZG9uZTsNCkBAIC0yODIsMTAgKzI3OCw3IEBAIHN0YXRpYyB2b2lkIHhncHVfbnZf
bWFpbGJveF9mbHJfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspDQogCX0gd2hpbGUgKHRp
bWVvdXQgPiAxKTsNCiANCiBmbHJfZG9uZToNCi0JaWYgKGxvY2tlZCkgew0KLQkJYWRldi0+aW5f
Z3B1X3Jlc2V0ID0gZmFsc2U7DQotCQltdXRleF91bmxvY2soJmFkZXYtPmxvY2tfcmVzZXQpOw0K
LQl9DQorCXVwX3JlYWQoJmFkZXYtPnJlc2V0X3NlbSk7DQogDQogCS8qIFRyaWdnZXIgcmVjb3Zl
cnkgZm9yIHdvcmxkIHN3aXRjaCBmYWlsdXJlIGlmIG5vIFREUiAqLw0KIAlpZiAoYW1kZ3B1X2Rl
dmljZV9zaG91bGRfcmVjb3Zlcl9ncHUoYWRldikNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2FtZGtmZC9rZmRfZGV2aWNlX3F1ZXVlX21hbmFnZXIuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1ka2ZkL2tmZF9kZXZpY2VfcXVldWVfbWFuYWdlci5jDQppbmRleCBkZDU1MDAyNWQx
YzEuLjBiNTQwOWNlZGU1MiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1ka2Zk
L2tmZF9kZXZpY2VfcXVldWVfbWFuYWdlci5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGtmZC9rZmRfZGV2aWNlX3F1ZXVlX21hbmFnZXIuYw0KQEAgLTMwNCwxNSArMzA0LDE3IEBAIHN0
YXRpYyB2b2lkIGRlYWxsb2NhdGVfdm1pZChzdHJ1Y3QgZGV2aWNlX3F1ZXVlX21hbmFnZXIgKmRx
bSwNCiAJCQkJc3RydWN0IHFjbV9wcm9jZXNzX2RldmljZSAqcXBkLA0KIAkJCQlzdHJ1Y3QgcXVl
dWUgKnEpDQogew0KLQkvKiBPbiBHRlggdjcsIENQIGRvZXNuJ3QgZmx1c2ggVEMgYXQgZGVxdWV1
ZSAqLw0KLQlpZiAocS0+ZGV2aWNlLT5kZXZpY2VfaW5mby0+YXNpY19mYW1pbHkgPT0gQ0hJUF9I
QVdBSUkpDQotCQlpZiAoZmx1c2hfdGV4dHVyZV9jYWNoZV9ub2Nwc2NoKHEtPmRldmljZSwgcXBk
KSkNCi0JCQlwcl9lcnIoIkZhaWxlZCB0byBmbHVzaCBUQ1xuIik7DQorCWlmICghZHFtLT5pc19y
ZXNldHRpbmcpIHsNCisJCS8qIE9uIEdGWCB2NywgQ1AgZG9lc24ndCBmbHVzaCBUQyBhdCBkZXF1
ZXVlICovDQorCQlpZiAocS0+ZGV2aWNlLT5kZXZpY2VfaW5mby0+YXNpY19mYW1pbHkgPT0gQ0hJ
UF9IQVdBSUkpDQorCQkJaWYgKGZsdXNoX3RleHR1cmVfY2FjaGVfbm9jcHNjaChxLT5kZXZpY2Us
IHFwZCkpDQorCQkJCXByX2VycigiRmFpbGVkIHRvIGZsdXNoIFRDXG4iKTsNCiANCi0Ja2ZkX2Zs
dXNoX3RsYihxcGRfdG9fcGRkKHFwZCkpOw0KKwkJa2ZkX2ZsdXNoX3RsYihxcGRfdG9fcGRkKHFw
ZCkpOw0KIA0KLQkvKiBSZWxlYXNlIHRoZSB2bWlkIG1hcHBpbmcgKi8NCi0Jc2V0X3Bhc2lkX3Zt
aWRfbWFwcGluZyhkcW0sIDAsIHFwZC0+dm1pZCk7DQorCQkvKiBSZWxlYXNlIHRoZSB2bWlkIG1h
cHBpbmcgKi8NCisJCXNldF9wYXNpZF92bWlkX21hcHBpbmcoZHFtLCAwLCBxcGQtPnZtaWQpOw0K
Kwl9DQogCWRxbS0+dm1pZF9wYXNpZFtxcGQtPnZtaWRdID0gMDsNCiANCiAJcXBkLT52bWlkID0g
MDsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGtmZC9rZmRfcHJvY2Vzcy5j
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRrZmQva2ZkX3Byb2Nlc3MuYw0KaW5kZXggMDEzYzJi
MDE4ZWRjLi43MWJlODk3ZDRjMmEgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGtmZC9rZmRfcHJvY2Vzcy5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGtmZC9rZmRf
cHJvY2Vzcy5jDQpAQCAtMTU1MSw2ICsxNTUxLDEwIEBAIGludCBrZmRfcmVzZXJ2ZWRfbWVtX21t
YXAoc3RydWN0IGtmZF9kZXYgKmRldiwgc3RydWN0IGtmZF9wcm9jZXNzICpwcm9jZXNzLA0KIHZv
aWQga2ZkX2ZsdXNoX3RsYihzdHJ1Y3Qga2ZkX3Byb2Nlc3NfZGV2aWNlICpwZGQpDQogew0KIAlz
dHJ1Y3Qga2ZkX2RldiAqZGV2ID0gcGRkLT5kZXY7DQorCXN0cnVjdCBkZXZpY2VfcXVldWVfbWFu
YWdlciAqZHFtID0gZGV2LT5kcW07DQorDQorCWlmIChkcW0tPmlzX3Jlc2V0dGluZykNCisJCXJl
dHVybjsNCiANCiAJaWYgKGRldi0+ZHFtLT5zY2hlZF9wb2xpY3kgPT0gS0ZEX1NDSEVEX1BPTElD
WV9OT19IV1MpIHsNCiAJCS8qIE5vdGhpbmcgdG8gZmx1c2ggdW50aWwgYSBWTUlEIGlzIGFzc2ln
bmVkLCB3aGljaA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRn
cHVfZG0vYW1kZ3B1X2RtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2Rt
L2FtZGdwdV9kbS5jDQppbmRleCBiNGUxMjBlOTU0MzguLjQyNjM0ZmZiOWM2MiAxMDA2NDQNCi0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMNCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9hbWRncHVfZG0vYW1kZ3B1X2RtLmMNCkBA
IC0xNjQwLDcgKzE2NDAsNyBAQCBzdGF0aWMgaW50IGRtX3N1c3BlbmQodm9pZCAqaGFuZGxlKQ0K
IAlzdHJ1Y3QgYW1kZ3B1X2Rpc3BsYXlfbWFuYWdlciAqZG0gPSAmYWRldi0+ZG07DQogCWludCBy
ZXQgPSAwOw0KIA0KLQlpZiAoYWRldi0+aW5fZ3B1X3Jlc2V0KSB7DQorCWlmIChhbWRncHVfaW5f
cmVzZXQoYWRldikpIHsNCiAJCW11dGV4X2xvY2soJmRtLT5kY19sb2NrKTsNCiAJCWRtLT5jYWNo
ZWRfZGNfc3RhdGUgPSBkY19jb3B5X3N0YXRlKGRtLT5kYy0+Y3VycmVudF9zdGF0ZSk7DQogDQpA
QCAtMTgyNiw3ICsxODI2LDcgQEAgc3RhdGljIGludCBkbV9yZXN1bWUodm9pZCAqaGFuZGxlKQ0K
IAlzdHJ1Y3QgZGNfc3RhdGUgKmRjX3N0YXRlOw0KIAlpbnQgaSwgciwgajsNCiANCi0JaWYgKGFk
ZXYtPmluX2dwdV9yZXNldCkgew0KKwlpZiAoYW1kZ3B1X2luX3Jlc2V0KGFkZXYpKSB7DQogCQlk
Y19zdGF0ZSA9IGRtLT5jYWNoZWRfZGNfc3RhdGU7DQogDQogCQlyID0gZG1fZG11Yl9od19pbml0
KGFkZXYpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZGdw
dV9zbXUuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUuYw0KaW5k
ZXggZmU0OTQ4YWE2NjJmLi5kZDA4MjBlZjBmNWYgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS9hbWRncHVfc211LmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
cG93ZXJwbGF5L2FtZGdwdV9zbXUuYw0KQEAgLTEzNDEsNyArMTM0MSw3IEBAIHN0YXRpYyBpbnQg
c211X2Rpc2FibGVfZHBtcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkNCiAJdWludDY0X3QgZmVh
dHVyZXNfdG9fZGlzYWJsZTsNCiAJaW50IHJldCA9IDA7DQogCWJvb2wgdXNlX2JhY28gPSAhc211
LT5pc19hcHUgJiYNCi0JCSgoYWRldi0+aW5fZ3B1X3Jlc2V0ICYmDQorCQkoKGFtZGdwdV9pbl9y
ZXNldChhZGV2KSAmJg0KIAkJICAoYW1kZ3B1X2FzaWNfcmVzZXRfbWV0aG9kKGFkZXYpID09IEFN
RF9SRVNFVF9NRVRIT0RfQkFDTykpIHx8DQogCQkgKChhZGV2LT5pbl9ydW5wbSB8fCBhZGV2LT5p
bl9oaWJlcm5hdGUpICYmIGFtZGdwdV9hc2ljX3N1cHBvcnRzX2JhY28oYWRldikpKTsNCiANCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMjBfaHdt
Z3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL3ZlZ2EyMF9od21nci5j
DQppbmRleCAzYjg4Mzk2NDE3NzAuLmJhY2JlMmZhMWY5YSAxMDA2NDQNCi0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL3ZlZ2EyMF9od21nci5jDQorKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMjBfaHdtZ3IuYw0KQEAgLTQ4NCw3ICs0
ODQsNyBAQCBzdGF0aWMgaW50IHZlZ2EyMF9zZXR1cF9hc2ljX3Rhc2soc3RydWN0IHBwX2h3bWdy
ICpod21ncikNCiB7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICopKGh3bWdyLT5hZGV2KTsNCiAJaW50IHJldCA9IDA7DQotCWJvb2wgdXNlX2Jh
Y28gPSAoYWRldi0+aW5fZ3B1X3Jlc2V0ICYmDQorCWJvb2wgdXNlX2JhY28gPSAoYW1kZ3B1X2lu
X3Jlc2V0KGFkZXYpICYmDQogCQkJIChhbWRncHVfYXNpY19yZXNldF9tZXRob2QoYWRldikgPT0g
QU1EX1JFU0VUX01FVEhPRF9CQUNPKSkgfHwNCiAJCShhZGV2LT5pbl9ydW5wbSAmJiBhbWRncHVf
YXNpY19zdXBwb3J0c19iYWNvKGFkZXYpKTsNCiANCi0tIA0KMi4xNy4xDQpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwphbWQtZ2Z4IG1haWxpbmcgbGlzdAph
bWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9y
Zy9tYWlsbWFuL2xpc3RpbmZvL2FtZC1nZngK
