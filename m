Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 72D191F1263
	for <lists+amd-gfx@lfdr.de>; Mon,  8 Jun 2020 06:59:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A50126E49B;
	Mon,  8 Jun 2020 04:59:52 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM02-BL2-obe.outbound.protection.outlook.com
 (mail-eopbgr750050.outbound.protection.outlook.com [40.107.75.50])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B02AD6E471
 for <amd-gfx@lists.freedesktop.org>; Mon,  8 Jun 2020 04:59:51 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ee8cZ9HFV+K+rmEbsiclwi8DkBerTBX/YXXf7whoERUdQj0rTOnV18wCeElBYwrNhwmonAiEsUvVfE1BWHLv8+jCXxwsTSqRm+B+YoLApdD/iQ+Ue6GX/Azmg6r+Ij6xBU5uh5x+2LRFpAFQ7nDM5mjvx4gjmkcPWELdTLek7PUHXgzYLNPnOlNF4BFk1t5AARjlTl4UJCjfxR24WCI26QMnAZRPHJ6x0N8oW62P1KJPmuezcI+PuKfJf1zw/twyKX+xBBbL/hZB75UZ1te504zEixuFDn0Aqa5S9lav6IF6f8pV+7aVaCP0MdTlLZn+NosskEiJhrVHq1HgF8b2IQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=eRBOLx5A5FTm8/tfFBRm1hNlneyVmDoQ2EJi20b3fE0=;
 b=dymW9qAVLftqCAFc5nnVXpTvg8y7aflCnS6qZVkMMNw5Yucp445qUHwcyjtWKYVVtvmECjgnSDMEAVwt2dHgwfW+iQoBYUo1bq1b9oZgaUJBjOn+x3sd+105FnK81AkFKxf3V9eHdjdgtkGgP5zG4PFEAENp5AuhlWI8WK9ZK54SOPGNJMLPXG5sXWvIpAQQPQ8mutivZgVnOHaLFl5MMy6l0x5vuwt+dQlujmb/QLZHoINVK9Iom8fCNzEbYqazvMG69vGg0UesKQ61tAMOwVjC1LMdwcmOOqWRQvj3i4Nhj4bXRUKt1SUYm1Nft0J1fkxe8t3VwhF43afbXF2DMg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=none (sender ip is
 165.204.84.17) smtp.rcpttodomain=lists.freedesktop.org smtp.mailfrom=amd.com; 
 dmarc=permerror action=none header.from=amd.com; dkim=none (message not
 signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=eRBOLx5A5FTm8/tfFBRm1hNlneyVmDoQ2EJi20b3fE0=;
 b=U42Nu90GOUEq/GC2mPy5ql0tErbw2rKyPQOqFhMM80GFsIR7sN2IakitFCJYhvMXyL9iDatqjZo4IW0fsPiBEik24gwtLbenTFO1IrUvOPKunvZ+ZJ8+1hczTcBywY9iYYAwD1/bHrpUNT3gx8hrCDfjkm7mtXAmtgNMEn09hmc=
Received: from MWHPR04CA0036.namprd04.prod.outlook.com (2603:10b6:300:ee::22)
 by MN2PR12MB3583.namprd12.prod.outlook.com (2603:10b6:208:c5::12)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3066.18; Mon, 8 Jun
 2020 04:59:48 +0000
Received: from CO1NAM11FT040.eop-nam11.prod.protection.outlook.com
 (2603:10b6:300:ee:cafe::cc) by MWHPR04CA0036.outlook.office365.com
 (2603:10b6:300:ee::22) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.3066.18 via Frontend
 Transport; Mon, 8 Jun 2020 04:59:47 +0000
X-MS-Exchange-Authentication-Results: spf=none (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXMB01.amd.com (165.204.84.17) by
 CO1NAM11FT040.mail.protection.outlook.com (10.13.174.140) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.3066.18 via Frontend Transport; Mon, 8 Jun 2020 04:59:47 +0000
Received: from SATLEXMB05.amd.com (10.181.40.146) by SATLEXMB01.amd.com
 (10.181.40.142) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Sun, 7 Jun 2020
 23:59:47 -0500
Received: from SATLEXMB02.amd.com (10.181.40.143) by SATLEXMB05.amd.com
 (10.181.40.146) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1713.5; Sun, 7 Jun 2020
 23:59:46 -0500
Received: from localhost.localdomain (10.180.168.240) by SATLEXMB02.amd.com
 (10.181.40.143) with Microsoft SMTP Server id 15.1.1713.5 via Frontend
 Transport; Sun, 7 Jun 2020 23:59:46 -0500
From: Qingqing Zhuo <qingqing.zhuo@amd.com>
To: <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 23/28] drm/amd/display: change global buffer to local buffer
Date: Mon, 8 Jun 2020 00:59:21 -0400
Message-ID: <20200608045926.17197-24-qingqing.zhuo@amd.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200608045926.17197-1-qingqing.zhuo@amd.com>
References: <20200608045926.17197-1-qingqing.zhuo@amd.com>
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; CTRY:US; LANG:en; SCL:1; SRV:;
 IPV:NLI; SFV:NSPM; H:SATLEXMB01.amd.com; PTR:InfoDomainNonexistent; CAT:NONE;
 SFTY:;
 SFS:(4636009)(346002)(396003)(39860400002)(136003)(376002)(46966005)(6666004)(86362001)(316002)(81166007)(2906002)(70206006)(186003)(8676002)(82740400003)(26005)(70586007)(54906003)(47076004)(336012)(356005)(5660300002)(8936002)(6916009)(478600001)(1076003)(30864003)(83380400001)(36756003)(426003)(2616005)(4326008)(82310400002)(44832011);
 DIR:OUT; SFP:1101; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: e59b4cbc-89fb-4c75-52cb-08d80b68c49e
X-MS-TrafficTypeDiagnostic: MN2PR12MB3583:
X-Microsoft-Antispam-PRVS: <MN2PR12MB3583C104FB1824BF224E5941FB850@MN2PR12MB3583.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-Forefront-PRVS: 042857DBB5
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: fmeGnOQhEzwZKULVLDKLUXwPoSdCbNqu2EUVuX3MnX3yqbN77AxM5HOo/4/2JIvqmnm1JBoauf++vaLHa+Fx6tRYV3/0zfjj9Ri5fPPy1nK018mQvV0WQTup3I0O81PSQL3GHHgogv8rJahNtPvvSLTCwk10etMc4L0nyTc5h+IwOx/fKqRqdaRW9tMwc9JDL6tOVR3I+01YPaMRhaiHFrfPlUciPor6wTnhIhB7kHXcmmWG5PNfHtdu27r1dYOrT2LhqrHq3wAZeYV7eJIf0vwoUSF9U1qIP0PLTlPnSDUocSv9eXhpOeNrFURoKUw1HnV/PnrSxqjAxb+KWgbgmIdJ/7tFeTVfO8c76RKvNSQyChZRgnEuu1wIH28cMzPbk3L8cmZ+jgPJUoLokh6EZw==
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 08 Jun 2020 04:59:47.4540 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: e59b4cbc-89fb-4c75-52cb-08d80b68c49e
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXMB01.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB3583
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lewis Huang <Lewis.Huang@amd.com>, Sunpeng.Li@amd.com,
 Harry.Wentland@amd.com, Rodrigo.Siqueira@amd.com, Aurabindo.Pillai@amd.com,
 Bhawanpreet.Lakha@amd.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

RnJvbTogTGV3aXMgSHVhbmcgPExld2lzLkh1YW5nQGFtZC5jb20+CgpbV2h5XQpNdWx0aS1hZGFw
dGVyIGNhbGN1bGF0ZSByZWdhbW1hIHRhYmxlIGF0IHRoZSBzYW1lIHRpbWUuClR3byB0aHJlYWQg
dXNlZCB0aGUgc2FtZSBnbG9iYWwgdmFyaWFibGUgY2F1c2UgcmFjZQpjb25kaXRpb24uCgpbSG93
XQpDaGFuZ2UgZ2xvYmFsIGJ1ZmZlciB0byBsb2NhbCBidWZmZXIKClNpZ25lZC1vZmYtYnk6IExl
d2lzIEh1YW5nIDxMZXdpcy5IdWFuZ0BhbWQuY29tPgpSZXZpZXdlZC1ieTogQXJpYyBDeXIgPEFy
aWMuQ3lyQGFtZC5jb20+CkFja2VkLWJ5OiBRaW5ncWluZyBaaHVvIDxxaW5ncWluZy56aHVvQGFt
ZC5jb20+Ci0tLQogLi4uL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVfZG1fY29sb3IuYyAg
IHwgIDEwICstCiAuLi4vZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvTWFrZWZpbGUgICAg
fCAgIDQgKwogLi4uL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvY29sb3JfZ2FtbWEuYyAgIHwg
MTE1ICsrKysrKysrKystLS0tLS0tLQogLi4uL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvY29s
b3JfZ2FtbWEuaCAgIHwgIDE4ICsrLQogLi4uL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvY29s
b3JfdGFibGUuYyAgIHwgIDQ4ICsrKysrKysrCiAuLi4vYW1kL2Rpc3BsYXkvbW9kdWxlcy9jb2xv
ci9jb2xvcl90YWJsZS5oICAgfCAgNDcgKysrKysrKwogNiBmaWxlcyBjaGFuZ2VkLCAxODMgaW5z
ZXJ0aW9ucygrKSwgNTkgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9n
cHUvZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvY29sb3JfdGFibGUuYwogY3JlYXRlIG1v
ZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9tb2R1bGVzL2NvbG9yL2NvbG9y
X3RhYmxlLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1
X2RtL2FtZGdwdV9kbV9jb2xvci5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdw
dV9kbS9hbWRncHVfZG1fY29sb3IuYwppbmRleCA0ZGZiNmI1NWJiMmUuLmIzMjFmZjY1NGRmNCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L2FtZGdwdV9kbS9hbWRncHVf
ZG1fY29sb3IuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvYW1kZ3B1X2RtL2Ft
ZGdwdV9kbV9jb2xvci5jCkBAIC0xOTUsMTAgKzE5NSwxMyBAQCBzdGF0aWMgaW50IF9fc2V0X2xl
Z2FjeV90ZihzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqZnVuYywKIAkJCSAgIGJvb2wgaGFzX3Jv
bSkKIHsKIAlzdHJ1Y3QgZGNfZ2FtbWEgKmdhbW1hID0gTlVMTDsKKwlzdHJ1Y3QgY2FsY3VsYXRl
X2J1ZmZlciBjYWxfYnVmZmVyID0gezB9OwogCWJvb2wgcmVzOwogCiAJQVNTRVJUKGx1dCAmJiBs
dXRfc2l6ZSA9PSBNQVhfQ09MT1JfTEVHQUNZX0xVVF9FTlRSSUVTKTsKIAorCWNhbF9idWZmZXIu
YnVmZmVyX2luZGV4ID0gLTE7CisKIAlnYW1tYSA9IGRjX2NyZWF0ZV9nYW1tYSgpOwogCWlmICgh
Z2FtbWEpCiAJCXJldHVybiAtRU5PTUVNOwpAQCAtMjA4LDcgKzIxMSw3IEBAIHN0YXRpYyBpbnQg
X19zZXRfbGVnYWN5X3RmKHN0cnVjdCBkY190cmFuc2Zlcl9mdW5jICpmdW5jLAogCV9fZHJtX2x1
dF90b19kY19nYW1tYShsdXQsIGdhbW1hLCB0cnVlKTsKIAogCXJlcyA9IG1vZF9jb2xvcl9jYWxj
dWxhdGVfcmVnYW1tYV9wYXJhbXMoZnVuYywgZ2FtbWEsIHRydWUsIGhhc19yb20sCi0JCQkJCQkg
TlVMTCk7CisJCQkJCQkgTlVMTCwgJmNhbF9idWZmZXIpOwogCiAJZGNfZ2FtbWFfcmVsZWFzZSgm
Z2FtbWEpOwogCkBAIC0yMjEsMTAgKzIyNCwxMyBAQCBzdGF0aWMgaW50IF9fc2V0X291dHB1dF90
ZihzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqZnVuYywKIAkJCSAgIGJvb2wgaGFzX3JvbSkKIHsK
IAlzdHJ1Y3QgZGNfZ2FtbWEgKmdhbW1hID0gTlVMTDsKKwlzdHJ1Y3QgY2FsY3VsYXRlX2J1ZmZl
ciBjYWxfYnVmZmVyID0gezB9OwogCWJvb2wgcmVzOwogCiAJQVNTRVJUKGx1dCAmJiBsdXRfc2l6
ZSA9PSBNQVhfQ09MT1JfTFVUX0VOVFJJRVMpOwogCisJY2FsX2J1ZmZlci5idWZmZXJfaW5kZXgg
PSAtMTsKKwogCWdhbW1hID0gZGNfY3JlYXRlX2dhbW1hKCk7CiAJaWYgKCFnYW1tYSkKIAkJcmV0
dXJuIC1FTk9NRU07CkBAIC0yNDgsNyArMjU0LDcgQEAgc3RhdGljIGludCBfX3NldF9vdXRwdXRf
dGYoc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKmZ1bmMsCiAJCSAqLwogCQlnYW1tYS0+dHlwZSA9
IEdBTU1BX0NTX1RGTV8xRDsKIAkJcmVzID0gbW9kX2NvbG9yX2NhbGN1bGF0ZV9yZWdhbW1hX3Bh
cmFtcyhmdW5jLCBnYW1tYSwgZmFsc2UsCi0JCQkJCQkJIGhhc19yb20sIE5VTEwpOworCQkJCQkJ
CSBoYXNfcm9tLCBOVUxMLCAmY2FsX2J1ZmZlcik7CiAJfQogCiAJZGNfZ2FtbWFfcmVsZWFzZSgm
Z2FtbWEpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMv
Y29sb3IvTWFrZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvbW9kdWxlcy9jb2xv
ci9NYWtlZmlsZQppbmRleCA2NWMzM2E3Njk1MWEuLjNlZTdmMjdmZjkzYiAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvTWFrZWZpbGUKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvTWFrZWZpbGUKQEAgLTI1
LDYgKzI1LDEwIEBACiAKIE1PRF9DT0xPUiA9IGNvbG9yX2dhbW1hLm8KIAoraWZkZWYgQ09ORklH
X0RSTV9BTURfRENfRENOCitNT0RfQ09MT1IgKz0gY29sb3JfdGFibGUubworZW5kaWYKKwogQU1E
X0RBTF9NT0RfQ09MT1IgPSAkKGFkZHByZWZpeCAkKEFNRERBTFBBVEgpL21vZHVsZXMvY29sb3Iv
LCQoTU9EX0NPTE9SKSkKICMkKGluZm8gKioqKioqKioqKioqICBEQUwgQ09MT1IgTU9EVUxFIE1B
S0VGSUxFICoqKioqKioqKioqKikKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9k
aXNwbGF5L21vZHVsZXMvY29sb3IvY29sb3JfZ2FtbWEuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
ZGlzcGxheS9tb2R1bGVzL2NvbG9yL2NvbG9yX2dhbW1hLmMKaW5kZXggOTQzMWI0OGFlY2I0Li4w
NWYxNjUxYjcxNzEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9tb2R1
bGVzL2NvbG9yL2NvbG9yX2dhbW1hLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5
L21vZHVsZXMvY29sb3IvY29sb3JfZ2FtbWEuYwpAQCAtMzAsMjAgKzMwLDEwIEBACiAjaW5jbHVk
ZSAib3BwLmgiCiAjaW5jbHVkZSAiY29sb3JfZ2FtbWEuaCIKIAotI2RlZmluZSBOVU1fUFRTX0lO
X1JFR0lPTiAxNgotI2RlZmluZSBOVU1fUkVHSU9OUyAzMgotI2RlZmluZSBNQVhfSFdfUE9JTlRT
IChOVU1fUFRTX0lOX1JFR0lPTipOVU1fUkVHSU9OUykKLQogc3RhdGljIHN0cnVjdCBod194X3Bv
aW50IGNvb3JkaW5hdGVzX3hbTUFYX0hXX1BPSU5UUyArIDJdOwogCi1zdGF0aWMgc3RydWN0IGZp
eGVkMzFfMzIgcHFfdGFibGVbTUFYX0hXX1BPSU5UUyArIDJdOwotc3RhdGljIHN0cnVjdCBmaXhl
ZDMxXzMyIGRlX3BxX3RhYmxlW01BWF9IV19QT0lOVFMgKyAyXTsKLQogLy8gdGhlc2UgYXJlIGhl
bHBlcnMgZm9yIGNhbGN1bGF0aW9ucyB0byByZWR1Y2Ugc3RhY2sgdXNhZ2UKIC8vIGRvIG5vdCBk
ZXBlbmQgb24gdGhlc2UgYmVpbmcgcHJlc2VydmVkIGFjcm9zcyBjYWxscwotc3RhdGljIHN0cnVj
dCBmaXhlZDMxXzMyIHNjcmF0Y2hfMTsKLXN0YXRpYyBzdHJ1Y3QgZml4ZWQzMV8zMiBzY3JhdGNo
XzI7Ci1zdGF0aWMgc3RydWN0IHRyYW5zbGF0ZV9mcm9tX2xpbmVhcl9zcGFjZV9hcmdzIHNjcmF0
Y2hfZ2FtbWFfYXJnczsKIAogLyogSGVscGVyIHRvIG9wdGltaXplIGdhbW1hIGNhbGN1bGF0aW9u
LCBvbmx5IHVzZSBpbiB0cmFuc2xhdGVfZnJvbV9saW5lYXIsIGluCiAgKiBwYXJ0aWN1bGFyIHRo
ZSBkY19maXhwdF9wb3cgZnVuY3Rpb24gd2hpY2ggaXMgdmVyeSBleHBlbnNpdmUKQEAgLTU2LDkg
KzQ2LDYgQEAgc3RhdGljIHN0cnVjdCB0cmFuc2xhdGVfZnJvbV9saW5lYXJfc3BhY2VfYXJncyBz
Y3JhdGNoX2dhbW1hX2FyZ3M7CiAgKiBqdXN0IG11bHRpcGx5IHdpdGggMl5nYW1tYSB3aGljaCBj
YW4gYmUgY29tcHV0ZWQgb25jZSwgYW5kIHNhdmUgdGhlIHJlc3VsdCBzbyB3ZQogICogcmVjdXJz
aXZlbHkgY29tcHV0ZSBhbGwgdGhlIHZhbHVlcy4KICAqLwotc3RhdGljIHN0cnVjdCBmaXhlZDMx
XzMyIHBvd19idWZmZXJbTlVNX1BUU19JTl9SRUdJT05dOwotc3RhdGljIHN0cnVjdCBmaXhlZDMx
XzMyIGdhbW1hX29mXzI7IC8vIDJeZ2FtbWEKLWludCBwb3dfYnVmZmVyX3B0ciA9IC0xOwogCQkJ
CQkJCQkJCS8qc1JHQgkgNzA5IDIuMiAyLjQgUDMqLwogc3RhdGljIGNvbnN0IGludDMyX3QgZ2Ft
bWFfbnVtZXJhdG9yMDFbXSA9IHsgMzEzMDgsCTE4MDAwMCwJMCwJMCwJMH07CiBzdGF0aWMgY29u
c3QgaW50MzJfdCBnYW1tYV9udW1lcmF0b3IwMltdID0geyAxMjkyMCwJNDUwMCwJMCwJMCwJMH07
CkBAIC02Niw5ICs1Myw2IEBAIHN0YXRpYyBjb25zdCBpbnQzMl90IGdhbW1hX251bWVyYXRvcjAz
W10gPSB7IDU1LAk5OSwJCTAsCTAsCTB9Owogc3RhdGljIGNvbnN0IGludDMyX3QgZ2FtbWFfbnVt
ZXJhdG9yMDRbXSA9IHsgNTUsCTk5LAkJMCwJMCwJMH07CiBzdGF0aWMgY29uc3QgaW50MzJfdCBn
YW1tYV9udW1lcmF0b3IwNVtdID0geyAyNDAwLAkyMjAwLAkyMjAwLCAyNDAwLCAyNjAwfTsKIAot
c3RhdGljIGJvb2wgcHFfaW5pdGlhbGl6ZWQ7IC8qID0gZmFsc2U7ICovCi1zdGF0aWMgYm9vbCBk
ZV9wcV9pbml0aWFsaXplZDsgLyogPSBmYWxzZTsgKi8KLQogLyogb25lLXRpbWUgc2V0dXAgb2Yg
WCBwb2ludHMgKi8KIHZvaWQgc2V0dXBfeF9wb2ludHNfZGlzdHJpYnV0aW9uKHZvaWQpCiB7CkBA
IC0yNTAsNiArMjM0LDggQEAgdm9pZCBwcmVjb21wdXRlX3BxKHZvaWQpCiAJc3RydWN0IGZpeGVk
MzFfMzIgc2NhbGluZ19mYWN0b3IgPQogCQkJZGNfZml4cHRfZnJvbV9mcmFjdGlvbig4MCwgMTAw
MDApOwogCisJc3RydWN0IGZpeGVkMzFfMzIgKnBxX3RhYmxlID0gbW9kX2NvbG9yX2dldF90YWJs
ZSh0eXBlX3BxX3RhYmxlKTsKKwogCS8qIHBvdyBmdW5jdGlvbiBoYXMgcHJvYmxlbXMgd2l0aCBh
cmd1bWVudHMgdG9vIHNtYWxsICovCiAJZm9yIChpID0gMDsgaSA8IDMyOyBpKyspCiAJCXBxX3Rh
YmxlW2ldID0gZGNfZml4cHRfemVybzsKQEAgLTI2OSw3ICsyNTUsNyBAQCB2b2lkIHByZWNvbXB1
dGVfZGVfcHEodm9pZCkKIAl1aW50MzJfdCBiZWdpbl9pbmRleCwgZW5kX2luZGV4OwogCiAJc3Ry
dWN0IGZpeGVkMzFfMzIgc2NhbGluZ19mYWN0b3IgPSBkY19maXhwdF9mcm9tX2ludCgxMjUpOwot
CisJc3RydWN0IGZpeGVkMzFfMzIgKmRlX3BxX3RhYmxlID0gbW9kX2NvbG9yX2dldF90YWJsZSh0
eXBlX2RlX3BxX3RhYmxlKTsKIAkvKiBYIHBvaW50cyBpcyAyXi0yNSB0byAyXjcKIAkgKiBEZS1n
YW1tYSBYIGlzIDJeLTEyIHRvIDJeMCDigJMgd2UgYXJlIHNraXBwaW5nIGZpcnN0IC0xMi0oLTI1
KSA9IDEzIHJlZ2lvbnMKIAkgKi8KQEAgLTMzOSw2ICszMjUsOSBAQCBzdGF0aWMgc3RydWN0IGZp
eGVkMzFfMzIgdHJhbnNsYXRlX2Zyb21fbGluZWFyX3NwYWNlKAogewogCWNvbnN0IHN0cnVjdCBm
aXhlZDMxXzMyIG9uZSA9IGRjX2ZpeHB0X2Zyb21faW50KDEpOwogCisJc3RydWN0IGZpeGVkMzFf
MzIgc2NyYXRjaF8xLCBzY3JhdGNoXzI7CisJc3RydWN0IGNhbGN1bGF0ZV9idWZmZXIgKmNhbF9i
dWZmZXIgPSBhcmdzLT5jYWxfYnVmZmVyOworCiAJaWYgKGRjX2ZpeHB0X2xlKG9uZSwgYXJncy0+
YXJnKSkKIAkJcmV0dXJuIG9uZTsKIApAQCAtMzUyLDIxICszNDEsMjEgQEAgc3RhdGljIHN0cnVj
dCBmaXhlZDMxXzMyIHRyYW5zbGF0ZV9mcm9tX2xpbmVhcl9zcGFjZSgKIAogCQlyZXR1cm4gc2Ny
YXRjaF8xOwogCX0gZWxzZSBpZiAoZGNfZml4cHRfbGUoYXJncy0+YTAsIGFyZ3MtPmFyZykpIHsK
LQkJaWYgKHBvd19idWZmZXJfcHRyID09IDApIHsKLQkJCWdhbW1hX29mXzIgPSBkY19maXhwdF9w
b3coZGNfZml4cHRfZnJvbV9pbnQoMiksCisJCWlmIChjYWxfYnVmZmVyLT5idWZmZXJfaW5kZXgg
PT0gMCkgeworCQkJY2FsX2J1ZmZlci0+Z2FtbWFfb2ZfMiA9IGRjX2ZpeHB0X3BvdyhkY19maXhw
dF9mcm9tX2ludCgyKSwKIAkJCQkJZGNfZml4cHRfcmVjaXAoYXJncy0+Z2FtbWEpKTsKIAkJfQog
CQlzY3JhdGNoXzEgPSBkY19maXhwdF9hZGQob25lLCBhcmdzLT5hMyk7Ci0JCWlmIChwb3dfYnVm
ZmVyX3B0ciA8IDE2KQorCQlpZiAoY2FsX2J1ZmZlci0+YnVmZmVyX2luZGV4IDwgMTYpCiAJCQlz
Y3JhdGNoXzIgPSBkY19maXhwdF9wb3coYXJncy0+YXJnLAogCQkJCQlkY19maXhwdF9yZWNpcChh
cmdzLT5nYW1tYSkpOwogCQllbHNlCi0JCQlzY3JhdGNoXzIgPSBkY19maXhwdF9tdWwoZ2FtbWFf
b2ZfMiwKLQkJCQkJcG93X2J1ZmZlcltwb3dfYnVmZmVyX3B0ciUxNl0pOworCQkJc2NyYXRjaF8y
ID0gZGNfZml4cHRfbXVsKGNhbF9idWZmZXItPmdhbW1hX29mXzIsCisJCQkJCWNhbF9idWZmZXIt
PmJ1ZmZlcltjYWxfYnVmZmVyLT5idWZmZXJfaW5kZXglMTZdKTsKIAotCQlpZiAocG93X2J1ZmZl
cl9wdHIgIT0gLTEpIHsKLQkJCXBvd19idWZmZXJbcG93X2J1ZmZlcl9wdHIlMTZdID0gc2NyYXRj
aF8yOwotCQkJcG93X2J1ZmZlcl9wdHIrKzsKKwkJaWYgKGNhbF9idWZmZXItPmJ1ZmZlcl9pbmRl
eCAhPSAtMSkgeworCQkJY2FsX2J1ZmZlci0+YnVmZmVyW2NhbF9idWZmZXItPmJ1ZmZlcl9pbmRl
eCUxNl0gPSBzY3JhdGNoXzI7CisJCQljYWxfYnVmZmVyLT5idWZmZXJfaW5kZXgrKzsKIAkJfQog
CiAJCXNjcmF0Y2hfMSA9IGRjX2ZpeHB0X211bChzY3JhdGNoXzEsIHNjcmF0Y2hfMik7CkBAIC00
MTMsMTUgKzQwMiwxNyBAQCBzdGF0aWMgc3RydWN0IGZpeGVkMzFfMzIgdHJhbnNsYXRlX2Zyb21f
bGluZWFyX3NwYWNlX2xvbmcoCiAJCQlhcmdzLT5hMSk7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgZml4
ZWQzMV8zMiBjYWxjdWxhdGVfZ2FtbWEyMihzdHJ1Y3QgZml4ZWQzMV8zMiBhcmcsIGJvb2wgdXNl
X2VldGYpCitzdGF0aWMgc3RydWN0IGZpeGVkMzFfMzIgY2FsY3VsYXRlX2dhbW1hMjIoc3RydWN0
IGZpeGVkMzFfMzIgYXJnLCBib29sIHVzZV9lZXRmLCBzdHJ1Y3QgY2FsY3VsYXRlX2J1ZmZlciAq
Y2FsX2J1ZmZlcikKIHsKIAlzdHJ1Y3QgZml4ZWQzMV8zMiBnYW1tYSA9IGRjX2ZpeHB0X2Zyb21f
ZnJhY3Rpb24oMjIsIDEwKTsKKwlzdHJ1Y3QgdHJhbnNsYXRlX2Zyb21fbGluZWFyX3NwYWNlX2Fy
Z3Mgc2NyYXRjaF9nYW1tYV9hcmdzOwogCiAJc2NyYXRjaF9nYW1tYV9hcmdzLmFyZyA9IGFyZzsK
IAlzY3JhdGNoX2dhbW1hX2FyZ3MuYTAgPSBkY19maXhwdF96ZXJvOwogCXNjcmF0Y2hfZ2FtbWFf
YXJncy5hMSA9IGRjX2ZpeHB0X3plcm87CiAJc2NyYXRjaF9nYW1tYV9hcmdzLmEyID0gZGNfZml4
cHRfemVybzsKIAlzY3JhdGNoX2dhbW1hX2FyZ3MuYTMgPSBkY19maXhwdF96ZXJvOworCXNjcmF0
Y2hfZ2FtbWFfYXJncy5jYWxfYnVmZmVyID0gY2FsX2J1ZmZlcjsKIAlzY3JhdGNoX2dhbW1hX2Fy
Z3MuZ2FtbWEgPSBnYW1tYTsKIAogCWlmICh1c2VfZWV0ZikKQEAgLTQ2NywxNCArNDU4LDE4IEBA
IHN0YXRpYyBzdHJ1Y3QgZml4ZWQzMV8zMiB0cmFuc2xhdGVfdG9fbGluZWFyX3NwYWNlKAogc3Rh
dGljIHN0cnVjdCBmaXhlZDMxXzMyIHRyYW5zbGF0ZV9mcm9tX2xpbmVhcl9zcGFjZV9leCgKIAlz
dHJ1Y3QgZml4ZWQzMV8zMiBhcmcsCiAJc3RydWN0IGdhbW1hX2NvZWZmaWNpZW50cyAqY29lZmYs
Ci0JdWludDMyX3QgY29sb3JfaW5kZXgpCisJdWludDMyX3QgY29sb3JfaW5kZXgsCisJc3RydWN0
IGNhbGN1bGF0ZV9idWZmZXIgKmNhbF9idWZmZXIpCiB7CisJc3RydWN0IHRyYW5zbGF0ZV9mcm9t
X2xpbmVhcl9zcGFjZV9hcmdzIHNjcmF0Y2hfZ2FtbWFfYXJnczsKKwogCXNjcmF0Y2hfZ2FtbWFf
YXJncy5hcmcgPSBhcmc7CiAJc2NyYXRjaF9nYW1tYV9hcmdzLmEwID0gY29lZmYtPmEwW2NvbG9y
X2luZGV4XTsKIAlzY3JhdGNoX2dhbW1hX2FyZ3MuYTEgPSBjb2VmZi0+YTFbY29sb3JfaW5kZXhd
OwogCXNjcmF0Y2hfZ2FtbWFfYXJncy5hMiA9IGNvZWZmLT5hMltjb2xvcl9pbmRleF07CiAJc2Ny
YXRjaF9nYW1tYV9hcmdzLmEzID0gY29lZmYtPmEzW2NvbG9yX2luZGV4XTsKIAlzY3JhdGNoX2dh
bW1hX2FyZ3MuZ2FtbWEgPSBjb2VmZi0+dXNlcl9nYW1tYVtjb2xvcl9pbmRleF07CisJc2NyYXRj
aF9nYW1tYV9hcmdzLmNhbF9idWZmZXIgPSBjYWxfYnVmZmVyOwogCiAJcmV0dXJuIHRyYW5zbGF0
ZV9mcm9tX2xpbmVhcl9zcGFjZSgmc2NyYXRjaF9nYW1tYV9hcmdzKTsKIH0KQEAgLTc0MiwxMCAr
NzM3LDExIEBAIHN0YXRpYyB2b2lkIGJ1aWxkX3BxKHN0cnVjdCBwd2xfZmxvYXRfZGF0YV9leCAq
cmdiX3JlZ2FtbWEsCiAJc3RydWN0IGZpeGVkMzFfMzIgb3V0cHV0OwogCXN0cnVjdCBmaXhlZDMx
XzMyIHNjYWxpbmdfZmFjdG9yID0KIAkJCWRjX2ZpeHB0X2Zyb21fZnJhY3Rpb24oc2RyX3doaXRl
X2xldmVsLCAxMDAwMCk7CisJc3RydWN0IGZpeGVkMzFfMzIgKnBxX3RhYmxlID0gbW9kX2NvbG9y
X2dldF90YWJsZSh0eXBlX3BxX3RhYmxlKTsKIAotCWlmICghcHFfaW5pdGlhbGl6ZWQgJiYgc2Ry
X3doaXRlX2xldmVsID09IDgwKSB7CisJaWYgKCFtb2RfY29sb3JfaXNfdGFibGVfaW5pdCh0eXBl
X3BxX3RhYmxlKSAmJiBzZHJfd2hpdGVfbGV2ZWwgPT0gODApIHsKIAkJcHJlY29tcHV0ZV9wcSgp
OwotCQlwcV9pbml0aWFsaXplZCA9IHRydWU7CisJCW1vZF9jb2xvcl9zZXRfdGFibGVfaW5pdF9z
dGF0ZSh0eXBlX3BxX3RhYmxlLCB0cnVlKTsKIAl9CiAKIAkvKiBUT0RPOiBzdGFydCBpbmRleCBp
cyBmcm9tIHNlZ21lbnQgMl4tMjQsIHNraXBwaW5nIGZpcnN0IHNlZ21lbnQKQEAgLTc4NywxMiAr
NzgzLDEyIEBAIHN0YXRpYyB2b2lkIGJ1aWxkX2RlX3BxKHN0cnVjdCBwd2xfZmxvYXRfZGF0YV9l
eCAqZGVfcHEsCiB7CiAJdWludDMyX3QgaTsKIAlzdHJ1Y3QgZml4ZWQzMV8zMiBvdXRwdXQ7Ci0K
KwlzdHJ1Y3QgZml4ZWQzMV8zMiAqZGVfcHFfdGFibGUgPSBtb2RfY29sb3JfZ2V0X3RhYmxlKHR5
cGVfZGVfcHFfdGFibGUpOwogCXN0cnVjdCBmaXhlZDMxXzMyIHNjYWxpbmdfZmFjdG9yID0gZGNf
Zml4cHRfZnJvbV9pbnQoMTI1KTsKIAotCWlmICghZGVfcHFfaW5pdGlhbGl6ZWQpIHsKKwlpZiAo
IW1vZF9jb2xvcl9pc190YWJsZV9pbml0KHR5cGVfZGVfcHFfdGFibGUpKSB7CiAJCXByZWNvbXB1
dGVfZGVfcHEoKTsKLQkJZGVfcHFfaW5pdGlhbGl6ZWQgPSB0cnVlOworCQltb2RfY29sb3Jfc2V0
X3RhYmxlX2luaXRfc3RhdGUodHlwZV9kZV9wcV90YWJsZSwgdHJ1ZSk7CiAJfQogCiAKQEAgLTgx
MSw3ICs4MDcsOSBAQCBzdGF0aWMgdm9pZCBidWlsZF9kZV9wcShzdHJ1Y3QgcHdsX2Zsb2F0X2Rh
dGFfZXggKmRlX3BxLAogCiBzdGF0aWMgYm9vbCBidWlsZF9yZWdhbW1hKHN0cnVjdCBwd2xfZmxv
YXRfZGF0YV9leCAqcmdiX3JlZ2FtbWEsCiAJCXVpbnQzMl90IGh3X3BvaW50c19udW0sCi0JCWNv
bnN0IHN0cnVjdCBod194X3BvaW50ICpjb29yZGluYXRlX3gsIGVudW0gZGNfdHJhbnNmZXJfZnVu
Y19wcmVkZWZpbmVkIHR5cGUpCisJCWNvbnN0IHN0cnVjdCBod194X3BvaW50ICpjb29yZGluYXRl
X3gsCisJCWVudW0gZGNfdHJhbnNmZXJfZnVuY19wcmVkZWZpbmVkIHR5cGUsCisJCXN0cnVjdCBj
YWxjdWxhdGVfYnVmZmVyICpjYWxfYnVmZmVyKQogewogCXVpbnQzMl90IGk7CiAJYm9vbCByZXQg
PSBmYWxzZTsKQEAgLTgyNywyMCArODI1LDIxIEBAIHN0YXRpYyBib29sIGJ1aWxkX3JlZ2FtbWEo
c3RydWN0IHB3bF9mbG9hdF9kYXRhX2V4ICpyZ2JfcmVnYW1tYSwKIAlpZiAoIWJ1aWxkX2NvZWZm
aWNpZW50cyhjb2VmZiwgdHlwZSkpCiAJCWdvdG8gcmVsZWFzZTsKIAotCW1lbXNldChwb3dfYnVm
ZmVyLCAwLCBOVU1fUFRTX0lOX1JFR0lPTiAqIHNpemVvZihzdHJ1Y3QgZml4ZWQzMV8zMikpOwot
CXBvd19idWZmZXJfcHRyID0gMDsgLy8gc2VlIHZhcmlhYmxlIGRlZmluaXRpb24gZm9yIG1vcmUg
aW5mbworCW1lbXNldChjYWxfYnVmZmVyLT5idWZmZXIsIDAsIE5VTV9QVFNfSU5fUkVHSU9OICog
c2l6ZW9mKHN0cnVjdCBmaXhlZDMxXzMyKSk7CisJY2FsX2J1ZmZlci0+YnVmZmVyX2luZGV4ID0g
MDsgLy8gc2VlIHZhcmlhYmxlIGRlZmluaXRpb24gZm9yIG1vcmUgaW5mbworCiAJaSA9IDA7CiAJ
d2hpbGUgKGkgPD0gaHdfcG9pbnRzX251bSkgewogCQkvKlRPRE8gdXNlIHkgdnMgcixnLGIqLwog
CQlyZ2ItPnIgPSB0cmFuc2xhdGVfZnJvbV9saW5lYXJfc3BhY2VfZXgoCi0JCQljb29yZF94LT54
LCBjb2VmZiwgMCk7CisJCQljb29yZF94LT54LCBjb2VmZiwgMCwgY2FsX2J1ZmZlcik7CiAJCXJn
Yi0+ZyA9IHJnYi0+cjsKIAkJcmdiLT5iID0gcmdiLT5yOwogCQkrK2Nvb3JkX3g7CiAJCSsrcmdi
OwogCQkrK2k7CiAJfQotCXBvd19idWZmZXJfcHRyID0gLTE7IC8vIHJlc2V0IGJhY2sgdG8gbm8g
b3B0aW1pemUKKwljYWxfYnVmZmVyLT5idWZmZXJfaW5kZXggPSAtMTsKIAlyZXQgPSB0cnVlOwog
cmVsZWFzZToKIAlrZnJlZShjb2VmZik7CkBAIC05MzIsNyArOTMxLDggQEAgc3RhdGljIHZvaWQg
aGVybWl0ZV9zcGxpbmVfZWV0ZihzdHJ1Y3QgZml4ZWQzMV8zMiBpbnB1dF94LAogc3RhdGljIGJv
b2wgYnVpbGRfZnJlZXN5bmNfaGRyKHN0cnVjdCBwd2xfZmxvYXRfZGF0YV9leCAqcmdiX3JlZ2Ft
bWEsCiAJCXVpbnQzMl90IGh3X3BvaW50c19udW0sCiAJCWNvbnN0IHN0cnVjdCBod194X3BvaW50
ICpjb29yZGluYXRlX3gsCi0JCWNvbnN0IHN0cnVjdCBmcmVlc3luY19oZHJfdGZfcGFyYW1zICpm
c19wYXJhbXMpCisJCWNvbnN0IHN0cnVjdCBmcmVlc3luY19oZHJfdGZfcGFyYW1zICpmc19wYXJh
bXMsCisJCXN0cnVjdCBjYWxjdWxhdGVfYnVmZmVyICpjYWxfYnVmZmVyKQogewogCXVpbnQzMl90
IGk7CiAJc3RydWN0IHB3bF9mbG9hdF9kYXRhX2V4ICpyZ2IgPSByZ2JfcmVnYW1tYTsKQEAgLTk2
OSw3ICs5NjksNyBAQCBzdGF0aWMgYm9vbCBidWlsZF9mcmVlc3luY19oZHIoc3RydWN0IHB3bF9m
bG9hdF9kYXRhX2V4ICpyZ2JfcmVnYW1tYSwKIAkJbWF4X2NvbnRlbnQgPSBtYXhfZGlzcGxheTsK
IAogCWlmICghdXNlX2VldGYpCi0JCXBvd19idWZmZXJfcHRyID0gMDsgLy8gc2VlIHZhciBkZWZp
bml0aW9uIGZvciBtb3JlIGluZm8KKwkJY2FsX2J1ZmZlci0+YnVmZmVyX2luZGV4ID0gMDsgLy8g
c2VlIHZhciBkZWZpbml0aW9uIGZvciBtb3JlIGluZm8KIAlyZ2IgKz0gMzI7IC8vIGZpcnN0IDMy
IHBvaW50cyBoYXZlIHByb2JsZW1zIHdpdGggZml4ZWQgcG9pbnQsIHRvbyBzbWFsbAogCWNvb3Jk
X3ggKz0gMzI7CiAJZm9yIChpID0gMzI7IGkgPD0gaHdfcG9pbnRzX251bTsgaSsrKSB7CkBAIC05
ODgsNyArOTg4LDcgQEAgc3RhdGljIGJvb2wgYnVpbGRfZnJlZXN5bmNfaGRyKHN0cnVjdCBwd2xf
ZmxvYXRfZGF0YV9leCAqcmdiX3JlZ2FtbWEsCiAJCQkJaWYgKGRjX2ZpeHB0X2x0KHNjYWxlZFgs
IGRjX2ZpeHB0X3plcm8pKQogCQkJCQlvdXRwdXQgPSBkY19maXhwdF96ZXJvOwogCQkJCWVsc2UK
LQkJCQkJb3V0cHV0ID0gY2FsY3VsYXRlX2dhbW1hMjIoc2NhbGVkWCwgdXNlX2VldGYpOworCQkJ
CQlvdXRwdXQgPSBjYWxjdWxhdGVfZ2FtbWEyMihzY2FsZWRYLCB1c2VfZWV0ZiwgY2FsX2J1ZmZl
cik7CiAKIAkJCQlyZ2ItPnIgPSBvdXRwdXQ7CiAJCQkJcmdiLT5nID0gb3V0cHV0OwpAQCAtMTAw
OCw3ICsxMDA4LDcgQEAgc3RhdGljIGJvb2wgYnVpbGRfZnJlZXN5bmNfaGRyKHN0cnVjdCBwd2xf
ZmxvYXRfZGF0YV9leCAqcmdiX3JlZ2FtbWEsCiAJCSsrY29vcmRfeDsKIAkJKytyZ2I7CiAJfQot
CXBvd19idWZmZXJfcHRyID0gLTE7CisJY2FsX2J1ZmZlci0+YnVmZmVyX2luZGV4ID0gLTE7CiAK
IAlyZXR1cm4gdHJ1ZTsKIH0KQEAgLTE2MDYsNyArMTYwNiw3IEBAIHN0YXRpYyB2b2lkIGJ1aWxk
X25ld19jdXN0b21fcmVzdWx0ZWRfY3VydmUoCiB9CiAKIHN0YXRpYyB2b2lkIGFwcGx5X2RlZ2Ft
bWFfZm9yX3VzZXJfcmVnYW1tYShzdHJ1Y3QgcHdsX2Zsb2F0X2RhdGFfZXggKnJnYl9yZWdhbW1h
LAotCQl1aW50MzJfdCBod19wb2ludHNfbnVtKQorCQl1aW50MzJfdCBod19wb2ludHNfbnVtLCBz
dHJ1Y3QgY2FsY3VsYXRlX2J1ZmZlciAqY2FsX2J1ZmZlcikKIHsKIAl1aW50MzJfdCBpOwogCkBA
IC0xNjE5LDcgKzE2MTksNyBAQCBzdGF0aWMgdm9pZCBhcHBseV9kZWdhbW1hX2Zvcl91c2VyX3Jl
Z2FtbWEoc3RydWN0IHB3bF9mbG9hdF9kYXRhX2V4ICpyZ2JfcmVnYW1tYQogCWkgPSAwOwogCXdo
aWxlIChpICE9IGh3X3BvaW50c19udW0gKyAxKSB7CiAJCXJnYi0+ciA9IHRyYW5zbGF0ZV9mcm9t
X2xpbmVhcl9zcGFjZV9leCgKLQkJCQljb29yZF94LT54LCAmY29lZmYsIDApOworCQkJCWNvb3Jk
X3gtPngsICZjb2VmZiwgMCwgY2FsX2J1ZmZlcik7CiAJCXJnYi0+ZyA9IHJnYi0+cjsKIAkJcmdi
LT5iID0gcmdiLT5yOwogCQkrK2Nvb3JkX3g7CkBAIC0xNjc0LDcgKzE2NzQsOCBAQCBzdGF0aWMg
Ym9vbCBtYXBfcmVnYW1tYV9od190b194X3VzZXIoCiAjZGVmaW5lIF9FWFRSQV9QT0lOVFMgMwog
CiBib29sIGNhbGN1bGF0ZV91c2VyX3JlZ2FtbWFfY29lZmYoc3RydWN0IGRjX3RyYW5zZmVyX2Z1
bmMgKm91dHB1dF90ZiwKLQkJY29uc3Qgc3RydWN0IHJlZ2FtbWFfbHV0ICpyZWdhbW1hKQorCQlj
b25zdCBzdHJ1Y3QgcmVnYW1tYV9sdXQgKnJlZ2FtbWEsCisJCXN0cnVjdCBjYWxjdWxhdGVfYnVm
ZmVyICpjYWxfYnVmZmVyKQogewogCXN0cnVjdCBnYW1tYV9jb2VmZmljaWVudHMgY29lZmY7CiAJ
Y29uc3Qgc3RydWN0IGh3X3hfcG9pbnQgKmNvb3JkX3ggPSBjb29yZGluYXRlc194OwpAQCAtMTcw
NiwxMSArMTcwNywxMSBAQCBib29sIGNhbGN1bGF0ZV91c2VyX3JlZ2FtbWFfY29lZmYoc3RydWN0
IGRjX3RyYW5zZmVyX2Z1bmMgKm91dHB1dF90ZiwKIAl9CiAJd2hpbGUgKGkgIT0gTUFYX0hXX1BP
SU5UUyArIDEpIHsKIAkJb3V0cHV0X3RmLT50Zl9wdHMucmVkW2ldID0gdHJhbnNsYXRlX2Zyb21f
bGluZWFyX3NwYWNlX2V4KAotCQkJCWNvb3JkX3gtPngsICZjb2VmZiwgMCk7CisJCQkJY29vcmRf
eC0+eCwgJmNvZWZmLCAwLCBjYWxfYnVmZmVyKTsKIAkJb3V0cHV0X3RmLT50Zl9wdHMuZ3JlZW5b
aV0gPSB0cmFuc2xhdGVfZnJvbV9saW5lYXJfc3BhY2VfZXgoCi0JCQkJY29vcmRfeC0+eCwgJmNv
ZWZmLCAxKTsKKwkJCQljb29yZF94LT54LCAmY29lZmYsIDEsIGNhbF9idWZmZXIpOwogCQlvdXRw
dXRfdGYtPnRmX3B0cy5ibHVlW2ldID0gdHJhbnNsYXRlX2Zyb21fbGluZWFyX3NwYWNlX2V4KAot
CQkJCWNvb3JkX3gtPngsICZjb2VmZiwgMik7CisJCQkJY29vcmRfeC0+eCwgJmNvZWZmLCAyLCBj
YWxfYnVmZmVyKTsKIAkJKytjb29yZF94OwogCQkrK2k7CiAJfQpAQCAtMTcyMyw3ICsxNzI0LDgg
QEAgYm9vbCBjYWxjdWxhdGVfdXNlcl9yZWdhbW1hX2NvZWZmKHN0cnVjdCBkY190cmFuc2Zlcl9m
dW5jICpvdXRwdXRfdGYsCiB9CiAKIGJvb2wgY2FsY3VsYXRlX3VzZXJfcmVnYW1tYV9yYW1wKHN0
cnVjdCBkY190cmFuc2Zlcl9mdW5jICpvdXRwdXRfdGYsCi0JCWNvbnN0IHN0cnVjdCByZWdhbW1h
X2x1dCAqcmVnYW1tYSkKKwkJY29uc3Qgc3RydWN0IHJlZ2FtbWFfbHV0ICpyZWdhbW1hLAorCQlz
dHJ1Y3QgY2FsY3VsYXRlX2J1ZmZlciAqY2FsX2J1ZmZlcikKIHsKIAlzdHJ1Y3QgZGNfdHJhbnNm
ZXJfZnVuY19kaXN0cmlidXRlZF9wb2ludHMgKnRmX3B0cyA9ICZvdXRwdXRfdGYtPnRmX3B0czsK
IAlzdHJ1Y3QgZGl2aWRlcnMgZGl2aWRlcnM7CkBAIC0xNzU2LDcgKzE3NTgsNyBAQCBib29sIGNh
bGN1bGF0ZV91c2VyX3JlZ2FtbWFfcmFtcChzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqb3V0cHV0
X3RmLAogCXNjYWxlX3VzZXJfcmVnYW1tYV9yYW1wKHJnYl91c2VyLCAmcmVnYW1tYS0+cmFtcCwg
ZGl2aWRlcnMpOwogCiAJaWYgKHJlZ2FtbWEtPmZsYWdzLmJpdHMuYXBwbHlEZWdhbW1hID09IDEp
IHsKLQkJYXBwbHlfZGVnYW1tYV9mb3JfdXNlcl9yZWdhbW1hKHJnYl9yZWdhbW1hLCBNQVhfSFdf
UE9JTlRTKTsKKwkJYXBwbHlfZGVnYW1tYV9mb3JfdXNlcl9yZWdhbW1hKHJnYl9yZWdhbW1hLCBN
QVhfSFdfUE9JTlRTLCBjYWxfYnVmZmVyKTsKIAkJY29weV9yZ2JfcmVnYW1tYV90b19jb29yZGlu
YXRlc194KGNvb3JkaW5hdGVzX3gsCiAJCQkJTUFYX0hXX1BPSU5UUywgcmdiX3JlZ2FtbWEpOwog
CX0KQEAgLTE5NDMsNyArMTk0NSw4IEBAIHN0YXRpYyBib29sIGNhbGN1bGF0ZV9jdXJ2ZShlbnVt
IGRjX3RyYW5zZmVyX2Z1bmNfcHJlZGVmaW5lZCB0cmFucywKIAkJCQlzdHJ1Y3QgZGNfdHJhbnNm
ZXJfZnVuY19kaXN0cmlidXRlZF9wb2ludHMgKnBvaW50cywKIAkJCQlzdHJ1Y3QgcHdsX2Zsb2F0
X2RhdGFfZXggKnJnYl9yZWdhbW1hLAogCQkJCWNvbnN0IHN0cnVjdCBmcmVlc3luY19oZHJfdGZf
cGFyYW1zICpmc19wYXJhbXMsCi0JCQkJdWludDMyX3Qgc2RyX3JlZl93aGl0ZV9sZXZlbCkKKwkJ
CQl1aW50MzJfdCBzZHJfcmVmX3doaXRlX2xldmVsLAorCQkJCXN0cnVjdCBjYWxjdWxhdGVfYnVm
ZmVyICpjYWxfYnVmZmVyKQogewogCXVpbnQzMl90IGk7CiAJYm9vbCByZXQgPSBmYWxzZTsKQEAg
LTE5NzksNyArMTk4Miw4IEBAIHN0YXRpYyBib29sIGNhbGN1bGF0ZV9jdXJ2ZShlbnVtIGRjX3Ry
YW5zZmVyX2Z1bmNfcHJlZGVmaW5lZCB0cmFucywKIAkJYnVpbGRfZnJlZXN5bmNfaGRyKHJnYl9y
ZWdhbW1hLAogCQkJCU1BWF9IV19QT0lOVFMsCiAJCQkJY29vcmRpbmF0ZXNfeCwKLQkJCQlmc19w
YXJhbXMpOworCQkJCWZzX3BhcmFtcywKKwkJCQljYWxfYnVmZmVyKTsKIAogCQlyZXQgPSB0cnVl
OwogCX0gZWxzZSBpZiAodHJhbnMgPT0gVFJBTlNGRVJfRlVOQ1RJT05fSExHKSB7CkBAIC0yMDA4
LDcgKzIwMTIsOCBAQCBzdGF0aWMgYm9vbCBjYWxjdWxhdGVfY3VydmUoZW51bSBkY190cmFuc2Zl
cl9mdW5jX3ByZWRlZmluZWQgdHJhbnMsCiAJCWJ1aWxkX3JlZ2FtbWEocmdiX3JlZ2FtbWEsCiAJ
CQkJTUFYX0hXX1BPSU5UUywKIAkJCQljb29yZGluYXRlc194LAotCQkJCXRyYW5zKTsKKwkJCQl0
cmFucywKKwkJCQljYWxfYnVmZmVyKTsKIAogCQlyZXQgPSB0cnVlOwogCX0KQEAgLTIwMTgsNyAr
MjAyMyw4IEBAIHN0YXRpYyBib29sIGNhbGN1bGF0ZV9jdXJ2ZShlbnVtIGRjX3RyYW5zZmVyX2Z1
bmNfcHJlZGVmaW5lZCB0cmFucywKIAogYm9vbCBtb2RfY29sb3JfY2FsY3VsYXRlX3JlZ2FtbWFf
cGFyYW1zKHN0cnVjdCBkY190cmFuc2Zlcl9mdW5jICpvdXRwdXRfdGYsCiAJCWNvbnN0IHN0cnVj
dCBkY19nYW1tYSAqcmFtcCwgYm9vbCBtYXBVc2VyUmFtcCwgYm9vbCBjYW5Sb21CZVVzZWQsCi0J
CWNvbnN0IHN0cnVjdCBmcmVlc3luY19oZHJfdGZfcGFyYW1zICpmc19wYXJhbXMpCisJCWNvbnN0
IHN0cnVjdCBmcmVlc3luY19oZHJfdGZfcGFyYW1zICpmc19wYXJhbXMsCisJCXN0cnVjdCBjYWxj
dWxhdGVfYnVmZmVyICpjYWxfYnVmZmVyKQogewogCXN0cnVjdCBkY190cmFuc2Zlcl9mdW5jX2Rp
c3RyaWJ1dGVkX3BvaW50cyAqdGZfcHRzID0gJm91dHB1dF90Zi0+dGZfcHRzOwogCXN0cnVjdCBk
aXZpZGVycyBkaXZpZGVyczsKQEAgLTIwOTAsNyArMjA5Niw4IEBAIGJvb2wgbW9kX2NvbG9yX2Nh
bGN1bGF0ZV9yZWdhbW1hX3BhcmFtcyhzdHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqb3V0cHV0X3Rm
LAogCQkJdGZfcHRzLAogCQkJcmdiX3JlZ2FtbWEsCiAJCQlmc19wYXJhbXMsCi0JCQlvdXRwdXRf
dGYtPnNkcl9yZWZfd2hpdGVfbGV2ZWwpOworCQkJb3V0cHV0X3RmLT5zZHJfcmVmX3doaXRlX2xl
dmVsLAorCQkJY2FsX2J1ZmZlcik7CiAKIAlpZiAocmV0KSB7CiAJCW1hcF9yZWdhbW1hX2h3X3Rv
X3hfdXNlcihyYW1wLCBjb2VmZiwgcmdiX3VzZXIsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL2Rpc3BsYXkvbW9kdWxlcy9jb2xvci9jb2xvcl9nYW1tYS5oIGIvZHJpdmVycy9ncHUv
ZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMvY29sb3IvY29sb3JfZ2FtbWEuaAppbmRleCA3ZjU2MjI2
YmE3N2EuLjM3ZmZiZWY2NjAyYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNw
bGF5L21vZHVsZXMvY29sb3IvY29sb3JfZ2FtbWEuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2Rpc3BsYXkvbW9kdWxlcy9jb2xvci9jb2xvcl9nYW1tYS5oCkBAIC0yNiw2ICsyNiw4IEBACiAj
aWZuZGVmIENPTE9SX01PRF9DT0xPUl9HQU1NQV9IXwogI2RlZmluZSBDT0xPUl9NT0RfQ09MT1Jf
R0FNTUFfSF8KIAorI2luY2x1ZGUgImNvbG9yX3RhYmxlLmgiCisKIHN0cnVjdCBkY190cmFuc2Zl
cl9mdW5jOwogc3RydWN0IGRjX2dhbW1hOwogc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmNfZGlzdHJp
YnV0ZWRfcG9pbnRzOwpAQCAtODMsNiArODUsMTIgQEAgc3RydWN0IGZyZWVzeW5jX2hkcl90Zl9w
YXJhbXMgewogCXVuc2lnbmVkIGludCBza2lwX3RtOyAvLyBza2lwIHRtCiB9OwogCitzdHJ1Y3Qg
Y2FsY3VsYXRlX2J1ZmZlciB7CisJaW50IGJ1ZmZlcl9pbmRleDsKKwlzdHJ1Y3QgZml4ZWQzMV8z
MiBidWZmZXJbTlVNX1BUU19JTl9SRUdJT05dOworCXN0cnVjdCBmaXhlZDMxXzMyIGdhbW1hX29m
XzI7Cit9OworCiBzdHJ1Y3QgdHJhbnNsYXRlX2Zyb21fbGluZWFyX3NwYWNlX2FyZ3MgewogCXN0
cnVjdCBmaXhlZDMxXzMyIGFyZzsKIAlzdHJ1Y3QgZml4ZWQzMV8zMiBhMDsKQEAgLTkwLDYgKzk4
LDcgQEAgc3RydWN0IHRyYW5zbGF0ZV9mcm9tX2xpbmVhcl9zcGFjZV9hcmdzIHsKIAlzdHJ1Y3Qg
Zml4ZWQzMV8zMiBhMjsKIAlzdHJ1Y3QgZml4ZWQzMV8zMiBhMzsKIAlzdHJ1Y3QgZml4ZWQzMV8z
MiBnYW1tYTsKKwlzdHJ1Y3QgY2FsY3VsYXRlX2J1ZmZlciAqY2FsX2J1ZmZlcjsKIH07CiAKIHZv
aWQgc2V0dXBfeF9wb2ludHNfZGlzdHJpYnV0aW9uKHZvaWQpOwpAQCAtOTksNyArMTA4LDggQEAg
dm9pZCBwcmVjb21wdXRlX2RlX3BxKHZvaWQpOwogCiBib29sIG1vZF9jb2xvcl9jYWxjdWxhdGVf
cmVnYW1tYV9wYXJhbXMoc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKm91dHB1dF90ZiwKIAkJY29u
c3Qgc3RydWN0IGRjX2dhbW1hICpyYW1wLCBib29sIG1hcFVzZXJSYW1wLCBib29sIGNhblJvbUJl
VXNlZCwKLQkJY29uc3Qgc3RydWN0IGZyZWVzeW5jX2hkcl90Zl9wYXJhbXMgKmZzX3BhcmFtcyk7
CisJCWNvbnN0IHN0cnVjdCBmcmVlc3luY19oZHJfdGZfcGFyYW1zICpmc19wYXJhbXMsCisJCXN0
cnVjdCBjYWxjdWxhdGVfYnVmZmVyICpjYWxfYnVmZmVyKTsKIAogYm9vbCBtb2RfY29sb3JfY2Fs
Y3VsYXRlX2RlZ2FtbWFfcGFyYW1zKHN0cnVjdCBkY19jb2xvcl9jYXBzICpkY19jYXBzLAogCQlz
dHJ1Y3QgZGNfdHJhbnNmZXJfZnVuYyAqb3V0cHV0X3RmLApAQCAtMTA5LDEwICsxMTksMTIgQEAg
Ym9vbCBtb2RfY29sb3JfY2FsY3VsYXRlX2RlZ2FtbWFfY3VydmUoZW51bSBkY190cmFuc2Zlcl9m
dW5jX3ByZWRlZmluZWQgdHJhbnMsCiAJCQkJc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmNfZGlzdHJp
YnV0ZWRfcG9pbnRzICpwb2ludHMpOwogCiBib29sIGNhbGN1bGF0ZV91c2VyX3JlZ2FtbWFfY29l
ZmYoc3RydWN0IGRjX3RyYW5zZmVyX2Z1bmMgKm91dHB1dF90ZiwKLQkJY29uc3Qgc3RydWN0IHJl
Z2FtbWFfbHV0ICpyZWdhbW1hKTsKKwkJY29uc3Qgc3RydWN0IHJlZ2FtbWFfbHV0ICpyZWdhbW1h
LAorCQlzdHJ1Y3QgY2FsY3VsYXRlX2J1ZmZlciAqY2FsX2J1ZmZlcik7CiAKIGJvb2wgY2FsY3Vs
YXRlX3VzZXJfcmVnYW1tYV9yYW1wKHN0cnVjdCBkY190cmFuc2Zlcl9mdW5jICpvdXRwdXRfdGYs
Ci0JCWNvbnN0IHN0cnVjdCByZWdhbW1hX2x1dCAqcmVnYW1tYSk7CisJCWNvbnN0IHN0cnVjdCBy
ZWdhbW1hX2x1dCAqcmVnYW1tYSwKKwkJc3RydWN0IGNhbGN1bGF0ZV9idWZmZXIgKmNhbF9idWZm
ZXIpOwogCiAKICNlbmRpZiAvKiBDT0xPUl9NT0RfQ09MT1JfR0FNTUFfSF8gKi8KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlzcGxheS9tb2R1bGVzL2NvbG9yL2NvbG9yX3RhYmxl
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2Rpc3BsYXkvbW9kdWxlcy9jb2xvci9jb2xvcl90YWJs
ZS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNjkyZTUzNmU3ZDA1
Ci0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNwbGF5L21vZHVsZXMv
Y29sb3IvY29sb3JfdGFibGUuYwpAQCAtMCwwICsxLDQ4IEBACisvKgorICogQ29weXJpZ2h0IChj
KSAyMDE5IEFkdmFuY2VkIE1pY3JvIERldmljZXMsIEluYy4gKHVucHVibGlzaGVkKQorICoKKyAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuICBUaGlzIG5vdGljZSBpcyBpbnRlbmRlZCBhcyBhIHByZWNh
dXRpb24gYWdhaW5zdAorICogaW5hZHZlcnRlbnQgcHVibGljYXRpb24gYW5kIGRvZXMgbm90IGlt
cGx5IHB1YmxpY2F0aW9uIG9yIGFueSB3YWl2ZXIKKyAqIG9mIGNvbmZpZGVudGlhbGl0eS4gIFRo
ZSB5ZWFyIGluY2x1ZGVkIGluIHRoZSBmb3JlZ29pbmcgbm90aWNlIGlzIHRoZQorICogeWVhciBv
ZiBjcmVhdGlvbiBvZiB0aGUgd29yay4KKyAqLworCisjaW5jbHVkZSAiY29sb3JfdGFibGUuaCIK
Kworc3RhdGljIHN0cnVjdCBmaXhlZDMxXzMyIHBxX3RhYmxlW01BWF9IV19QT0lOVFMgKyAyXTsK
K3N0YXRpYyBzdHJ1Y3QgZml4ZWQzMV8zMiBkZV9wcV90YWJsZVtNQVhfSFdfUE9JTlRTICsgMl07
CitzdGF0aWMgYm9vbCBwcV9pbml0aWFsaXplZDsKK3N0YXRpYyBib29sIGRlX3BnX2luaXRpYWxp
emVkOworCitib29sIG1vZF9jb2xvcl9pc190YWJsZV9pbml0KGVudW0gdGFibGVfdHlwZSB0eXBl
KQoreworCWJvb2wgcmV0ID0gZmFsc2U7CisKKwlpZiAodHlwZSA9PSB0eXBlX3BxX3RhYmxlKQor
CQlyZXQgPSBwcV9pbml0aWFsaXplZDsKKwlpZiAodHlwZSA9PSB0eXBlX2RlX3BxX3RhYmxlKQor
CQlyZXQgPSBkZV9wZ19pbml0aWFsaXplZDsKKworCXJldHVybiByZXQ7Cit9CisKK3N0cnVjdCBm
aXhlZDMxXzMyICptb2RfY29sb3JfZ2V0X3RhYmxlKGVudW0gdGFibGVfdHlwZSB0eXBlKQorewor
CXN0cnVjdCBmaXhlZDMxXzMyICp0YWJsZSA9IE5VTEw7CisKKwlpZiAodHlwZSA9PSB0eXBlX3Bx
X3RhYmxlKQorCQl0YWJsZSA9IHBxX3RhYmxlOworCWlmICh0eXBlID09IHR5cGVfZGVfcHFfdGFi
bGUpCisJCXRhYmxlID0gZGVfcHFfdGFibGU7CisKKwlyZXR1cm4gdGFibGU7Cit9CisKK3ZvaWQg
bW9kX2NvbG9yX3NldF90YWJsZV9pbml0X3N0YXRlKGVudW0gdGFibGVfdHlwZSB0eXBlLCBib29s
IHN0YXRlKQoreworCWlmICh0eXBlID09IHR5cGVfcHFfdGFibGUpCisJCXBxX2luaXRpYWxpemVk
ID0gc3RhdGU7CisJaWYgKHR5cGUgPT0gdHlwZV9kZV9wcV90YWJsZSkKKwkJZGVfcGdfaW5pdGlh
bGl6ZWQgPSBzdGF0ZTsKK30KKwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9kaXNw
bGF5L21vZHVsZXMvY29sb3IvY29sb3JfdGFibGUuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvZGlz
cGxheS9tb2R1bGVzL2NvbG9yL2NvbG9yX3RhYmxlLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMDAwMDAwLi4yNjIxZGQ2MTk0MDIKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL2Rpc3BsYXkvbW9kdWxlcy9jb2xvci9jb2xvcl90YWJsZS5oCkBAIC0wLDAg
KzEsNDcgQEAKKy8qCisgKiBDb3B5cmlnaHQgMjAxNiBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJ
bmMuCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2Us
IHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQg
YXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0byBk
ZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91
dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg
cHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGllcyBv
ZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQorICogU29m
dHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29u
ZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJt
aXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgorICogYWxsIGNvcGllcyBvciBzdWJz
dGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElT
IFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Mg
T1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJ
RVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBP
U0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJ
R0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFH
RVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJB
Q1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09O
TkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFMSU5H
UyBJTiBUSEUgU09GVFdBUkUuCisgKgorICogQXV0aG9yczogQU1ECisgKgorICovCisKKworI2lm
bmRlZiBDT0xPUl9NT0RfQ09MT1JfVEFCTEVfSF8KKyNkZWZpbmUgQ09MT1JfTU9EX0NPTE9SX1RB
QkxFX0hfCisKKyNpbmNsdWRlICJkY190eXBlcy5oIgorCisjZGVmaW5lIE5VTV9QVFNfSU5fUkVH
SU9OIDE2CisjZGVmaW5lIE5VTV9SRUdJT05TIDMyCisjZGVmaW5lIE1BWF9IV19QT0lOVFMgKE5V
TV9QVFNfSU5fUkVHSU9OKk5VTV9SRUdJT05TKQorCitlbnVtIHRhYmxlX3R5cGUgeworCXR5cGVf
cHFfdGFibGUsCisJdHlwZV9kZV9wcV90YWJsZQorfTsKKworYm9vbCBtb2RfY29sb3JfaXNfdGFi
bGVfaW5pdChlbnVtIHRhYmxlX3R5cGUgdHlwZSk7CisKK3N0cnVjdCBmaXhlZDMxXzMyICptb2Rf
Y29sb3JfZ2V0X3RhYmxlKGVudW0gdGFibGVfdHlwZSB0eXBlKTsKKwordm9pZCBtb2RfY29sb3Jf
c2V0X3RhYmxlX2luaXRfc3RhdGUoZW51bSB0YWJsZV90eXBlIHR5cGUsIGJvb2wgc3RhdGUpOwor
CisjZW5kaWYgLyogQ09MT1JfTU9EX0NPTE9SX1RBQkxFX0hfICovCi0tIAoyLjE3LjEKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGlu
ZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeAo=
