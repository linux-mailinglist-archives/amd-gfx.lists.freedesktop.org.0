Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5465C118EF1
	for <lists+amd-gfx@lfdr.de>; Tue, 10 Dec 2019 18:25:11 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6DC016E8FF;
	Tue, 10 Dec 2019 17:25:09 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM11-DM6-obe.outbound.protection.outlook.com
 (mail-dm6nam11on2065.outbound.protection.outlook.com [40.107.223.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3FDE36E8FF
 for <amd-gfx@lists.freedesktop.org>; Tue, 10 Dec 2019 17:25:07 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=a5dm+XncmEChOEpOP1xia02mRlKGWD+RCnvcPEMaPw9wsUv7Nj6AFbGqvuW2kgeJnYxiFX2J1xNpsDYX8eI55yL36W+A8517AI45rdz5lwWP0iB741zTrGuRao9aidm4owA4ru2vwmNjQXVeJoe1DrQRdHascXnptSdSoybTr0L0SpEHdKbh5G3tZ73vMAx2q7IpV215qx3TxRM8Z4WZTIKB6VcaXRCV9yQOsPujVCq6y6kIMrGiXo3M/D//w6jAhb/AiZFGor9a3yKddBUA8JSFr29H4NJltktxmmZ0A1DZayiLsHuvJs1snYno2p1p9TLxRKkQyjKsnm1zC+gRBw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jxGKs2gxGc5BAm2cEwwBRfKxDM0/Oi8VRPR0olDcfHE=;
 b=ZvDROza3QVfSszgfHU/Bf61z0pSxNCT3u9kiQcZzO6TtTmrzgBCNPIP8Lw/FqXC6ABi2WaEBlqeg3zwAhkLFnfgvLw6kYLO/uh9J+lTXICjSIK9Dt01qpC+bNhWWE1PITeW6Ig/8hANKdaRFlBSG6wcq+nnZT9Y3MdSxd3RahjebTLnXlH2tYIy5By2dfFU9zDfOMecW6MlRKAnDCYO8QnmHFO0mAQLqmw2D0hFY7K6I3iL3jruLOtt44tXTDSyrFcWm91T+7AjoPeFowUu9wnurWhKOlVZ8aMMwv0fhNErVrqCoKRWKaG13k9w45ISSFsbNxofxv8wAXaMK30/fMQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jxGKs2gxGc5BAm2cEwwBRfKxDM0/Oi8VRPR0olDcfHE=;
 b=vw54/YhJAylIMrsxJCOW/u9WpEtCl+bGt9h/K6sCpmAUajvvrMYDFfatzrReViIREwGKiQIL/Oo+qKduTruvvmFSh2nBMbMOtQq2osXjHeDr3VCPaw82rgMrxvzKD3yLCBQkttUdQOMdR5VnmbdASbDojhS3W65hqEVj3b5CJCs=
Received: from MN2PR12MB3039.namprd12.prod.outlook.com (20.178.242.91) by
 MN2PR12MB4077.namprd12.prod.outlook.com (52.135.50.79) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2516.14; Tue, 10 Dec 2019 17:25:05 +0000
Received: from MN2PR12MB3039.namprd12.prod.outlook.com
 ([fe80::1892:1a4f:de3b:2c12]) by MN2PR12MB3039.namprd12.prod.outlook.com
 ([fe80::1892:1a4f:de3b:2c12%7]) with mapi id 15.20.2516.018; Tue, 10 Dec 2019
 17:25:05 +0000
From: "Tao, Yintian" <Yintian.Tao@amd.com>
To: "Tao, Yintian" <Yintian.Tao@amd.com>, "Deucher, Alexander"
 <Alexander.Deucher@amd.com>, "Feng, Kenneth" <Kenneth.Feng@amd.com>
Subject: RE: [PATCH] drm/amd/powerplay: enable pp one vf mode for vega10
Thread-Topic: [PATCH] drm/amd/powerplay: enable pp one vf mode for vega10
Thread-Index: AQHVrz07Qc1ymBAzJUSNOzbAPSpLVaeznvxw
Date: Tue, 10 Dec 2019 17:25:05 +0000
Message-ID: <MN2PR12MB3039395C32D1BA23AB4F4D98E55B0@MN2PR12MB3039.namprd12.prod.outlook.com>
References: <20191210093549.4408-1-yttao@amd.com>
In-Reply-To: <20191210093549.4408-1-yttao@amd.com>
Accept-Language: zh-CN, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Yintian.Tao@amd.com; 
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-ht: Tenant
x-ms-office365-filtering-correlation-id: a10eb45c-be2f-4198-7055-08d77d95e5fc
x-ms-traffictypediagnostic: MN2PR12MB4077:|MN2PR12MB4077:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <MN2PR12MB40771A90F60F60D9DBA577FBE55B0@MN2PR12MB4077.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:3631;
x-forefront-prvs: 02475B2A01
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(376002)(136003)(396003)(346002)(39860400002)(366004)(13464003)(199004)(189003)(2906002)(6506007)(6636002)(86362001)(53546011)(8676002)(81156014)(186003)(5660300002)(110136005)(66946007)(30864003)(52536014)(66476007)(316002)(76116006)(26005)(71200400001)(66446008)(64756008)(66556008)(33656002)(9686003)(81166006)(478600001)(8936002)(55016002)(4326008)(7696005)(559001)(569006);
 DIR:OUT; SFP:1101; SCL:1; SRVR:MN2PR12MB4077;
 H:MN2PR12MB3039.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; A:1; MX:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: PHrB3cDTJW7WjVgyXzf8XoajwA8dST1GinDy33GFMxR8ISnV1XPhiRAZ+CkFHSeF80+r6Kl0TWnVNlAPey5xAw7vsjBfQqJwyRwXv4UYIXyiKLrTBTsKL8ikNeacuOlLGwMBfj5PiPZYcd/A+USit8oJ8U/ELDsuXSgdIMSzWkwR9jpHZWtQAI3XhIEMjgi0fKhHV1IXJGN5Z0pnVXN2yuUfyBWcrftR2PNpV52nuoQJeWiKlixqJaT2ml1Smq0Qw3eM2m0BSEyAeoJPSUvNRxXLIibvKepQbDGbL7LOca4RitZDw3M2ZXChS7K/AjS7wK38fgT1qWqi/V/alVWkeuxsv/qKUDw1UHPHb6rvOgrUmSTfQdVJjpiLsblI3TFrkdu3GZu5lAZuJkOXyQ7lyHfZVgBO2vGlA42StNnNlOlRNfMeMbe1jTkPxCNY/UM/0RmNhdIEjDw7BVrumG+alXq9Um4/OOAjA9CCJcOlqr1DBf5N2T0SJWvlRWBnTF/NGhBs7GzY7I2sClHyhDioLQ==
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: a10eb45c-be2f-4198-7055-08d77d95e5fc
X-MS-Exchange-CrossTenant-originalarrivaltime: 10 Dec 2019 17:25:05.7350 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: SO36j7D8NBrkqPNVmlQPL0/6EGmMaR4MWc0mqxCRrP9w5V/pSOYx2pFvznbDJk3X
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4077
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Content-Type: text/plain; charset="gb2312"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

UGluZy4uLg0KDQotLS0tLU9yaWdpbmFsIE1lc3NhZ2UtLS0tLQ0KRnJvbTogWWludGlhbiBUYW8g
PHl0dGFvQGFtZC5jb20+IA0KU2VudDogMjAxOcTqMTLUwjEwyNUgMTc6MzYNClRvOiBEZXVjaGVy
LCBBbGV4YW5kZXIgPEFsZXhhbmRlci5EZXVjaGVyQGFtZC5jb20+OyBGZW5nLCBLZW5uZXRoIDxL
ZW5uZXRoLkZlbmdAYW1kLmNvbT4NCkNjOiBhbWQtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZzsg
VGFvLCBZaW50aWFuIDxZaW50aWFuLlRhb0BhbWQuY29tPg0KU3ViamVjdDogW1BBVENIXSBkcm0v
YW1kL3Bvd2VycGxheTogZW5hYmxlIHBwIG9uZSB2ZiBtb2RlIGZvciB2ZWdhMTANCg0KT3JpZ2lu
YWxseSwgZHVlIHRvIHRoZSByZXN0cmljdGlvbiBmcm9tIFBTUCBhbmQgU01VLCBWRiBoYXMNCnRv
IHNlbmQgbWVzc2FnZSB0byBoeXBlcnZpc29yIGRyaXZlciB0byBoYW5kbGUgcG93ZXJwbGF5DQpj
aGFuZ2Ugd2hpY2ggaXMgY29tcGxpY2F0ZWQgYW5kIHJlZHVuZGFudC4gQ3VycmVudGx5LCBTTVUN
CmFuZCBQU1AgY2FuIHN1cHBvcnQgVkYgdG8gZGlyZWN0bHkgaGFuZGxlIHBvd2VycGxheQ0KY2hh
bmdlIGJ5IGl0c2VsZi4gVGhlcmVmb3JlLCB0aGUgb2xkIGNvZGUgYWJvdXQgdGhlIGhhbmRzaGFr
ZQ0KYmV0d2VlbiBWRiBhbmQgUEYgdG8gaGFuZGxlIHBvd2VycGxheSB3aWxsIGJlIHJlbW92ZWQg
YW5kIFZGDQp3aWxsIHVzZSBuZXcgdGhlIHJlZ2lzdGVycyBiZWxvdyB0byBoYW5kc2hha2Ugd2l0
aCBTTVUuDQptbU1QMV9TTU5fQzJQTVNHXzEwMTogcmVnaXN0ZXIgdG8gaGFuZGxlIFNNVSBtZXNz
YWdlDQptbU1QMV9TTU5fQzJQTVNHXzEwMjogcmVnaXN0ZXIgdG8gaGFuZGxlIFNNVSBwYXJhbWV0
ZXINCm1tTVAxX1NNTl9DMlBNU0dfMTAzOiByZWdpc3RlciB0byBoYW5kbGUgU01VIHJlc3BvbnNl
DQoNCnYyOiByZW1vdmUgbW9kdWxlIHBhcmFtZXRlciBwcF9vbmVfdmYNCnYzOiBmaXggdGhlIHBh
cmVucw0KdjQ6IGZvcmJpZCB2ZiB0byBjaGFuZ2Ugc211IGZlYXR1cmUNCg0KU2lnbmVkLW9mZi1i
eTogWWludGlhbiBUYW8gPHl0dGFvQGFtZC5jb20+DQotLS0NCiBkcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfZGV2aWNlLmMgICAgfCAgMTYgKy0NCiBkcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfa21zLmMgICAgICAgfCAgIDQgLQ0KIGRyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9wbS5jICAgICAgICB8IDIzNSArKysrKysrKysrKysrLS0tLS0NCiBkcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmlydC5jICAgICAgfCAgNTEgLS0tLQ0KIGRy
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmggICAgICB8ICAxNCArLQ0KIGRy
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1X2FpLmMgICAgICAgICB8ICA3OCAtLS0tLS0N
CiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9haS5oICAgICAgICAgfCAgIDQgLQ0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L3NvYzE1LmMgICAgICAgICAgICB8ICAgOCArLQ0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZF9wb3dlcnBsYXkuYyB8ICAgNCArLQ0K
IC4uLi9kcm0vYW1kL3Bvd2VycGxheS9od21nci9oYXJkd2FyZW1hbmFnZXIuYyB8ICAxNSArLQ0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL2h3bWdyLmMgICB8ICAxNiArKw0K
IGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL3BwX3BzbS5jICB8ICAzMCArLS0N
CiAuLi4vZHJtL2FtZC9wb3dlcnBsYXkvaHdtZ3IvdmVnYTEwX2h3bWdyLmMgICAgfCAxNjIgKysr
KysrKystLS0tDQogZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5jL2h3bWdyLmggICAg
IHwgICAxICsNCiAuLi4vZHJtL2FtZC9wb3dlcnBsYXkvc211bWdyL3NtdTlfc211bWdyLmMgICAg
fCAgNTYgKysrKy0NCiAuLi4vZHJtL2FtZC9wb3dlcnBsYXkvc211bWdyL3ZlZ2ExMF9zbXVtZ3Iu
YyAgfCAgMTQgKysNCiAxNiBmaWxlcyBjaGFuZ2VkLCA0MDYgaW5zZXJ0aW9ucygrKSwgMzAyIGRl
bGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X2RldmljZS5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RldmljZS5j
DQppbmRleCBiOWNhN2U3MjhkM2UuLjQ2NTE1NmExMmQ4OCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2RldmljZS5jDQpAQCAtMTg4MCw2ICsxODgwLDkgQEAgc3RhdGlj
IGludCBhbWRncHVfZGV2aWNlX2lwX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpDQog
CQl9DQogCX0NCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCWFtZGdwdV92aXJ0
X2luaXRfZGF0YV9leGNoYW5nZShhZGV2KTsNCisNCiAJciA9IGFtZGdwdV9pYl9wb29sX2luaXQo
YWRldik7DQogCWlmIChyKSB7DQogCQlkZXZfZXJyKGFkZXYtPmRldiwgIklCIGluaXRpYWxpemF0
aW9uIGZhaWxlZCAoJWQpLlxuIiwgcik7DQpAQCAtMTkyMSwxMSArMTkyNCw4IEBAIHN0YXRpYyBp
bnQgYW1kZ3B1X2RldmljZV9pcF9pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQ0KIAlh
bWRncHVfYW1ka2ZkX2RldmljZV9pbml0KGFkZXYpOw0KIA0KIGluaXRfZmFpbGVkOg0KLQlpZiAo
YW1kZ3B1X3NyaW92X3ZmKGFkZXYpKSB7DQotCQlpZiAoIXIpDQotCQkJYW1kZ3B1X3ZpcnRfaW5p
dF9kYXRhX2V4Y2hhbmdlKGFkZXYpOw0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpKQ0KIAkJ
YW1kZ3B1X3ZpcnRfcmVsZWFzZV9mdWxsX2dwdShhZGV2LCB0cnVlKTsNCi0JfQ0KIA0KIAlyZXR1
cm4gcjsNCiB9DQpAQCAtMjgxOSw3ICsyODE5LDYgQEAgaW50IGFtZGdwdV9kZXZpY2VfaW5pdChz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwNCiAJbXV0ZXhfaW5pdCgmYWRldi0+dmlydC52Zl9l
cnJvcnMubG9jayk7DQogCWhhc2hfaW5pdChhZGV2LT5tbl9oYXNoKTsNCiAJbXV0ZXhfaW5pdCgm
YWRldi0+bG9ja19yZXNldCk7DQotCW11dGV4X2luaXQoJmFkZXYtPnZpcnQuZHBtX211dGV4KTsN
CiAJbXV0ZXhfaW5pdCgmYWRldi0+cHNwLm11dGV4KTsNCiANCiAJciA9IGFtZGdwdV9kZXZpY2Vf
Y2hlY2tfYXJndW1lbnRzKGFkZXYpOw0KQEAgLTMwNDAsOSArMzAzOSw2IEBAIGludCBhbWRncHVf
ZGV2aWNlX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQogDQogCWFtZGdwdV9mYmRl
dl9pbml0KGFkZXYpOw0KIA0KLQlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIGFtZGdpbV9p
c19od3BlcmYoYWRldikpDQotCQlhbWRncHVfcG1fdmlydF9zeXNmc19pbml0KGFkZXYpOw0KLQ0K
IAlyID0gYW1kZ3B1X3BtX3N5c2ZzX2luaXQoYWRldik7DQogCWlmIChyKSB7DQogCQlhZGV2LT5w
bV9zeXNmc19lbiA9IGZhbHNlOw0KQEAgLTMxODcsOCArMzE4Myw2IEBAIHZvaWQgYW1kZ3B1X2Rl
dmljZV9maW5pKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQ0KIAlpb3VubWFwKGFkZXYtPnJt
bWlvKTsNCiAJYWRldi0+cm1taW8gPSBOVUxMOw0KIAlhbWRncHVfZGV2aWNlX2Rvb3JiZWxsX2Zp
bmkoYWRldik7DQotCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgYW1kZ2ltX2lzX2h3cGVy
ZihhZGV2KSkNCi0JCWFtZGdwdV9wbV92aXJ0X3N5c2ZzX2ZpbmkoYWRldik7DQogDQogCWFtZGdw
dV9kZWJ1Z2ZzX3JlZ3NfY2xlYW51cChhZGV2KTsNCiAJZGV2aWNlX3JlbW92ZV9maWxlKGFkZXYt
PmRldiwgJmRldl9hdHRyX3BjaWVfcmVwbGF5X2NvdW50KTsNCkBAIC0zNjY5LDYgKzM2NjMsNyBA
QCBzdGF0aWMgaW50IGFtZGdwdV9kZXZpY2VfcmVzZXRfc3Jpb3Yoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYsDQogCWlmIChyKQ0KIAkJZ290byBlcnJvcjsNCiANCisJYW1kZ3B1X3ZpcnRfaW5p
dF9kYXRhX2V4Y2hhbmdlKGFkZXYpOw0KIAkvKiB3ZSBuZWVkIHJlY292ZXIgZ2FydCBwcmlvciB0
byBydW4gU01DL0NQL1NETUEgcmVzdW1lICovDQogCWFtZGdwdV9ndHRfbWdyX3JlY292ZXIoJmFk
ZXYtPm1tYW4uYmRldi5tYW5bVFRNX1BMX1RUXSk7DQogDQpAQCAtMzY4Niw3ICszNjgxLDYgQEAg
c3RhdGljIGludCBhbWRncHVfZGV2aWNlX3Jlc2V0X3NyaW92KHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2LA0KIAlhbWRncHVfYW1ka2ZkX3Bvc3RfcmVzZXQoYWRldik7DQogDQogZXJyb3I6DQot
CWFtZGdwdV92aXJ0X2luaXRfZGF0YV9leGNoYW5nZShhZGV2KTsNCiAJYW1kZ3B1X3ZpcnRfcmVs
ZWFzZV9mdWxsX2dwdShhZGV2LCB0cnVlKTsNCiAJaWYgKCFyICYmIGFkZXYtPnZpcnQuZ2ltX2Zl
YXR1cmUgJiBBTURHSU1fRkVBVFVSRV9HSU1fRkxSX1ZSQU1MT1NUKSB7DQogCQlhbWRncHVfaW5j
X3ZyYW1fbG9zdChhZGV2KTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfa21zLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfa21zLmMN
CmluZGV4IDVlYzE0MTVkMTc1NS4uM2EwZWE5MDk2NDk4IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2ttcy5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9hbWRncHVfa21zLmMNCkBAIC03MDMsMTAgKzcwMyw2IEBAIHN0YXRpYyBpbnQgYW1k
Z3B1X2luZm9faW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwgc3RydWN0
IGRybV9maWxlDQogCQlpZiAoYWRldi0+cG0uZHBtX2VuYWJsZWQpIHsNCiAJCQlkZXZfaW5mby5t
YXhfZW5naW5lX2Nsb2NrID0gYW1kZ3B1X2RwbV9nZXRfc2NsayhhZGV2LCBmYWxzZSkgKiAxMDsN
CiAJCQlkZXZfaW5mby5tYXhfbWVtb3J5X2Nsb2NrID0gYW1kZ3B1X2RwbV9nZXRfbWNsayhhZGV2
LCBmYWxzZSkgKiAxMDsNCi0JCX0gZWxzZSBpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIGFt
ZGdpbV9pc19od3BlcmYoYWRldikgJiYNCi0JCQkgICBhZGV2LT52aXJ0Lm9wcy0+Z2V0X3BwX2Ns
aykgew0KLQkJCWRldl9pbmZvLm1heF9lbmdpbmVfY2xvY2sgPSBhbWRncHVfdmlydF9nZXRfc2Ns
ayhhZGV2LCBmYWxzZSkgKiAxMDsNCi0JCQlkZXZfaW5mby5tYXhfbWVtb3J5X2Nsb2NrID0gYW1k
Z3B1X3ZpcnRfZ2V0X21jbGsoYWRldiwgZmFsc2UpICogMTA7DQogCQl9IGVsc2Ugew0KIAkJCWRl
dl9pbmZvLm1heF9lbmdpbmVfY2xvY2sgPSBhZGV2LT5jbG9jay5kZWZhdWx0X3NjbGsgKiAxMDsN
CiAJCQlkZXZfaW5mby5tYXhfbWVtb3J5X2Nsb2NrID0gYWRldi0+Y2xvY2suZGVmYXVsdF9tY2xr
ICogMTA7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3Bt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfcG0uYw0KaW5kZXggMGM3MzI0
YmMzMWE3Li4yZTExYjdhZmU1NjggMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2Ft
ZGdwdS9hbWRncHVfcG0uYw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1
X3BtLmMNCkBAIC0xNTksNiArMTU5LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9kcG1f
c3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9
IGRkZXYtPmRldl9wcml2YXRlOw0KIAllbnVtIGFtZF9wbV9zdGF0ZV90eXBlIHBtOw0KIA0KKwlp
ZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFk
ZXYpKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0K
IAkJaWYgKGFkZXYtPnNtdS5wcHRfZnVuY3MtPmdldF9jdXJyZW50X3Bvd2VyX3N0YXRlKQ0KIAkJ
CXBtID0gc211X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKCZhZGV2LT5zbXUpOw0KQEAgLTE4NCw2
ICsxODcsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X2RwbV9zdGF0ZShzdHJ1Y3QgZGV2
aWNlICpkZXYsDQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZh
dGU7DQogCWVudW0gYW1kX3BtX3N0YXRlX3R5cGUgIHN0YXRlOw0KIA0KKwlpZiAoYW1kZ3B1X3Ny
aW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0
dXJuIC1FSU5WQUw7DQorDQogCWlmIChzdHJuY21wKCJiYXR0ZXJ5IiwgYnVmLCBzdHJsZW4oImJh
dHRlcnkiKSkgPT0gMCkNCiAJCXN0YXRlID0gUE9XRVJfU1RBVEVfVFlQRV9CQVRURVJZOw0KIAll
bHNlIGlmIChzdHJuY21wKCJiYWxhbmNlZCIsIGJ1Ziwgc3RybGVuKCJiYWxhbmNlZCIpKSA9PSAw
KQ0KQEAgLTI4Myw3ICsyODksNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X2RwbV9mb3Jj
ZWRfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiA9IGRkZXYtPmRldl9wcml2YXRlOw0KIAllbnVtIGFtZF9kcG1fZm9yY2Vk
X2xldmVsIGxldmVsID0gMHhmZjsNCiANCi0JaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJ
aWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92Zihh
ZGV2KSkNCiAJCXJldHVybiAwOw0KIA0KIAlpZiAoKGFkZXYtPmZsYWdzICYgQU1EX0lTX1BYKSAm
Jg0KQEAgLTMyMCw2ICszMjYsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X2RwbV9mb3Jj
ZWRfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IGRldmljZSAqZGV2LA0KIAllbnVtIGFtZF9kcG1f
Zm9yY2VkX2xldmVsIGN1cnJlbnRfbGV2ZWwgPSAweGZmOw0KIAlpbnQgcmV0ID0gMDsNCiANCisJ
aWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92Zihh
ZGV2KSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KIAkvKiBDYW4ndCBmb3JjZSBwZXJmb3JtYW5j
ZSBsZXZlbCB3aGVuIHRoZSBjYXJkIGlzIG9mZiAqLw0KIAlpZiAgKChhZGV2LT5mbGFncyAmIEFN
RF9JU19QWCkgJiYNCiAJICAgICAoZGRldi0+c3dpdGNoX3Bvd2VyX3N0YXRlICE9IERSTV9TV0lU
Q0hfUE9XRVJfT04pKQ0KQEAgLTM0OCwxOSArMzU3LDYgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1
X3NldF9kcG1fZm9yY2VkX3BlcmZvcm1hbmNlX2xldmVsKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJ
CWdvdG8gZmFpbDsNCiAJfQ0KIA0KLQkvKiBoYW5kbGUgc3Jpb3YgY2FzZSBoZXJlICovDQotCWlm
IChhbWRncHVfc3Jpb3ZfdmYoYWRldikpIHsNCi0JCWlmIChhbWRnaW1faXNfaHdwZXJmKGFkZXYp
ICYmDQotCQkgICAgYWRldi0+dmlydC5vcHMtPmZvcmNlX2RwbV9sZXZlbCkgew0KLQkJCW11dGV4
X2xvY2soJmFkZXYtPnBtLm11dGV4KTsNCi0JCQlhZGV2LT52aXJ0Lm9wcy0+Zm9yY2VfZHBtX2xl
dmVsKGFkZXYsIGxldmVsKTsNCi0JCQltdXRleF91bmxvY2soJmFkZXYtPnBtLm11dGV4KTsNCi0J
CQlyZXR1cm4gY291bnQ7DQotCQl9IGVsc2Ugew0KLQkJCXJldHVybiAtRUlOVkFMOw0KLQkJfQ0K
LQl9DQotDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCWN1cnJlbnRfbGV2ZWwg
PSBzbXVfZ2V0X3BlcmZvcm1hbmNlX2xldmVsKCZhZGV2LT5zbXUpOw0KIAllbHNlIGlmIChhZGV2
LT5wb3dlcnBsYXkucHBfZnVuY3MtPmdldF9wZXJmb3JtYW5jZV9sZXZlbCkNCkBAIC00NDAsNiAr
NDM2LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9jdXJfc3RhdGUoc3RydWN0IGRl
dmljZSAqZGV2LA0KIAllbnVtIGFtZF9wbV9zdGF0ZV90eXBlIHBtID0gMDsNCiAJaW50IGkgPSAw
LCByZXQgPSAwOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jp
b3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmIChpc19zdXBwb3J0
X3N3X3NtdShhZGV2KSkgew0KIAkJcG0gPSBzbXVfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoc211
KTsNCiAJCXJldCA9IHNtdV9nZXRfcG93ZXJfbnVtX3N0YXRlcyhzbXUsICZkYXRhKTsNCkBAIC00
NjksNiArNDY4LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9mb3JjZV9zdGF0ZShz
dHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBkcm1fZGV2aWNlICpkZGV2ID0gZGV2X2dldF9k
cnZkYXRhKGRldik7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3By
aXZhdGU7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9p
c19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gMDsNCisNCiAJaWYgKGFkZXYtPnBwX2ZvcmNl
X3N0YXRlX2VuYWJsZWQpDQogCQlyZXR1cm4gYW1kZ3B1X2dldF9wcF9jdXJfc3RhdGUoZGV2LCBh
dHRyLCBidWYpOw0KIAllbHNlDQpAQCAtNDg2LDYgKzQ4OCw5IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9zZXRfcHBfZm9yY2Vfc3RhdGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1bnNpZ25lZCBs
b25nIGlkeDsNCiAJaW50IHJldDsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAh
YW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0K
IAlpZiAoc3RybGVuKGJ1ZikgPT0gMSkNCiAJCWFkZXYtPnBwX2ZvcmNlX3N0YXRlX2VuYWJsZWQg
PSBmYWxzZTsNCiAJZWxzZSBpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQpAQCAtNTM1LDYg
KzU0MCw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfdGFibGUoc3RydWN0IGRldmlj
ZSAqZGV2LA0KIAljaGFyICp0YWJsZSA9IE5VTEw7DQogCWludCBzaXplOw0KIA0KKwlpZiAoYW1k
Z3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0K
KwkJcmV0dXJuIDA7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0KIAkJc2l6
ZSA9IHNtdV9zeXNfZ2V0X3BwX3RhYmxlKCZhZGV2LT5zbXUsICh2b2lkICoqKSZ0YWJsZSk7DQog
CQlpZiAoc2l6ZSA8IDApDQpAQCAtNTYyLDYgKzU3MCw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdw
dV9zZXRfcHBfdGFibGUoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiA9IGRkZXYtPmRldl9wcml2YXRlOw0KIAlpbnQgcmV0ID0gMDsNCiANCisJaWYgKGFt
ZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkN
CisJCXJldHVybiAtRUlOVkFMOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsN
CiAJCXJldCA9IHNtdV9zeXNfc2V0X3BwX3RhYmxlKCZhZGV2LT5zbXUsICh2b2lkICopYnVmLCBj
b3VudCk7DQogCQlpZiAocmV0KQ0KQEAgLTY1NCw2ICs2NjUsOSBAQCBzdGF0aWMgc3NpemVfdCBh
bWRncHVfc2V0X3BwX29kX2Nsa192b2x0YWdlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJY29uc3Qg
Y2hhciBkZWxpbWl0ZXJbM10gPSB7JyAnLCAnXG4nLCAnXDAnfTsNCiAJdWludDMyX3QgdHlwZTsN
CiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0K
IAlpZiAoY291bnQgPiAxMjcpDQogCQlyZXR1cm4gLUVJTlZBTDsNCiANCkBAIC03MjYsNiArNzQw
LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9vZF9jbGtfdm9sdGFnZShzdHJ1Y3Qg
ZGV2aWNlICpkZXYsDQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3By
aXZhdGU7DQogCXVpbnQzMl90IHNpemUgPSAwOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFk
ZXYpKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgew0K
IAkJc2l6ZSA9IHNtdV9wcmludF9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9PRF9TQ0xLLCBi
dWYpOw0KIAkJc2l6ZSArPSBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfT0Rf
TUNMSywgYnVmK3NpemUpOw0KQEAgLTc3MCw2ICs3ODcsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfc2V0X3BwX2ZlYXR1cmVfc3RhdHVzKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJdWludDY0X3Qg
ZmVhdHVyZW1hc2s7DQogCWludCByZXQ7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikp
DQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCiAJcmV0ID0ga3N0cnRvdTY0KGJ1ZiwgMCwgJmZlYXR1
cmVtYXNrKTsNCiAJaWYgKHJldCkNCiAJCXJldHVybiAtRUlOVkFMOw0KQEAgLTc5Niw2ICs4MTYs
OSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2ZlYXR1cmVfc3RhdHVzKHN0cnVjdCBk
ZXZpY2UgKmRldiwNCiAJc3RydWN0IGRybV9kZXZpY2UgKmRkZXYgPSBkZXZfZ2V0X2RydmRhdGEo
ZGV2KTsNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsN
CiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAlpZiAo
aXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsNCiAJCXJldHVybiBzbXVfc3lzX2dldF9wcF9mZWF0
dXJlX21hc2soJmFkZXYtPnNtdSwgYnVmKTsNCiAJfSBlbHNlIGlmIChhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPmdldF9wcGZlYXR1cmVfc3RhdHVzKQ0KQEAgLTg0MSw5ICs4NjQsOCBAQCBzdGF0
aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9zY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJ
c3RydWN0IGRybV9kZXZpY2UgKmRkZXYgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsNCiAJc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsNCiANCi0JaWYgKGFtZGdw
dV9zcmlvdl92ZihhZGV2KSAmJiBhbWRnaW1faXNfaHdwZXJmKGFkZXYpICYmDQotCSAgICBhZGV2
LT52aXJ0Lm9wcy0+Z2V0X3BwX2NsaykNCi0JCXJldHVybiBhZGV2LT52aXJ0Lm9wcy0+Z2V0X3Bw
X2NsayhhZGV2LCBQUF9TQ0xLLCBidWYpOw0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYm
ICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7DQogDQogCWlm
IChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXJldHVybiBzbXVfcHJpbnRfY2xrX2xldmVs
cygmYWRldi0+c211LCBTTVVfU0NMSywgYnVmKTsNCkBAIC04OTksOCArOTIxLDggQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fc2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWlu
dCByZXQ7DQogCXVpbnQzMl90IG1hc2sgPSAwOw0KIA0KLQlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFk
ZXYpKQ0KLQkJcmV0dXJuIDA7DQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdw
dV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gLUVJTlZBTDsNCiANCiAJcmV0
ID0gYW1kZ3B1X3JlYWRfbWFzayhidWYsIGNvdW50LCAmbWFzayk7DQogCWlmIChyZXQpDQpAQCAt
OTI0LDkgKzk0Niw4IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX21jbGsoc3Ry
dWN0IGRldmljZSAqZGV2LA0KIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGRldiA9IGRldl9nZXRfZHJ2
ZGF0YShkZXYpOw0KIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRkZXYtPmRldl9wcml2
YXRlOw0KIA0KLQlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmIGFtZGdpbV9pc19od3BlcmYo
YWRldikgJiYNCi0JICAgIGFkZXYtPnZpcnQub3BzLT5nZXRfcHBfY2xrKQ0KLQkJcmV0dXJuIGFk
ZXYtPnZpcnQub3BzLT5nZXRfcHBfY2xrKGFkZXYsIFBQX01DTEssIGJ1Zik7DQorCWlmIChhbWRn
cHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQor
CQlyZXR1cm4gMDsNCiANCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJcmV0dXJu
IHNtdV9wcmludF9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9NQ0xLLCBidWYpOw0KQEAgLTk0
Niw4ICs5NjcsOCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9tY2xrKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJaW50IHJldDsNCiAJdWludDMyX3QgbWFzayA9IDA7DQogDQotCWlm
IChhbWRncHVfc3Jpb3ZfdmYoYWRldikpDQotCQlyZXR1cm4gMDsNCisJaWYgKGFtZGdwdV9zcmlv
dl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkNCisJCQlyZXR1
cm4gLUVJTlZBTDsNCiANCiAJcmV0ID0gYW1kZ3B1X3JlYWRfbWFzayhidWYsIGNvdW50LCAmbWFz
ayk7DQogCWlmIChyZXQpDQpAQCAtOTcxLDYgKzk5Miw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdw
dV9nZXRfcHBfZHBtX3NvY2NsayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBkcm1fZGV2
aWNlICpkZGV2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRl
dikgJiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gMDsNCisN
CiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJcmV0dXJuIHNtdV9wcmludF9jbGtf
bGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9TT0NDTEssIGJ1Zik7DQogCWVsc2UgaWYgKGFkZXYtPnBv
d2VycGxheS5wcF9mdW5jcy0+cHJpbnRfY2xvY2tfbGV2ZWxzKQ0KQEAgLTk4OSw2ICsxMDEzLDkg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fc29jY2xrKHN0cnVjdCBkZXZpY2Ug
KmRldiwNCiAJaW50IHJldDsNCiAJdWludDMyX3QgbWFzayA9IDA7DQogDQorCWlmIChhbWRncHVf
c3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQly
ZXR1cm4gLUVJTlZBTDsNCisNCiAJcmV0ID0gYW1kZ3B1X3JlYWRfbWFzayhidWYsIGNvdW50LCAm
bWFzayk7DQogCWlmIChyZXQpDQogCQlyZXR1cm4gcmV0Ow0KQEAgLTEwMTEsNiArMTAzOCw5IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRfcHBfZHBtX2ZjbGsoc3RydWN0IGRldmljZSAqZGV2
LA0KIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGRldiA9IGRldl9nZXRfZHJ2ZGF0YShkZXYpOw0KIAlz
dHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRkZXYtPmRldl9wcml2YXRlOw0KIA0KKwlpZiAo
YW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYp
KQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXJl
dHVybiBzbXVfcHJpbnRfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfRkNMSywgYnVmKTsNCiAJ
ZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5wcmludF9jbG9ja19sZXZlbHMpDQpA
QCAtMTAyOSw2ICsxMDU5LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fZmNs
ayhzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWludCByZXQ7DQogCXVpbnQzMl90IG1hc2sgPSAwOw0K
IA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25l
X3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQogCXJldCA9IGFtZGdwdV9yZWFkX21h
c2soYnVmLCBjb3VudCwgJm1hc2spOw0KIAlpZiAocmV0KQ0KIAkJcmV0dXJuIHJldDsNCkBAIC0x
MDUxLDYgKzEwODQsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3BwX2RwbV9kY2VmY2xr
KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3RydWN0IGRybV9kZXZpY2UgKmRkZXYgPSBkZXZfZ2V0
X2RydmRhdGEoZGV2KTsNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5kZXZf
cHJpdmF0ZTsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0K
Kw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQlyZXR1cm4gc211X3ByaW50X2Ns
a19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX0RDRUZDTEssIGJ1Zik7DQogCWVsc2UgaWYgKGFkZXYt
PnBvd2VycGxheS5wcF9mdW5jcy0+cHJpbnRfY2xvY2tfbGV2ZWxzKQ0KQEAgLTEwNjksNiArMTEw
NSw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX2RjZWZjbGsoc3RydWN0IGRl
dmljZSAqZGV2LA0KIAlpbnQgcmV0Ow0KIAl1aW50MzJfdCBtYXNrID0gMDsNCiANCisJaWYgKGFt
ZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KIAlyZXQgPSBhbWRn
cHVfcmVhZF9tYXNrKGJ1ZiwgY291bnQsICZtYXNrKTsNCiAJaWYgKHJldCkNCiAJCXJldHVybiBy
ZXQ7DQpAQCAtMTA5MSw2ICsxMTMwLDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wcF9k
cG1fcGNpZShzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBkcm1fZGV2aWNlICpkZGV2ID0g
ZGV2X2dldF9kcnZkYXRhKGRldik7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRl
di0+ZGV2X3ByaXZhdGU7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdw
dV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gMDsNCisNCiAJaWYgKGlzX3N1
cHBvcnRfc3dfc211KGFkZXYpKQ0KIAkJcmV0dXJuIHNtdV9wcmludF9jbGtfbGV2ZWxzKCZhZGV2
LT5zbXUsIFNNVV9QQ0lFLCBidWYpOw0KIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVu
Y3MtPnByaW50X2Nsb2NrX2xldmVscykNCkBAIC0xMTA5LDYgKzExNTEsOSBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfc2V0X3BwX2RwbV9wY2llKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IHJl
dDsNCiAJdWludDMyX3QgbWFzayA9IDA7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikg
JiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gLUVJTlZBTDsN
CisNCiAJcmV0ID0gYW1kZ3B1X3JlYWRfbWFzayhidWYsIGNvdW50LCAmbWFzayk7DQogCWlmIChy
ZXQpDQogCQlyZXR1cm4gcmV0Ow0KQEAgLTExMzIsNiArMTE3Nyw5IEBAIHN0YXRpYyBzc2l6ZV90
IGFtZGdwdV9nZXRfcHBfc2Nsa19vZChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7DQogCXVpbnQzMl90IHZhbHVlID0g
MDsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAlp
ZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQl2YWx1ZSA9IHNtdV9nZXRfb2RfcGVyY2Vu
dGFnZSgmKGFkZXYtPnNtdSksIFNNVV9PRF9TQ0xLKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJw
bGF5LnBwX2Z1bmNzLT5nZXRfc2Nsa19vZCkNCkBAIC0xMTUwLDYgKzExOTgsOSBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfc2V0X3BwX3NjbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQg
cmV0Ow0KIAlsb25nIGludCB2YWx1ZTsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkN
CisJCXJldHVybiAtRUlOVkFMOw0KKw0KIAlyZXQgPSBrc3RydG9sKGJ1ZiwgMCwgJnZhbHVlKTsN
CiANCiAJaWYgKHJldCkgew0KQEAgLTExODMsNiArMTIzNCw5IEBAIHN0YXRpYyBzc2l6ZV90IGFt
ZGdwdV9nZXRfcHBfbWNsa19vZChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7DQogCXVpbnQzMl90IHZhbHVlID0gMDsN
CiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAlpZiAo
aXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQl2YWx1ZSA9IHNtdV9nZXRfb2RfcGVyY2VudGFn
ZSgmKGFkZXYtPnNtdSksIFNNVV9PRF9NQ0xLKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5
LnBwX2Z1bmNzLT5nZXRfbWNsa19vZCkNCkBAIC0xMjAxLDYgKzEyNTUsOSBAQCBzdGF0aWMgc3Np
emVfdCBhbWRncHVfc2V0X3BwX21jbGtfb2Qoc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQgcmV0
Ow0KIAlsb25nIGludCB2YWx1ZTsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJ
CXJldHVybiAwOw0KKw0KIAlyZXQgPSBrc3RydG9sKGJ1ZiwgMCwgJnZhbHVlKTsNCiANCiAJaWYg
KHJldCkgew0KQEAgLTEyNTMsNiArMTMxMCw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9nZXRf
cHBfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJc3RydWN0IGRybV9k
ZXZpY2UgKmRkZXYgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsNCiAJc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYgPSBkZGV2LT5kZXZfcHJpdmF0ZTsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92Zihh
ZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkNCisJCXJldHVybiAwOw0K
Kw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpDQogCQlyZXR1cm4gc211X2dldF9wb3dl
cl9wcm9maWxlX21vZGUoJmFkZXYtPnNtdSwgYnVmKTsNCiAJZWxzZSBpZiAoYWRldi0+cG93ZXJw
bGF5LnBwX2Z1bmNzLT5nZXRfcG93ZXJfcHJvZmlsZV9tb2RlKQ0KQEAgLTEyODUsNiArMTM0NSw5
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVj
dCBkZXZpY2UgKmRldiwNCiAJaWYgKHJldCkNCiAJCWdvdG8gZmFpbDsNCiANCisJaWYgKGFtZGdw
dV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkNCisJ
CXJldHVybiAtRUlOVkFMOw0KKw0KIAlpZiAocHJvZmlsZV9tb2RlID09IFBQX1NNQ19QT1dFUl9Q
Uk9GSUxFX0NVU1RPTSkgew0KIAkJaWYgKGNvdW50IDwgMiB8fCBjb3VudCA+IDEyNykNCiAJCQly
ZXR1cm4gLUVJTlZBTDsNCkBAIC0xMzMxLDYgKzEzOTQsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRn
cHVfZ2V0X2J1c3lfcGVyY2VudChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3ByaXZhdGU7DQogCWludCByLCB2YWx1ZSwgc2l6ZSA9
IHNpemVvZih2YWx1ZSk7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdw
dV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gMDsNCisNCiAJLyogcmVhZCB0
aGUgSVAgYnVzeSBzZW5zb3IgKi8NCiAJciA9IGFtZGdwdV9kcG1fcmVhZF9zZW5zb3IoYWRldiwg
QU1ER1BVX1BQX1NFTlNPUl9HUFVfTE9BRCwNCiAJCQkJICAgKHZvaWQgKikmdmFsdWUsICZzaXpl
KTsNCkBAIC0xMzU3LDYgKzE0MjMsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X21lbW9y
eV9idXN5X3BlcmNlbnQoc3RydWN0IGRldmljZSAqZGV2LA0KIAlzdHJ1Y3QgYW1kZ3B1X2Rldmlj
ZSAqYWRldiA9IGRkZXYtPmRldl9wcml2YXRlOw0KIAlpbnQgciwgdmFsdWUsIHNpemUgPSBzaXpl
b2YodmFsdWUpOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jp
b3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7DQorDQogCS8qIHJlYWQgdGhlIElQ
IGJ1c3kgc2Vuc29yICovDQogCXIgPSBhbWRncHVfZHBtX3JlYWRfc2Vuc29yKGFkZXYsIEFNREdQ
VV9QUF9TRU5TT1JfTUVNX0xPQUQsDQogCQkJCSAgICh2b2lkICopJnZhbHVlLCAmc2l6ZSk7DQpA
QCAtMTM4Nyw2ICsxNDU2LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2dldF9wY2llX2J3KHN0
cnVjdCBkZXZpY2UgKmRldiwNCiAJc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBkZGV2LT5k
ZXZfcHJpdmF0ZTsNCiAJdWludDY0X3QgY291bnQwLCBjb3VudDE7DQogDQorCWlmIChhbWRncHVf
c3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYoYWRldikpDQorCQly
ZXR1cm4gMDsNCisNCiAJYW1kZ3B1X2FzaWNfZ2V0X3BjaWVfdXNhZ2UoYWRldiwgJmNvdW50MCwg
JmNvdW50MSk7DQogCXJldHVybiBzbnByaW50ZihidWYsIFBBR0VfU0laRSwJIiVsbHUgJWxsdSAl
aVxuIiwNCiAJCQljb3VudDAsIGNvdW50MSwgcGNpZV9nZXRfbXBzKGFkZXYtPnBkZXYpKTsNCkBA
IC0xNDA5LDYgKzE0ODEsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfZ2V0X3VuaXF1ZV9pZChz
dHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBkcm1fZGV2aWNlICpkZGV2ID0gZGV2X2dldF9k
cnZkYXRhKGRldik7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGRldi0+ZGV2X3By
aXZhdGU7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9p
c19wcF9vbmVfdmYoYWRldikpDQorCQlyZXR1cm4gMDsNCisNCiAJaWYgKGFkZXYtPnVuaXF1ZV9p
ZCkNCiAJCXJldHVybiBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIiUwMTZsbHhcbiIsIGFkZXYt
PnVuaXF1ZV9pZCk7DQogDQpAQCAtMTQ3Niw2ICsxNTUxLDkgQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X2h3bW9uX3Nob3dfdGVtcChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCWludCBjaGFubmVsID0g
dG9fc2Vuc29yX2Rldl9hdHRyKGF0dHIpLT5pbmRleDsNCiAJaW50IHIsIHRlbXAgPSAwLCBzaXpl
ID0gc2l6ZW9mKHRlbXApOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRn
cHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7DQorDQogCS8qIENhbid0
IGdldCB0ZW1wZXJhdHVyZSB3aGVuIHRoZSBjYXJkIGlzIG9mZiAqLw0KIAlpZiAgKChhZGV2LT5m
bGFncyAmIEFNRF9JU19QWCkgJiYNCiAJICAgICAoZGRldi0+c3dpdGNoX3Bvd2VyX3N0YXRlICE9
IERSTV9TV0lUQ0hfUE9XRVJfT04pKQ0KQEAgLTE1MTksNiArMTU5Nyw5IEBAIHN0YXRpYyBzc2l6
ZV90IGFtZGdwdV9od21vbl9zaG93X3RlbXBfdGhyZXNoKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJ
aW50IGh5c3QgPSB0b19zZW5zb3JfZGV2X2F0dHIoYXR0ciktPmluZGV4Ow0KIAlpbnQgdGVtcDsN
CiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29u
ZV92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAlpZiAoaHlzdCkNCiAJCXRlbXAgPSBhZGV2
LT5wbS5kcG0udGhlcm1hbC5taW5fdGVtcDsNCiAJZWxzZQ0KQEAgLTE1MzUsNiArMTYxNiw5IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X2hvdHNwb3RfdGVtcF90aHJlc2goc3Ry
dWN0IGRldmljZSAqZGV2LA0KIAlpbnQgaHlzdCA9IHRvX3NlbnNvcl9kZXZfYXR0cihhdHRyKS0+
aW5kZXg7DQogCWludCB0ZW1wOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFh
bWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmICho
eXN0KQ0KIAkJdGVtcCA9IGFkZXYtPnBtLmRwbS50aGVybWFsLm1pbl9ob3RzcG90X3RlbXA7DQog
CWVsc2UNCkBAIC0xNTUxLDYgKzE2MzUsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25f
c2hvd19tZW1fdGVtcF90aHJlc2goc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQgaHlzdCA9IHRv
X3NlbnNvcl9kZXZfYXR0cihhdHRyKS0+aW5kZXg7DQogCWludCB0ZW1wOw0KIA0KKwlpZiAoYW1k
Z3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0K
KwkJcmV0dXJuIDA7DQorDQogCWlmIChoeXN0KQ0KIAkJdGVtcCA9IGFkZXYtPnBtLmRwbS50aGVy
bWFsLm1pbl9tZW1fdGVtcDsNCiAJZWxzZQ0KQEAgLTE1NjQsNiArMTY1MSwxMCBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfaHdtb25fc2hvd190ZW1wX2xhYmVsKHN0cnVjdCBkZXZpY2UgKmRldiwN
CiAJCQkJCSAgICAgY2hhciAqYnVmKQ0KIHsNCiAJaW50IGNoYW5uZWwgPSB0b19zZW5zb3JfZGV2
X2F0dHIoYXR0ciktPmluZGV4Ow0KKwlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGRldl9n
ZXRfZHJ2ZGF0YShkZXYpOw0KKw0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRn
cHVfc3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7DQogDQogCWlmIChjaGFu
bmVsID49IFBQX1RFTVBfTUFYKQ0KIAkJcmV0dXJuIC1FSU5WQUw7DQpAQCAtMTU3OSw2ICsxNjcw
LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfdGVtcF9lbWVyZ2VuY3koc3Ry
dWN0IGRldmljZSAqZGV2LA0KIAlpbnQgY2hhbm5lbCA9IHRvX3NlbnNvcl9kZXZfYXR0cihhdHRy
KS0+aW5kZXg7DQogCWludCB0ZW1wID0gMDsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2
KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0K
IAlpZiAoY2hhbm5lbCA+PSBQUF9URU1QX01BWCkNCiAJCXJldHVybiAtRUlOVkFMOw0KIA0KQEAg
LTE2MDMsNiArMTY5NywxMCBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fZ2V0X3B3bTFf
ZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiB7DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7DQogCXUzMiBwd21fbW9kZSA9IDA7DQorDQorCWlm
IChhbWRncHVfc3Jpb3ZfdmYoYWRldikpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCiAJaWYgKGlz
X3N1cHBvcnRfc3dfc211KGFkZXYpKSB7DQogCQlwd21fbW9kZSA9IHNtdV9nZXRfZmFuX2NvbnRy
b2xfbW9kZSgmYWRldi0+c211KTsNCiAJfSBlbHNlIHsNCkBAIC0xNjI0LDYgKzE3MjIsOSBAQCBz
dGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X3B3bTFfZW5hYmxlKHN0cnVjdCBkZXZpY2Ug
KmRldiwNCiAJaW50IGVycjsNCiAJaW50IHZhbHVlOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3Zm
KGFkZXYpKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQogCS8qIENhbid0IGFkanVzdCBmYW4gd2hl
biB0aGUgY2FyZCBpcyBvZmYgKi8NCiAJaWYgICgoYWRldi0+ZmxhZ3MgJiBBTURfSVNfUFgpICYm
DQogCSAgICAgKGFkZXYtPmRkZXYtPnN3aXRjaF9wb3dlcl9zdGF0ZSAhPSBEUk1fU1dJVENIX1BP
V0VSX09OKSkNCkBAIC0xNjY4LDYgKzE3NjksOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdt
b25fc2V0X3B3bTEoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1MzIgdmFsdWU7DQogCXUzMiBwd21f
bW9kZTsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAtRUlOVkFM
Ow0KKw0KIAkvKiBDYW4ndCBhZGp1c3QgZmFuIHdoZW4gdGhlIGNhcmQgaXMgb2ZmICovDQogCWlm
ICAoKGFkZXYtPmZsYWdzICYgQU1EX0lTX1BYKSAmJg0KIAkgICAgIChhZGV2LT5kZGV2LT5zd2l0
Y2hfcG93ZXJfc3RhdGUgIT0gRFJNX1NXSVRDSF9QT1dFUl9PTikpDQpAQCAtMTcwOCw2ICsxODEy
LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9wd20xKHN0cnVjdCBkZXZpY2Ug
KmRldiwNCiAJaW50IGVycjsNCiAJdTMyIHNwZWVkID0gMDsNCiANCisJaWYgKGFtZGdwdV9zcmlv
dl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAkvKiBDYW4ndCBhZGp1c3QgZmFuIHdoZW4g
dGhlIGNhcmQgaXMgb2ZmICovDQogCWlmICAoKGFkZXYtPmZsYWdzICYgQU1EX0lTX1BYKSAmJg0K
IAkgICAgIChhZGV2LT5kZGV2LT5zd2l0Y2hfcG93ZXJfc3RhdGUgIT0gRFJNX1NXSVRDSF9QT1dF
Ul9PTikpDQpAQCAtMTczNiw2ICsxODQzLDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9u
X2dldF9mYW4xX2lucHV0KHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IGVycjsNCiAJdTMyIHNw
ZWVkID0gMDsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0K
Kw0KIAkvKiBDYW4ndCBhZGp1c3QgZmFuIHdoZW4gdGhlIGNhcmQgaXMgb2ZmICovDQogCWlmICAo
KGFkZXYtPmZsYWdzICYgQU1EX0lTX1BYKSAmJg0KIAkgICAgIChhZGV2LT5kZGV2LT5zd2l0Y2hf
cG93ZXJfc3RhdGUgIT0gRFJNX1NXSVRDSF9QT1dFUl9PTikpDQpAQCAtMTc4MCw2ICsxODkwLDkg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX21heChzdHJ1Y3QgZGV2aWNl
ICpkZXYsDQogCXUzMiBzaXplID0gc2l6ZW9mKG1heF9ycG0pOw0KIAlpbnQgcjsNCiANCisJaWYg
KGFtZGdwdV9zcmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAlyID0gYW1kZ3B1X2Rw
bV9yZWFkX3NlbnNvcihhZGV2LCBBTURHUFVfUFBfU0VOU09SX01BWF9GQU5fUlBNLA0KIAkJCQkg
ICAodm9pZCAqKSZtYXhfcnBtLCAmc2l6ZSk7DQogCWlmIChyKQ0KQEAgLTE3OTYsNiArMTkwOSw5
IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9nZXRfZmFuMV90YXJnZXQoc3RydWN0IGRl
dmljZSAqZGV2LA0KIAlpbnQgZXJyOw0KIAl1MzIgcnBtID0gMDsNCiANCisJaWYgKGFtZGdwdV9z
cmlvdl92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAkvKiBDYW4ndCBhZGp1c3QgZmFuIHdo
ZW4gdGhlIGNhcmQgaXMgb2ZmICovDQogCWlmICAoKGFkZXYtPmZsYWdzICYgQU1EX0lTX1BYKSAm
Jg0KIAkgICAgIChhZGV2LT5kZGV2LT5zd2l0Y2hfcG93ZXJfc3RhdGUgIT0gRFJNX1NXSVRDSF9Q
T1dFUl9PTikpDQpAQCAtMTgyMyw2ICsxOTM5LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3
bW9uX3NldF9mYW4xX3RhcmdldChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXUzMiB2YWx1ZTsNCiAJ
dTMyIHB3bV9tb2RlOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpICYmICFhbWRncHVf
c3Jpb3ZfaXNfcHBfb25lX3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQogCWlmIChp
c19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCiAJCXB3bV9tb2RlID0gc211X2dldF9mYW5fY29udHJv
bF9tb2RlKCZhZGV2LT5zbXUpOw0KIAllbHNlDQpAQCAtMTg2MCw2ICsxOTc5LDkgQEAgc3RhdGlj
IHNzaXplX3QgYW1kZ3B1X2h3bW9uX2dldF9mYW4xX2VuYWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYs
DQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7DQog
CXUzMiBwd21fbW9kZSA9IDA7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikpDQorCQly
ZXR1cm4gMDsNCisNCiAJaWYgKGlzX3N1cHBvcnRfc3dfc211KGFkZXYpKSB7DQogCQlwd21fbW9k
ZSA9IHNtdV9nZXRfZmFuX2NvbnRyb2xfbW9kZSgmYWRldi0+c211KTsNCiAJfSBlbHNlIHsNCkBA
IC0xODgxLDYgKzIwMDMsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2V0X2ZhbjFf
ZW5hYmxlKHN0cnVjdCBkZXZpY2UgKmRldiwNCiAJaW50IHZhbHVlOw0KIAl1MzIgcHdtX21vZGU7
DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisN
CiAJLyogQ2FuJ3QgYWRqdXN0IGZhbiB3aGVuIHRoZSBjYXJkIGlzIG9mZiAqLw0KIAlpZiAgKChh
ZGV2LT5mbGFncyAmIEFNRF9JU19QWCkgJiYNCiAJICAgICAoYWRldi0+ZGRldi0+c3dpdGNoX3Bv
d2VyX3N0YXRlICE9IERSTV9TV0lUQ0hfUE9XRVJfT04pKQ0KQEAgLTE5MTgsNiArMjA0Myw5IEBA
IHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X3ZkZGdmeChzdHJ1Y3QgZGV2aWNlICpk
ZXYsDQogCXUzMiB2ZGRnZng7DQogCWludCByLCBzaXplID0gc2l6ZW9mKHZkZGdmeCk7DQogDQor
CWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYo
YWRldikpDQorCQlyZXR1cm4gMDsNCisNCiAJLyogQ2FuJ3QgZ2V0IHZvbHRhZ2Ugd2hlbiB0aGUg
Y2FyZCBpcyBvZmYgKi8NCiAJaWYgICgoYWRldi0+ZmxhZ3MgJiBBTURfSVNfUFgpICYmDQogCSAg
ICAgKGRkZXYtPnN3aXRjaF9wb3dlcl9zdGF0ZSAhPSBEUk1fU1dJVENIX1BPV0VSX09OKSkNCkBA
IC0xOTQ4LDYgKzIwNzYsOSBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfaHdtb25fc2hvd192ZGRu
YihzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXUzMiB2ZGRuYjsNCiAJaW50IHIsIHNpemUgPSBzaXpl
b2YodmRkbmIpOw0KIA0KKwlpZiAoYW1kZ3B1X3NyaW92X3ZmKGFkZXYpKQ0KKwkJcmV0dXJuIDA7
DQorDQogCS8qIG9ubHkgQVBVcyBoYXZlIHZkZG5iICovDQogCWlmICAoIShhZGV2LT5mbGFncyAm
IEFNRF9JU19BUFUpKQ0KIAkJcmV0dXJuIC1FSU5WQUw7DQpAQCAtMTk4Myw2ICsyMTE0LDkgQEAg
c3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfYXZnKHN0cnVjdCBkZXZpY2Ug
KmRldiwNCiAJaW50IHIsIHNpemUgPSBzaXplb2YodTMyKTsNCiAJdW5zaWduZWQgdXc7DQogDQor
CWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikgJiYgIWFtZGdwdV9zcmlvdl9pc19wcF9vbmVfdmYo
YWRldikpDQorCQlyZXR1cm4gMDsNCisNCiAJLyogQ2FuJ3QgZ2V0IHBvd2VyIHdoZW4gdGhlIGNh
cmQgaXMgb2ZmICovDQogCWlmICAoKGFkZXYtPmZsYWdzICYgQU1EX0lTX1BYKSAmJg0KIAkgICAg
IChkZGV2LT5zd2l0Y2hfcG93ZXJfc3RhdGUgIT0gRFJNX1NXSVRDSF9QT1dFUl9PTikpDQpAQCAt
MjAxNCw2ICsyMTQ4LDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJf
Y2FwX21heChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
ID0gZGV2X2dldF9kcnZkYXRhKGRldik7DQogCXVpbnQzMl90IGxpbWl0ID0gMDsNCiANCisJaWYg
KGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2
KSkNCisJCXJldHVybiAwOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsNCiAJ
CXNtdV9nZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCB0cnVlLCB0cnVlKTsNCiAJ
CXJldHVybiBzbnByaW50ZihidWYsIFBBR0VfU0laRSwgIiV1XG4iLCBsaW1pdCAqIDEwMDAwMDAp
Ow0KQEAgLTIwMzIsNiArMjE2OSw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93
X3Bvd2VyX2NhcChzdHJ1Y3QgZGV2aWNlICpkZXYsDQogCXN0cnVjdCBhbWRncHVfZGV2aWNlICph
ZGV2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7DQogCXVpbnQzMl90IGxpbWl0ID0gMDsNCiANCisJ
aWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92Zihh
ZGV2KSkNCisJCXJldHVybiAwOw0KKw0KIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsN
CiAJCXNtdV9nZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCBmYWxzZSwgIHRydWUp
Ow0KIAkJcmV0dXJuIHNucHJpbnRmKGJ1ZiwgUEFHRV9TSVpFLCAiJXVcbiIsIGxpbWl0ICogMTAw
MDAwMCk7DQpAQCAtMjA1Myw2ICsyMTkzLDkgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9u
X3NldF9wb3dlcl9jYXAoc3RydWN0IGRldmljZSAqZGV2LA0KIAlpbnQgZXJyOw0KIAl1MzIgdmFs
dWU7DQogDQorCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikpDQorCQlyZXR1cm4gLUVJTlZBTDsN
CisNCiAJZXJyID0ga3N0cnRvdTMyKGJ1ZiwgMTAsICZ2YWx1ZSk7DQogCWlmIChlcnIpDQogCQly
ZXR1cm4gZXJyOw0KQEAgLTIwODIsNiArMjIyNSw5IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9o
d21vbl9zaG93X3NjbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1aW50MzJfdCBzY2xrOw0KIAlp
bnQgciwgc2l6ZSA9IHNpemVvZihzY2xrKTsNCiANCisJaWYgKGFtZGdwdV9zcmlvdl92ZihhZGV2
KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkNCisJCXJldHVybiAwOw0KKw0K
IAkvKiBDYW4ndCBnZXQgdm9sdGFnZSB3aGVuIHRoZSBjYXJkIGlzIG9mZiAqLw0KIAlpZiAgKChh
ZGV2LT5mbGFncyAmIEFNRF9JU19QWCkgJiYNCiAJICAgICAoZGRldi0+c3dpdGNoX3Bvd2VyX3N0
YXRlICE9IERSTV9TV0lUQ0hfUE9XRVJfT04pKQ0KQEAgLTIxMTIsNiArMjI1OCw5IEBAIHN0YXRp
YyBzc2l6ZV90IGFtZGdwdV9od21vbl9zaG93X21jbGsoc3RydWN0IGRldmljZSAqZGV2LA0KIAl1
aW50MzJfdCBtY2xrOw0KIAlpbnQgciwgc2l6ZSA9IHNpemVvZihtY2xrKTsNCiANCisJaWYgKGFt
ZGdwdV9zcmlvdl92ZihhZGV2KSAmJiAhYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92ZihhZGV2KSkN
CisJCXJldHVybiAwOw0KKw0KIAkvKiBDYW4ndCBnZXQgdm9sdGFnZSB3aGVuIHRoZSBjYXJkIGlz
IG9mZiAqLw0KIAlpZiAgKChhZGV2LT5mbGFncyAmIEFNRF9JU19QWCkgJiYNCiAJICAgICAoZGRl
di0+c3dpdGNoX3Bvd2VyX3N0YXRlICE9IERSTV9TV0lUQ0hfUE9XRVJfT04pKQ0KQEAgLTI3MzAs
NDQgKzI4NzksNiBAQCB2b2lkIGFtZGdwdV9kcG1fZW5hYmxlX2pwZWcoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYsIGJvb2wgZW5hYmxlKQ0KIAl9DQogfQ0KIA0KLWludCBhbWRncHVfcG1fdmly
dF9zeXNmc19pbml0KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQ0KLXsNCi0JaW50IHJldCA9
IDA7DQotDQotCWlmICghKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiBhbWRnaW1faXNfaHdwZXJm
KGFkZXYpKSkNCi0JCXJldHVybiByZXQ7DQotDQotCXJldCA9IGRldmljZV9jcmVhdGVfZmlsZShh
ZGV2LT5kZXYsICZkZXZfYXR0cl9wcF9kcG1fc2Nsayk7DQotCWlmIChyZXQpIHsNCi0JCURSTV9F
UlJPUigiZmFpbGVkIHRvIGNyZWF0ZSBkZXZpY2UgZmlsZSBwcF9kcG1fc2Nsa1xuIik7DQotCQly
ZXR1cm4gcmV0Ow0KLQl9DQotDQotCXJldCA9IGRldmljZV9jcmVhdGVfZmlsZShhZGV2LT5kZXYs
ICZkZXZfYXR0cl9wcF9kcG1fbWNsayk7DQotCWlmIChyZXQpIHsNCi0JCURSTV9FUlJPUigiZmFp
bGVkIHRvIGNyZWF0ZSBkZXZpY2UgZmlsZSBwcF9kcG1fbWNsa1xuIik7DQotCQlyZXR1cm4gcmV0
Ow0KLQl9DQotDQotCXJldCA9IGRldmljZV9jcmVhdGVfZmlsZShhZGV2LT5kZXYsICZkZXZfYXR0
cl9wb3dlcl9kcG1fZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwpOw0KLQlpZiAocmV0KSB7DQotCQlE
Uk1fRVJST1IoImZhaWxlZCB0byBjcmVhdGUgZGV2aWNlIGZpbGUgZm9yIGRwbSBzdGF0ZVxuIik7
DQotCQlyZXR1cm4gcmV0Ow0KLQl9DQotDQotCXJldHVybiByZXQ7DQotfQ0KLQ0KLXZvaWQgYW1k
Z3B1X3BtX3ZpcnRfc3lzZnNfZmluaShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldikNCi17DQot
CWlmICghKGFtZGdwdV9zcmlvdl92ZihhZGV2KSAmJiBhbWRnaW1faXNfaHdwZXJmKGFkZXYpKSkN
Ci0JCXJldHVybjsNCi0NCi0JZGV2aWNlX3JlbW92ZV9maWxlKGFkZXYtPmRldiwgJmRldl9hdHRy
X3Bvd2VyX2RwbV9mb3JjZV9wZXJmb3JtYW5jZV9sZXZlbCk7DQotCWRldmljZV9yZW1vdmVfZmls
ZShhZGV2LT5kZXYsICZkZXZfYXR0cl9wcF9kcG1fc2Nsayk7DQotCWRldmljZV9yZW1vdmVfZmls
ZShhZGV2LT5kZXYsICZkZXZfYXR0cl9wcF9kcG1fbWNsayk7DQotfQ0KLQ0KIGludCBhbWRncHVf
cG1fbG9hZF9zbXVfZmlybXdhcmUoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHVpbnQzMl90
ICpzbXVfdmVyc2lvbikNCiB7DQogCWludCByOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfdmlydC5jDQppbmRleCBlMzJhZTkwNmQ3OTcuLjEwMzAzM2Y5NmYxMyAxMDA2NDQNCi0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmMNCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmMNCkBAIC0zNzksNTQgKzM3OSwzIEBA
IHZvaWQgYW1kZ3B1X3ZpcnRfaW5pdF9kYXRhX2V4Y2hhbmdlKHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2KQ0KIAkJfQ0KIAl9DQogfQ0KLQ0KLXN0YXRpYyB1aW50MzJfdCBwYXJzZV9jbGsoY2hh
ciAqYnVmLCBib29sIG1pbikNCi17DQotICAgICAgICBjaGFyICpwdHIgPSBidWY7DQotICAgICAg
ICB1aW50MzJfdCBjbGsgPSAwOw0KLQ0KLSAgICAgICAgZG8gew0KLSAgICAgICAgICAgICAgICBw
dHIgPSBzdHJjaHIocHRyLCAnOicpOw0KLSAgICAgICAgICAgICAgICBpZiAoIXB0cikNCi0gICAg
ICAgICAgICAgICAgICAgICAgICBicmVhazsNCi0gICAgICAgICAgICAgICAgcHRyKz0yOw0KLQkJ
aWYgKGtzdHJ0b3UzMihwdHIsIDEwLCAmY2xrKSkNCi0JCQlyZXR1cm4gMDsNCi0gICAgICAgIH0g
d2hpbGUgKCFtaW4pOw0KLQ0KLSAgICAgICAgcmV0dXJuIGNsayAqIDEwMDsNCi19DQotDQotdWlu
dDMyX3QgYW1kZ3B1X3ZpcnRfZ2V0X3NjbGsoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsIGJv
b2wgbG93ZXN0KQ0KLXsNCi0JY2hhciAqYnVmID0gTlVMTDsNCi0JdWludDMyX3QgY2xrID0gMDsN
Ci0NCi0JYnVmID0ga3phbGxvYyhQQUdFX1NJWkUsIEdGUF9LRVJORUwpOw0KLQlpZiAoIWJ1ZikN
Ci0JCXJldHVybiAtRU5PTUVNOw0KLQ0KLQlhZGV2LT52aXJ0Lm9wcy0+Z2V0X3BwX2NsayhhZGV2
LCBQUF9TQ0xLLCBidWYpOw0KLQljbGsgPSBwYXJzZV9jbGsoYnVmLCBsb3dlc3QpOw0KLQ0KLQlr
ZnJlZShidWYpOw0KLQ0KLQlyZXR1cm4gY2xrOw0KLX0NCi0NCi11aW50MzJfdCBhbWRncHVfdmly
dF9nZXRfbWNsayhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgYm9vbCBsb3dlc3QpDQotew0K
LQljaGFyICpidWYgPSBOVUxMOw0KLQl1aW50MzJfdCBjbGsgPSAwOw0KLQ0KLQlidWYgPSBremFs
bG9jKFBBR0VfU0laRSwgR0ZQX0tFUk5FTCk7DQotCWlmICghYnVmKQ0KLQkJcmV0dXJuIC1FTk9N
RU07DQotDQotCWFkZXYtPnZpcnQub3BzLT5nZXRfcHBfY2xrKGFkZXYsIFBQX01DTEssIGJ1Zik7
DQotCWNsayA9IHBhcnNlX2NsayhidWYsIGxvd2VzdCk7DQotDQotCWtmcmVlKGJ1Zik7DQotDQot
CXJldHVybiBjbGs7DQotfQ0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV92aXJ0LmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfdmlydC5o
DQppbmRleCBiMGIyYmRjNzUwZGYuLjRkMWFjNzYxMjk2NyAxMDA2NDQNCi0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmgNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV92aXJ0LmgNCkBAIC01Nyw4ICs1Nyw2IEBAIHN0cnVjdCBhbWRncHVf
dmlydF9vcHMgew0KIAlpbnQgKCpyZXNldF9ncHUpKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2
KTsNCiAJaW50ICgqd2FpdF9yZXNldCkoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOw0KIAl2
b2lkICgqdHJhbnNfbXNnKShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdTMyIHJlcSwgdTMy
IGRhdGExLCB1MzIgZGF0YTIsIHUzMiBkYXRhMyk7DQotCWludCAoKmdldF9wcF9jbGspKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2LCB1MzIgdHlwZSwgY2hhciAqYnVmKTsNCi0JaW50ICgqZm9y
Y2VfZHBtX2xldmVsKShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdTMyIGxldmVsKTsNCiB9
Ow0KIA0KIC8qDQpAQCAtODUsOCArODMsOCBAQCBlbnVtIEFNREdJTV9GRUFUVVJFX0ZMQUcgew0K
IAlBTURHSU1fRkVBVFVSRV9HSU1fTE9BRF9VQ09ERVMgICA9IDB4MiwNCiAJLyogVlJBTSBMT1NU
IGJ5IEdJTSAqLw0KIAlBTURHSU1fRkVBVFVSRV9HSU1fRkxSX1ZSQU1MT1NUID0gMHg0LA0KLQkv
KiBIVyBQRVJGIFNJTSBpbiBHSU0gKi8NCi0JQU1ER0lNX0ZFQVRVUkVfSFdfUEVSRl9TSU1VTEFU
SU9OID0gKDEgPDwgMyksDQorCS8qIFBQIE9ORSBWRiBNT0RFIGluIEdJTSAqLw0KKwlBTURHSU1f
RkVBVFVSRV9QUF9PTkVfVkYgPSAoMSA8PCA0KSwNCiB9Ow0KIA0KIHN0cnVjdCBhbWRfc3Jpb3Zf
bXNnX3BmMnZmX2luZm9faGVhZGVyIHsNCkBAIC0yNTcsOCArMjU1LDYgQEAgc3RydWN0IGFtZGdw
dV92aXJ0IHsNCiAJc3RydWN0IGFtZGdwdV92Zl9lcnJvcl9idWZmZXIgICB2Zl9lcnJvcnM7DQog
CXN0cnVjdCBhbWRncHVfdmlydF9md19yZXNlcnZlCWZ3X3Jlc2VydmU7DQogCXVpbnQzMl90IGdp
bV9mZWF0dXJlOw0KLQkvKiBwcm90ZWN0IERQTSBldmVudHMgdG8gR0lNICovDQotCXN0cnVjdCBt
dXRleCAgICAgICAgICAgICAgICAgICAgZHBtX211dGV4Ow0KIAl1aW50MzJfdCByZWdfYWNjZXNz
X21vZGU7DQogfTsNCiANCkBAIC0yODYsOCArMjgyLDggQEAgc3RhdGljIGlubGluZSBib29sIGlz
X3ZpcnR1YWxfbWFjaGluZSh2b2lkKQ0KICNlbmRpZg0KIH0NCiANCi0jZGVmaW5lIGFtZGdpbV9p
c19od3BlcmYoYWRldikgXA0KLQkoKGFkZXYpLT52aXJ0LmdpbV9mZWF0dXJlICYgQU1ER0lNX0ZF
QVRVUkVfSFdfUEVSRl9TSU1VTEFUSU9OKQ0KKyNkZWZpbmUgYW1kZ3B1X3NyaW92X2lzX3BwX29u
ZV92ZihhZGV2KSBcDQorCSgoYWRldiktPnZpcnQuZ2ltX2ZlYXR1cmUgJiBBTURHSU1fRkVBVFVS
RV9QUF9PTkVfVkYpDQogDQogYm9vbCBhbWRncHVfdmlydF9tbWlvX2Jsb2NrZWQoc3RydWN0IGFt
ZGdwdV9kZXZpY2UgKmFkZXYpOw0KIHZvaWQgYW1kZ3B1X3ZpcnRfaW5pdF9zZXR0aW5nKHN0cnVj
dCBhbWRncHVfZGV2aWNlICphZGV2KTsNCkBAIC0zMDYsNiArMzAyLDQgQEAgaW50IGFtZGdwdV92
aXJ0X2Z3X3Jlc2VydmVfZ2V0X2NoZWNrc3VtKHZvaWQgKm9iaiwgdW5zaWduZWQgbG9uZyBvYmpf
c2l6ZSwNCiAJCQkJCXVuc2lnbmVkIGludCBrZXksDQogCQkJCQl1bnNpZ25lZCBpbnQgY2hrc3Vt
KTsNCiB2b2lkIGFtZGdwdV92aXJ0X2luaXRfZGF0YV9leGNoYW5nZShzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldik7DQotdWludDMyX3QgYW1kZ3B1X3ZpcnRfZ2V0X3NjbGsoc3RydWN0IGFtZGdw
dV9kZXZpY2UgKmFkZXYsIGJvb2wgbG93ZXN0KTsNCi11aW50MzJfdCBhbWRncHVfdmlydF9nZXRf
bWNsayhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgYm9vbCBsb3dlc3QpOw0KICNlbmRpZg0K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1X2FpLmMgYi9kcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdwdV9haS5jDQppbmRleCBjYzViZjU5NWY5YjEuLjQz
MzA1YWZhM2Q2ZiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1
X2FpLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L214Z3B1X2FpLmMNCkBAIC0x
NTgsODIgKzE1OCw2IEBAIHN0YXRpYyB2b2lkIHhncHVfYWlfbWFpbGJveF90cmFuc19tc2cgKHN0
cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0KIAl4Z3B1X2FpX21haWxib3hfc2V0X3ZhbGlkKGFk
ZXYsIGZhbHNlKTsNCiB9DQogDQotc3RhdGljIGludCB4Z3B1X2FpX2dldF9wcF9jbGsoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYsIHUzMiB0eXBlLCBjaGFyICpidWYpDQotew0KLSAgICAgICAg
aW50IHIgPSAwOw0KLSAgICAgICAgdTMyIHJlcSwgdmFsLCBzaXplOw0KLQ0KLSAgICAgICAgaWYg
KCFhbWRnaW1faXNfaHdwZXJmKGFkZXYpIHx8IGJ1ZiA9PSBOVUxMKQ0KLSAgICAgICAgICAgICAg
ICByZXR1cm4gLUVCQURSUUM7DQotDQotICAgICAgICBzd2l0Y2godHlwZSkgew0KLSAgICAgICAg
Y2FzZSBQUF9TQ0xLOg0KLSAgICAgICAgICAgICAgICByZXEgPSBJREhfSVJRX0dFVF9QUF9TQ0xL
Ow0KLSAgICAgICAgICAgICAgICBicmVhazsNCi0gICAgICAgIGNhc2UgUFBfTUNMSzoNCi0gICAg
ICAgICAgICAgICAgcmVxID0gSURIX0lSUV9HRVRfUFBfTUNMSzsNCi0gICAgICAgICAgICAgICAg
YnJlYWs7DQotICAgICAgICBkZWZhdWx0Og0KLSAgICAgICAgICAgICAgICByZXR1cm4gLUVCQURS
UUM7DQotICAgICAgICB9DQotDQotICAgICAgICBtdXRleF9sb2NrKCZhZGV2LT52aXJ0LmRwbV9t
dXRleCk7DQotDQotICAgICAgICB4Z3B1X2FpX21haWxib3hfdHJhbnNfbXNnKGFkZXYsIHJlcSwg
MCwgMCwgMCk7DQotDQotICAgICAgICByID0geGdwdV9haV9wb2xsX21zZyhhZGV2LCBJREhfU1VD
Q0VTUyk7DQotICAgICAgICBpZiAoIXIgJiYgYWRldi0+ZndfdnJhbV91c2FnZS52YSAhPSBOVUxM
KSB7DQotICAgICAgICAgICAgICAgIHZhbCA9IFJSRUczMl9OT19LSVEoDQotICAgICAgICAgICAg
ICAgICAgICAgICAgU09DMTVfUkVHX09GRlNFVChOQklPLCAwLA0KLSAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgbW1CSUZfQlhfUEYwX01BSUxCT1hfTVNHQlVGX1JDVl9E
VzEpKTsNCi0gICAgICAgICAgICAgICAgc2l6ZSA9IHN0cm5sZW4oKCgoY2hhciAqKWFkZXYtPnZp
cnQuZndfcmVzZXJ2ZS5wX3BmMnZmKSArDQotICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICB2YWwpLCBQQUdFX1NJWkUpOw0KLQ0KLSAgICAgICAgICAgICAgICBpZiAoc2l6ZSA8IFBBR0Vf
U0laRSkNCi0gICAgICAgICAgICAgICAgICAgICAgICBzdHJjcHkoYnVmLCgoY2hhciAqKWFkZXYt
PnZpcnQuZndfcmVzZXJ2ZS5wX3BmMnZmICsgdmFsKSk7DQotICAgICAgICAgICAgICAgIGVsc2UN
Ci0gICAgICAgICAgICAgICAgICAgICAgICBzaXplID0gMDsNCi0NCi0gICAgICAgICAgICAgICAg
ciA9IHNpemU7DQotICAgICAgICAgICAgICAgIGdvdG8gb3V0Ow0KLSAgICAgICAgfQ0KLQ0KLSAg
ICAgICAgciA9IHhncHVfYWlfcG9sbF9tc2coYWRldiwgSURIX0ZBSUwpOw0KLSAgICAgICAgaWYo
cikNCi0gICAgICAgICAgICAgICAgcHJfaW5mbygiJXMgRFBNIHJlcXVlc3QgZmFpbGVkIiwNCi0g
ICAgICAgICAgICAgICAgICAgICAgICAodHlwZSA9PSBQUF9TQ0xLKT8gIlNDTEsiIDogIk1DTEsi
KTsNCi0NCi1vdXQ6DQotICAgICAgICBtdXRleF91bmxvY2soJmFkZXYtPnZpcnQuZHBtX211dGV4
KTsNCi0gICAgICAgIHJldHVybiByOw0KLX0NCi0NCi1zdGF0aWMgaW50IHhncHVfYWlfZm9yY2Vf
ZHBtX2xldmVsKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1MzIgbGV2ZWwpDQotew0KLSAg
ICAgICAgaW50IHIgPSAwOw0KLSAgICAgICAgdTMyIHJlcSA9IElESF9JUlFfRk9SQ0VfRFBNX0xF
VkVMOw0KLQ0KLSAgICAgICAgaWYgKCFhbWRnaW1faXNfaHdwZXJmKGFkZXYpKQ0KLSAgICAgICAg
ICAgICAgICByZXR1cm4gLUVCQURSUUM7DQotDQotICAgICAgICBtdXRleF9sb2NrKCZhZGV2LT52
aXJ0LmRwbV9tdXRleCk7DQotICAgICAgICB4Z3B1X2FpX21haWxib3hfdHJhbnNfbXNnKGFkZXYs
IHJlcSwgbGV2ZWwsIDAsIDApOw0KLQ0KLSAgICAgICAgciA9IHhncHVfYWlfcG9sbF9tc2coYWRl
diwgSURIX1NVQ0NFU1MpOw0KLSAgICAgICAgaWYgKCFyKQ0KLSAgICAgICAgICAgICAgICBnb3Rv
IG91dDsNCi0NCi0gICAgICAgIHIgPSB4Z3B1X2FpX3BvbGxfbXNnKGFkZXYsIElESF9GQUlMKTsN
Ci0gICAgICAgIGlmICghcikNCi0gICAgICAgICAgICAgICAgcHJfaW5mbygiRFBNIHJlcXVlc3Qg
ZmFpbGVkIik7DQotICAgICAgICBlbHNlDQotICAgICAgICAgICAgICAgIHByX2luZm8oIk1haWxi
b3ggaXMgYnJva2VuIik7DQotDQotb3V0Og0KLSAgICAgICAgbXV0ZXhfdW5sb2NrKCZhZGV2LT52
aXJ0LmRwbV9tdXRleCk7DQotICAgICAgICByZXR1cm4gcjsNCi19DQotDQogc3RhdGljIGludCB4
Z3B1X2FpX3NlbmRfYWNjZXNzX3JlcXVlc3RzKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LA0K
IAkJCQkJZW51bSBpZGhfcmVxdWVzdCByZXEpDQogew0KQEAgLTQ1NSw2ICszNzksNCBAQCBjb25z
dCBzdHJ1Y3QgYW1kZ3B1X3ZpcnRfb3BzIHhncHVfYWlfdmlydF9vcHMgPSB7DQogCS5yZXNldF9n
cHUgPSB4Z3B1X2FpX3JlcXVlc3RfcmVzZXQsDQogCS53YWl0X3Jlc2V0ID0gTlVMTCwNCiAJLnRy
YW5zX21zZyA9IHhncHVfYWlfbWFpbGJveF90cmFuc19tc2csDQotCS5nZXRfcHBfY2xrID0geGdw
dV9haV9nZXRfcHBfY2xrLA0KLQkuZm9yY2VfZHBtX2xldmVsID0geGdwdV9haV9mb3JjZV9kcG1f
bGV2ZWwsDQogfTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdw
dV9haS5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbXhncHVfYWkuaA0KaW5kZXggMDc3
ZTkxYTMzZDYyLi4zN2RiZTBmMjE0MmYgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L2FtZGdwdS9teGdwdV9haS5oDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9teGdw
dV9haS5oDQpAQCAtMzUsMTAgKzM1LDYgQEAgZW51bSBpZGhfcmVxdWVzdCB7DQogCUlESF9SRUxf
R1BVX0ZJTklfQUNDRVNTLA0KIAlJREhfUkVRX0dQVV9SRVNFVF9BQ0NFU1MsDQogDQotCUlESF9J
UlFfRk9SQ0VfRFBNX0xFVkVMID0gMTAsDQotCUlESF9JUlFfR0VUX1BQX1NDTEssDQotCUlESF9J
UlFfR0VUX1BQX01DTEssDQotDQogCUlESF9MT0dfVkZfRVJST1IgICAgICAgPSAyMDAsDQogfTsN
CiANCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zb2MxNS5jIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvc29jMTUuYw0KaW5kZXggNDg2NDlmNTVmM2JhLi41OWY1
ZjJhMzlmZTQgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zb2MxNS5j
DQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9zb2MxNS5jDQpAQCAtNzc3LDExICs3
NzcsMTEgQEAgaW50IHNvYzE1X3NldF9pcF9ibG9ja3Moc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYpDQogCQl9DQogCQlhbWRncHVfZGV2aWNlX2lwX2Jsb2NrX2FkZChhZGV2LCAmZ2Z4X3Y5XzBf
aXBfYmxvY2spOw0KIAkJYW1kZ3B1X2RldmljZV9pcF9ibG9ja19hZGQoYWRldiwgJnNkbWFfdjRf
MF9pcF9ibG9jayk7DQotCQlpZiAoIWFtZGdwdV9zcmlvdl92ZihhZGV2KSkgew0KLQkJCWlmIChp
c19zdXBwb3J0X3N3X3NtdShhZGV2KSkNCisJCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkg
ew0KKwkJCWlmICghYW1kZ3B1X3NyaW92X3ZmKGFkZXYpKQ0KIAkJCQlhbWRncHVfZGV2aWNlX2lw
X2Jsb2NrX2FkZChhZGV2LCAmc211X3YxMV8wX2lwX2Jsb2NrKTsNCi0JCQllbHNlDQotCQkJCWFt
ZGdwdV9kZXZpY2VfaXBfYmxvY2tfYWRkKGFkZXYsICZwcF9zbXVfaXBfYmxvY2spOw0KKwkJfSBl
bHNlIHsNCisJCQlhbWRncHVfZGV2aWNlX2lwX2Jsb2NrX2FkZChhZGV2LCAmcHBfc211X2lwX2Js
b2NrKTsNCiAJCX0NCiAJCWlmIChhZGV2LT5lbmFibGVfdmlydHVhbF9kaXNwbGF5IHx8IGFtZGdw
dV9zcmlvdl92ZihhZGV2KSkNCiAJCQlhbWRncHVfZGV2aWNlX2lwX2Jsb2NrX2FkZChhZGV2LCAm
ZGNlX3ZpcnR1YWxfaXBfYmxvY2spOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
cG93ZXJwbGF5L2FtZF9wb3dlcnBsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L2FtZF9wb3dlcnBsYXkuYw0KaW5kZXggNzkzMmViMTYzYTAwLi41MDg3ZDZiZGJhNjAgMTAwNjQ0
DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hbWRfcG93ZXJwbGF5LmMNCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZF9wb3dlcnBsYXkuYw0KQEAgLTQ4
LDcgKzQ4LDYgQEAgc3RhdGljIGludCBhbWRfcG93ZXJwbGF5X2NyZWF0ZShzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldikNCiANCiAJaHdtZ3ItPmFkZXYgPSBhZGV2Ow0KIAlod21nci0+bm90X3Zm
ID0gIWFtZGdwdV9zcmlvdl92ZihhZGV2KTsNCi0JaHdtZ3ItPnBtX2VuID0gKGFtZGdwdV9kcG0g
JiYgaHdtZ3ItPm5vdF92ZikgPyB0cnVlIDogZmFsc2U7DQogCWh3bWdyLT5kZXZpY2UgPSBhbWRn
cHVfY2dzX2NyZWF0ZV9kZXZpY2UoYWRldik7DQogCW11dGV4X2luaXQoJmh3bWdyLT5zbXVfbG9j
ayk7DQogCWh3bWdyLT5jaGlwX2ZhbWlseSA9IGFkZXYtPmZhbWlseTsNCkBAIC0yNzYsNiArMjc1
LDkgQEAgc3RhdGljIGludCBwcF9kcG1fbG9hZF9mdyh2b2lkICpoYW5kbGUpDQogew0KIAlzdHJ1
Y3QgcHBfaHdtZ3IgKmh3bWdyID0gaGFuZGxlOw0KIA0KKwlpZiAoIWh3bWdyLT5ub3RfdmYpDQor
CQlyZXR1cm4gMDsNCisNCiAJaWYgKCFod21nciB8fCAhaHdtZ3ItPnNtdW1ncl9mdW5jcyB8fCAh
aHdtZ3ItPnNtdW1ncl9mdW5jcy0+c3RhcnRfc211KQ0KIAkJcmV0dXJuIC1FSU5WQUw7DQogDQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaHdtZ3IvaGFyZHdhcmVt
YW5hZ2VyLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci9oYXJkd2FyZW1h
bmFnZXIuYw0KaW5kZXggY2M1N2ZiOTUzZTYyLi4yNTM4NjBkMzBiMjAgMTAwNjQ0DQotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci9oYXJkd2FyZW1hbmFnZXIuYw0KKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaHdtZ3IvaGFyZHdhcmVtYW5hZ2VyLmMN
CkBAIC04MSw4ICs4MSw4IEBAIGludCBwaG1fZW5hYmxlX2R5bmFtaWNfc3RhdGVfbWFuYWdlbWVu
dChzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyKQ0KIAlhZGV2ID0gaHdtZ3ItPmFkZXY7DQogDQogCS8q
IFNraXAgZm9yIHN1c3BlbmQvcmVzdW1lIGNhc2UgKi8NCi0JaWYgKHNtdW1faXNfZHBtX3J1bm5p
bmcoaHdtZ3IpICYmICFhbWRncHVfcGFzc3Rocm91Z2goYWRldikNCi0JCSYmIGFkZXYtPmluX3N1
c3BlbmQpIHsNCisJaWYgKCFod21nci0+cHBfb25lX3ZmICYmIHNtdW1faXNfZHBtX3J1bm5pbmco
aHdtZ3IpDQorCSAgICAmJiAhYW1kZ3B1X3Bhc3N0aHJvdWdoKGFkZXYpICYmIGFkZXYtPmluX3N1
c3BlbmQpIHsNCiAJCXByX2luZm8oImRwbSBoYXMgYmVlbiBlbmFibGVkXG4iKTsNCiAJCXJldHVy
biAwOw0KIAl9DQpAQCAtMjAwLDYgKzIwMCw5IEBAIGludCBwaG1fc3RvcF90aGVybWFsX2NvbnRy
b2xsZXIoc3RydWN0IHBwX2h3bWdyICpod21ncikNCiB7DQogCVBITV9GVU5DX0NIRUNLKGh3bWdy
KTsNCiANCisJaWYgKCFod21nci0+bm90X3ZmKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmIChod21n
ci0+aHdtZ3JfZnVuYy0+c3RvcF90aGVybWFsX2NvbnRyb2xsZXIgPT0gTlVMTCkNCiAJCXJldHVy
biAtRUlOVkFMOw0KIA0KQEAgLTIzNyw2ICsyNDAsOSBAQCBpbnQgcGhtX3N0YXJ0X3RoZXJtYWxf
Y29udHJvbGxlcihzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyKQ0KIAkJVEVNUF9SQU5HRV9NQVh9Ow0K
IAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGh3bWdyLT5hZGV2Ow0KIA0KKwlpZiAoIWh3
bWdyLT5ub3RfdmYpDQorCQlyZXR1cm4gMDsNCisNCiAJaWYgKGh3bWdyLT5od21ncl9mdW5jLT5n
ZXRfdGhlcm1hbF90ZW1wZXJhdHVyZV9yYW5nZSkNCiAJCWh3bWdyLT5od21ncl9mdW5jLT5nZXRf
dGhlcm1hbF90ZW1wZXJhdHVyZV9yYW5nZSgNCiAJCQkJaHdtZ3IsICZyYW5nZSk7DQpAQCAtMjYz
LDYgKzI2OSw4IEBAIGludCBwaG1fc3RhcnRfdGhlcm1hbF9jb250cm9sbGVyKHN0cnVjdCBwcF9o
d21nciAqaHdtZ3IpDQogYm9vbCBwaG1fY2hlY2tfc21jX3VwZGF0ZV9yZXF1aXJlZF9mb3JfZGlz
cGxheV9jb25maWd1cmF0aW9uKHN0cnVjdCBwcF9od21nciAqaHdtZ3IpDQogew0KIAlQSE1fRlVO
Q19DSEVDSyhod21ncik7DQorCWlmIChod21nci0+cHBfb25lX3ZmKQ0KKwkJcmV0dXJuIGZhbHNl
Ow0KIA0KIAlpZiAoaHdtZ3ItPmh3bWdyX2Z1bmMtPmNoZWNrX3NtY191cGRhdGVfcmVxdWlyZWRf
Zm9yX2Rpc3BsYXlfY29uZmlndXJhdGlvbiA9PSBOVUxMKQ0KIAkJcmV0dXJuIGZhbHNlOw0KQEAg
LTQ4Miw2ICs0OTAsOSBAQCBpbnQgcGhtX2Rpc2FibGVfc21jX2Zpcm13YXJlX2N0ZihzdHJ1Y3Qg
cHBfaHdtZ3IgKmh3bWdyKQ0KIHsNCiAJUEhNX0ZVTkNfQ0hFQ0soaHdtZ3IpOw0KIA0KKwlpZiAo
IWh3bWdyLT5ub3RfdmYpDQorCQlyZXR1cm4gMDsNCisNCiAJaWYgKGh3bWdyLT5od21ncl9mdW5j
LT5kaXNhYmxlX3NtY19maXJtd2FyZV9jdGYgPT0gTlVMTCkNCiAJCXJldHVybiAtRUlOVkFMOw0K
IA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL2h3bWdy
LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci9od21nci5jDQppbmRleCBk
MjkwOWM5MWQ2NWIuLmUyYjgyYzkwMjk0OCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L2h3bWdyL2h3bWdyLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93
ZXJwbGF5L2h3bWdyL2h3bWdyLmMNCkBAIC0yMjEsNiArMjIxLDkgQEAgaW50IGh3bWdyX2h3X2lu
aXQoc3RydWN0IHBwX2h3bWdyICpod21ncikNCiB7DQogCWludCByZXQgPSAwOw0KIA0KKwlod21n
ci0+cHBfb25lX3ZmID0gYW1kZ3B1X3NyaW92X2lzX3BwX29uZV92Zigoc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKilod21nci0+YWRldik7DQorCWh3bWdyLT5wbV9lbiA9IChhbWRncHVfZHBtICYmICho
d21nci0+bm90X3ZmIHx8IGh3bWdyLT5wcF9vbmVfdmYpKQ0KKwkJCT8gdHJ1ZSA6IGZhbHNlOw0K
IAlpZiAoIWh3bWdyLT5wbV9lbikNCiAJCXJldHVybiAwOw0KIA0KQEAgLTI3OSw2ICsyODIsOSBA
QCBpbnQgaHdtZ3JfaHdfaW5pdChzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyKQ0KIA0KIGludCBod21n
cl9od19maW5pKHN0cnVjdCBwcF9od21nciAqaHdtZ3IpDQogew0KKwlpZiAoIWh3bWdyLT5ub3Rf
dmYpDQorCQlyZXR1cm4gMDsNCisNCiAJaWYgKCFod21nciB8fCAhaHdtZ3ItPnBtX2VuKQ0KIAkJ
cmV0dXJuIDA7DQogDQpAQCAtMjk5LDYgKzMwNSw5IEBAIGludCBod21ncl9zdXNwZW5kKHN0cnVj
dCBwcF9od21nciAqaHdtZ3IpDQogew0KIAlpbnQgcmV0ID0gMDsNCiANCisJaWYgKCFod21nci0+
bm90X3ZmKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmICghaHdtZ3IgfHwgIWh3bWdyLT5wbV9lbikN
CiAJCXJldHVybiAwOw0KIA0KQEAgLTMxOCw2ICszMjcsOSBAQCBpbnQgaHdtZ3JfcmVzdW1lKHN0
cnVjdCBwcF9od21nciAqaHdtZ3IpDQogew0KIAlpbnQgcmV0ID0gMDsNCiANCisJaWYgKCFod21n
ci0+bm90X3ZmKQ0KKwkJcmV0dXJuIDA7DQorDQogCWlmICghaHdtZ3IpDQogCQlyZXR1cm4gLUVJ
TlZBTDsNCiANCkBAIC0zNjUsNiArMzc3LDggQEAgaW50IGh3bWdyX2hhbmRsZV90YXNrKHN0cnVj
dCBwcF9od21nciAqaHdtZ3IsIGVudW0gYW1kX3BwX3Rhc2sgdGFza19pZCwNCiANCiAJc3dpdGNo
ICh0YXNrX2lkKSB7DQogCWNhc2UgQU1EX1BQX1RBU0tfRElTUExBWV9DT05GSUdfQ0hBTkdFOg0K
KwkJaWYgKCFod21nci0+bm90X3ZmKQ0KKwkJCXJldHVybiByZXQ7DQogCQlyZXQgPSBwaG1fcHJl
X2Rpc3BsYXlfY29uZmlndXJhdGlvbl9jaGFuZ2VkKGh3bWdyKTsNCiAJCWlmIChyZXQpDQogCQkJ
cmV0dXJuIHJldDsNCkBAIC0zODEsNiArMzk1LDggQEAgaW50IGh3bWdyX2hhbmRsZV90YXNrKHN0
cnVjdCBwcF9od21nciAqaHdtZ3IsIGVudW0gYW1kX3BwX3Rhc2sgdGFza19pZCwNCiAJCWVudW0g
UFBfU3RhdGVVSUxhYmVsIHJlcXVlc3RlZF91aV9sYWJlbDsNCiAJCXN0cnVjdCBwcF9wb3dlcl9z
dGF0ZSAqcmVxdWVzdGVkX3BzID0gTlVMTDsNCiANCisJCWlmICghaHdtZ3ItPm5vdF92ZikNCisJ
CQlyZXR1cm4gcmV0Ow0KIAkJaWYgKHVzZXJfc3RhdGUgPT0gTlVMTCkgew0KIAkJCXJldCA9IC1F
SU5WQUw7DQogCQkJYnJlYWs7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dl
cnBsYXkvaHdtZ3IvcHBfcHNtLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21n
ci9wcF9wc20uYw0KaW5kZXggNmJmNDg5MzRmZGM0Li4zMWEzMmE3OWNmYzIgMTAwNjQ0DQotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci9wcF9wc20uYw0KKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaHdtZ3IvcHBfcHNtLmMNCkBAIC0yNjIsMjAgKzI2
MiwyMiBAQCBpbnQgcHNtX2FkanVzdF9wb3dlcl9zdGF0ZV9keW5hbWljKHN0cnVjdCBwcF9od21n
ciAqaHdtZ3IsIGJvb2wgc2tpcF9kaXNwbGF5X3NldA0KIAl1aW50MzJfdCBpbmRleDsNCiAJbG9u
ZyB3b3JrbG9hZDsNCiANCi0JaWYgKCFza2lwX2Rpc3BsYXlfc2V0dGluZ3MpDQotCQlwaG1fZGlz
cGxheV9jb25maWd1cmF0aW9uX2NoYW5nZWQoaHdtZ3IpOw0KLQ0KLQlpZiAoaHdtZ3ItPnBzKQ0K
LQkJcG93ZXJfc3RhdGVfbWFuYWdlbWVudChod21nciwgbmV3X3BzKTsNCi0JZWxzZQ0KLQkJLyoN
Ci0JCSAqIGZvciB2ZWdhMTIvdmVnYTIwIHdoaWNoIGRvZXMgbm90IHN1cHBvcnQgcG93ZXIgc3Rh
dGUgbWFuYWdlcg0KLQkJICogREFMIGNsb2NrIGxpbWl0cyBzaG91bGQgYWxzbyBiZSBob25vdXJl
ZA0KLQkJICovDQotCQlwaG1fYXBwbHlfY2xvY2tfYWRqdXN0X3J1bGVzKGh3bWdyKTsNCi0NCi0J
aWYgKCFza2lwX2Rpc3BsYXlfc2V0dGluZ3MpDQotCQlwaG1fbm90aWZ5X3NtY19kaXNwbGF5X2Nv
bmZpZ19hZnRlcl9wc19hZGp1c3RtZW50KGh3bWdyKTsNCisJaWYgKGh3bWdyLT5ub3RfdmYpIHsN
CisJCWlmICghc2tpcF9kaXNwbGF5X3NldHRpbmdzKQ0KKwkJCXBobV9kaXNwbGF5X2NvbmZpZ3Vy
YXRpb25fY2hhbmdlZChod21ncik7DQorDQorCQlpZiAoaHdtZ3ItPnBzKQ0KKwkJCXBvd2VyX3N0
YXRlX21hbmFnZW1lbnQoaHdtZ3IsIG5ld19wcyk7DQorCQllbHNlDQorCQkJLyoNCisJCQkgKiBm
b3IgdmVnYTEyL3ZlZ2EyMCB3aGljaCBkb2VzIG5vdCBzdXBwb3J0IHBvd2VyIHN0YXRlIG1hbmFn
ZXINCisJCQkgKiBEQUwgY2xvY2sgbGltaXRzIHNob3VsZCBhbHNvIGJlIGhvbm91cmVkDQorCQkJ
ICovDQorCQkJcGhtX2FwcGx5X2Nsb2NrX2FkanVzdF9ydWxlcyhod21ncik7DQorDQorCQlpZiAo
IXNraXBfZGlzcGxheV9zZXR0aW5ncykNCisJCQlwaG1fbm90aWZ5X3NtY19kaXNwbGF5X2NvbmZp
Z19hZnRlcl9wc19hZGp1c3RtZW50KGh3bWdyKTsNCisJfQ0KIA0KIAlpZiAoIXBobV9mb3JjZV9k
cG1fbGV2ZWxzKGh3bWdyLCBod21nci0+cmVxdWVzdF9kcG1fbGV2ZWwpKQ0KIAkJaHdtZ3ItPmRw
bV9sZXZlbCA9IGh3bWdyLT5yZXF1ZXN0X2RwbV9sZXZlbDsNCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9od21nci92ZWdhMTBfaHdtZ3IuYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvcG93ZXJwbGF5L2h3bWdyL3ZlZ2ExMF9od21nci5jDQppbmRleCBiMjllOTk2ZGYx
ZDQuLjliYTFhZWYyNzFmNCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJw
bGF5L2h3bWdyL3ZlZ2ExMF9od21nci5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2Vy
cGxheS9od21nci92ZWdhMTBfaHdtZ3IuYw0KQEAgLTkxMiw2ICs5MTIsOSBAQCBzdGF0aWMgaW50
IHZlZ2ExMF9od21ncl9iYWNrZW5kX2luaXQoc3RydWN0IHBwX2h3bWdyICpod21ncikNCiAJaHdt
Z3ItPnBsYXRmb3JtX2Rlc2NyaXB0b3IuY2xvY2tTdGVwLm1lbW9yeUNsb2NrID0gNTAwOw0KIA0K
IAlkYXRhLT50b3RhbF9hY3RpdmVfY3VzID0gYWRldi0+Z2Z4LmN1X2luZm8ubnVtYmVyOw0KKwlp
ZiAoIWh3bWdyLT5ub3RfdmYpDQorCQlyZXR1cm4gcmVzdWx0Ow0KKw0KIAkvKiBTZXR1cCBkZWZh
dWx0IE92ZXJkcml2ZSBGYW4gY29udHJvbCBzZXR0aW5ncyAqLw0KIAlkYXRhLT5vZG5fZmFuX3Rh
YmxlLnRhcmdldF9mYW5fc3BlZWQgPQ0KIAkJCWh3bWdyLT50aGVybWFsX2NvbnRyb2xsZXIuYWR2
YW5jZUZhbkNvbnRyb2xQYXJhbWV0ZXJzLnVzTWF4RmFuUlBNOw0KQEAgLTk3OSw2ICs5ODIsOSBA
QCBzdGF0aWMgaW50IHZlZ2ExMF9zZXR1cF9kcG1fbGVkX2NvbmZpZyhzdHJ1Y3QgcHBfaHdtZ3Ig
Kmh3bWdyKQ0KIA0KIHN0YXRpYyBpbnQgdmVnYTEwX3NldHVwX2FzaWNfdGFzayhzdHJ1Y3QgcHBf
aHdtZ3IgKmh3bWdyKQ0KIHsNCisJaWYgKCFod21nci0+bm90X3ZmKQ0KKwkJcmV0dXJuIDA7DQor
DQogCVBQX0FTU0VSVF9XSVRIX0NPREUoIXZlZ2ExMF9pbml0X3NjbGtfdGhyZXNob2xkKGh3bWdy
KSwNCiAJCQkiRmFpbGVkIHRvIGluaXQgc2NsayB0aHJlc2hvbGQhIiwNCiAJCQlyZXR1cm4gLUVJ
TlZBTCk7DQpAQCAtMjUwMyw2ICsyNTA5LDkgQEAgc3RhdGljIGludCB2ZWdhMTBfaW5pdF9zbWNf
dGFibGUoc3RydWN0IHBwX2h3bWdyICpod21ncikNCiAJCQkiRmFpbGVkIHRvIHNldHVwIGRlZmF1
bHQgRFBNIHRhYmxlcyEiLA0KIAkJCXJldHVybiByZXN1bHQpOw0KIA0KKwlpZiAoIWh3bWdyLT5u
b3RfdmYpDQorCQlyZXR1cm4gMDsNCisNCiAJLyogaW5pdGlhbGl6ZSBPRE4gdGFibGUgKi8NCiAJ
aWYgKGh3bWdyLT5vZF9lbmFibGVkKSB7DQogCQlpZiAob2RuX3RhYmxlLT5tYXhfdmRkYykgew0K
QEAgLTI4MjYsNiArMjgzNSw4IEBAIHN0YXRpYyBpbnQgdmVnYTEwX3N0b3BfZHBtKHN0cnVjdCBw
cF9od21nciAqaHdtZ3IsIHVpbnQzMl90IGJpdG1hcCkNCiAJc3RydWN0IHZlZ2ExMF9od21nciAq
ZGF0YSA9IGh3bWdyLT5iYWNrZW5kOw0KIAl1aW50MzJfdCBpLCBmZWF0dXJlX21hc2sgPSAwOw0K
IA0KKwlpZiAoIWh3bWdyLT5ub3RfdmYpDQorCQlyZXR1cm4gMDsNCiANCiAJaWYoZGF0YS0+c211
X2ZlYXR1cmVzW0dOTERfTEVEX0RJU1BMQVldLnN1cHBvcnRlZCA9PSB0cnVlKXsNCiAJCVBQX0FT
U0VSVF9XSVRIX0NPREUoIXZlZ2ExMF9lbmFibGVfc21jX2ZlYXR1cmVzKGh3bWdyLA0KQEAgLTI5
MzIsNjEgKzI5NDMsNzUgQEAgc3RhdGljIGludCB2ZWdhMTBfZW5hYmxlX2RwbV90YXNrcyhzdHJ1
Y3QgcHBfaHdtZ3IgKmh3bWdyKQ0KIAlzdHJ1Y3QgdmVnYTEwX2h3bWdyICpkYXRhID0gaHdtZ3It
PmJhY2tlbmQ7DQogCWludCB0bXBfcmVzdWx0LCByZXN1bHQgPSAwOw0KIA0KLQl2ZWdhMTBfZW5h
YmxlX2Rpc2FibGVfUENDX2xpbWl0X2ZlYXR1cmUoaHdtZ3IsIHRydWUpOw0KLQ0KLQlzbXVtX3Nl
bmRfbXNnX3RvX3NtY193aXRoX3BhcmFtZXRlcihod21nciwNCi0JCVBQU01DX01TR19Db25maWd1
cmVUZWxlbWV0cnksIGRhdGEtPmNvbmZpZ190ZWxlbWV0cnkpOw0KKwlpZiAoaHdtZ3ItPm5vdF92
Zikgew0KKwkJdmVnYTEwX2VuYWJsZV9kaXNhYmxlX1BDQ19saW1pdF9mZWF0dXJlKGh3bWdyLCB0
cnVlKTsNCiANCi0JdG1wX3Jlc3VsdCA9IHZlZ2ExMF9jb25zdHJ1Y3Rfdm9sdGFnZV90YWJsZXMo
aHdtZ3IpOw0KLQlQUF9BU1NFUlRfV0lUSF9DT0RFKCF0bXBfcmVzdWx0LA0KLQkJCSJGYWlsZWQg
dG8gY29uc3RydWN0IHZvbHRhZ2UgdGFibGVzISIsDQotCQkJcmVzdWx0ID0gdG1wX3Jlc3VsdCk7
DQorCQlzbXVtX3NlbmRfbXNnX3RvX3NtY193aXRoX3BhcmFtZXRlcihod21nciwNCisJCQlQUFNN
Q19NU0dfQ29uZmlndXJlVGVsZW1ldHJ5LCBkYXRhLT5jb25maWdfdGVsZW1ldHJ5KTsNCiANCi0J
dG1wX3Jlc3VsdCA9IHZlZ2ExMF9pbml0X3NtY190YWJsZShod21ncik7DQotCVBQX0FTU0VSVF9X
SVRIX0NPREUoIXRtcF9yZXN1bHQsDQotCQkJIkZhaWxlZCB0byBpbml0aWFsaXplIFNNQyB0YWJs
ZSEiLA0KLQkJCXJlc3VsdCA9IHRtcF9yZXN1bHQpOw0KKwkJdG1wX3Jlc3VsdCA9IHZlZ2ExMF9j
b25zdHJ1Y3Rfdm9sdGFnZV90YWJsZXMoaHdtZ3IpOw0KKwkJUFBfQVNTRVJUX1dJVEhfQ09ERSgh
dG1wX3Jlc3VsdCwNCisJCQkJICAgICJGYWlsZWQgdG8gY29uc3RydWN0IHZvbHRhZ2UgdGFibGVz
ISIsDQorCQkJCSAgICByZXN1bHQgPSB0bXBfcmVzdWx0KTsNCisJfQ0KIA0KLQlpZiAoUFBfQ0FQ
KFBITV9QbGF0Zm9ybUNhcHNfVGhlcm1hbENvbnRyb2xsZXIpKSB7DQotCQl0bXBfcmVzdWx0ID0g
dmVnYTEwX2VuYWJsZV90aGVybWFsX3Byb3RlY3Rpb24oaHdtZ3IpOw0KKwlpZiAoaHdtZ3ItPm5v
dF92ZiB8fCBod21nci0+cHBfb25lX3ZmKSB7DQorCQl0bXBfcmVzdWx0ID0gdmVnYTEwX2luaXRf
c21jX3RhYmxlKGh3bWdyKTsNCiAJCVBQX0FTU0VSVF9XSVRIX0NPREUoIXRtcF9yZXN1bHQsDQot
CQkJCSJGYWlsZWQgdG8gZW5hYmxlIHRoZXJtYWwgcHJvdGVjdGlvbiEiLA0KLQkJCQlyZXN1bHQg
PSB0bXBfcmVzdWx0KTsNCisJCQkJICAgICJGYWlsZWQgdG8gaW5pdGlhbGl6ZSBTTUMgdGFibGUh
IiwNCisJCQkJICAgIHJlc3VsdCA9IHRtcF9yZXN1bHQpOw0KIAl9DQogDQotCXRtcF9yZXN1bHQg
PSB2ZWdhMTBfZW5hYmxlX3ZyaG90X2ZlYXR1cmUoaHdtZ3IpOw0KLQlQUF9BU1NFUlRfV0lUSF9D
T0RFKCF0bXBfcmVzdWx0LA0KLQkJCSJGYWlsZWQgdG8gZW5hYmxlIFZSIGhvdCBmZWF0dXJlISIs
DQotCQkJcmVzdWx0ID0gdG1wX3Jlc3VsdCk7DQorCWlmIChod21nci0+bm90X3ZmKSB7DQorCQlp
ZiAoUFBfQ0FQKFBITV9QbGF0Zm9ybUNhcHNfVGhlcm1hbENvbnRyb2xsZXIpKSB7DQorCQkJdG1w
X3Jlc3VsdCA9IHZlZ2ExMF9lbmFibGVfdGhlcm1hbF9wcm90ZWN0aW9uKGh3bWdyKTsNCisJCQlQ
UF9BU1NFUlRfV0lUSF9DT0RFKCF0bXBfcmVzdWx0LA0KKwkJCQkJICAgICJGYWlsZWQgdG8gZW5h
YmxlIHRoZXJtYWwgcHJvdGVjdGlvbiEiLA0KKwkJCQkJICAgIHJlc3VsdCA9IHRtcF9yZXN1bHQp
Ow0KKwkJfQ0KIA0KLQl0bXBfcmVzdWx0ID0gdmVnYTEwX2VuYWJsZV9kZWVwX3NsZWVwX21hc3Rl
cl9zd2l0Y2goaHdtZ3IpOw0KLQlQUF9BU1NFUlRfV0lUSF9DT0RFKCF0bXBfcmVzdWx0LA0KLQkJ
CSJGYWlsZWQgdG8gZW5hYmxlIGRlZXAgc2xlZXAgbWFzdGVyIHN3aXRjaCEiLA0KLQkJCXJlc3Vs
dCA9IHRtcF9yZXN1bHQpOw0KKwkJdG1wX3Jlc3VsdCA9IHZlZ2ExMF9lbmFibGVfdnJob3RfZmVh
dHVyZShod21ncik7DQorCQlQUF9BU1NFUlRfV0lUSF9DT0RFKCF0bXBfcmVzdWx0LA0KKwkJCQkg
ICAgIkZhaWxlZCB0byBlbmFibGUgVlIgaG90IGZlYXR1cmUhIiwNCisJCQkJICAgIHJlc3VsdCA9
IHRtcF9yZXN1bHQpOw0KIA0KLQl0bXBfcmVzdWx0ID0gdmVnYTEwX3N0YXJ0X2RwbShod21nciwg
U01DX0RQTV9GRUFUVVJFUyk7DQotCVBQX0FTU0VSVF9XSVRIX0NPREUoIXRtcF9yZXN1bHQsDQot
CQkJIkZhaWxlZCB0byBzdGFydCBEUE0hIiwgcmVzdWx0ID0gdG1wX3Jlc3VsdCk7DQorCQl0bXBf
cmVzdWx0ID0gdmVnYTEwX2VuYWJsZV9kZWVwX3NsZWVwX21hc3Rlcl9zd2l0Y2goaHdtZ3IpOw0K
KwkJUFBfQVNTRVJUX1dJVEhfQ09ERSghdG1wX3Jlc3VsdCwNCisJCQkJICAgICJGYWlsZWQgdG8g
ZW5hYmxlIGRlZXAgc2xlZXAgbWFzdGVyIHN3aXRjaCEiLA0KKwkJCQkgICAgcmVzdWx0ID0gdG1w
X3Jlc3VsdCk7DQorCX0NCiANCi0JLyogZW5hYmxlIGRpZHQsIGRvIG5vdCBhYm9ydCBpZiBmYWls
ZWQgZGlkdCAqLw0KLQl0bXBfcmVzdWx0ID0gdmVnYTEwX2VuYWJsZV9kaWR0X2NvbmZpZyhod21n
cik7DQotCVBQX0FTU0VSVCghdG1wX3Jlc3VsdCwNCi0JCQkiRmFpbGVkIHRvIGVuYWJsZSBkaWR0
IGNvbmZpZyEiKTsNCisJaWYgKGh3bWdyLT5ub3RfdmYpIHsNCisJCXRtcF9yZXN1bHQgPSB2ZWdh
MTBfc3RhcnRfZHBtKGh3bWdyLCBTTUNfRFBNX0ZFQVRVUkVTKTsNCisJCVBQX0FTU0VSVF9XSVRI
X0NPREUoIXRtcF9yZXN1bHQsDQorCQkJCSAgICAiRmFpbGVkIHRvIHN0YXJ0IERQTSEiLCByZXN1
bHQgPSB0bXBfcmVzdWx0KTsNCisJfQ0KIA0KLQl0bXBfcmVzdWx0ID0gdmVnYTEwX2VuYWJsZV9w
b3dlcl9jb250YWlubWVudChod21ncik7DQotCVBQX0FTU0VSVF9XSVRIX0NPREUoIXRtcF9yZXN1
bHQsDQotCQkJIkZhaWxlZCB0byBlbmFibGUgcG93ZXIgY29udGFpbm1lbnQhIiwNCi0JCQlyZXN1
bHQgPSB0bXBfcmVzdWx0KTsNCisJaWYgKGh3bWdyLT5ub3RfdmYpIHsNCisJCS8qIGVuYWJsZSBk
aWR0LCBkbyBub3QgYWJvcnQgaWYgZmFpbGVkIGRpZHQgKi8NCisJCXRtcF9yZXN1bHQgPSB2ZWdh
MTBfZW5hYmxlX2RpZHRfY29uZmlnKGh3bWdyKTsNCisJCVBQX0FTU0VSVCghdG1wX3Jlc3VsdCwN
CisJCQkgICJGYWlsZWQgdG8gZW5hYmxlIGRpZHQgY29uZmlnISIpOw0KKwl9DQogDQotCXRtcF9y
ZXN1bHQgPSB2ZWdhMTBfcG93ZXJfY29udHJvbF9zZXRfbGV2ZWwoaHdtZ3IpOw0KLQlQUF9BU1NF
UlRfV0lUSF9DT0RFKCF0bXBfcmVzdWx0LA0KLQkJCSJGYWlsZWQgdG8gcG93ZXIgY29udHJvbCBz
ZXQgbGV2ZWwhIiwNCi0JCQlyZXN1bHQgPSB0bXBfcmVzdWx0KTsNCisJaWYgKGh3bWdyLT5ub3Rf
dmYpIHsNCisJCXRtcF9yZXN1bHQgPSB2ZWdhMTBfZW5hYmxlX3Bvd2VyX2NvbnRhaW5tZW50KGh3
bWdyKTsNCisJCVBQX0FTU0VSVF9XSVRIX0NPREUoIXRtcF9yZXN1bHQsDQorCQkJCSAgICAiRmFp
bGVkIHRvIGVuYWJsZSBwb3dlciBjb250YWlubWVudCEiLA0KKwkJCQkgICAgcmVzdWx0ID0gdG1w
X3Jlc3VsdCk7DQorCX0NCiANCi0JdG1wX3Jlc3VsdCA9IHZlZ2ExMF9lbmFibGVfdWx2KGh3bWdy
KTsNCi0JUFBfQVNTRVJUX1dJVEhfQ09ERSghdG1wX3Jlc3VsdCwNCi0JCQkiRmFpbGVkIHRvIGVu
YWJsZSBVTFYhIiwNCi0JCQlyZXN1bHQgPSB0bXBfcmVzdWx0KTsNCisJaWYgKGh3bWdyLT5ub3Rf
dmYpIHsNCisJCXRtcF9yZXN1bHQgPSB2ZWdhMTBfcG93ZXJfY29udHJvbF9zZXRfbGV2ZWwoaHdt
Z3IpOw0KKwkJUFBfQVNTRVJUX1dJVEhfQ09ERSghdG1wX3Jlc3VsdCwNCisJCQkJICAgICJGYWls
ZWQgdG8gcG93ZXIgY29udHJvbCBzZXQgbGV2ZWwhIiwNCisJCQkJICAgIHJlc3VsdCA9IHRtcF9y
ZXN1bHQpOw0KKw0KKwkJdG1wX3Jlc3VsdCA9IHZlZ2ExMF9lbmFibGVfdWx2KGh3bWdyKTsNCisJ
CVBQX0FTU0VSVF9XSVRIX0NPREUoIXRtcF9yZXN1bHQsDQorCQkJCSAgICAiRmFpbGVkIHRvIGVu
YWJsZSBVTFYhIiwNCisJCQkJICAgIHJlc3VsdCA9IHRtcF9yZXN1bHQpOw0KKwl9DQogDQogCXJl
dHVybiByZXN1bHQ7DQogfQ0KQEAgLTMwODAsMTEgKzMxMDUsMjIgQEAgc3RhdGljIGludCB2ZWdh
MTBfZ2V0X3BwX3RhYmxlX2VudHJ5X2NhbGxiYWNrX2Z1bmMoc3RydWN0IHBwX2h3bWdyICpod21n
ciwNCiAJcGVyZm9ybWFuY2VfbGV2ZWwtPnNvY19jbG9jayA9IHNvY2Nsa19kZXBfdGFibGUtPmVu
dHJpZXMNCiAJCQkJW3N0YXRlX2VudHJ5LT51Y1NvY0Nsb2NrSW5kZXhIaWdoXS51bENsazsNCiAJ
aWYgKGdmeGNsa19kZXBfdGFibGUtPnVjUmV2SWQgPT0gMCkgew0KLQkJcGVyZm9ybWFuY2VfbGV2
ZWwtPmdmeF9jbG9jayA9IGdmeGNsa19kZXBfdGFibGUtPmVudHJpZXMNCi0JCQlbc3RhdGVfZW50
cnktPnVjR2Z4Q2xvY2tJbmRleEhpZ2hdLnVsQ2xrOw0KKwkJLyogdW5kZXIgdmVnYTEwIHBwIG9u
ZSB2ZiBtb2RlLCB0aGUgZ2Z4IGNsayBkcG0gbmVlZCBiZSBsb3dlcg0KKwkJICogdG8gbGV2ZWwt
NCBkdWUgdG8gdGhlIGxpbWl0ZWQgMTEwdy1wb3dlcg0KKwkJICovDQorCQlpZiAoaHdtZ3ItPnBw
X29uZV92ZiAmJiAoc3RhdGVfZW50cnktPnVjR2Z4Q2xvY2tJbmRleEhpZ2ggPiAwKSkNCisJCQlw
ZXJmb3JtYW5jZV9sZXZlbC0+Z2Z4X2Nsb2NrID0NCisJCQkJZ2Z4Y2xrX2RlcF90YWJsZS0+ZW50
cmllc1s0XS51bENsazsNCisJCWVsc2UNCisJCQlwZXJmb3JtYW5jZV9sZXZlbC0+Z2Z4X2Nsb2Nr
ID0gZ2Z4Y2xrX2RlcF90YWJsZS0+ZW50cmllcw0KKwkJCQlbc3RhdGVfZW50cnktPnVjR2Z4Q2xv
Y2tJbmRleEhpZ2hdLnVsQ2xrOw0KIAl9IGVsc2UgaWYgKGdmeGNsa19kZXBfdGFibGUtPnVjUmV2
SWQgPT0gMSkgew0KIAkJcGF0b21fcmVjb3JkX1YyID0gKEFUT01fVmVnYTEwX0dGWENMS19EZXBl
bmRlbmN5X1JlY29yZF9WMiAqKWdmeGNsa19kZXBfdGFibGUtPmVudHJpZXM7DQotCQlwZXJmb3Jt
YW5jZV9sZXZlbC0+Z2Z4X2Nsb2NrID0gcGF0b21fcmVjb3JkX1YyW3N0YXRlX2VudHJ5LT51Y0dm
eENsb2NrSW5kZXhIaWdoXS51bENsazsNCisJCWlmIChod21nci0+cHBfb25lX3ZmICYmIChzdGF0
ZV9lbnRyeS0+dWNHZnhDbG9ja0luZGV4SGlnaCA+IDApKQ0KKwkJCXBlcmZvcm1hbmNlX2xldmVs
LT5nZnhfY2xvY2sgPSBwYXRvbV9yZWNvcmRfVjJbNF0udWxDbGs7DQorCQllbHNlDQorCQkJcGVy
Zm9ybWFuY2VfbGV2ZWwtPmdmeF9jbG9jayA9DQorCQkJCXBhdG9tX3JlY29yZF9WMltzdGF0ZV9l
bnRyeS0+dWNHZnhDbG9ja0luZGV4SGlnaF0udWxDbGs7DQogCX0NCiANCiAJcGVyZm9ybWFuY2Vf
bGV2ZWwtPm1lbV9jbG9jayA9IG1jbGtfZGVwX3RhYmxlLT5lbnRyaWVzDQpAQCAtMzQ5NSw2ICsz
NTMxLDcgQEAgc3RhdGljIGludCB2ZWdhMTBfdXBsb2FkX2RwbV9ib290dXBfbGV2ZWwoc3RydWN0
IHBwX2h3bWdyICpod21ncikNCiAJCQlzbXVtX3NlbmRfbXNnX3RvX3NtY193aXRoX3BhcmFtZXRl
cihod21nciwNCiAJCQkJUFBTTUNfTVNHX1NldFNvZnRNaW5HZnhjbGtCeUluZGV4LA0KIAkJCQlk
YXRhLT5zbWNfc3RhdGVfdGFibGUuZ2Z4X2Jvb3RfbGV2ZWwpOw0KKw0KIAkJCWRhdGEtPmRwbV90
YWJsZS5nZnhfdGFibGUuZHBtX3N0YXRlLnNvZnRfbWluX2xldmVsID0NCiAJCQkJCWRhdGEtPnNt
Y19zdGF0ZV90YWJsZS5nZnhfYm9vdF9sZXZlbDsNCiAJCX0NCkBAIC0zNTE4LDYgKzM1NTUsOSBA
QCBzdGF0aWMgaW50IHZlZ2ExMF91cGxvYWRfZHBtX2Jvb3R1cF9sZXZlbChzdHJ1Y3QgcHBfaHdt
Z3IgKmh3bWdyKQ0KIAkJfQ0KIAl9DQogDQorCWlmICghaHdtZ3ItPm5vdF92ZikNCisJCXJldHVy
biAwOw0KKw0KIAlpZiAoIWRhdGEtPnJlZ2lzdHJ5X2RhdGEuc29jY2xrX2RwbV9rZXlfZGlzYWJs
ZWQpIHsNCiAJCWlmIChkYXRhLT5zbWNfc3RhdGVfdGFibGUuc29jX2Jvb3RfbGV2ZWwgIT0NCiAJ
CQkJZGF0YS0+ZHBtX3RhYmxlLnNvY190YWJsZS5kcG1fc3RhdGUuc29mdF9taW5fbGV2ZWwpIHsN
CkBAIC0zNTYwLDYgKzM2MDAsOSBAQCBzdGF0aWMgaW50IHZlZ2ExMF91cGxvYWRfZHBtX21heF9s
ZXZlbChzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyKQ0KIAkJfQ0KIAl9DQogDQorCWlmICghaHdtZ3It
Pm5vdF92ZikNCisJCXJldHVybiAwOw0KKw0KIAlpZiAoIWRhdGEtPnJlZ2lzdHJ5X2RhdGEuc29j
Y2xrX2RwbV9rZXlfZGlzYWJsZWQpIHsNCiAJCWlmIChkYXRhLT5zbWNfc3RhdGVfdGFibGUuc29j
X21heF9sZXZlbCAhPQ0KIAkJCWRhdGEtPmRwbV90YWJsZS5zb2NfdGFibGUuZHBtX3N0YXRlLnNv
ZnRfbWF4X2xldmVsKSB7DQpAQCAtNDA1NCwxNSArNDA5NywyNSBAQCBzdGF0aWMgaW50IHZlZ2Ex
MF9nZXRfcHJvZmlsaW5nX2Nsa19tYXNrKHN0cnVjdCBwcF9od21nciAqaHdtZ3IsIGVudW0gYW1k
X2RwbV9mbw0KIAl9IGVsc2UgaWYgKGxldmVsID09IEFNRF9EUE1fRk9SQ0VEX0xFVkVMX1BST0ZJ
TEVfTUlOX01DTEspIHsNCiAJCSptY2xrX21hc2sgPSAwOw0KIAl9IGVsc2UgaWYgKGxldmVsID09
IEFNRF9EUE1fRk9SQ0VEX0xFVkVMX1BST0ZJTEVfUEVBSykgew0KLQkJKnNjbGtfbWFzayA9IHRh
YmxlX2luZm8tPnZkZF9kZXBfb25fc2Nsay0+Y291bnQgLSAxOw0KKwkJLyogdW5kZXIgdmVnYTEw
ICBwcCBvbmUgdmYgbW9kZSwgdGhlIGdmeCBjbGsgZHBtIG5lZWQgYmUgbG93ZXINCisJCSAqIHRv
IGxldmVsLTQgZHVlIHRvIHRoZSBsaW1pdGVkIHBvd2VyDQorCQkgKi8NCisJCWlmIChod21nci0+
cHBfb25lX3ZmKQ0KKwkJCSpzY2xrX21hc2sgPSA0Ow0KKwkJZWxzZQ0KKwkJCSpzY2xrX21hc2sg
PSB0YWJsZV9pbmZvLT52ZGRfZGVwX29uX3NjbGstPmNvdW50IC0gMTsNCiAJCSpzb2NfbWFzayA9
IHRhYmxlX2luZm8tPnZkZF9kZXBfb25fc29jY2xrLT5jb3VudCAtIDE7DQogCQkqbWNsa19tYXNr
ID0gdGFibGVfaW5mby0+dmRkX2RlcF9vbl9tY2xrLT5jb3VudCAtIDE7DQogCX0NCisNCiAJcmV0
dXJuIDA7DQogfQ0KIA0KIHN0YXRpYyB2b2lkIHZlZ2ExMF9zZXRfZmFuX2NvbnRyb2xfbW9kZShz
dHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyLCB1aW50MzJfdCBtb2RlKQ0KIHsNCisJaWYgKCFod21nci0+
bm90X3ZmKQ0KKwkJcmV0dXJuOw0KKw0KIAlzd2l0Y2ggKG1vZGUpIHsNCiAJY2FzZSBBTURfRkFO
X0NUUkxfTk9ORToNCiAJCXZlZ2ExMF9mYW5fY3RybF9zZXRfZmFuX3NwZWVkX3BlcmNlbnQoaHdt
Z3IsIDEwMCk7DQpAQCAtNDE3Niw2ICs0MjI5LDkgQEAgc3RhdGljIGludCB2ZWdhMTBfZHBtX2Zv
cmNlX2RwbV9sZXZlbChzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyLA0KIAkJYnJlYWs7DQogCX0NCiAN
CisJaWYgKCFod21nci0+bm90X3ZmKQ0KKwkJcmV0dXJuIHJldDsNCisNCiAJaWYgKCFyZXQpIHsN
CiAJCWlmIChsZXZlbCA9PSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX1BFQUsgJiYgaHdt
Z3ItPmRwbV9sZXZlbCAhPSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX1BFQUspDQogCQkJ
dmVnYTEwX3NldF9mYW5fY29udHJvbF9tb2RlKGh3bWdyLCBBTURfRkFOX0NUUkxfTk9ORSk7DQpA
QCAtNDQ4MCw3ICs0NTM2LDcgQEAgc3RhdGljIGludCB2ZWdhMTBfcHJpbnRfY2xvY2tfbGV2ZWxz
KHN0cnVjdCBwcF9od21nciAqaHdtZ3IsDQogCXN0cnVjdCB2ZWdhMTBfcGNpZV90YWJsZSAqcGNp
ZV90YWJsZSA9ICYoZGF0YS0+ZHBtX3RhYmxlLnBjaWVfdGFibGUpOw0KIAlzdHJ1Y3QgdmVnYTEw
X29kbl9jbG9ja192b2x0YWdlX2RlcGVuZGVuY3lfdGFibGUgKnBvZG5fdmRkX2RlcCA9IE5VTEw7
DQogDQotCWludCBpLCBub3csIHNpemUgPSAwOw0KKwlpbnQgaSwgbm93LCBzaXplID0gMCwgY291
bnQgPSAwOw0KIA0KIAlzd2l0Y2ggKHR5cGUpIHsNCiAJY2FzZSBQUF9TQ0xLOg0KQEAgLTQ0OTAs
NyArNDU0NiwxMiBAQCBzdGF0aWMgaW50IHZlZ2ExMF9wcmludF9jbG9ja19sZXZlbHMoc3RydWN0
IHBwX2h3bWdyICpod21nciwNCiAJCXNtdW1fc2VuZF9tc2dfdG9fc21jKGh3bWdyLCBQUFNNQ19N
U0dfR2V0Q3VycmVudEdmeGNsa0luZGV4KTsNCiAJCW5vdyA9IHNtdW1fZ2V0X2FyZ3VtZW50KGh3
bWdyKTsNCiANCi0JCWZvciAoaSA9IDA7IGkgPCBzY2xrX3RhYmxlLT5jb3VudDsgaSsrKQ0KKwkJ
aWYgKGh3bWdyLT5wcF9vbmVfdmYgJiYNCisJCSAgICAoaHdtZ3ItPmRwbV9sZXZlbCA9PSBBTURf
RFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX1BFQUspKQ0KKwkJCWNvdW50ID0gNTsNCisJCWVsc2UN
CisJCQljb3VudCA9IHNjbGtfdGFibGUtPmNvdW50Ow0KKwkJZm9yIChpID0gMDsgaSA8IGNvdW50
OyBpKyspDQogCQkJc2l6ZSArPSBzcHJpbnRmKGJ1ZiArIHNpemUsICIlZDogJXVNaHogJXNcbiIs
DQogCQkJCQlpLCBzY2xrX3RhYmxlLT5kcG1fbGV2ZWxzW2ldLnZhbHVlIC8gMTAwLA0KIAkJCQkJ
KGkgPT0gbm93KSA/ICIqIiA6ICIiKTsNCkBAIC00NzAxLDYgKzQ3NjIsOSBAQCBzdGF0aWMgaW50
IHZlZ2ExMF9kaXNhYmxlX2RwbV90YXNrcyhzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyKQ0KIHsNCiAJ
aW50IHRtcF9yZXN1bHQsIHJlc3VsdCA9IDA7DQogDQorCWlmICghaHdtZ3ItPm5vdF92ZikNCisJ
CXJldHVybiAwOw0KKw0KIAlpZiAoUFBfQ0FQKFBITV9QbGF0Zm9ybUNhcHNfVGhlcm1hbENvbnRy
b2xsZXIpKQ0KIAkJdmVnYTEwX2Rpc2FibGVfdGhlcm1hbF9wcm90ZWN0aW9uKGh3bWdyKTsNCiAN
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvaHdtZ3IuaCBi
L2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2luYy9od21nci5oDQppbmRleCBhZjk3NzY3
NWZkMzMuLjJmZmI2NjZiOTdlNiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93
ZXJwbGF5L2luYy9od21nci5oDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9p
bmMvaHdtZ3IuaA0KQEAgLTc0MSw2ICs3NDEsNyBAQCBzdHJ1Y3QgcHBfaHdtZ3Igew0KIAl1aW50
MzJfdCBzbXVfdmVyc2lvbjsNCiAJYm9vbCBub3RfdmY7DQogCWJvb2wgcG1fZW47DQorCWJvb2wg
cHBfb25lX3ZmOw0KIAlzdHJ1Y3QgbXV0ZXggc211X2xvY2s7DQogDQogCXVpbnQzMl90IHBwX3Rh
YmxlX3ZlcnNpb247DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkv
c211bWdyL3NtdTlfc211bWdyLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9zbXVt
Z3Ivc211OV9zbXVtZ3IuYw0KaW5kZXggNzQyYjNkYzFmNmNiLi5hZGZiY2JlNWQxMTMgMTAwNjQ0
DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9zbXVtZ3Ivc211OV9zbXVtZ3Iu
Yw0KKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211bWdyL3NtdTlfc211bWdy
LmMNCkBAIC02MSwxNSArNjEsMjkgQEAgc3RhdGljIHVpbnQzMl90IHNtdTlfd2FpdF9mb3JfcmVz
cG9uc2Uoc3RydWN0IHBwX2h3bWdyICpod21ncikNCiAJdWludDMyX3QgcmVnOw0KIAl1aW50MzJf
dCByZXQ7DQogDQotCXJlZyA9IFNPQzE1X1JFR19PRkZTRVQoTVAxLCAwLCBtbU1QMV9TTU5fQzJQ
TVNHXzkwKTsNCisJLyogRHVlIHRvIHRoZSBMMSBwb2xpY3kgcHJvYmxlbSB1bmRlciBTUklPViwg
d2UgaGF2ZSB0byB1c2UNCisJICogbW1NUDFfU01OX0MyUE1TR18xMDMgYXMgdGhlIGRyaXZlciBy
ZXNwb25zZSByZWdpc3Rlcg0KKwkgKi8NCisJaWYgKGh3bWdyLT5wcF9vbmVfdmYpIHsNCisJCXJl
ZyA9IFNPQzE1X1JFR19PRkZTRVQoTVAxLCAwLCBtbU1QMV9TTU5fQzJQTVNHXzEwMyk7DQogDQot
CXJldCA9IHBobV93YWl0X2Zvcl9yZWdpc3Rlcl91bmVxdWFsKGh3bWdyLCByZWcsDQotCQkJMCwg
TVAxX0MyUE1TR185MF9fQ09OVEVOVF9NQVNLKTsNCisJCXJldCA9IHBobV93YWl0X2Zvcl9yZWdp
c3Rlcl91bmVxdWFsKGh3bWdyLCByZWcsDQorCQkJCTAsIE1QMV9DMlBNU0dfMTAzX19DT05URU5U
X01BU0spOw0KIA0KLQlpZiAocmV0KQ0KLQkJcHJfZXJyKCJObyByZXNwb25zZSBmcm9tIHNtdVxu
Iik7DQorCQlpZiAocmV0KQ0KKwkJCXByX2VycigiTm8gcmVzcG9uc2UgZnJvbSBzbXVcbiIpOw0K
IA0KLQlyZXR1cm4gUlJFRzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR185MCk7DQor
CQlyZXR1cm4gUlJFRzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR18xMDMpOw0KKwl9
IGVsc2Ugew0KKwkJcmVnID0gU09DMTVfUkVHX09GRlNFVChNUDEsIDAsIG1tTVAxX1NNTl9DMlBN
U0dfOTApOw0KKw0KKwkJcmV0ID0gcGhtX3dhaXRfZm9yX3JlZ2lzdGVyX3VuZXF1YWwoaHdtZ3Is
IHJlZywNCisJCQkJMCwgTVAxX0MyUE1TR185MF9fQ09OVEVOVF9NQVNLKTsNCisNCisJCWlmIChy
ZXQpDQorCQkJcHJfZXJyKCJObyByZXNwb25zZSBmcm9tIHNtdVxuIik7DQorCQlyZXR1cm4gUlJF
RzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR185MCk7DQorCX0NCiB9DQogDQogLyoN
CkBAIC04Myw3ICs5NywxMSBAQCBzdGF0aWMgaW50IHNtdTlfc2VuZF9tc2dfdG9fc21jX3dpdGhv
dXRfd2FpdGluZyhzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyLA0KIHsNCiAJc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYgPSBod21nci0+YWRldjsNCiANCi0JV1JFRzMyX1NPQzE1KE1QMSwgMCwgbW1N
UDFfU01OX0MyUE1TR182NiwgbXNnKTsNCisJaWYgKGh3bWdyLT5wcF9vbmVfdmYpIHsNCisJCVdS
RUczMl9TT0MxNShNUDEsIDAsIG1tTVAxX1NNTl9DMlBNU0dfMTAxLCBtc2cpOw0KKwl9IGVsc2Ug
ew0KKwkJV1JFRzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR182NiwgbXNnKTsNCisJ
fQ0KIA0KIAlyZXR1cm4gMDsNCiB9DQpAQCAtMTAxLDcgKzExOSwxMCBAQCBpbnQgc211OV9zZW5k
X21zZ190b19zbWMoc3RydWN0IHBwX2h3bWdyICpod21nciwgdWludDE2X3QgbXNnKQ0KIA0KIAlz
bXU5X3dhaXRfZm9yX3Jlc3BvbnNlKGh3bWdyKTsNCiANCi0JV1JFRzMyX1NPQzE1KE1QMSwgMCwg
bW1NUDFfU01OX0MyUE1TR185MCwgMCk7DQorCWlmIChod21nci0+cHBfb25lX3ZmKQ0KKwkJV1JF
RzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR18xMDMsIDApOw0KKwllbHNlDQorCQlX
UkVHMzJfU09DMTUoTVAxLCAwLCBtbU1QMV9TTU5fQzJQTVNHXzkwLCAwKTsNCiANCiAJc211OV9z
ZW5kX21zZ190b19zbWNfd2l0aG91dF93YWl0aW5nKGh3bWdyLCBtc2cpOw0KIA0KQEAgLTEyNyw5
ICsxNDgsMTcgQEAgaW50IHNtdTlfc2VuZF9tc2dfdG9fc21jX3dpdGhfcGFyYW1ldGVyKHN0cnVj
dCBwcF9od21nciAqaHdtZ3IsDQogDQogCXNtdTlfd2FpdF9mb3JfcmVzcG9uc2UoaHdtZ3IpOw0K
IA0KLQlXUkVHMzJfU09DMTUoTVAxLCAwLCBtbU1QMV9TTU5fQzJQTVNHXzkwLCAwKTsNCi0NCi0J
V1JFRzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR184MiwgcGFyYW1ldGVyKTsNCisJ
LyogRHVlIHRvIHRoZSBMMSBwb2xpY3kgcHJvYmxlbSB1bmRlciBTUklPViwgd2UgaGF2ZSB0byB1
c2UNCisJICogbW1NUDFfU01OX0MyUE1TR18xMDEgYXMgdGhlIGRyaXZlciBtZXNzYWdlIHJlZ2lz
dGVyIGFuZA0KKwkgKiBtbU1QMV9TTU5fQzJQTVNHXzEwMiBhcyB0aGUgZHJpdmVyIHBhcmFtZXRl
ciByZWdpc3Rlci4NCisJICovDQorCWlmIChod21nci0+cHBfb25lX3ZmKSB7DQorCQlXUkVHMzJf
U09DMTUoTVAxLCAwLCBtbU1QMV9TTU5fQzJQTVNHXzEwMywgMCk7DQorCQlXUkVHMzJfU09DMTUo
TVAxLCAwLCBtbU1QMV9TTU5fQzJQTVNHXzEwMiwgcGFyYW1ldGVyKTsNCisJfSBlbHNlIHsNCisJ
CVdSRUczMl9TT0MxNShNUDEsIDAsIG1tTVAxX1NNTl9DMlBNU0dfOTAsIDApOw0KKwkJV1JFRzMy
X1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR184MiwgcGFyYW1ldGVyKTsNCisJfQ0KIA0K
IAlzbXU5X3NlbmRfbXNnX3RvX3NtY193aXRob3V0X3dhaXRpbmcoaHdtZ3IsIG1zZyk7DQogDQpA
QCAtMTQ0LDUgKzE3Myw4IEBAIHVpbnQzMl90IHNtdTlfZ2V0X2FyZ3VtZW50KHN0cnVjdCBwcF9o
d21nciAqaHdtZ3IpDQogew0KIAlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IGh3bWdyLT5h
ZGV2Ow0KIA0KLQlyZXR1cm4gUlJFRzMyX1NPQzE1KE1QMSwgMCwgbW1NUDFfU01OX0MyUE1TR184
Mik7DQorCWlmIChod21nci0+cHBfb25lX3ZmKQ0KKwkJcmV0dXJuIFJSRUczMl9TT0MxNShNUDEs
IDAsIG1tTVAxX1NNTl9DMlBNU0dfMTAyKTsNCisJZWxzZQ0KKwkJcmV0dXJuIFJSRUczMl9TT0Mx
NShNUDEsIDAsIG1tTVAxX1NNTl9DMlBNU0dfODIpOw0KIH0NCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9zbXVtZ3IvdmVnYTEwX3NtdW1nci5jIGIvZHJpdmVycy9n
cHUvZHJtL2FtZC9wb3dlcnBsYXkvc211bWdyL3ZlZ2ExMF9zbXVtZ3IuYw0KaW5kZXggMGYzODM2
ZmQ5NjY2Li44NmRiOTg1OTIyZTcgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bv
d2VycGxheS9zbXVtZ3IvdmVnYTEwX3NtdW1nci5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L3Bvd2VycGxheS9zbXVtZ3IvdmVnYTEwX3NtdW1nci5jDQpAQCAtNzEsNiArNzEsMTIgQEAgc3Rh
dGljIGludCB2ZWdhMTBfY29weV90YWJsZV90b19zbWMoc3RydWN0IHBwX2h3bWdyICpod21nciwN
CiB7DQogCXN0cnVjdCB2ZWdhMTBfc211bWdyICpwcml2ID0gaHdtZ3ItPnNtdV9iYWNrZW5kOw0K
IA0KKwkvKiB1bmRlciBwcF9vbmVfdmYgbW9kZSwgdmJpb3Mgb3IgaHlwZXJ2aXNvciBkcml2ZXIN
CisJICogaGFzIGFscmVhZHkgY29weSB0YWJsZSB0byBzbWMgc28gaGVyZSBvbmx5IHNraXAgaXQN
CisJICovDQorCWlmICghaHdtZ3ItPm5vdF92ZiAmJiAhaHdtZ3ItPnBwX29uZV92ZikNCisJCXJl
dHVybiAwOw0KKw0KIAlQUF9BU1NFUlRfV0lUSF9DT0RFKHRhYmxlX2lkIDwgTUFYX1NNVV9UQUJM
RSwNCiAJCQkiSW52YWxpZCBTTVUgVGFibGUgSUQhIiwgcmV0dXJuIC1FSU5WQUwpOw0KIAlQUF9B
U1NFUlRfV0lUSF9DT0RFKHByaXYtPnNtdV90YWJsZXMuZW50cnlbdGFibGVfaWRdLnZlcnNpb24g
IT0gMCwNCkBAIC0xMDAsNiArMTA2LDE0IEBAIGludCB2ZWdhMTBfZW5hYmxlX3NtY19mZWF0dXJl
cyhzdHJ1Y3QgcHBfaHdtZ3IgKmh3bWdyLA0KIAlpbnQgbXNnID0gZW5hYmxlID8gUFBTTUNfTVNH
X0VuYWJsZVNtdUZlYXR1cmVzIDoNCiAJCQlQUFNNQ19NU0dfRGlzYWJsZVNtdUZlYXR1cmVzOw0K
IA0KKwkvKiBWRiBoYXMgbm8gcGVybWlzc2lvbiB0byBjaGFuZ2Ugc211IGZlYXR1cmUgZHVlDQor
CSAqIHRvIHNlY3VyaXR5IGNvbmNlcm4gZXZlbiB1bmRlciBwcCBvbmUgdmYgbW9kZQ0KKwkgKiBp
dCBzdGlsbCBjYW4ndCBkbyBpdC4gRm9yIHZlZ2ExMCwgdGhlIHNtdSBpbg0KKwkgKiB2YmlvcyB3
aWxsIGVuYWJsZSB0aGUgYXBwcm9wcmlhdGUgZmVhdHVyZXMuDQorCSAqICovDQorCWlmICghaHdt
Z3ItPm5vdF92ZikNCisJCXJldHVybiAwOw0KKw0KIAlyZXR1cm4gc211bV9zZW5kX21zZ190b19z
bWNfd2l0aF9wYXJhbWV0ZXIoaHdtZ3IsDQogCQkJbXNnLCBmZWF0dXJlX21hc2spOw0KIH0NCi0t
IA0KMi4xNy4xDQoNCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fCmFtZC1nZnggbWFpbGluZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeAo=
