Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 9EBEF50CCC6
	for <lists+amd-gfx@lfdr.de>; Sat, 23 Apr 2022 19:54:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C7B5E10E154;
	Sat, 23 Apr 2022 17:54:41 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from mail-ej1-x62f.google.com (mail-ej1-x62f.google.com
 [IPv6:2a00:1450:4864:20::62f])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9F71A10E154
 for <amd-gfx@lists.freedesktop.org>; Sat, 23 Apr 2022 17:54:40 +0000 (UTC)
Received: by mail-ej1-x62f.google.com with SMTP id y3so1707445ejo.12
 for <amd-gfx@lists.freedesktop.org>; Sat, 23 Apr 2022 10:54:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=message-id:date:mime-version:user-agent:subject:content-language:to
 :references:from:in-reply-to:content-transfer-encoding;
 bh=1+6T9swXkShFFWNp7kofZ1BGAj9YObQ8WVsxFGDXD7U=;
 b=mF381w845fMlWeZIFjJVwrtiYOwhyle0SZnMhl8yee5b2vUMSnkTi8vchDdfxLqpoK
 TAA8mTT+LlxeuHU6+3tcMT7OofqAI16AcL6yrEKF9W8q4Vo8Aas4PTjvVT9YHNidZikv
 VlD1CMXpRpJHaKgeXks/XMnA3AgpySy0owOh4AexL/pPSnW+8+T5HqtHmqJqxK0s0Rxn
 jIgX+y7arMKfvW+1vAHCwF7PlVyl40Ry9xk6eidQtA0J6of6xLVjqFtxFwk9MHQEmFkH
 MmfwSQr2bAcrWArgxwr+0UFpJsYkQe9kE3VwLaTAQ1sXcXzmJAMKSvFHN724IEgaEXlR
 QXcg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:message-id:date:mime-version:user-agent:subject
 :content-language:to:references:from:in-reply-to
 :content-transfer-encoding;
 bh=1+6T9swXkShFFWNp7kofZ1BGAj9YObQ8WVsxFGDXD7U=;
 b=Te8o9Mo5tVaJ9cmwopGFSbYqpj+CDkBYnuk7pqh93yyaj+iwJCmrgZATY+vvjP4W6e
 jBFOpiDEkC5SGOzmpRzOAplUD4Qu9UscN2HJF9zmbFCcnhZSrpDwRel3ucsE771inKTl
 oAGujIMmyjK7RbUiZHb4hKR0bgmDxS3yvbME6UYVHvYy8VV1u8+07mVzzLgEdidfk35I
 rx9LjHUZonsP+uqD+M7f5F07q+aLcUKJ5n3DfwKO3LEwdQ6FOpSL4eFSkVmAVo7QcpL7
 gOF3WHtM4Aj9+Q5mrQGcaYY3oF+gC25Bw7z0995Y5T0zRdCCYYMHyJpXX/BYRUFvOS+d
 qFmQ==
X-Gm-Message-State: AOAM5313yJ3rVAQeJBZ0H6FAzxa8w/mc0EAdVRmzFHan4ycchej0tdPj
 O+3IDV4vpVJCilgZOTj5wTw=
X-Google-Smtp-Source: ABdhPJxQ/kojUKxxuT/8s8J8535eM/wMJxr/1IMn01FFvuZ2FHJ4gIQh0kxqTmGeAEckaTpbuOwQDA==
X-Received: by 2002:a17:907:6e1c:b0:6ef:fb80:d92a with SMTP id
 sd28-20020a1709076e1c00b006effb80d92amr9015052ejc.539.1650736478901; 
 Sat, 23 Apr 2022 10:54:38 -0700 (PDT)
Received: from ?IPV6:2a02:908:1252:fb60:164a:23ad:31da:3e03?
 ([2a02:908:1252:fb60:164a:23ad:31da:3e03])
 by smtp.gmail.com with ESMTPSA id
 y14-20020a056402440e00b00416046b623csm2575513eda.2.2022.04.23.10.54.37
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Sat, 23 Apr 2022 10:54:38 -0700 (PDT)
Message-ID: <f0e62c2b-a715-932f-891d-b4c80b395911@gmail.com>
Date: Sat, 23 Apr 2022 19:54:36 +0200
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.7.0
Subject: Re: [PATCH v2] drm/amdgpu: replace VM fault error by info logs
Content-Language: en-US
To: Alex Sierra <alex.sierra@amd.com>, amd-gfx@lists.freedesktop.org
References: <20220423022445.7238-1-alex.sierra@amd.com>
From: =?UTF-8?Q?Christian_K=c3=b6nig?= <ckoenig.leichtzumerken@gmail.com>
In-Reply-To: <20220423022445.7238-1-alex.sierra@amd.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

Am 23.04.22 um 04:24 schrieb Alex Sierra:
> This is not a kernel error. These logs are caused by VM faults that
> could not be handled. Typically, generated by user mode applications.

Well it's still a hardware fault which should be logged as an error.

So I'm absolutely not keen about reducing it to just an information.

Regards,
Christian.

>
> Signed-off-by: Alex Sierra <alex.sierra@amd.com>
> ---
>   drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c | 14 +++++++-------
>   drivers/gpu/drm/amd/amdgpu/gfxhub_v2_1.c | 14 +++++++-------
>   drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c   |  4 ++--
>   drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c    |  8 ++++----
>   drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c    |  8 ++++----
>   drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c    |  8 ++++----
>   drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c    | 20 ++++++++++----------
>   drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c  | 14 +++++++-------
>   drivers/gpu/drm/amd/amdgpu/mmhub_v2_3.c  | 14 +++++++-------
>   9 files changed, 52 insertions(+), 52 deletions(-)
>
> diff --git a/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c b/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c
> index 6e0ace2fbfab..c226a4803086 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c
> @@ -79,25 +79,25 @@ gfxhub_v2_0_print_l2_protection_fault_status(struct amdgpu_device *adev,
>   	u32 cid = REG_GET_FIELD(status,
>   				GCVM_L2_PROTECTION_FAULT_STATUS, CID);
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"GCVM_L2_PROTECTION_FAULT_STATUS:0x%08X\n",
>   		status);
> -	dev_err(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
> +	dev_info(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
>   		cid >= ARRAY_SIZE(gfxhub_client_ids) ? "unknown" : gfxhub_client_ids[cid],
>   		cid);
> -	dev_err(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, MORE_FAULTS));
> -	dev_err(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, WALKER_ERROR));
> -	dev_err(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, PERMISSION_FAULTS));
> -	dev_err(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, MAPPING_ERROR));
> -	dev_err(adev->dev, "\t RW: 0x%lx\n",
> +	dev_info(adev->dev, "\t RW: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, RW));
>   }
> diff --git a/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_1.c b/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_1.c
> index ff738e9725ee..fdcca1477592 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_1.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gfxhub_v2_1.c
> @@ -82,25 +82,25 @@ gfxhub_v2_1_print_l2_protection_fault_status(struct amdgpu_device *adev,
>   	u32 cid = REG_GET_FIELD(status,
>   				GCVM_L2_PROTECTION_FAULT_STATUS, CID);
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"GCVM_L2_PROTECTION_FAULT_STATUS:0x%08X\n",
>   		status);
> -	dev_err(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
> +	dev_info(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
>   		cid >= ARRAY_SIZE(gfxhub_client_ids) ? "unknown" : gfxhub_client_ids[cid],
>   		cid);
> -	dev_err(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, MORE_FAULTS));
> -	dev_err(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, WALKER_ERROR));
> -	dev_err(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, PERMISSION_FAULTS));
> -	dev_err(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, MAPPING_ERROR));
> -	dev_err(adev->dev, "\t RW: 0x%lx\n",
> +	dev_info(adev->dev, "\t RW: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		GCVM_L2_PROTECTION_FAULT_STATUS, RW));
>   }
> diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c
> index a455e59f41f4..864fcc0edb90 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c
> @@ -148,14 +148,14 @@ static int gmc_v10_0_process_interrupt(struct amdgpu_device *adev,
>   	memset(&task_info, 0, sizeof(struct amdgpu_task_info));
>   	amdgpu_vm_get_task_info(adev, entry->pasid, &task_info);
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"[%s] page fault (src_id:%u ring:%u vmid:%u pasid:%u, "
>   		"for process %s pid %d thread %s pid %d)\n",
>   		entry->vmid_src ? "mmhub" : "gfxhub",
>   		entry->src_id, entry->ring_id, entry->vmid,
>   		entry->pasid, task_info.process_name, task_info.tgid,
>   		task_info.task_name, task_info.pid);
> -	dev_err(adev->dev, "  in page starting at address 0x%016llx from client 0x%x (%s)\n",
> +	dev_info(adev->dev, "  in page starting at address 0x%016llx from client 0x%x (%s)\n",
>   		addr, entry->client_id,
>   		soc15_ih_clientid_name[entry->client_id]);
>   
> diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
> index ec291d28edff..3d830fd7706b 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
> @@ -620,7 +620,7 @@ static void gmc_v6_0_vm_decode_fault(struct amdgpu_device *adev,
>   	mc_id = REG_GET_FIELD(status, VM_CONTEXT1_PROTECTION_FAULT_STATUS,
>   			      MEMORY_CLIENT_ID);
>   
> -	dev_err(adev->dev, "VM fault (0x%02x, vmid %d) at page %u, %s from '%s' (0x%08x) (%d)\n",
> +	dev_info(adev->dev, "VM fault (0x%02x, vmid %d) at page %u, %s from '%s' (0x%08x) (%d)\n",
>   	       protections, vmid, addr,
>   	       REG_GET_FIELD(status, VM_CONTEXT1_PROTECTION_FAULT_STATUS,
>   			     MEMORY_CLIENT_RW) ?
> @@ -1083,11 +1083,11 @@ static int gmc_v6_0_process_interrupt(struct amdgpu_device *adev,
>   		gmc_v6_0_set_fault_enable_default(adev, false);
>   
>   	if (printk_ratelimit()) {
> -		dev_err(adev->dev, "GPU fault detected: %d 0x%08x\n",
> +		dev_info(adev->dev, "GPU fault detected: %d 0x%08x\n",
>   			entry->src_id, entry->src_data[0]);
> -		dev_err(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_ADDR   0x%08X\n",
> +		dev_info(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_ADDR   0x%08X\n",
>   			addr);
> -		dev_err(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_STATUS 0x%08X\n",
> +		dev_info(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_STATUS 0x%08X\n",
>   			status);
>   		gmc_v6_0_vm_decode_fault(adev, status, addr, 0);
>   	}
> diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
> index 979da6f510e8..1f3ceb03b47b 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
> @@ -781,7 +781,7 @@ static void gmc_v7_0_vm_decode_fault(struct amdgpu_device *adev, u32 status,
>   	mc_id = REG_GET_FIELD(status, VM_CONTEXT1_PROTECTION_FAULT_STATUS,
>   			      MEMORY_CLIENT_ID);
>   
> -	dev_err(adev->dev, "VM fault (0x%02x, vmid %d, pasid %d) at page %u, %s from '%s' (0x%08x) (%d)\n",
> +	dev_info(adev->dev, "VM fault (0x%02x, vmid %d, pasid %d) at page %u, %s from '%s' (0x%08x) (%d)\n",
>   	       protections, vmid, pasid, addr,
>   	       REG_GET_FIELD(status, VM_CONTEXT1_PROTECTION_FAULT_STATUS,
>   			     MEMORY_CLIENT_RW) ?
> @@ -1286,11 +1286,11 @@ static int gmc_v7_0_process_interrupt(struct amdgpu_device *adev,
>   		gmc_v7_0_set_fault_enable_default(adev, false);
>   
>   	if (printk_ratelimit()) {
> -		dev_err(adev->dev, "GPU fault detected: %d 0x%08x\n",
> +		dev_info(adev->dev, "GPU fault detected: %d 0x%08x\n",
>   			entry->src_id, entry->src_data[0]);
> -		dev_err(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_ADDR   0x%08X\n",
> +		dev_info(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_ADDR   0x%08X\n",
>   			addr);
> -		dev_err(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_STATUS 0x%08X\n",
> +		dev_info(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_STATUS 0x%08X\n",
>   			status);
>   		gmc_v7_0_vm_decode_fault(adev, status, addr, mc_client,
>   					 entry->pasid);
> diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
> index 382dde1ce74c..5be3f4f77c49 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
> @@ -1021,7 +1021,7 @@ static void gmc_v8_0_vm_decode_fault(struct amdgpu_device *adev, u32 status,
>   	mc_id = REG_GET_FIELD(status, VM_CONTEXT1_PROTECTION_FAULT_STATUS,
>   			      MEMORY_CLIENT_ID);
>   
> -	dev_err(adev->dev, "VM fault (0x%02x, vmid %d, pasid %d) at page %u, %s from '%s' (0x%08x) (%d)\n",
> +	dev_info(adev->dev, "VM fault (0x%02x, vmid %d, pasid %d) at page %u, %s from '%s' (0x%08x) (%d)\n",
>   	       protections, vmid, pasid, addr,
>   	       REG_GET_FIELD(status, VM_CONTEXT1_PROTECTION_FAULT_STATUS,
>   			     MEMORY_CLIENT_RW) ?
> @@ -1466,12 +1466,12 @@ static int gmc_v8_0_process_interrupt(struct amdgpu_device *adev,
>   		memset(&task_info, 0, sizeof(struct amdgpu_task_info));
>   		amdgpu_vm_get_task_info(adev, entry->pasid, &task_info);
>   
> -		dev_err(adev->dev, "GPU fault detected: %d 0x%08x for process %s pid %d thread %s pid %d\n",
> +		dev_info(adev->dev, "GPU fault detected: %d 0x%08x for process %s pid %d thread %s pid %d\n",
>   			entry->src_id, entry->src_data[0], task_info.process_name,
>   			task_info.tgid, task_info.task_name, task_info.pid);
> -		dev_err(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_ADDR   0x%08X\n",
> +		dev_info(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_ADDR   0x%08X\n",
>   			addr);
> -		dev_err(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_STATUS 0x%08X\n",
> +		dev_info(adev->dev, "  VM_CONTEXT1_PROTECTION_FAULT_STATUS 0x%08X\n",
>   			status);
>   		gmc_v8_0_vm_decode_fault(adev, status, addr, mc_client,
>   					 entry->pasid);
> diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
> index 22761a3bb818..98c8de7307be 100644
> --- a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
> @@ -582,14 +582,14 @@ static int gmc_v9_0_process_interrupt(struct amdgpu_device *adev,
>   	memset(&task_info, 0, sizeof(struct amdgpu_task_info));
>   	amdgpu_vm_get_task_info(adev, entry->pasid, &task_info);
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"[%s] %s page fault (src_id:%u ring:%u vmid:%u "
>   		"pasid:%u, for process %s pid %d thread %s pid %d)\n",
>   		hub_name, retry_fault ? "retry" : "no-retry",
>   		entry->src_id, entry->ring_id, entry->vmid,
>   		entry->pasid, task_info.process_name, task_info.tgid,
>   		task_info.task_name, task_info.pid);
> -	dev_err(adev->dev, "  in page starting at address 0x%016llx from IH client 0x%x (%s)\n",
> +	dev_info(adev->dev, "  in page starting at address 0x%016llx from IH client 0x%x (%s)\n",
>   		addr, entry->client_id,
>   		soc15_ih_clientid_name[entry->client_id]);
>   
> @@ -611,11 +611,11 @@ static int gmc_v9_0_process_interrupt(struct amdgpu_device *adev,
>   	WREG32_P(hub->vm_l2_pro_fault_cntl, 1, ~1);
>   
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"VM_L2_PROTECTION_FAULT_STATUS:0x%08X\n",
>   		status);
>   	if (hub == &adev->vmhub[AMDGPU_GFXHUB_0]) {
> -		dev_err(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
> +		dev_info(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
>   			cid >= ARRAY_SIZE(gfxhub_client_ids) ? "unknown" :
>   			gfxhub_client_ids[cid],
>   			cid);
> @@ -648,22 +648,22 @@ static int gmc_v9_0_process_interrupt(struct amdgpu_device *adev,
>   			mmhub_cid = NULL;
>   			break;
>   		}
> -		dev_err(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
> +		dev_info(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
>   			mmhub_cid ? mmhub_cid : "unknown", cid);
>   	}
> -	dev_err(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		VM_L2_PROTECTION_FAULT_STATUS, MORE_FAULTS));
> -	dev_err(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		VM_L2_PROTECTION_FAULT_STATUS, WALKER_ERROR));
> -	dev_err(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		VM_L2_PROTECTION_FAULT_STATUS, PERMISSION_FAULTS));
> -	dev_err(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		VM_L2_PROTECTION_FAULT_STATUS, MAPPING_ERROR));
> -	dev_err(adev->dev, "\t RW: 0x%x\n", rw);
> +	dev_info(adev->dev, "\t RW: 0x%x\n", rw);
>   	return 0;
>   }
>   
> diff --git a/drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c b/drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c
> index 636abd855686..ec8c8b2cab36 100644
> --- a/drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c
> +++ b/drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c
> @@ -150,7 +150,7 @@ mmhub_v2_0_print_l2_protection_fault_status(struct amdgpu_device *adev,
>   	rw = REG_GET_FIELD(status,
>   			   MMVM_L2_PROTECTION_FAULT_STATUS, RW);
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"MMVM_L2_PROTECTION_FAULT_STATUS:0x%08X\n",
>   		status);
>   	switch (adev->ip_versions[MMHUB_HWIP][0]) {
> @@ -169,21 +169,21 @@ mmhub_v2_0_print_l2_protection_fault_status(struct amdgpu_device *adev,
>   		mmhub_cid = NULL;
>   		break;
>   	}
> -	dev_err(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
> +	dev_info(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
>   		mmhub_cid ? mmhub_cid : "unknown", cid);
> -	dev_err(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, MORE_FAULTS));
> -	dev_err(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, WALKER_ERROR));
> -	dev_err(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, PERMISSION_FAULTS));
> -	dev_err(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, MAPPING_ERROR));
> -	dev_err(adev->dev, "\t RW: 0x%x\n", rw);
> +	dev_info(adev->dev, "\t RW: 0x%x\n", rw);
>   }
>   
>   static void mmhub_v2_0_setup_vm_pt_regs(struct amdgpu_device *adev, uint32_t vmid,
> diff --git a/drivers/gpu/drm/amd/amdgpu/mmhub_v2_3.c b/drivers/gpu/drm/amd/amdgpu/mmhub_v2_3.c
> index ff44c5364a8c..72dda850e7d3 100644
> --- a/drivers/gpu/drm/amd/amdgpu/mmhub_v2_3.c
> +++ b/drivers/gpu/drm/amd/amdgpu/mmhub_v2_3.c
> @@ -87,7 +87,7 @@ mmhub_v2_3_print_l2_protection_fault_status(struct amdgpu_device *adev,
>   	rw = REG_GET_FIELD(status,
>   			   MMVM_L2_PROTECTION_FAULT_STATUS, RW);
>   
> -	dev_err(adev->dev,
> +	dev_info(adev->dev,
>   		"MMVM_L2_PROTECTION_FAULT_STATUS:0x%08X\n",
>   		status);
>   	switch (adev->ip_versions[MMHUB_HWIP][0]) {
> @@ -100,21 +100,21 @@ mmhub_v2_3_print_l2_protection_fault_status(struct amdgpu_device *adev,
>   		mmhub_cid = NULL;
>   		break;
>   	}
> -	dev_err(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
> +	dev_info(adev->dev, "\t Faulty UTCL2 client ID: %s (0x%x)\n",
>   		mmhub_cid ? mmhub_cid : "unknown", cid);
> -	dev_err(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t MORE_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, MORE_FAULTS));
> -	dev_err(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t WALKER_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, WALKER_ERROR));
> -	dev_err(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
> +	dev_info(adev->dev, "\t PERMISSION_FAULTS: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, PERMISSION_FAULTS));
> -	dev_err(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
> +	dev_info(adev->dev, "\t MAPPING_ERROR: 0x%lx\n",
>   		REG_GET_FIELD(status,
>   		MMVM_L2_PROTECTION_FAULT_STATUS, MAPPING_ERROR));
> -	dev_err(adev->dev, "\t RW: 0x%x\n", rw);
> +	dev_info(adev->dev, "\t RW: 0x%x\n", rw);
>   }
>   
>   static void mmhub_v2_3_setup_vm_pt_regs(struct amdgpu_device *adev,

