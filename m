Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 80280E4387
	for <lists+amd-gfx@lfdr.de>; Fri, 25 Oct 2019 08:24:50 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A81546E89D;
	Fri, 25 Oct 2019 06:24:48 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM02-CY1-obe.outbound.protection.outlook.com
 (mail-eopbgr760042.outbound.protection.outlook.com [40.107.76.42])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5AB176E89D
 for <amd-gfx@lists.freedesktop.org>; Fri, 25 Oct 2019 06:24:47 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=dczshtm+lrHDpQHGgOcub55FCRYT2saLBKgpiUQNjI3leAfXAQTfhwELsxeQGD/8PgwCOW3HdBDTcKsDtU71NzvK+xsUyJezCsQFg2liX3HLVsGnod+s7WR1oT0xMuPQbbwe8E/vsIlvHNW1qiIyxPJbF5bjwteWigmdzhAu+NTGiDmxX6FvhZc50135S2G254jWvkIeXtg5DwS3Ds7ezvLBXG3ZbvYLwn79TQmKEFlSgqRrL8DF8LEHJJGDAhpl8FiKoxxT/N//WuoxpzvzG8iiBCBVEyG4Wi/mtMtlvhMr23++xaZCVAs8el5SpMTfHrZOWaYa3o8m1ARDFtR6uA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=0H2QyOp76Epmzj3XvFEXs98sNvOQ2tW0ySBOi9Ju2m8=;
 b=LLvSTIKvm0Z2UN8r4ymVQ7ltM5mK2ops+tRKO+fOD4WkNFa8v0ivwVaXBPGELBtEZdcaw5IG7hJTojz7w0lAv4U+YE1CqzZXZmklQIoFCsq7Fod8Y+1OSPYgK/JuurJyOLxegIU02QTC1yhiVf7wD7AVRjz8glDTSy935/mPPSL5LLmSzG/oSkCRVaWp32JX6qH+ogoEoOoIJF+f0xMI3cWMxJ9+50zagYOYGsG/nmw47xL20jLOz/JQMnEVocL7imBdKbxT0wbtH1ye8obWjjKtCVBWJnLeqxa8qWAikqNJcrRS6IkCc9U3RWLwPCofPqui6H8oJgjQmPZcZBqFQQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
Received: from BN8PR12MB3329.namprd12.prod.outlook.com (20.178.208.93) by
 BN8PR12MB3218.namprd12.prod.outlook.com (20.179.66.214) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.2387.22; Fri, 25 Oct 2019 06:24:41 +0000
Received: from BN8PR12MB3329.namprd12.prod.outlook.com
 ([fe80::28c4:55fd:ee27:8560]) by BN8PR12MB3329.namprd12.prod.outlook.com
 ([fe80::28c4:55fd:ee27:8560%7]) with mapi id 15.20.2387.023; Fri, 25 Oct 2019
 06:24:41 +0000
From: "Quan, Evan" <Evan.Quan@amd.com>
To: "amd-gfx@lists.freedesktop.org" <amd-gfx@lists.freedesktop.org>
Subject: [PATCH] drm/amd/powerplay: swSMU code cleanup
Thread-Topic: [PATCH] drm/amd/powerplay: swSMU code cleanup
Thread-Index: AQHVivzi6PsSVMrW3E2FzwglJccR/w==
Date: Fri, 25 Oct 2019 06:24:40 +0000
Message-ID: <20191025062355.19880-1-evan.quan@amd.com>
Accept-Language: en-US, zh-CN
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: HK2PR02CA0197.apcprd02.prod.outlook.com
 (2603:1096:201:21::33) To BN8PR12MB3329.namprd12.prod.outlook.com
 (2603:10b6:408:61::29)
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.23.0
x-originating-ip: [180.167.199.189]
x-ms-publictraffictype: Email
x-ms-office365-filtering-ht: Tenant
x-ms-office365-filtering-correlation-id: 70d8cba5-e888-446a-a329-08d759140406
x-ms-traffictypediagnostic: BN8PR12MB3218:
x-ms-exchange-transport-forked: True
x-microsoft-antispam-prvs: <BN8PR12MB32184542EAB708D1F3F17C8FE4650@BN8PR12MB3218.namprd12.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:431;
x-forefront-prvs: 02015246A9
x-forefront-antispam-report: SFV:NSPM;
 SFS:(10009020)(4636009)(396003)(346002)(376002)(366004)(136003)(39860400002)(199004)(189003)(486006)(6436002)(102836004)(66556008)(25786009)(66446008)(476003)(4326008)(36756003)(64756008)(8676002)(1076003)(66066001)(6506007)(186003)(2501003)(26005)(2351001)(386003)(305945005)(5640700003)(478600001)(8936002)(6512007)(6916009)(6486002)(6116002)(3846002)(316002)(2906002)(14444005)(71190400001)(71200400001)(66574012)(86362001)(50226002)(99286004)(14454004)(30864003)(19627235002)(81156014)(256004)(81166006)(52116002)(66476007)(2616005)(66946007)(7736002)(5660300002)(569006);
 DIR:OUT; SFP:1101; SCL:1; SRVR:BN8PR12MB3218;
 H:BN8PR12MB3329.namprd12.prod.outlook.com; FPR:; SPF:None; LANG:en;
 PTR:InfoNoRecords; A:1; MX:1; 
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: QvgvT0ZM6jNMICtI9lw7ZHVYzAipIomsxjlzhAsUZhqIAwgvjD2g7UL4hKl3i243oMmFC98tZK0fRJWwXzHLxsIqloXJcpSeT718e9DysLEXPldhUIX4pHPspyVXlGrzg+6FVIoogVHqxb6Xz+Ndm0X4HMgthnWv39J1CeQmnpsaZYbo2HtwbXp4fgcMJqQMYb4Bj2NyFYz9c5DsXERwnJUxNEy1pqKWeL/moe+1vAfd71YP+Ulqq/FeEacell5FFUego4qQrh8N/DHnFGcyw8rhTvALbDjnjDdu9DXiGf5JRJr9pAKAUOymJrC+il0HJoD/ML34lQWQHhOcdd7uXbdpO9u8VsmFtxMWHX/c7EhhyboAJcB9C5xnPOGrvZcy63mfkW4fUPogCRjZ1R3HnDm8LJNuq23sx5QfI077eP0Q2k/6+8vyB4hasogY8ezI
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 70d8cba5-e888-446a-a329-08d759140406
X-MS-Exchange-CrossTenant-originalarrivaltime: 25 Oct 2019 06:24:40.7820 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: wppcnSG+jT3oU1ks3NmVyOMplRNZAfSoyS8gHOygQyoi3yVsnKvnpuCfcFCtfUFq
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BN8PR12MB3218
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector2-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=0H2QyOp76Epmzj3XvFEXs98sNvOQ2tW0ySBOi9Ju2m8=;
 b=XcxSp7JCp1plJxq8fT/8ztEDGNRS3pRhYfGS2w5jp1GAyW6QoD+9z2wRNZzERh10H2lZtLZRHtuphMkLZbT4V0KNDx4tvltkH9Vuh9s35tndBV+cImPk2ZzGNyg9xn9Cx/DtkJrB4Gek9FIHFOGqWPwMBRlC/Xu9bJeAiYzYoeQ=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is )
 smtp.mailfrom=Evan.Quan@amd.com; 
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Quan, Evan" <Evan.Quan@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

UHV0IGNvbW1vbiBjb2RlIGluIHNtdV92MTFfMC5jL2gsIHNtdV92MTJfMC5jL2ggYW5kCnNtdV9p
bnRlcm5hbC5jL2guIEFsc28gZHJvcCByZWR1bmRhbnQgQVBJcy4KCkNoYW5nZS1JZDogSTljNTFl
ZmZhZGY1OGRjZTlkODkxYjliODNiYjA1ZjczODhhMGQ3ZDUKU2lnbmVkLW9mZi1ieTogRXZhbiBR
dWFuIDxldmFuLnF1YW5AYW1kLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfZHBtLmMgICAgICAgfCAgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9h
bWRncHVfcG0uYyAgICAgICAgfCAgIDIxICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxh
eS9NYWtlZmlsZSAgICAgICAgfCAgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxh
eS9hbWRncHVfc211LmMgICAgfCAyMDE5ICsrKysrKy0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS9hcmN0dXJ1c19wcHQuYyAgfCAgIDcwICstCiAuLi4vZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L2luYy9hbWRncHVfc211LmggICAgfCAgIDgyICstCiBkcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS9pbmMvc211X3YxMV8wLmggfCAgIDE4ICstCiBkcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS9pbmMvc211X3YxMl8wLmggfCAgICA0IC0KIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvcG93ZXJwbGF5L25hdmkxMF9wcHQuYyAgICB8ICAxNTIgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvcG93ZXJwbGF5L3Jlbm9pcl9wcHQuYyAgICB8ICAgMzMgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvcG93ZXJwbGF5L3NtdV9pbnRlcm5hbC5jICB8ICA0OTAgKysrKwogZHJpdmVycy9ncHUv
ZHJtL2FtZC9wb3dlcnBsYXkvc211X2ludGVybmFsLmggIHwgICA3NCArLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMV8wLmMgICAgIHwgIDIwNyArLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMl8wLmMgICAgIHwgICAyMCArLQogZHJpdmVycy9ncHUv
ZHJtL2FtZC9wb3dlcnBsYXkvdmVnYTIwX3BwdC5jICAgIHwgICA4MCArLQogMTUgZmlsZXMgY2hh
bmdlZCwgMTYzNSBpbnNlcnRpb25zKCspLCAxNjQ0IGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUg
MTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV9pbnRlcm5hbC5jCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5jCmluZGV4IDI4ZDMyNzI1Mjg1Yi4uMjYz
MjY1MjQ1ZTE5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
ZHBtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2RwbS5jCkBAIC05
MTIsOCArOTEyLDcgQEAgaW50IGFtZGdwdV9kcG1fZ2V0X3NjbGsoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYsIGJvb2wgbG93KQogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkgewogCQly
ZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKCZhZGV2LT5zbXUsIFNNVV9HRlhDTEssCiAJCQkJ
CSAgICAgbG93ID8gJmNsa19mcmVxIDogTlVMTCwKLQkJCQkJICAgICAhbG93ID8gJmNsa19mcmVx
IDogTlVMTCwKLQkJCQkJICAgICB0cnVlKTsKKwkJCQkJICAgICAhbG93ID8gJmNsa19mcmVxIDog
TlVMTCk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gMDsKIAkJcmV0dXJuIGNsa19mcmVxICogMTAw
OwpAQCAtOTMxLDggKzkzMCw3IEBAIGludCBhbWRncHVfZHBtX2dldF9tY2xrKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LCBib29sIGxvdykKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikp
IHsKIAkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZSgmYWRldi0+c211LCBTTVVfVUNMSywK
IAkJCQkJICAgICBsb3cgPyAmY2xrX2ZyZXEgOiBOVUxMLAotCQkJCQkgICAgICFsb3cgPyAmY2xr
X2ZyZXEgOiBOVUxMLAotCQkJCQkgICAgIHRydWUpOworCQkJCQkgICAgICFsb3cgPyAmY2xrX2Zy
ZXEgOiBOVUxMKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiAwOwogCQlyZXR1cm4gY2xrX2ZyZXEg
KiAxMDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfcG0u
YyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9wbS5jCmluZGV4IDY2MGVmZTAw
OTc0OS4uNWMzNmNkYTU1NDhlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hbWRncHVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfcG0u
YwpAQCAtOTU3LDcgKzk1Nyw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBfZHBtX3Nj
bGsoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCiAJaWYgKGlzX3N1cHBvcnRf
c3dfc211KGFkZXYpKQotCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBT
TVVfU0NMSywgbWFzaywgdHJ1ZSk7CisJCXJldCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2
LT5zbXUsIFNNVV9TQ0xLLCBtYXNrKTsKIAllbHNlIGlmIChhZGV2LT5wb3dlcnBsYXkucHBfZnVu
Y3MtPmZvcmNlX2Nsb2NrX2xldmVsKQogCQlyZXQgPSBhbWRncHVfZHBtX2ZvcmNlX2Nsb2NrX2xl
dmVsKGFkZXYsIFBQX1NDTEssIG1hc2spOwogCkBAIC0xMDA0LDcgKzEwMDQsNyBAQCBzdGF0aWMg
c3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9tY2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0
dXJuIHJldDsKIAogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211X2Zv
cmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX01DTEssIG1hc2ssIHRydWUpOworCQlyZXQg
PSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVfTUNMSywgbWFzayk7CiAJZWxz
ZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9jbG9ja19sZXZlbCkKIAkJcmV0
ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9ja19sZXZlbChhZGV2LCBQUF9NQ0xLLCBtYXNrKTsKIApA
QCAtMTA0NCw3ICsxMDQ0LDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fc29j
Y2xrKHN0cnVjdCBkZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAogCWlmIChpc19zdXBwb3J0
X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwg
U01VX1NPQ0NMSywgbWFzaywgdHJ1ZSk7CisJCXJldCA9IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZh
ZGV2LT5zbXUsIFNNVV9TT0NDTEssIG1hc2spOwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5w
cF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwpCiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfY2xv
Y2tfbGV2ZWwoYWRldiwgUFBfU09DQ0xLLCBtYXNrKTsKIApAQCAtMTA4NCw3ICsxMDg0LDcgQEAg
c3RhdGljIHNzaXplX3QgYW1kZ3B1X3NldF9wcF9kcG1fZmNsayhzdHJ1Y3QgZGV2aWNlICpkZXYs
CiAJCXJldHVybiByZXQ7CiAKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpCi0JCXJldCA9
IHNtdV9mb3JjZV9jbGtfbGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9GQ0xLLCBtYXNrLCB0cnVlKTsK
KwkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX0ZDTEssIG1hc2sp
OwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Zm9yY2VfY2xvY2tfbGV2ZWwp
CiAJCXJldCA9IGFtZGdwdV9kcG1fZm9yY2VfY2xvY2tfbGV2ZWwoYWRldiwgUFBfRkNMSywgbWFz
ayk7CiAKQEAgLTExMjQsNyArMTEyNCw3IEBAIHN0YXRpYyBzc2l6ZV90IGFtZGdwdV9zZXRfcHBf
ZHBtX2RjZWZjbGsoc3RydWN0IGRldmljZSAqZGV2LAogCQlyZXR1cm4gcmV0OwogCiAJaWYgKGlz
X3N1cHBvcnRfc3dfc211KGFkZXYpKQotCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRl
di0+c211LCBTTVVfRENFRkNMSywgbWFzaywgdHJ1ZSk7CisJCXJldCA9IHNtdV9mb3JjZV9jbGtf
bGV2ZWxzKCZhZGV2LT5zbXUsIFNNVV9EQ0VGQ0xLLCBtYXNrKTsKIAllbHNlIGlmIChhZGV2LT5w
b3dlcnBsYXkucHBfZnVuY3MtPmZvcmNlX2Nsb2NrX2xldmVsKQogCQlyZXQgPSBhbWRncHVfZHBt
X2ZvcmNlX2Nsb2NrX2xldmVsKGFkZXYsIFBQX0RDRUZDTEssIG1hc2spOwogCkBAIC0xMTY0LDcg
KzExNjQsNyBAQCBzdGF0aWMgc3NpemVfdCBhbWRncHVfc2V0X3BwX2RwbV9wY2llKHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAkJcmV0dXJuIHJldDsKIAogCWlmIChpc19zdXBwb3J0X3N3X3NtdShhZGV2
KSkKLQkJcmV0ID0gc211X2ZvcmNlX2Nsa19sZXZlbHMoJmFkZXYtPnNtdSwgU01VX1BDSUUsIG1h
c2ssIHRydWUpOworCQlyZXQgPSBzbXVfZm9yY2VfY2xrX2xldmVscygmYWRldi0+c211LCBTTVVf
UENJRSwgbWFzayk7CiAJZWxzZSBpZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5mb3JjZV9j
bG9ja19sZXZlbCkKIAkJcmV0ID0gYW1kZ3B1X2RwbV9mb3JjZV9jbG9ja19sZXZlbChhZGV2LCBQ
UF9QQ0lFLCBtYXNrKTsKIApAQCAtMTM1Niw3ICsxMzU2LDcgQEAgc3RhdGljIHNzaXplX3QgYW1k
Z3B1X3NldF9wcF9wb3dlcl9wcm9maWxlX21vZGUoc3RydWN0IGRldmljZSAqZGV2LAogCX0KIAlw
YXJhbWV0ZXJbcGFyYW1ldGVyX3NpemVdID0gcHJvZmlsZV9tb2RlOwogCWlmIChpc19zdXBwb3J0
X3N3X3NtdShhZGV2KSkKLQkJcmV0ID0gc211X3NldF9wb3dlcl9wcm9maWxlX21vZGUoJmFkZXYt
PnNtdSwgcGFyYW1ldGVyLCBwYXJhbWV0ZXJfc2l6ZSwgdHJ1ZSk7CisJCXJldCA9IHNtdV9zZXRf
cG93ZXJfcHJvZmlsZV9tb2RlKCZhZGV2LT5zbXUsIHBhcmFtZXRlciwgcGFyYW1ldGVyX3NpemUp
OwogCWVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVf
bW9kZSkKIAkJcmV0ID0gYW1kZ3B1X2RwbV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKGFkZXYsIHBh
cmFtZXRlciwgcGFyYW1ldGVyX3NpemUpOwogCWlmICghcmV0KQpAQCAtMjA2NSw3ICsyMDY1LDcg
QEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3bW9uX3Nob3dfcG93ZXJfY2FwX21heChzdHJ1Y3Qg
ZGV2aWNlICpkZXYsCiAJdWludDMyX3QgbGltaXQgPSAwOwogCiAJaWYgKGlzX3N1cHBvcnRfc3df
c211KGFkZXYpKSB7Ci0JCXNtdV9nZXRfcG93ZXJfbGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCB0
cnVlLCB0cnVlKTsKKwkJc211X2dldF9wb3dlcl9saW1pdCgmYWRldi0+c211LCAmbGltaXQsIHRy
dWUpOwogCQlyZXR1cm4gc25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIldVxuIiwgbGltaXQgKiAx
MDAwMDAwKTsKIAl9IGVsc2UgaWYgKGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcyAmJiBhZGV2LT5w
b3dlcnBsYXkucHBfZnVuY3MtPmdldF9wb3dlcl9saW1pdCkgewogCQlhZGV2LT5wb3dlcnBsYXku
cHBfZnVuY3MtPmdldF9wb3dlcl9saW1pdChhZGV2LT5wb3dlcnBsYXkucHBfaGFuZGxlLCAmbGlt
aXQsIHRydWUpOwpAQCAtMjA4Myw3ICsyMDgzLDcgQEAgc3RhdGljIHNzaXplX3QgYW1kZ3B1X2h3
bW9uX3Nob3dfcG93ZXJfY2FwKHN0cnVjdCBkZXZpY2UgKmRldiwKIAl1aW50MzJfdCBsaW1pdCA9
IDA7CiAKIAlpZiAoaXNfc3VwcG9ydF9zd19zbXUoYWRldikpIHsKLQkJc211X2dldF9wb3dlcl9s
aW1pdCgmYWRldi0+c211LCAmbGltaXQsIGZhbHNlLCAgdHJ1ZSk7CisJCXNtdV9nZXRfcG93ZXJf
bGltaXQoJmFkZXYtPnNtdSwgJmxpbWl0LCBmYWxzZSk7CiAJCXJldHVybiBzbnByaW50ZihidWYs
IFBBR0VfU0laRSwgIiV1XG4iLCBsaW1pdCAqIDEwMDAwMDApOwogCX0gZWxzZSBpZiAoYWRldi0+
cG93ZXJwbGF5LnBwX2Z1bmNzICYmIGFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X3Bvd2Vy
X2xpbWl0KSB7CiAJCWFkZXYtPnBvd2VycGxheS5wcF9mdW5jcy0+Z2V0X3Bvd2VyX2xpbWl0KGFk
ZXYtPnBvd2VycGxheS5wcF9oYW5kbGUsICZsaW1pdCwgZmFsc2UpOwpAQCAtMzA3Nyw4ICszMDc3
LDcgQEAgdm9pZCBhbWRncHVfcG1fY29tcHV0ZV9jbG9ja3Moc3RydWN0IGFtZGdwdV9kZXZpY2Ug
KmFkZXYpCiAJCXN0cnVjdCBzbXVfZHBtX2NvbnRleHQgKnNtdV9kcG0gPSAmYWRldi0+c211LnNt
dV9kcG07CiAJCXNtdV9oYW5kbGVfdGFzaygmYWRldi0+c211LAogCQkJCXNtdV9kcG0tPmRwbV9s
ZXZlbCwKLQkJCQlBTURfUFBfVEFTS19ESVNQTEFZX0NPTkZJR19DSEFOR0UsCi0JCQkJdHJ1ZSk7
CisJCQkJQU1EX1BQX1RBU0tfRElTUExBWV9DT05GSUdfQ0hBTkdFKTsKIAl9IGVsc2UgewogCQlp
ZiAoYWRldi0+cG93ZXJwbGF5LnBwX2Z1bmNzLT5kaXNwYXRjaF90YXNrcykgewogCQkJaWYgKCFh
bWRncHVfZGV2aWNlX2hhc19kY19zdXBwb3J0KGFkZXYpKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93
ZXJwbGF5L01ha2VmaWxlCmluZGV4IDM5MDM0NWYyZDYwMS4uNmE4MTQzYWVlNTU3IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9NYWtlZmlsZQorKysgYi9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9NYWtlZmlsZQpAQCAtMzUsNyArMzUsOCBAQCBBTURfUE9X
RVJQTEFZID0gJChhZGRzdWZmaXggL01ha2VmaWxlLCQoYWRkcHJlZml4ICQoRlVMTF9BTURfUEFU
SCkvcG93ZXJwbGF5LywkKAogCiBpbmNsdWRlICQoQU1EX1BPV0VSUExBWSkKIAotUE9XRVJfTUdS
ID0gYW1kX3Bvd2VycGxheS5vIGFtZGdwdV9zbXUubyBzbXVfdjExXzAubyBzbXVfdjEyXzAubyB2
ZWdhMjBfcHB0Lm8gYXJjdHVydXNfcHB0Lm8gbmF2aTEwX3BwdC5vIHJlbm9pcl9wcHQubworUE9X
RVJfTUdSID0gYW1kX3Bvd2VycGxheS5vIGFtZGdwdV9zbXUubyBzbXVfdjExXzAubyBzbXVfdjEy
XzAubyB2ZWdhMjBfcHB0Lm8gYXJjdHVydXNfcHB0Lm8gbmF2aTEwX3BwdC5vIHJlbm9pcl9wcHQu
byBcCisgICAgICAgICAgICBzbXVfaW50ZXJuYWwubwogCiBBTURfUFBfUE9XRVIgPSAkKGFkZHBy
ZWZpeCAkKEFNRF9QUF9QQVRIKS8sJChQT1dFUl9NR1IpKQogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hbWRncHVfc211LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L3Bvd2VycGxheS9hbWRncHVfc211LmMKaW5kZXggM2NlMDFlMTk5NGZjLi5kZDVmMjI3NDM5ODIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FtZGdwdV9zbXUuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9hbWRncHVfc211LmMKQEAgLTIxLDE0
ICsyMSw5IEBACiAgKi8KIAogI2luY2x1ZGUgInBwX2RlYnVnLmgiCi0jaW5jbHVkZSA8bGludXgv
ZmlybXdhcmUuaD4KLSNpbmNsdWRlIDxkcm0vZHJtUC5oPgogI2luY2x1ZGUgImFtZGdwdS5oIgog
I2luY2x1ZGUgImFtZGdwdV9zbXUuaCIKICNpbmNsdWRlICJzbXVfaW50ZXJuYWwuaCIKLSNpbmNs
dWRlICJzb2MxNV9jb21tb24uaCIKLSNpbmNsdWRlICJzbXVfdjExXzAuaCIKLSNpbmNsdWRlICJz
bXVfdjEyXzAuaCIKICNpbmNsdWRlICJhdG9tLmgiCiAjaW5jbHVkZSAiYW1kX3BjaWUuaCIKICNp
bmNsdWRlICJ2ZWdhMjBfcHB0LmgiCkBAIC0zNiw2NzEgKzMxLDYgQEAKICNpbmNsdWRlICJuYXZp
MTBfcHB0LmgiCiAjaW5jbHVkZSAicmVub2lyX3BwdC5oIgogCi0jdW5kZWYgX19TTVVfRFVNTVlf
TUFQCi0jZGVmaW5lIF9fU01VX0RVTU1ZX01BUCh0eXBlKQkjdHlwZQotc3RhdGljIGNvbnN0IGNo
YXIqIF9fc211X21lc3NhZ2VfbmFtZXNbXSA9IHsKLQlTTVVfTUVTU0FHRV9UWVBFUwotfTsKLQot
Y29uc3QgY2hhciAqc211X2dldF9tZXNzYWdlX25hbWUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IGVudW0gc211X21lc3NhZ2VfdHlwZSB0eXBlKQotewotCWlmICh0eXBlIDwgMCB8fCB0eXBlID49
IFNNVV9NU0dfTUFYX0NPVU5UKQotCQlyZXR1cm4gInVua25vd24gc211IG1lc3NhZ2UiOwotCXJl
dHVybiBfX3NtdV9tZXNzYWdlX25hbWVzW3R5cGVdOwotfQotCi0jdW5kZWYgX19TTVVfRFVNTVlf
TUFQCi0jZGVmaW5lIF9fU01VX0RVTU1ZX01BUChmZWEpCSNmZWEKLXN0YXRpYyBjb25zdCBjaGFy
KiBfX3NtdV9mZWF0dXJlX25hbWVzW10gPSB7Ci0JU01VX0ZFQVRVUkVfTUFTS1MKLX07Ci0KLWNv
bnN0IGNoYXIgKnNtdV9nZXRfZmVhdHVyZV9uYW1lKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBl
bnVtIHNtdV9mZWF0dXJlX21hc2sgZmVhdHVyZSkKLXsKLQlpZiAoZmVhdHVyZSA8IDAgfHwgZmVh
dHVyZSA+PSBTTVVfRkVBVFVSRV9DT1VOVCkKLQkJcmV0dXJuICJ1bmtub3duIHNtdSBmZWF0dXJl
IjsKLQlyZXR1cm4gX19zbXVfZmVhdHVyZV9uYW1lc1tmZWF0dXJlXTsKLX0KLQotc2l6ZV90IHNt
dV9zeXNfZ2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgY2hhciAq
YnVmKQotewotCXNpemVfdCBzaXplID0gMDsKLQlpbnQgcmV0ID0gMCwgaSA9IDA7Ci0JdWludDMy
X3QgZmVhdHVyZV9tYXNrWzJdID0geyAwIH07Ci0JaW50MzJfdCBmZWF0dXJlX2luZGV4ID0gMDsK
LQl1aW50MzJfdCBjb3VudCA9IDA7Ci0JdWludDMyX3Qgc29ydF9mZWF0dXJlW1NNVV9GRUFUVVJF
X0NPVU5UXTsKLQl1aW50NjRfdCBod19mZWF0dXJlX2NvdW50ID0gMDsKLQotCW11dGV4X2xvY2so
JnNtdS0+bXV0ZXgpOwotCi0JcmV0ID0gc211X2ZlYXR1cmVfZ2V0X2VuYWJsZWRfbWFzayhzbXUs
IGZlYXR1cmVfbWFzaywgMik7Ci0JaWYgKHJldCkKLQkJZ290byBmYWlsZWQ7Ci0KLQlzaXplID0g
IHNwcmludGYoYnVmICsgc2l6ZSwgImZlYXR1cmVzIGhpZ2g6IDB4JTA4eCBsb3c6IDB4JTA4eFxu
IiwKLQkJCWZlYXR1cmVfbWFza1sxXSwgZmVhdHVyZV9tYXNrWzBdKTsKLQotCWZvciAoaSA9IDA7
IGkgPCBTTVVfRkVBVFVSRV9DT1VOVDsgaSsrKSB7Ci0JCWZlYXR1cmVfaW5kZXggPSBzbXVfZmVh
dHVyZV9nZXRfaW5kZXgoc211LCBpKTsKLQkJaWYgKGZlYXR1cmVfaW5kZXggPCAwKQotCQkJY29u
dGludWU7Ci0JCXNvcnRfZmVhdHVyZVtmZWF0dXJlX2luZGV4XSA9IGk7Ci0JCWh3X2ZlYXR1cmVf
Y291bnQrKzsKLQl9Ci0KLQlmb3IgKGkgPSAwOyBpIDwgaHdfZmVhdHVyZV9jb3VudDsgaSsrKSB7
Ci0JCXNpemUgKz0gc3ByaW50ZihidWYgKyBzaXplLCAiJTAyZC4gJS0yMHMgKCUyZCkgOiAlc1xu
IiwKLQkJCSAgICAgICBjb3VudCsrLAotCQkJICAgICAgIHNtdV9nZXRfZmVhdHVyZV9uYW1lKHNt
dSwgc29ydF9mZWF0dXJlW2ldKSwKLQkJCSAgICAgICBpLAotCQkJICAgICAgICEhc211X2ZlYXR1
cmVfaXNfZW5hYmxlZChzbXUsIHNvcnRfZmVhdHVyZVtpXSkgPwotCQkJICAgICAgICJlbmFibGVk
IiA6ICJkaXNhYmxlZCIpOwotCX0KLQotZmFpbGVkOgotCW11dGV4X3VubG9jaygmc211LT5tdXRl
eCk7Ci0KLQlyZXR1cm4gc2l6ZTsKLX0KLQotc3RhdGljIGludCBzbXVfZmVhdHVyZV91cGRhdGVf
ZW5hYmxlX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkJCQkgICB1aW50NjRfdCBm
ZWF0dXJlX21hc2ssCi0JCQkJCSAgIGJvb2wgZW5hYmxlZCkKLXsKLQlzdHJ1Y3Qgc211X2ZlYXR1
cmUgKmZlYXR1cmUgPSAmc211LT5zbXVfZmVhdHVyZTsKLQl1aW50MzJfdCBmZWF0dXJlX2xvdyA9
IDAsIGZlYXR1cmVfaGlnaCA9IDA7Ci0JaW50IHJldCA9IDA7Ci0KLQlpZiAoIXNtdS0+cG1fZW5h
YmxlZCkKLQkJcmV0dXJuIHJldDsKLQotCWZlYXR1cmVfbG93ID0gKGZlYXR1cmVfbWFzayA+PiAw
ICkgJiAweGZmZmZmZmZmOwotCWZlYXR1cmVfaGlnaCA9IChmZWF0dXJlX21hc2sgPj4gMzIpICYg
MHhmZmZmZmZmZjsKLQotCWlmIChlbmFibGVkKSB7Ci0JCXJldCA9IHNtdV9zZW5kX3NtY19tc2df
d2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfRW5hYmxlU211RmVhdHVyZXNMb3csCi0JCQkJCQkgIGZl
YXR1cmVfbG93KTsKLQkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7Ci0JCXJldCA9IHNtdV9zZW5k
X3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfRW5hYmxlU211RmVhdHVyZXNIaWdoLAot
CQkJCQkJICBmZWF0dXJlX2hpZ2gpOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQl9IGVs
c2UgewotCQlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211LCBTTVVfTVNHX0Rp
c2FibGVTbXVGZWF0dXJlc0xvdywKLQkJCQkJCSAgZmVhdHVyZV9sb3cpOwotCQlpZiAocmV0KQot
CQkJcmV0dXJuIHJldDsKLQkJcmV0ID0gc211X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwg
U01VX01TR19EaXNhYmxlU211RmVhdHVyZXNIaWdoLAotCQkJCQkJICBmZWF0dXJlX2hpZ2gpOwot
CQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQl9Ci0KLQltdXRleF9sb2NrKCZmZWF0dXJlLT5t
dXRleCk7Ci0JaWYgKGVuYWJsZWQpCi0JCWJpdG1hcF9vcihmZWF0dXJlLT5lbmFibGVkLCBmZWF0
dXJlLT5lbmFibGVkLAotCQkJCSh1bnNpZ25lZCBsb25nICopKCZmZWF0dXJlX21hc2spLCBTTVVf
RkVBVFVSRV9NQVgpOwotCWVsc2UKLQkJYml0bWFwX2FuZG5vdChmZWF0dXJlLT5lbmFibGVkLCBm
ZWF0dXJlLT5lbmFibGVkLAotCQkJCSh1bnNpZ25lZCBsb25nICopKCZmZWF0dXJlX21hc2spLCBT
TVVfRkVBVFVSRV9NQVgpOwotCW11dGV4X3VubG9jaygmZmVhdHVyZS0+bXV0ZXgpOwotCi0JcmV0
dXJuIHJldDsKLX0KLQotaW50IHNtdV9zeXNfc2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwgdWludDY0X3QgbmV3X21hc2spCi17Ci0JaW50IHJldCA9IDA7Ci0JdWlu
dDMyX3QgZmVhdHVyZV9tYXNrWzJdID0geyAwIH07Ci0JdWludDY0X3QgZmVhdHVyZV8yX2VuYWJs
ZWQgPSAwOwotCXVpbnQ2NF90IGZlYXR1cmVfMl9kaXNhYmxlZCA9IDA7Ci0JdWludDY0X3QgZmVh
dHVyZV9lbmFibGVzID0gMDsKLQotCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwotCi0JcmV0ID0g
c211X2ZlYXR1cmVfZ2V0X2VuYWJsZWRfbWFzayhzbXUsIGZlYXR1cmVfbWFzaywgMik7Ci0JaWYg
KHJldCkKLQkJZ290byBvdXQ7Ci0KLQlmZWF0dXJlX2VuYWJsZXMgPSAoKHVpbnQ2NF90KWZlYXR1
cmVfbWFza1sxXSA8PCAzMiB8ICh1aW50NjRfdClmZWF0dXJlX21hc2tbMF0pOwotCi0JZmVhdHVy
ZV8yX2VuYWJsZWQgID0gfmZlYXR1cmVfZW5hYmxlcyAmIG5ld19tYXNrOwotCWZlYXR1cmVfMl9k
aXNhYmxlZCA9IGZlYXR1cmVfZW5hYmxlcyAmIH5uZXdfbWFzazsKLQotCWlmIChmZWF0dXJlXzJf
ZW5hYmxlZCkgewotCQlyZXQgPSBzbXVfZmVhdHVyZV91cGRhdGVfZW5hYmxlX3N0YXRlKHNtdSwg
ZmVhdHVyZV8yX2VuYWJsZWQsIHRydWUpOwotCQlpZiAocmV0KQotCQkJZ290byBvdXQ7Ci0JfQot
CWlmIChmZWF0dXJlXzJfZGlzYWJsZWQpIHsKLQkJcmV0ID0gc211X2ZlYXR1cmVfdXBkYXRlX2Vu
YWJsZV9zdGF0ZShzbXUsIGZlYXR1cmVfMl9kaXNhYmxlZCwgZmFsc2UpOwotCQlpZiAocmV0KQot
CQkJZ290byBvdXQ7Ci0JfQotCi1vdXQ6Ci0JbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKLQot
CXJldHVybiByZXQ7Ci19Ci0KLWludCBzbXVfZ2V0X3NtY192ZXJzaW9uKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCB1aW50MzJfdCAqaWZfdmVyc2lvbiwgdWludDMyX3QgKnNtdV92ZXJzaW9uKQot
ewotCWludCByZXQgPSAwOwotCi0JaWYgKCFpZl92ZXJzaW9uICYmICFzbXVfdmVyc2lvbikKLQkJ
cmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAoaWZfdmVyc2lvbikgewotCQlyZXQgPSBzbXVfc2VuZF9z
bWNfbXNnKHNtdSwgU01VX01TR19HZXREcml2ZXJJZlZlcnNpb24pOwotCQlpZiAocmV0KQotCQkJ
cmV0dXJuIHJldDsKLQotCQlyZXQgPSBzbXVfcmVhZF9zbWNfYXJnKHNtdSwgaWZfdmVyc2lvbik7
Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm4gcmV0OwotCX0KLQotCWlmIChzbXVfdmVyc2lvbikgewot
CQlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnKHNtdSwgU01VX01TR19HZXRTbXVWZXJzaW9uKTsKLQkJ
aWYgKHJldCkKLQkJCXJldHVybiByZXQ7Ci0KLQkJcmV0ID0gc211X3JlYWRfc21jX2FyZyhzbXUs
IHNtdV92ZXJzaW9uKTsKLQkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7Ci0JfQotCi0JcmV0dXJu
IHJldDsKLX0KLQotaW50IHNtdV9zZXRfc29mdF9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJCSAgICB1aW50MzJfdCBtaW4s
IHVpbnQzMl90IG1heCkKLXsKLQlpbnQgcmV0ID0gMDsKLQotCWlmIChtaW4gPD0gMCAmJiBtYXgg
PD0gMCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAoIXNtdV9jbGtfZHBtX2lzX2VuYWJsZWQo
c211LCBjbGtfdHlwZSkpCi0JCXJldHVybiAwOwotCi0JcmV0ID0gc211X3NldF9zb2Z0X2ZyZXFf
bGltaXRlZF9yYW5nZShzbXUsIGNsa190eXBlLCBtaW4sIG1heCk7Ci0JcmV0dXJuIHJldDsKLX0K
LQotaW50IHNtdV9zZXRfaGFyZF9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBl
bnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJCSAgICB1aW50MzJfdCBtaW4sIHVpbnQzMl90
IG1heCkKLXsKLQlpbnQgcmV0ID0gMCwgY2xrX2lkID0gMDsKLQl1aW50MzJfdCBwYXJhbTsKLQot
CWlmIChtaW4gPD0gMCAmJiBtYXggPD0gMCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAoIXNt
dV9jbGtfZHBtX2lzX2VuYWJsZWQoc211LCBjbGtfdHlwZSkpCi0JCXJldHVybiAwOwotCi0JY2xr
X2lkID0gc211X2Nsa19nZXRfaW5kZXgoc211LCBjbGtfdHlwZSk7Ci0JaWYgKGNsa19pZCA8IDAp
Ci0JCXJldHVybiBjbGtfaWQ7Ci0KLQlpZiAobWF4ID4gMCkgewotCQlwYXJhbSA9ICh1aW50MzJf
dCkoKGNsa19pZCA8PCAxNikgfCAobWF4ICYgMHhmZmZmKSk7Ci0JCXJldCA9IHNtdV9zZW5kX3Nt
Y19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfU2V0SGFyZE1heEJ5RnJlcSwKLQkJCQkJCSAg
cGFyYW0pOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlpZiAobWluID4gMCkg
ewotCQlwYXJhbSA9ICh1aW50MzJfdCkoKGNsa19pZCA8PCAxNikgfCAobWluICYgMHhmZmZmKSk7
Ci0JCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfU2V0SGFy
ZE1pbkJ5RnJlcSwKLQkJCQkJCSAgcGFyYW0pOwotCQlpZiAocmV0KQotCQkJcmV0dXJuIHJldDsK
LQl9Ci0KLQotCXJldHVybiByZXQ7Ci19Ci0KLWludCBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHN0
cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJCSAg
IHVpbnQzMl90ICptaW4sIHVpbnQzMl90ICptYXgsIGJvb2wgbG9ja19uZWVkZWQpCi17Ci0JdWlu
dDMyX3QgY2xvY2tfbGltaXQ7Ci0JaW50IHJldCA9IDA7Ci0KLQlpZiAoIW1pbiAmJiAhbWF4KQot
CQlyZXR1cm4gLUVJTlZBTDsKLQotCWlmIChsb2NrX25lZWRlZCkKLQkJbXV0ZXhfbG9jaygmc211
LT5tdXRleCk7Ci0KLQlpZiAoIXNtdV9jbGtfZHBtX2lzX2VuYWJsZWQoc211LCBjbGtfdHlwZSkp
IHsKLQkJc3dpdGNoIChjbGtfdHlwZSkgewotCQljYXNlIFNNVV9NQ0xLOgotCQljYXNlIFNNVV9V
Q0xLOgotCQkJY2xvY2tfbGltaXQgPSBzbXUtPnNtdV90YWJsZS5ib290X3ZhbHVlcy51Y2xrOwot
CQkJYnJlYWs7Ci0JCWNhc2UgU01VX0dGWENMSzoKLQkJY2FzZSBTTVVfU0NMSzoKLQkJCWNsb2Nr
X2xpbWl0ID0gc211LT5zbXVfdGFibGUuYm9vdF92YWx1ZXMuZ2Z4Y2xrOwotCQkJYnJlYWs7Ci0J
CWNhc2UgU01VX1NPQ0NMSzoKLQkJCWNsb2NrX2xpbWl0ID0gc211LT5zbXVfdGFibGUuYm9vdF92
YWx1ZXMuc29jY2xrOwotCQkJYnJlYWs7Ci0JCWRlZmF1bHQ6Ci0JCQljbG9ja19saW1pdCA9IDA7
Ci0JCQlicmVhazsKLQkJfQotCi0JCS8qIGNsb2NrIGluIE1oeiB1bml0ICovCi0JCWlmIChtaW4p
Ci0JCQkqbWluID0gY2xvY2tfbGltaXQgLyAxMDA7Ci0JCWlmIChtYXgpCi0JCQkqbWF4ID0gY2xv
Y2tfbGltaXQgLyAxMDA7Ci0JfSBlbHNlIHsKLQkJLyoKLQkJICogVG9kbzogVXNlIGVhY2ggYXNp
YyhBU0lDX3BwdCBmdW5jcykgY29udHJvbCB0aGUgY2FsbGJhY2tzIGV4cG9zZWQgdG8gdGhlCi0J
CSAqIGNvcmUgZHJpdmVyIGFuZCB0aGVuIGhhdmUgaGVscGVycyBmb3Igc3R1ZmYgdGhhdCBpcyBj
b21tb24oU01VX3YxMV94IHwgU01VX3YxMl94IGZ1bmNzKS4KLQkJICovCi0JCXJldCA9IHNtdV9n
ZXRfZHBtX3VsdGltYXRlX2ZyZXEoc211LCBjbGtfdHlwZSwgbWluLCBtYXgpOwotCX0KLQotCWlm
IChsb2NrX25lZWRlZCkKLQkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKLQotCXJldHVybiBy
ZXQ7Ci19Ci0KLWludCBzbXVfZ2V0X2RwbV9mcmVxX2J5X2luZGV4KHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJCSAgICAgIHVpbnQxNl90IGxl
dmVsLCB1aW50MzJfdCAqdmFsdWUpCi17Ci0JaW50IHJldCA9IDAsIGNsa19pZCA9IDA7Ci0JdWlu
dDMyX3QgcGFyYW07Ci0KLQlpZiAoIXZhbHVlKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCWlmICgh
c211X2Nsa19kcG1faXNfZW5hYmxlZChzbXUsIGNsa190eXBlKSkKLQkJcmV0dXJuIDA7Ci0KLQlj
bGtfaWQgPSBzbXVfY2xrX2dldF9pbmRleChzbXUsIGNsa190eXBlKTsKLQlpZiAoY2xrX2lkIDwg
MCkKLQkJcmV0dXJuIGNsa19pZDsKLQotCXBhcmFtID0gKHVpbnQzMl90KSgoKGNsa19pZCAmIDB4
ZmZmZikgPDwgMTYpIHwgKGxldmVsICYgMHhmZmZmKSk7Ci0KLQlyZXQgPSBzbXVfc2VuZF9zbWNf
bXNnX3dpdGhfcGFyYW0oc211LFNNVV9NU0dfR2V0RHBtRnJlcUJ5SW5kZXgsCi0JCQkJCSAgcGFy
YW0pOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlyZXQgPSBzbXVfcmVhZF9zbWNfYXJn
KHNtdSwgJnBhcmFtKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCi0JLyogQklUMzE6ICAw
IC0gRmluZSBncmFpbmVkIERQTSwgMSAtIERpY3JldGUgRFBNCi0JICogbm93LCB3ZSB1bi1zdXBw
b3J0IGl0ICovCi0JKnZhbHVlID0gcGFyYW0gJiAweDdmZmZmZmZmOwotCi0JcmV0dXJuIHJldDsK
LX0KLQotaW50IHNtdV9nZXRfZHBtX2xldmVsX2NvdW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211
LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJCSAgICB1aW50MzJfdCAqdmFsdWUpCi17
Ci0JcmV0dXJuIHNtdV9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgoc211LCBjbGtfdHlwZSwgMHhmZiwg
dmFsdWUpOwotfQotCi1ib29sIHNtdV9jbGtfZHBtX2lzX2VuYWJsZWQoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlKQotewotCWVudW0gc211X2ZlYXR1
cmVfbWFzayBmZWF0dXJlX2lkID0gMDsKLQotCXN3aXRjaCAoY2xrX3R5cGUpIHsKLQljYXNlIFNN
VV9NQ0xLOgotCWNhc2UgU01VX1VDTEs6Ci0JCWZlYXR1cmVfaWQgPSBTTVVfRkVBVFVSRV9EUE1f
VUNMS19CSVQ7Ci0JCWJyZWFrOwotCWNhc2UgU01VX0dGWENMSzoKLQljYXNlIFNNVV9TQ0xLOgot
CQlmZWF0dXJlX2lkID0gU01VX0ZFQVRVUkVfRFBNX0dGWENMS19CSVQ7Ci0JCWJyZWFrOwotCWNh
c2UgU01VX1NPQ0NMSzoKLQkJZmVhdHVyZV9pZCA9IFNNVV9GRUFUVVJFX0RQTV9TT0NDTEtfQklU
OwotCQlicmVhazsKLQlkZWZhdWx0OgotCQlyZXR1cm4gdHJ1ZTsKLQl9Ci0KLQlpZighc211X2Zl
YXR1cmVfaXNfZW5hYmxlZChzbXUsIGZlYXR1cmVfaWQpKSB7Ci0JCXJldHVybiBmYWxzZTsKLQl9
Ci0KLQlyZXR1cm4gdHJ1ZTsKLX0KLQotCi1pbnQgc211X2RwbV9zZXRfcG93ZXJfZ2F0ZShzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgYmxvY2tfdHlwZSwKLQkJCSAgIGJvb2wgZ2F0
ZSkKLXsKLQlpbnQgcmV0ID0gMDsKLQotCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwotCi0Jc3dp
dGNoIChibG9ja190eXBlKSB7Ci0JY2FzZSBBTURfSVBfQkxPQ0tfVFlQRV9VVkQ6Ci0JCXJldCA9
IHNtdV9kcG1fc2V0X3V2ZF9lbmFibGUoc211LCBnYXRlKTsKLQkJYnJlYWs7Ci0JY2FzZSBBTURf
SVBfQkxPQ0tfVFlQRV9WQ0U6Ci0JCXJldCA9IHNtdV9kcG1fc2V0X3ZjZV9lbmFibGUoc211LCBn
YXRlKTsKLQkJYnJlYWs7Ci0JY2FzZSBBTURfSVBfQkxPQ0tfVFlQRV9HRlg6Ci0JCXJldCA9IHNt
dV9nZnhfb2ZmX2NvbnRyb2woc211LCBnYXRlKTsKLQkJYnJlYWs7Ci0JY2FzZSBBTURfSVBfQkxP
Q0tfVFlQRV9TRE1BOgotCQlyZXQgPSBzbXVfcG93ZXJnYXRlX3NkbWEoc211LCBnYXRlKTsKLQkJ
YnJlYWs7Ci0JZGVmYXVsdDoKLQkJYnJlYWs7Ci0JfQotCi0JbXV0ZXhfdW5sb2NrKCZzbXUtPm11
dGV4KTsKLQotCXJldHVybiByZXQ7Ci19Ci0KLWludCBzbXVfZ2V0X3Bvd2VyX251bV9zdGF0ZXMo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCi0JCQkgICAgIHN0cnVjdCBwcF9zdGF0ZXNfaW5mbyAq
c3RhdGVfaW5mbykKLXsKLQlpZiAoIXN0YXRlX2luZm8pCi0JCXJldHVybiAtRUlOVkFMOwotCi0J
Lyogbm90IHN1cHBvcnQgcG93ZXIgc3RhdGUgKi8KLQltZW1zZXQoc3RhdGVfaW5mbywgMCwgc2l6
ZW9mKHN0cnVjdCBwcF9zdGF0ZXNfaW5mbykpOwotCXN0YXRlX2luZm8tPm51bXMgPSAxOwotCXN0
YXRlX2luZm8tPnN0YXRlc1swXSA9IFBPV0VSX1NUQVRFX1RZUEVfREVGQVVMVDsKLQotCXJldHVy
biAwOwotfQotCi1pbnQgc211X2NvbW1vbl9yZWFkX3NlbnNvcihzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgZW51bSBhbWRfcHBfc2Vuc29ycyBzZW5zb3IsCi0JCQkgICB2b2lkICpkYXRhLCB1aW50
MzJfdCAqc2l6ZSkKLXsKLQlzdHJ1Y3Qgc211X3Bvd2VyX2NvbnRleHQgKnNtdV9wb3dlciA9ICZz
bXUtPnNtdV9wb3dlcjsKLQlzdHJ1Y3Qgc211X3Bvd2VyX2dhdGUgKnBvd2VyX2dhdGUgPSAmc211
X3Bvd2VyLT5wb3dlcl9nYXRlOwotCWludCByZXQgPSAwOwotCi0JaWYoIWRhdGEgfHwgIXNpemUp
Ci0JCXJldHVybiAtRUlOVkFMOwotCi0Jc3dpdGNoIChzZW5zb3IpIHsKLQljYXNlIEFNREdQVV9Q
UF9TRU5TT1JfU1RBQkxFX1BTVEFURV9TQ0xLOgotCQkqKCh1aW50MzJfdCAqKWRhdGEpID0gc211
LT5wc3RhdGVfc2NsazsKLQkJKnNpemUgPSA0OwotCQlicmVhazsKLQljYXNlIEFNREdQVV9QUF9T
RU5TT1JfU1RBQkxFX1BTVEFURV9NQ0xLOgotCQkqKCh1aW50MzJfdCAqKWRhdGEpID0gc211LT5w
c3RhdGVfbWNsazsKLQkJKnNpemUgPSA0OwotCQlicmVhazsKLQljYXNlIEFNREdQVV9QUF9TRU5T
T1JfRU5BQkxFRF9TTUNfRkVBVFVSRVNfTUFTSzoKLQkJcmV0ID0gc211X2ZlYXR1cmVfZ2V0X2Vu
YWJsZWRfbWFzayhzbXUsICh1aW50MzJfdCAqKWRhdGEsIDIpOwotCQkqc2l6ZSA9IDg7Ci0JCWJy
ZWFrOwotCWNhc2UgQU1ER1BVX1BQX1NFTlNPUl9VVkRfUE9XRVI6Ci0JCSoodWludDMyX3QgKilk
YXRhID0gc211X2ZlYXR1cmVfaXNfZW5hYmxlZChzbXUsIFNNVV9GRUFUVVJFX0RQTV9VVkRfQklU
KSA/IDEgOiAwOwotCQkqc2l6ZSA9IDQ7Ci0JCWJyZWFrOwotCWNhc2UgQU1ER1BVX1BQX1NFTlNP
Ul9WQ0VfUE9XRVI6Ci0JCSoodWludDMyX3QgKilkYXRhID0gc211X2ZlYXR1cmVfaXNfZW5hYmxl
ZChzbXUsIFNNVV9GRUFUVVJFX0RQTV9WQ0VfQklUKSA/IDEgOiAwOwotCQkqc2l6ZSA9IDQ7Ci0J
CWJyZWFrOwotCWNhc2UgQU1ER1BVX1BQX1NFTlNPUl9WQ05fUE9XRVJfU1RBVEU6Ci0JCSoodWlu
dDMyX3QgKilkYXRhID0gcG93ZXJfZ2F0ZS0+dmNuX2dhdGVkID8gMCA6IDE7Ci0JCSpzaXplID0g
NDsKLQkJYnJlYWs7Ci0JZGVmYXVsdDoKLQkJcmV0ID0gLUVJTlZBTDsKLQkJYnJlYWs7Ci0JfQot
Ci0JaWYgKHJldCkKLQkJKnNpemUgPSAwOwotCi0JcmV0dXJuIHJldDsKLX0KLQotaW50IHNtdV91
cGRhdGVfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X3RhYmxlX2lkIHRh
YmxlX2luZGV4LCBpbnQgYXJndW1lbnQsCi0JCSAgICAgdm9pZCAqdGFibGVfZGF0YSwgYm9vbCBk
cnYyc211KQotewotCXN0cnVjdCBzbXVfdGFibGVfY29udGV4dCAqc211X3RhYmxlID0gJnNtdS0+
c211X3RhYmxlOwotCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gc211LT5hZGV2OwotCXN0
cnVjdCBzbXVfdGFibGUgKnRhYmxlID0gTlVMTDsKLQlpbnQgcmV0ID0gMDsKLQlpbnQgdGFibGVf
aWQgPSBzbXVfdGFibGVfZ2V0X2luZGV4KHNtdSwgdGFibGVfaW5kZXgpOwotCi0JaWYgKCF0YWJs
ZV9kYXRhIHx8IHRhYmxlX2lkID49IFNNVV9UQUJMRV9DT1VOVCB8fCB0YWJsZV9pZCA8IDApCi0J
CXJldHVybiAtRUlOVkFMOwotCi0JdGFibGUgPSAmc211X3RhYmxlLT50YWJsZXNbdGFibGVfaW5k
ZXhdOwotCi0JaWYgKGRydjJzbXUpCi0JCW1lbWNweSh0YWJsZS0+Y3B1X2FkZHIsIHRhYmxlX2Rh
dGEsIHRhYmxlLT5zaXplKTsKLQotCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShz
bXUsIFNNVV9NU0dfU2V0RHJpdmVyRHJhbUFkZHJIaWdoLAotCQkJCQkgIHVwcGVyXzMyX2JpdHMo
dGFibGUtPm1jX2FkZHJlc3MpKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCXJldCA9IHNt
dV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfU2V0RHJpdmVyRHJhbUFkZHJM
b3csCi0JCQkJCSAgbG93ZXJfMzJfYml0cyh0YWJsZS0+bWNfYWRkcmVzcykpOwotCWlmIChyZXQp
Ci0JCXJldHVybiByZXQ7Ci0JcmV0ID0gc211X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwg
ZHJ2MnNtdSA/Ci0JCQkJCSAgU01VX01TR19UcmFuc2ZlclRhYmxlRHJhbTJTbXUgOgotCQkJCQkg
IFNNVV9NU0dfVHJhbnNmZXJUYWJsZVNtdTJEcmFtLAotCQkJCQkgIHRhYmxlX2lkIHwgKChhcmd1
bWVudCAmIDB4RkZGRikgPDwgMTYpKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCi0JLyog
Zmx1c2ggaGRwIGNhY2hlICovCi0JYWRldi0+bmJpby5mdW5jcy0+aGRwX2ZsdXNoKGFkZXYsIE5V
TEwpOwotCi0JaWYgKCFkcnYyc211KQotCQltZW1jcHkodGFibGVfZGF0YSwgdGFibGUtPmNwdV9h
ZGRyLCB0YWJsZS0+c2l6ZSk7Ci0KLQlyZXR1cm4gcmV0OwotfQotCi1ib29sIGlzX3N1cHBvcnRf
c3dfc211KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQotewotCWlmIChhZGV2LT5hc2ljX3R5
cGUgPT0gQ0hJUF9WRUdBMjApCi0JCXJldHVybiAoYW1kZ3B1X2RwbSA9PSAyKSA/IHRydWU6IGZh
bHNlOwotCWVsc2UgaWYgKGFkZXYtPmFzaWNfdHlwZSA+PSBDSElQX0FSQ1RVUlVTKQotCQlyZXR1
cm4gdHJ1ZTsKLQllbHNlCi0JCXJldHVybiBmYWxzZTsKLX0KLQotYm9vbCBpc19zdXBwb3J0X3N3
X3NtdV94Z21pKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQotewotCWlmIChhbWRncHVfZHBt
ICE9IDEpCi0JCXJldHVybiBmYWxzZTsKLQotCWlmIChhZGV2LT5hc2ljX3R5cGUgPT0gQ0hJUF9W
RUdBMjApCi0JCXJldHVybiB0cnVlOwotCi0JcmV0dXJuIGZhbHNlOwotfQotCi1pbnQgc211X3N5
c19nZXRfcHBfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHZvaWQgKip0YWJsZSkKLXsK
LQlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQgKnNtdV90YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsK
LQl1aW50MzJfdCBwb3dlcnBsYXlfdGFibGVfc2l6ZTsKLQotCWlmICghc211X3RhYmxlLT5wb3dl
cl9wbGF5X3RhYmxlICYmICFzbXVfdGFibGUtPmhhcmRjb2RlX3BwdGFibGUpCi0JCXJldHVybiAt
RUlOVkFMOwotCi0JbXV0ZXhfbG9jaygmc211LT5tdXRleCk7Ci0KLQlpZiAoc211X3RhYmxlLT5o
YXJkY29kZV9wcHRhYmxlKQotCQkqdGFibGUgPSBzbXVfdGFibGUtPmhhcmRjb2RlX3BwdGFibGU7
Ci0JZWxzZQotCQkqdGFibGUgPSBzbXVfdGFibGUtPnBvd2VyX3BsYXlfdGFibGU7Ci0KLQlwb3dl
cnBsYXlfdGFibGVfc2l6ZSA9IHNtdV90YWJsZS0+cG93ZXJfcGxheV90YWJsZV9zaXplOwotCi0J
bXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKLQotCXJldHVybiBwb3dlcnBsYXlfdGFibGVfc2l6
ZTsKLX0KLQotaW50IHNtdV9zeXNfc2V0X3BwX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LCAgdm9pZCAqYnVmLCBzaXplX3Qgc2l6ZSkKLXsKLQlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQg
KnNtdV90YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsKLQlBVE9NX0NPTU1PTl9UQUJMRV9IRUFERVIg
KmhlYWRlciA9IChBVE9NX0NPTU1PTl9UQUJMRV9IRUFERVIgKilidWY7Ci0JaW50IHJldCA9IDA7
Ci0KLQlpZiAoIXNtdS0+cG1fZW5hYmxlZCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JaWYgKGhlYWRl
ci0+dXNTdHJ1Y3R1cmVTaXplICE9IHNpemUpIHsKLQkJcHJfZXJyKCJwcCB0YWJsZSBzaXplIG5v
dCBtYXRjaGVkICFcbiIpOwotCQlyZXR1cm4gLUVJTzsKLQl9Ci0KLQltdXRleF9sb2NrKCZzbXUt
Pm11dGV4KTsKLQlpZiAoIXNtdV90YWJsZS0+aGFyZGNvZGVfcHB0YWJsZSkKLQkJc211X3RhYmxl
LT5oYXJkY29kZV9wcHRhYmxlID0ga3phbGxvYyhzaXplLCBHRlBfS0VSTkVMKTsKLQlpZiAoIXNt
dV90YWJsZS0+aGFyZGNvZGVfcHB0YWJsZSkgewotCQlyZXQgPSAtRU5PTUVNOwotCQlnb3RvIGZh
aWxlZDsKLQl9Ci0KLQltZW1jcHkoc211X3RhYmxlLT5oYXJkY29kZV9wcHRhYmxlLCBidWYsIHNp
emUpOwotCXNtdV90YWJsZS0+cG93ZXJfcGxheV90YWJsZSA9IHNtdV90YWJsZS0+aGFyZGNvZGVf
cHB0YWJsZTsKLQlzbXVfdGFibGUtPnBvd2VyX3BsYXlfdGFibGVfc2l6ZSA9IHNpemU7Ci0KLQly
ZXQgPSBzbXVfcmVzZXQoc211KTsKLQlpZiAocmV0KQotCQlwcl9pbmZvKCJzbXUgcmVzZXQgZmFp
bGVkLCByZXQgPSAlZFxuIiwgcmV0KTsKLQotZmFpbGVkOgotCW11dGV4X3VubG9jaygmc211LT5t
dXRleCk7Ci0JcmV0dXJuIHJldDsKLX0KLQotaW50IHNtdV9mZWF0dXJlX2luaXRfZHBtKHN0cnVj
dCBzbXVfY29udGV4dCAqc211KQotewotCXN0cnVjdCBzbXVfZmVhdHVyZSAqZmVhdHVyZSA9ICZz
bXUtPnNtdV9mZWF0dXJlOwotCWludCByZXQgPSAwOwotCXVpbnQzMl90IGFsbG93ZWRfZmVhdHVy
ZV9tYXNrW1NNVV9GRUFUVVJFX01BWC8zMl07Ci0KLQlpZiAoIXNtdS0+cG1fZW5hYmxlZCkKLQkJ
cmV0dXJuIHJldDsKLQltdXRleF9sb2NrKCZmZWF0dXJlLT5tdXRleCk7Ci0JYml0bWFwX3plcm8o
ZmVhdHVyZS0+YWxsb3dlZCwgU01VX0ZFQVRVUkVfTUFYKTsKLQltdXRleF91bmxvY2soJmZlYXR1
cmUtPm11dGV4KTsKLQotCXJldCA9IHNtdV9nZXRfYWxsb3dlZF9mZWF0dXJlX21hc2soc211LCBh
bGxvd2VkX2ZlYXR1cmVfbWFzaywKLQkJCQkJICAgICBTTVVfRkVBVFVSRV9NQVgvMzIpOwotCWlm
IChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQltdXRleF9sb2NrKCZmZWF0dXJlLT5tdXRleCk7Ci0J
Yml0bWFwX29yKGZlYXR1cmUtPmFsbG93ZWQsIGZlYXR1cmUtPmFsbG93ZWQsCi0JCSAgICAgICh1
bnNpZ25lZCBsb25nICopYWxsb3dlZF9mZWF0dXJlX21hc2ssCi0JCSAgICAgIGZlYXR1cmUtPmZl
YXR1cmVfbnVtKTsKLQltdXRleF91bmxvY2soJmZlYXR1cmUtPm11dGV4KTsKLQotCXJldHVybiBy
ZXQ7Ci19Ci0KLQotaW50IHNtdV9mZWF0dXJlX2lzX2VuYWJsZWQoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsIGVudW0gc211X2ZlYXR1cmVfbWFzayBtYXNrKQotewotCXN0cnVjdCBhbWRncHVfZGV2
aWNlICphZGV2ID0gc211LT5hZGV2OwotCXN0cnVjdCBzbXVfZmVhdHVyZSAqZmVhdHVyZSA9ICZz
bXUtPnNtdV9mZWF0dXJlOwotCWludCBmZWF0dXJlX2lkOwotCWludCByZXQgPSAwOwotCi0JaWYg
KGFkZXYtPmZsYWdzICYgQU1EX0lTX0FQVSkKLQkJcmV0dXJuIDE7Ci0KLQlmZWF0dXJlX2lkID0g
c211X2ZlYXR1cmVfZ2V0X2luZGV4KHNtdSwgbWFzayk7Ci0JaWYgKGZlYXR1cmVfaWQgPCAwKQot
CQlyZXR1cm4gMDsKLQotCVdBUk5fT04oZmVhdHVyZV9pZCA+IGZlYXR1cmUtPmZlYXR1cmVfbnVt
KTsKLQotCW11dGV4X2xvY2soJmZlYXR1cmUtPm11dGV4KTsKLQlyZXQgPSB0ZXN0X2JpdChmZWF0
dXJlX2lkLCBmZWF0dXJlLT5lbmFibGVkKTsKLQltdXRleF91bmxvY2soJmZlYXR1cmUtPm11dGV4
KTsKLQotCXJldHVybiByZXQ7Ci19Ci0KLWludCBzbXVfZmVhdHVyZV9zZXRfZW5hYmxlZChzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfZmVhdHVyZV9tYXNrIG1hc2ssCi0JCQkgICAg
Ym9vbCBlbmFibGUpCi17Ci0Jc3RydWN0IHNtdV9mZWF0dXJlICpmZWF0dXJlID0gJnNtdS0+c211
X2ZlYXR1cmU7Ci0JaW50IGZlYXR1cmVfaWQ7Ci0KLQlmZWF0dXJlX2lkID0gc211X2ZlYXR1cmVf
Z2V0X2luZGV4KHNtdSwgbWFzayk7Ci0JaWYgKGZlYXR1cmVfaWQgPCAwKQotCQlyZXR1cm4gLUVJ
TlZBTDsKLQotCVdBUk5fT04oZmVhdHVyZV9pZCA+IGZlYXR1cmUtPmZlYXR1cmVfbnVtKTsKLQot
CXJldHVybiBzbXVfZmVhdHVyZV91cGRhdGVfZW5hYmxlX3N0YXRlKHNtdSwKLQkJCQkJICAgICAg
IDFVTEwgPDwgZmVhdHVyZV9pZCwKLQkJCQkJICAgICAgIGVuYWJsZSk7Ci19Ci0KLWludCBzbXVf
ZmVhdHVyZV9pc19zdXBwb3J0ZWQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Zl
YXR1cmVfbWFzayBtYXNrKQotewotCXN0cnVjdCBzbXVfZmVhdHVyZSAqZmVhdHVyZSA9ICZzbXUt
PnNtdV9mZWF0dXJlOwotCWludCBmZWF0dXJlX2lkOwotCWludCByZXQgPSAwOwotCi0JZmVhdHVy
ZV9pZCA9IHNtdV9mZWF0dXJlX2dldF9pbmRleChzbXUsIG1hc2spOwotCWlmIChmZWF0dXJlX2lk
IDwgMCkKLQkJcmV0dXJuIDA7Ci0KLQlXQVJOX09OKGZlYXR1cmVfaWQgPiBmZWF0dXJlLT5mZWF0
dXJlX251bSk7Ci0KLQltdXRleF9sb2NrKCZmZWF0dXJlLT5tdXRleCk7Ci0JcmV0ID0gdGVzdF9i
aXQoZmVhdHVyZV9pZCwgZmVhdHVyZS0+c3VwcG9ydGVkKTsKLQltdXRleF91bmxvY2soJmZlYXR1
cmUtPm11dGV4KTsKLQotCXJldHVybiByZXQ7Ci19Ci0KLWludCBzbXVfZmVhdHVyZV9zZXRfc3Vw
cG9ydGVkKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkJICAgICAgZW51bSBzbXVfZmVhdHVy
ZV9tYXNrIG1hc2ssCi0JCQkgICAgICBib29sIGVuYWJsZSkKLXsKLQlzdHJ1Y3Qgc211X2ZlYXR1
cmUgKmZlYXR1cmUgPSAmc211LT5zbXVfZmVhdHVyZTsKLQlpbnQgZmVhdHVyZV9pZDsKLQlpbnQg
cmV0ID0gMDsKLQotCWZlYXR1cmVfaWQgPSBzbXVfZmVhdHVyZV9nZXRfaW5kZXgoc211LCBtYXNr
KTsKLQlpZiAoZmVhdHVyZV9pZCA8IDApCi0JCXJldHVybiAtRUlOVkFMOwotCi0JV0FSTl9PTihm
ZWF0dXJlX2lkID4gZmVhdHVyZS0+ZmVhdHVyZV9udW0pOwotCi0JbXV0ZXhfbG9jaygmZmVhdHVy
ZS0+bXV0ZXgpOwotCWlmIChlbmFibGUpCi0JCXRlc3RfYW5kX3NldF9iaXQoZmVhdHVyZV9pZCwg
ZmVhdHVyZS0+c3VwcG9ydGVkKTsKLQllbHNlCi0JCXRlc3RfYW5kX2NsZWFyX2JpdChmZWF0dXJl
X2lkLCBmZWF0dXJlLT5zdXBwb3J0ZWQpOwotCW11dGV4X3VubG9jaygmZmVhdHVyZS0+bXV0ZXgp
OwotCi0JcmV0dXJuIHJldDsKLX0KLQogc3RhdGljIGludCBzbXVfc2V0X2Z1bmNzKHN0cnVjdCBh
bWRncHVfZGV2aWNlICphZGV2KQogewogCXN0cnVjdCBzbXVfY29udGV4dCAqc211ID0gJmFkZXYt
PnNtdTsKQEAgLTc1MSwyNiArODEsOSBAQCBzdGF0aWMgaW50IHNtdV9sYXRlX2luaXQodm9pZCAq
aGFuZGxlKQogCWlmICghc211LT5wbV9lbmFibGVkKQogCQlyZXR1cm4gMDsKIAotCXNtdV9oYW5k
bGVfdGFzaygmYWRldi0+c211LAorCXNtdV9jbW5faGFuZGxlX3Rhc2soJmFkZXYtPnNtdSwKIAkJ
CXNtdS0+c211X2RwbS5kcG1fbGV2ZWwsCi0JCQlBTURfUFBfVEFTS19DT01QTEVURV9JTklULAot
CQkJZmFsc2UpOwotCi0JcmV0dXJuIDA7Ci19Ci0KLWludCBzbXVfZ2V0X2F0b21fZGF0YV90YWJs
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgdGFibGUsCi0JCQkgICAgdWludDE2
X3QgKnNpemUsIHVpbnQ4X3QgKmZyZXYsIHVpbnQ4X3QgKmNyZXYsCi0JCQkgICAgdWludDhfdCAq
KmFkZHIpCi17Ci0Jc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBzbXUtPmFkZXY7Ci0JdWlu
dDE2X3QgZGF0YV9zdGFydDsKLQotCWlmICghYW1kZ3B1X2F0b21fcGFyc2VfZGF0YV9oZWFkZXIo
YWRldi0+bW9kZV9pbmZvLmF0b21fY29udGV4dCwgdGFibGUsCi0JCQkJCSAgIHNpemUsIGZyZXYs
IGNyZXYsICZkYXRhX3N0YXJ0KSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQkqYWRkciA9ICh1aW50
OF90ICopYWRldi0+bW9kZV9pbmZvLmF0b21fY29udGV4dC0+YmlvcyArIGRhdGFfc3RhcnQ7CisJ
CQlBTURfUFBfVEFTS19DT01QTEVURV9JTklUKTsKIAogCXJldHVybiAwOwogfQpAQCAtOTY5LDYg
KzI4Miw0NiBAQCBzdGF0aWMgaW50IHNtdV9maW5pX2ZiX2FsbG9jYXRpb25zKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211KQogCXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IHNtdV9vdmVycmlkZV9w
Y2llX3BhcmFtZXRlcnMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCit7CisJc3RydWN0IGFtZGdw
dV9kZXZpY2UgKmFkZXYgPSBzbXUtPmFkZXY7CisJdWludDMyX3QgcGNpZV9nZW4gPSAwLCBwY2ll
X3dpZHRoID0gMDsKKwlpbnQgcmV0OworCisJaWYgKGFkZXYtPnBtLnBjaWVfZ2VuX21hc2sgJiBD
QUlMX1BDSUVfTElOS19TUEVFRF9TVVBQT1JUX0dFTjQpCisJCXBjaWVfZ2VuID0gMzsKKwllbHNl
IGlmIChhZGV2LT5wbS5wY2llX2dlbl9tYXNrICYgQ0FJTF9QQ0lFX0xJTktfU1BFRURfU1VQUE9S
VF9HRU4zKQorCQlwY2llX2dlbiA9IDI7CisJZWxzZSBpZiAoYWRldi0+cG0ucGNpZV9nZW5fbWFz
ayAmIENBSUxfUENJRV9MSU5LX1NQRUVEX1NVUFBPUlRfR0VOMikKKwkJcGNpZV9nZW4gPSAxOwor
CWVsc2UgaWYgKGFkZXYtPnBtLnBjaWVfZ2VuX21hc2sgJiBDQUlMX1BDSUVfTElOS19TUEVFRF9T
VVBQT1JUX0dFTjEpCisJCXBjaWVfZ2VuID0gMDsKKworCS8qIEJpdCAzMToxNjogTENMSyBEUE0g
bGV2ZWwuIDAgaXMgRFBNMCwgYW5kIDEgaXMgRFBNMQorCSAqIEJpdCAxNTo4OiAgUENJRSBHRU4s
IDAgdG8gMyBjb3JyZXNwb25kcyB0byBHRU4xIHRvIEdFTjQKKwkgKiBCaXQgNzowOiAgIFBDSUUg
bGFuZSB3aWR0aCwgMSB0byA3IGNvcnJlc3BvbmRzIGlzIHgxIHRvIHgzMgorCSAqLworCWlmIChh
ZGV2LT5wbS5wY2llX21sd19tYXNrICYgQ0FJTF9QQ0lFX0xJTktfV0lEVEhfU1VQUE9SVF9YMTYp
CisJCXBjaWVfd2lkdGggPSA2OworCWVsc2UgaWYgKGFkZXYtPnBtLnBjaWVfbWx3X21hc2sgJiBD
QUlMX1BDSUVfTElOS19XSURUSF9TVVBQT1JUX1gxMikKKwkJcGNpZV93aWR0aCA9IDU7CisJZWxz
ZSBpZiAoYWRldi0+cG0ucGNpZV9tbHdfbWFzayAmIENBSUxfUENJRV9MSU5LX1dJRFRIX1NVUFBP
UlRfWDgpCisJCXBjaWVfd2lkdGggPSA0OworCWVsc2UgaWYgKGFkZXYtPnBtLnBjaWVfbWx3X21h
c2sgJiBDQUlMX1BDSUVfTElOS19XSURUSF9TVVBQT1JUX1g0KQorCQlwY2llX3dpZHRoID0gMzsK
KwllbHNlIGlmIChhZGV2LT5wbS5wY2llX21sd19tYXNrICYgQ0FJTF9QQ0lFX0xJTktfV0lEVEhf
U1VQUE9SVF9YMikKKwkJcGNpZV93aWR0aCA9IDI7CisJZWxzZSBpZiAoYWRldi0+cG0ucGNpZV9t
bHdfbWFzayAmIENBSUxfUENJRV9MSU5LX1dJRFRIX1NVUFBPUlRfWDEpCisJCXBjaWVfd2lkdGgg
PSAxOworCisJcmV0ID0gc211X3VwZGF0ZV9wY2llX3BhcmFtZXRlcnMoc211LCBwY2llX2dlbiwg
cGNpZV93aWR0aCk7CisKKwlpZiAocmV0KQorCQlwcl9lcnIoIlslc10gQXR0ZW1wdCB0byBvdmVy
cmlkZSBwY2llIHBhcmFtcyBmYWlsZWQhXG4iLCBfX2Z1bmNfXyk7CisKKwlyZXR1cm4gcmV0Owor
fQorCiBzdGF0aWMgaW50IHNtdV9zbWNfdGFibGVfaHdfaW5pdChzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwKIAkJCQkgYm9vbCBpbml0aWFsaXplKQogewpAQCAtMTA2OSw3ICs0MjIsOCBAQCBzdGF0
aWMgaW50IHNtdV9zbWNfdGFibGVfaHdfaW5pdChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJ
ICogU2V0IG1pbiBkZWVwIHNsZWVwIGRjZSBmY2xrIHdpdGggYm9vdHVwIHZhbHVlIGZyb20gdmJp
b3MgdmlhCiAJCSAqIFNldE1pbkRlZXBTbGVlcERjZWZjbGsgTVNHLgogCQkgKi8KLQkJcmV0ID0g
c211X3NldF9taW5fZGNlZl9kZWVwX3NsZWVwKHNtdSk7CisJCXJldCA9IHNtdV9zZXRfbWluX2Rj
ZWZfZGVlcF9zbGVlcChzbXUsCisJCQkJc211LT5zbXVfdGFibGUuYm9vdF92YWx1ZXMuZGNlZmNs
ayAvIDEwMCk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCX0KQEAgLTEwOTgsNyArNDUy
LDcgQEAgc3RhdGljIGludCBzbXVfc21jX3RhYmxlX2h3X2luaXQoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsCiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCi0JCXJldCA9IHNtdV9nZXRfcG93
ZXJfbGltaXQoc211LCAmc211LT5kZWZhdWx0X3Bvd2VyX2xpbWl0LCB0cnVlLCBmYWxzZSk7CisJ
CXJldCA9IHNtdV9jbW5fZ2V0X3Bvd2VyX2xpbWl0KHNtdSwgJnNtdS0+ZGVmYXVsdF9wb3dlcl9s
aW1pdCwgdHJ1ZSk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCX0KQEAgLTEyMDEsNiAr
NTU1LDMyIEBAIHN0YXRpYyBpbnQgc211X3N0YXJ0X3NtY19lbmdpbmUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUpCiAJcmV0dXJuIHJldDsKIH0KIAorc3RhdGljIGludCBzbXVfZmVhdHVyZV9pbml0
X2RwbShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlzdHJ1Y3Qgc211X2ZlYXR1cmUgKmZl
YXR1cmUgPSAmc211LT5zbXVfZmVhdHVyZTsKKwlpbnQgcmV0ID0gMDsKKwl1aW50MzJfdCBhbGxv
d2VkX2ZlYXR1cmVfbWFza1tTTVVfRkVBVFVSRV9NQVgvMzJdOworCisJaWYgKCFzbXUtPnBtX2Vu
YWJsZWQpCisJCXJldHVybiByZXQ7CisJbXV0ZXhfbG9jaygmZmVhdHVyZS0+bXV0ZXgpOworCWJp
dG1hcF96ZXJvKGZlYXR1cmUtPmFsbG93ZWQsIFNNVV9GRUFUVVJFX01BWCk7CisJbXV0ZXhfdW5s
b2NrKCZmZWF0dXJlLT5tdXRleCk7CisKKwlyZXQgPSBzbXVfZ2V0X2FsbG93ZWRfZmVhdHVyZV9t
YXNrKHNtdSwgYWxsb3dlZF9mZWF0dXJlX21hc2ssCisJCQkJCSAgICAgU01VX0ZFQVRVUkVfTUFY
LzMyKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJbXV0ZXhfbG9jaygmZmVhdHVyZS0+
bXV0ZXgpOworCWJpdG1hcF9vcihmZWF0dXJlLT5hbGxvd2VkLCBmZWF0dXJlLT5hbGxvd2VkLAor
CQkgICAgICAodW5zaWduZWQgbG9uZyAqKWFsbG93ZWRfZmVhdHVyZV9tYXNrLAorCQkgICAgICBm
ZWF0dXJlLT5mZWF0dXJlX251bSk7CisJbXV0ZXhfdW5sb2NrKCZmZWF0dXJlLT5tdXRleCk7CisK
KwlyZXR1cm4gcmV0OworfQorCiBzdGF0aWMgaW50IHNtdV9od19pbml0KHZvaWQgKmhhbmRsZSkK
IHsKIAlpbnQgcmV0OwpAQCAtMTMwOCwyMiArNjg4LDYgQEAgc3RhdGljIGludCBzbXVfaHdfZmlu
aSh2b2lkICpoYW5kbGUpCiAJcmV0dXJuIDA7CiB9CiAKLWludCBzbXVfcmVzZXQoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUpCi17Ci0Jc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYgPSBzbXUtPmFk
ZXY7Ci0JaW50IHJldCA9IDA7Ci0KLQlyZXQgPSBzbXVfaHdfZmluaShhZGV2KTsKLQlpZiAocmV0
KQotCQlyZXR1cm4gcmV0OwotCi0JcmV0ID0gc211X2h3X2luaXQoYWRldik7Ci0JaWYgKHJldCkK
LQkJcmV0dXJuIHJldDsKLQotCXJldHVybiByZXQ7Ci19Ci0KIHN0YXRpYyBpbnQgc211X3N1c3Bl
bmQodm9pZCAqaGFuZGxlKQogewogCWludCByZXQ7CkBAIC0xMzQ4LDE1OCArNzEyLDQ1IEBAIHN0
YXRpYyBpbnQgc211X3N1c3BlbmQodm9pZCAqaGFuZGxlKQogCiAJc211LT53YXRlcm1hcmtzX2Jp
dG1hcCAmPSB+KFdBVEVSTUFSS1NfTE9BREVEKTsKIAotCWlmIChhZGV2LT5hc2ljX3R5cGUgPj0g
Q0hJUF9OQVZJMTAgJiYKLQkgICAgYWRldi0+Z2Z4LnJsYy5mdW5jcy0+c3RvcCkKLQkJYWRldi0+
Z2Z4LnJsYy5mdW5jcy0+c3RvcChhZGV2KTsKLQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50
IHNtdV9yZXN1bWUodm9pZCAqaGFuZGxlKQotewotCWludCByZXQ7Ci0Jc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYgPSAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKiloYW5kbGU7Ci0Jc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUgPSAmYWRldi0+c211OwotCi0JcHJfaW5mbygiU01VIGlzIHJlc3VtaW5n
Li4uXG4iKTsKLQotCXJldCA9IHNtdV9zdGFydF9zbWNfZW5naW5lKHNtdSk7Ci0JaWYgKHJldCkg
ewotCQlwcl9lcnIoIlNNVSBpcyBub3QgcmVhZHkgeWV0IVxuIik7Ci0JCWdvdG8gZmFpbGVkOwot
CX0KLQotCXJldCA9IHNtdV9zbWNfdGFibGVfaHdfaW5pdChzbXUsIGZhbHNlKTsKLQlpZiAocmV0
KQotCQlnb3RvIGZhaWxlZDsKLQotCXJldCA9IHNtdV9zdGFydF90aGVybWFsX2NvbnRyb2woc211
KTsKLQlpZiAocmV0KQotCQlnb3RvIGZhaWxlZDsKLQotCWlmIChzbXUtPmlzX2FwdSkKLQkJc211
X3NldF9nZnhfY2dwZygmYWRldi0+c211LCB0cnVlKTsKLQotCXNtdS0+ZGlzYWJsZV91Y2xrX3N3
aXRjaCA9IDA7Ci0KLQlwcl9pbmZvKCJTTVUgaXMgcmVzdW1lZCBzdWNjZXNzZnVsbHkhXG4iKTsK
LQotCXJldHVybiAwOwotCi1mYWlsZWQ6Ci0JcmV0dXJuIHJldDsKLX0KLQotaW50IHNtdV9kaXNw
bGF5X2NvbmZpZ3VyYXRpb25fY2hhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkJCSAg
ICAgY29uc3Qgc3RydWN0IGFtZF9wcF9kaXNwbGF5X2NvbmZpZ3VyYXRpb24gKmRpc3BsYXlfY29u
ZmlnKQotewotCWludCBpbmRleCA9IDA7Ci0JaW50IG51bV9vZl9hY3RpdmVfZGlzcGxheSA9IDA7
Ci0KLQlpZiAoIXNtdS0+cG1fZW5hYmxlZCB8fCAhaXNfc3VwcG9ydF9zd19zbXUoc211LT5hZGV2
KSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlpZiAoIWRpc3BsYXlfY29uZmlnKQotCQlyZXR1cm4g
LUVJTlZBTDsKLQotCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwotCi0JaWYgKHNtdS0+cHB0X2Z1
bmNzLT5zZXRfZGVlcF9zbGVlcF9kY2VmY2xrKQotCQlzbXUtPnBwdF9mdW5jcy0+c2V0X2RlZXBf
c2xlZXBfZGNlZmNsayhzbXUsCi0JCQkJZGlzcGxheV9jb25maWctPm1pbl9kY2VmX2RlZXBfc2xl
ZXBfc2V0X2NsayAvIDEwMCk7Ci0KLQlmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBkaXNwbGF5X2Nv
bmZpZy0+bnVtX3BhdGhfaW5jbHVkaW5nX25vbl9kaXNwbGF5OyBpbmRleCsrKSB7Ci0JCWlmIChk
aXNwbGF5X2NvbmZpZy0+ZGlzcGxheXNbaW5kZXhdLmNvbnRyb2xsZXJfaWQgIT0gMCkKLQkJCW51
bV9vZl9hY3RpdmVfZGlzcGxheSsrOwotCX0KLQotCXNtdV9zZXRfYWN0aXZlX2Rpc3BsYXlfY291
bnQoc211LCBudW1fb2ZfYWN0aXZlX2Rpc3BsYXkpOwotCi0Jc211X3N0b3JlX2NjNl9kYXRhKHNt
dSwgZGlzcGxheV9jb25maWctPmNwdV9wc3RhdGVfc2VwYXJhdGlvbl90aW1lLAotCQkJICAgZGlz
cGxheV9jb25maWctPmNwdV9jYzZfZGlzYWJsZSwKLQkJCSAgIGRpc3BsYXlfY29uZmlnLT5jcHVf
cHN0YXRlX2Rpc2FibGUsCi0JCQkgICBkaXNwbGF5X2NvbmZpZy0+bmJfcHN0YXRlX3N3aXRjaF9k
aXNhYmxlKTsKLQotCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7Ci0KLQlyZXR1cm4gMDsKLX0K
LQotc3RhdGljIGludCBzbXVfZ2V0X2Nsb2NrX2luZm8oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
Ci0JCQkgICAgICBzdHJ1Y3Qgc211X2Nsb2NrX2luZm8gKmNsa19pbmZvLAotCQkJICAgICAgZW51
bSBzbXVfcGVyZl9sZXZlbF9kZXNpZ25hdGlvbiBkZXNpZ25hdGlvbikKLXsKLQlpbnQgcmV0Owot
CXN0cnVjdCBzbXVfcGVyZm9ybWFuY2VfbGV2ZWwgbGV2ZWwgPSB7MH07Ci0KLQlpZiAoIWNsa19p
bmZvKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCXJldCA9IHNtdV9nZXRfcGVyZl9sZXZlbChzbXUs
IFBFUkZfTEVWRUxfQUNUSVZJVFksICZsZXZlbCk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIC1FSU5W
QUw7Ci0KLQljbGtfaW5mby0+bWluX21lbV9jbGsgPSBsZXZlbC5tZW1vcnlfY2xvY2s7Ci0JY2xr
X2luZm8tPm1pbl9lbmdfY2xrID0gbGV2ZWwuY29yZV9jbG9jazsKLQljbGtfaW5mby0+bWluX2J1
c19iYW5kd2lkdGggPSBsZXZlbC5ub25fbG9jYWxfbWVtX2ZyZXEgKiBsZXZlbC5ub25fbG9jYWxf
bWVtX3dpZHRoOwotCi0JcmV0ID0gc211X2dldF9wZXJmX2xldmVsKHNtdSwgZGVzaWduYXRpb24s
ICZsZXZlbCk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQljbGtfaW5mby0+bWlu
X21lbV9jbGsgPSBsZXZlbC5tZW1vcnlfY2xvY2s7Ci0JY2xrX2luZm8tPm1pbl9lbmdfY2xrID0g
bGV2ZWwuY29yZV9jbG9jazsKLQljbGtfaW5mby0+bWluX2J1c19iYW5kd2lkdGggPSBsZXZlbC5u
b25fbG9jYWxfbWVtX2ZyZXEgKiBsZXZlbC5ub25fbG9jYWxfbWVtX3dpZHRoOwotCisJaWYgKGFk
ZXYtPmFzaWNfdHlwZSA+PSBDSElQX05BVkkxMCAmJgorCSAgICBhZGV2LT5nZngucmxjLmZ1bmNz
LT5zdG9wKQorCQlhZGV2LT5nZngucmxjLmZ1bmNzLT5zdG9wKGFkZXYpOworCiAJcmV0dXJuIDA7
CiB9CiAKLWludCBzbXVfZ2V0X2N1cnJlbnRfY2xvY2tzKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAotCQkJICAgc3RydWN0IGFtZF9wcF9jbG9ja19pbmZvICpjbG9ja3MpCitzdGF0aWMgaW50IHNt
dV9yZXN1bWUodm9pZCAqaGFuZGxlKQogewotCXN0cnVjdCBhbWRfcHBfc2ltcGxlX2Nsb2NrX2lu
Zm8gc2ltcGxlX2Nsb2NrcyA9IHswfTsKLQlzdHJ1Y3Qgc211X2Nsb2NrX2luZm8gaHdfY2xvY2tz
OwotCWludCByZXQgPSAwOwotCi0JaWYgKCFpc19zdXBwb3J0X3N3X3NtdShzbXUtPmFkZXYpKQot
CQlyZXR1cm4gLUVJTlZBTDsKLQotCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwotCi0Jc211X2dl
dF9kYWxfcG93ZXJfbGV2ZWwoc211LCAmc2ltcGxlX2Nsb2Nrcyk7CisJaW50IHJldDsKKwlzdHJ1
Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqKWhhbmRsZTsK
KwlzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSA9ICZhZGV2LT5zbXU7CiAKLQlpZiAoc211LT5zdXBw
b3J0X3Bvd2VyX2NvbnRhaW5tZW50KQotCQlyZXQgPSBzbXVfZ2V0X2Nsb2NrX2luZm8oc211LCAm
aHdfY2xvY2tzLAotCQkJCQkgUEVSRl9MRVZFTF9QT1dFUl9DT05UQUlOTUVOVCk7Ci0JZWxzZQot
CQlyZXQgPSBzbXVfZ2V0X2Nsb2NrX2luZm8oc211LCAmaHdfY2xvY2tzLCBQRVJGX0xFVkVMX0FD
VElWSVRZKTsKKwlwcl9pbmZvKCJTTVUgaXMgcmVzdW1pbmcuLi5cbiIpOwogCisJcmV0ID0gc211
X3N0YXJ0X3NtY19lbmdpbmUoc211KTsKIAlpZiAocmV0KSB7Ci0JCXByX2VycigiRXJyb3IgaW4g
c211X2dldF9jbG9ja19pbmZvXG4iKTsKKwkJcHJfZXJyKCJTTVUgaXMgbm90IHJlYWR5IHlldCFc
biIpOwogCQlnb3RvIGZhaWxlZDsKIAl9CiAKLQljbG9ja3MtPm1pbl9lbmdpbmVfY2xvY2sgPSBo
d19jbG9ja3MubWluX2VuZ19jbGs7Ci0JY2xvY2tzLT5tYXhfZW5naW5lX2Nsb2NrID0gaHdfY2xv
Y2tzLm1heF9lbmdfY2xrOwotCWNsb2Nrcy0+bWluX21lbW9yeV9jbG9jayA9IGh3X2Nsb2Nrcy5t
aW5fbWVtX2NsazsKLQljbG9ja3MtPm1heF9tZW1vcnlfY2xvY2sgPSBod19jbG9ja3MubWF4X21l
bV9jbGs7Ci0JY2xvY2tzLT5taW5fYnVzX2JhbmR3aWR0aCA9IGh3X2Nsb2Nrcy5taW5fYnVzX2Jh
bmR3aWR0aDsKLQljbG9ja3MtPm1heF9idXNfYmFuZHdpZHRoID0gaHdfY2xvY2tzLm1heF9idXNf
YmFuZHdpZHRoOwotCWNsb2Nrcy0+bWF4X2VuZ2luZV9jbG9ja19pbl9zciA9IGh3X2Nsb2Nrcy5t
YXhfZW5nX2NsazsKLQljbG9ja3MtPm1pbl9lbmdpbmVfY2xvY2tfaW5fc3IgPSBod19jbG9ja3Mu
bWluX2VuZ19jbGs7CisJcmV0ID0gc211X3NtY190YWJsZV9od19pbml0KHNtdSwgZmFsc2UpOwor
CWlmIChyZXQpCisJCWdvdG8gZmFpbGVkOwogCi0gICAgICAgIGlmIChzaW1wbGVfY2xvY2tzLmxl
dmVsID09IDApCi0gICAgICAgICAgICAgICAgY2xvY2tzLT5tYXhfY2xvY2tzX3N0YXRlID0gUFBf
REFMX1BPV0VSTEVWRUxfNzsKLSAgICAgICAgZWxzZQotICAgICAgICAgICAgICAgIGNsb2Nrcy0+
bWF4X2Nsb2Nrc19zdGF0ZSA9IHNpbXBsZV9jbG9ja3MubGV2ZWw7CisJcmV0ID0gc211X3N0YXJ0
X3RoZXJtYWxfY29udHJvbChzbXUpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbGVkOwogCi0gICAg
ICAgIGlmICghc211X2dldF9jdXJyZW50X3NoYWxsb3dfc2xlZXBfY2xvY2tzKHNtdSwgJmh3X2Ns
b2NrcykpIHsKLSAgICAgICAgICAgICAgICBjbG9ja3MtPm1heF9lbmdpbmVfY2xvY2tfaW5fc3Ig
PSBod19jbG9ja3MubWF4X2VuZ19jbGs7Ci0gICAgICAgICAgICAgICAgY2xvY2tzLT5taW5fZW5n
aW5lX2Nsb2NrX2luX3NyID0gaHdfY2xvY2tzLm1pbl9lbmdfY2xrOwotICAgICAgICB9CisJaWYg
KHNtdS0+aXNfYXB1KQorCQlzbXVfc2V0X2dmeF9jZ3BnKCZhZGV2LT5zbXUsIHRydWUpOworCisJ
c211LT5kaXNhYmxlX3VjbGtfc3dpdGNoID0gMDsKKworCXByX2luZm8oIlNNVSBpcyByZXN1bWVk
IHN1Y2Nlc3NmdWxseSFcbiIpOworCisJcmV0dXJuIDA7CiAKIGZhaWxlZDoKLQltdXRleF91bmxv
Y2soJnNtdS0+bXV0ZXgpOwogCXJldHVybiByZXQ7CiB9CiAKQEAgLTE1NTksOTQxICs4MTAsMTA5
OSBAQCBzdGF0aWMgaW50IHNtdV9lbmFibGVfdW1kX3BzdGF0ZSh2b2lkICpoYW5kbGUsCiAJcmV0
dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgc211X2RlZmF1bHRfc2V0X3BlcmZvcm1hbmNlX2xldmVs
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIGFtZF9kcG1fZm9yY2VkX2xldmVsIGxldmVs
KQorY29uc3Qgc3RydWN0IGFtZF9pcF9mdW5jcyBzbXVfaXBfZnVuY3MgPSB7CisJLm5hbWUgPSAi
c211IiwKKwkuZWFybHlfaW5pdCA9IHNtdV9lYXJseV9pbml0LAorCS5sYXRlX2luaXQgPSBzbXVf
bGF0ZV9pbml0LAorCS5zd19pbml0ID0gc211X3N3X2luaXQsCisJLnN3X2ZpbmkgPSBzbXVfc3df
ZmluaSwKKwkuaHdfaW5pdCA9IHNtdV9od19pbml0LAorCS5od19maW5pID0gc211X2h3X2Zpbmks
CisJLnN1c3BlbmQgPSBzbXVfc3VzcGVuZCwKKwkucmVzdW1lID0gc211X3Jlc3VtZSwKKwkuaXNf
aWRsZSA9IE5VTEwsCisJLmNoZWNrX3NvZnRfcmVzZXQgPSBOVUxMLAorCS53YWl0X2Zvcl9pZGxl
ID0gTlVMTCwKKwkuc29mdF9yZXNldCA9IE5VTEwsCisJLnNldF9jbG9ja2dhdGluZ19zdGF0ZSA9
IHNtdV9zZXRfY2xvY2tnYXRpbmdfc3RhdGUsCisJLnNldF9wb3dlcmdhdGluZ19zdGF0ZSA9IHNt
dV9zZXRfcG93ZXJnYXRpbmdfc3RhdGUsCisJLmVuYWJsZV91bWRfcHN0YXRlID0gc211X2VuYWJs
ZV91bWRfcHN0YXRlLAorfTsKKworY29uc3Qgc3RydWN0IGFtZGdwdV9pcF9ibG9ja192ZXJzaW9u
IHNtdV92MTFfMF9pcF9ibG9jayA9Cit7CisJLnR5cGUgPSBBTURfSVBfQkxPQ0tfVFlQRV9TTUMs
CisJLm1ham9yID0gMTEsCisJLm1pbm9yID0gMCwKKwkucmV2ID0gMCwKKwkuZnVuY3MgPSAmc211
X2lwX2Z1bmNzLAorfTsKKworY29uc3Qgc3RydWN0IGFtZGdwdV9pcF9ibG9ja192ZXJzaW9uIHNt
dV92MTJfMF9pcF9ibG9jayA9Cit7CisJLnR5cGUgPSBBTURfSVBfQkxPQ0tfVFlQRV9TTUMsCisJ
Lm1ham9yID0gMTIsCisJLm1pbm9yID0gMCwKKwkucmV2ID0gMCwKKwkuZnVuY3MgPSAmc211X2lw
X2Z1bmNzLAorfTsKKworaW50IHNtdV9sb2FkX21pY3JvY29kZShzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSkKIHsKIAlpbnQgcmV0ID0gMDsKLQl1aW50MzJfdCBzY2xrX21hc2ssIG1jbGtfbWFzaywg
c29jX21hc2s7CiAKLQlzd2l0Y2ggKGxldmVsKSB7Ci0JY2FzZSBBTURfRFBNX0ZPUkNFRF9MRVZF
TF9ISUdIOgotCQlyZXQgPSBzbXVfZm9yY2VfZHBtX2xpbWl0X3ZhbHVlKHNtdSwgdHJ1ZSk7Ci0J
CWJyZWFrOwotCWNhc2UgQU1EX0RQTV9GT1JDRURfTEVWRUxfTE9XOgotCQlyZXQgPSBzbXVfZm9y
Y2VfZHBtX2xpbWl0X3ZhbHVlKHNtdSwgZmFsc2UpOwotCQlicmVhazsKLQljYXNlIEFNRF9EUE1f
Rk9SQ0VEX0xFVkVMX0FVVE86Ci0JY2FzZSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX1NU
QU5EQVJEOgotCQlyZXQgPSBzbXVfdW5mb3JjZV9kcG1fbGV2ZWxzKHNtdSk7Ci0JCWJyZWFrOwot
CWNhc2UgQU1EX0RQTV9GT1JDRURfTEVWRUxfUFJPRklMRV9NSU5fU0NMSzoKLQljYXNlIEFNRF9E
UE1fRk9SQ0VEX0xFVkVMX1BST0ZJTEVfTUlOX01DTEs6Ci0JY2FzZSBBTURfRFBNX0ZPUkNFRF9M
RVZFTF9QUk9GSUxFX1BFQUs6Ci0JCXJldCA9IHNtdV9nZXRfcHJvZmlsaW5nX2Nsa19tYXNrKHNt
dSwgbGV2ZWwsCi0JCQkJCQkgJnNjbGtfbWFzaywKLQkJCQkJCSAmbWNsa19tYXNrLAotCQkJCQkJ
ICZzb2NfbWFzayk7Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm4gcmV0OwotCQlzbXVfZm9yY2VfY2xr
X2xldmVscyhzbXUsIFNNVV9TQ0xLLCAxIDw8IHNjbGtfbWFzaywgZmFsc2UpOwotCQlzbXVfZm9y
Y2VfY2xrX2xldmVscyhzbXUsIFNNVV9NQ0xLLCAxIDw8IG1jbGtfbWFzaywgZmFsc2UpOwotCQlz
bXVfZm9yY2VfY2xrX2xldmVscyhzbXUsIFNNVV9TT0NDTEssIDEgPDwgc29jX21hc2ssIGZhbHNl
KTsKLQkJYnJlYWs7Ci0JY2FzZSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9NQU5VQUw6Ci0JY2FzZSBB
TURfRFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX0VYSVQ6Ci0JZGVmYXVsdDoKLQkJYnJlYWs7Ci0J
fQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5sb2Fk
X21pY3JvY29kZSkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmxvYWRfbWljcm9jb2RlKHNtdSk7
CisKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCiAJcmV0dXJuIHJldDsKIH0KIAotaW50
IHNtdV9hZGp1c3RfcG93ZXJfc3RhdGVfZHluYW1pYyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwK
LQkJCQkgICBlbnVtIGFtZF9kcG1fZm9yY2VkX2xldmVsIGxldmVsLAotCQkJCSAgIGJvb2wgc2tp
cF9kaXNwbGF5X3NldHRpbmdzKQoraW50IHNtdV9jaGVja19md19zdGF0dXMoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUpCiB7CiAJaW50IHJldCA9IDA7Ci0JaW50IGluZGV4ID0gMDsKLQlsb25nIHdv
cmtsb2FkOwotCXN0cnVjdCBzbXVfZHBtX2NvbnRleHQgKnNtdV9kcG1fY3R4ID0gJihzbXUtPnNt
dV9kcG0pOwogCi0JaWYgKCFzbXUtPnBtX2VuYWJsZWQpCi0JCXJldHVybiAtRUlOVkFMOworCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKCFza2lwX2Rpc3BsYXlfc2V0dGluZ3MpIHsK
LQkJcmV0ID0gc211X2Rpc3BsYXlfY29uZmlnX2NoYW5nZWQoc211KTsKLQkJaWYgKHJldCkgewot
CQkJcHJfZXJyKCJGYWlsZWQgdG8gY2hhbmdlIGRpc3BsYXkgY29uZmlnISIpOwotCQkJcmV0dXJu
IHJldDsKLQkJfQotCX0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmNoZWNrX2Z3X3N0YXR1cykKKwkJ
cmV0ID0gc211LT5wcHRfZnVuY3MtPmNoZWNrX2Z3X3N0YXR1cyhzbXUpOwogCi0JcmV0ID0gc211
X2FwcGx5X2Nsb2Nrc19hZGp1c3RfcnVsZXMoc211KTsKLQlpZiAocmV0KSB7Ci0JCXByX2Vycigi
RmFpbGVkIHRvIGFwcGx5IGNsb2NrcyBhZGp1c3QgcnVsZXMhIik7Ci0JCXJldHVybiByZXQ7Ci0J
fQorCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoIXNraXBfZGlzcGxheV9zZXR0
aW5ncykgewotCQlyZXQgPSBzbXVfbm90aWZ5X3NtY19kaXNwYWx5X2NvbmZpZyhzbXUpOwotCQlp
ZiAocmV0KSB7Ci0JCQlwcl9lcnIoIkZhaWxlZCB0byBub3RpZnkgc21jIGRpc3BsYXkgY29uZmln
ISIpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCX0KKwlyZXR1cm4gcmV0OworfQogCi0JaWYgKHNt
dV9kcG1fY3R4LT5kcG1fbGV2ZWwgIT0gbGV2ZWwpIHsKLQkJcmV0ID0gc211X2FzaWNfc2V0X3Bl
cmZvcm1hbmNlX2xldmVsKHNtdSwgbGV2ZWwpOwotCQlpZiAocmV0KSB7Ci0JCQlyZXQgPSBzbXVf
ZGVmYXVsdF9zZXRfcGVyZm9ybWFuY2VfbGV2ZWwoc211LCBsZXZlbCk7Ci0JCQlpZiAocmV0KSB7
Ci0JCQkJcHJfZXJyKCJGYWlsZWQgdG8gc2V0IHBlcmZvcm1hbmNlIGxldmVsISIpOwotCQkJCXJl
dHVybiByZXQ7Ci0JCQl9Ci0JCX0KK2ludCBzbXVfc2V0X2Zhbl9zcGVlZF9ycG0oc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IHNwZWVkKQoreworCWludCByZXQgPSAwOwogCi0JCS8q
IHVwZGF0ZSB0aGUgc2F2ZWQgY29weSAqLwotCQlzbXVfZHBtX2N0eC0+ZHBtX2xldmVsID0gbGV2
ZWw7Ci0JfQorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdV9kcG1fY3R4LT5k
cG1fbGV2ZWwgIT0gQU1EX0RQTV9GT1JDRURfTEVWRUxfTUFOVUFMKSB7Ci0JCWluZGV4ID0gZmxz
KHNtdS0+d29ya2xvYWRfbWFzayk7Ci0JCWluZGV4ID0gaW5kZXggPiAwICYmIGluZGV4IDw9IFdP
UktMT0FEX1BPTElDWV9NQVggPyBpbmRleCAtIDEgOiAwOwotCQl3b3JrbG9hZCA9IHNtdS0+d29y
a2xvYWRfc2V0dGluZ1tpbmRleF07CisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5zZXRfZmFuX3NwZWVk
X3JwbSkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPnNldF9mYW5fc3BlZWRfcnBtKHNtdSwgc3Bl
ZWQpOwogCi0JCWlmIChzbXUtPnBvd2VyX3Byb2ZpbGVfbW9kZSAhPSB3b3JrbG9hZCkKLQkJCXNt
dV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2FkLCAwLCBmYWxzZSk7Ci0JfQor
CW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKIAlyZXR1cm4gcmV0OwogfQogCi1pbnQgc211
X2hhbmRsZV90YXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkgICAgZW51bSBhbWRfZHBt
X2ZvcmNlZF9sZXZlbCBsZXZlbCwKLQkJICAgIGVudW0gYW1kX3BwX3Rhc2sgdGFza19pZCwKLQkJ
ICAgIGJvb2wgbG9ja19uZWVkZWQpCitpbnQgc211X2dldF9wb3dlcl9saW1pdChzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwKKwkJCXVpbnQzMl90ICpsaW1pdCwKKwkJCWJvb2wgZGVmKQogewogCWlu
dCByZXQgPSAwOwogCi0JaWYgKGxvY2tfbmVlZGVkKQotCQltdXRleF9sb2NrKCZzbXUtPm11dGV4
KTsKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKwlyZXQgPSBzbXVfY21uX2dldF9wb3dlcl9s
aW1pdChzbXUsIGxpbWl0LCBkZWYpOworCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKLQlz
d2l0Y2ggKHRhc2tfaWQpIHsKLQljYXNlIEFNRF9QUF9UQVNLX0RJU1BMQVlfQ09ORklHX0NIQU5H
RToKLQkJcmV0ID0gc211X3ByZV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2VkKHNtdSk7Ci0JCWlmIChy
ZXQpCi0JCQlnb3RvIG91dDsKLQkJcmV0ID0gc211X3NldF9jcHVfcG93ZXJfc3RhdGUoc211KTsK
LQkJaWYgKHJldCkKLQkJCWdvdG8gb3V0OwotCQlyZXQgPSBzbXVfYWRqdXN0X3Bvd2VyX3N0YXRl
X2R5bmFtaWMoc211LCBsZXZlbCwgZmFsc2UpOwotCQlicmVhazsKLQljYXNlIEFNRF9QUF9UQVNL
X0NPTVBMRVRFX0lOSVQ6Ci0JY2FzZSBBTURfUFBfVEFTS19SRUFESlVTVF9QT1dFUl9TVEFURToK
LQkJcmV0ID0gc211X2FkanVzdF9wb3dlcl9zdGF0ZV9keW5hbWljKHNtdSwgbGV2ZWwsIHRydWUp
OwotCQlicmVhazsKLQlkZWZhdWx0OgotCQlicmVhazsKLQl9CisJcmV0dXJuIHJldDsKK30KIAot
b3V0OgotCWlmIChsb2NrX25lZWRlZCkKLQkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKK2lu
dCBzbXVfc2V0X3Bvd2VyX2xpbWl0KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBs
aW1pdCkKK3sKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCisJ
aWYgKHNtdS0+cHB0X2Z1bmNzLT5zZXRfcG93ZXJfbGltaXQpCisJCXJldCA9IHNtdS0+cHB0X2Z1
bmNzLT5zZXRfcG93ZXJfbGltaXQoc211LCBsaW1pdCk7CisKKwltdXRleF91bmxvY2soJnNtdS0+
bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9zd2l0Y2hfcG93ZXJfcHJvZmls
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJCSAgICAgZW51bSBQUF9TTUNfUE9XRVJfUFJP
RklMRSB0eXBlLAotCQkJICAgICBib29sIGVuKQoraW50IHNtdV9wcmludF9jbGtfbGV2ZWxzKHN0
cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwgY2hhciAq
YnVmKQogewotCXN0cnVjdCBzbXVfZHBtX2NvbnRleHQgKnNtdV9kcG1fY3R4ID0gJihzbXUtPnNt
dV9kcG0pOwotCWxvbmcgd29ya2xvYWQ7Ci0JdWludDMyX3QgaW5kZXg7CisJaW50IHJldCA9IDA7
CiAKLQlpZiAoIXNtdS0+cG1fZW5hYmxlZCkKLQkJcmV0dXJuIC1FSU5WQUw7CisJbXV0ZXhfbG9j
aygmc211LT5tdXRleCk7CiAKLQlpZiAoISh0eXBlIDwgUFBfU01DX1BPV0VSX1BST0ZJTEVfQ1VT
VE9NKSkKLQkJcmV0dXJuIC1FSU5WQUw7CisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5wcmludF9jbGtf
bGV2ZWxzKQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+cHJpbnRfY2xrX2xldmVscyhzbXUsIGNs
a190eXBlLCBidWYpOworCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiBy
ZXQ7Cit9CisKK2ludCBzbXVfZ2V0X29kX3BlcmNlbnRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIGVudW0gc211X2Nsa190eXBlIHR5cGUpCit7CisJaW50IHJldCA9IDA7CiAKIAltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsKIAotCWlmICghZW4pIHsKLQkJc211LT53b3JrbG9hZF9tYXNrICY9
IH4oMSA8PCBzbXUtPndvcmtsb2FkX3Byb3JpdHlbdHlwZV0pOwotCQlpbmRleCA9IGZscyhzbXUt
Pndvcmtsb2FkX21hc2spOwotCQlpbmRleCA9IGluZGV4ID4gMCAmJiBpbmRleCA8PSBXT1JLTE9B
RF9QT0xJQ1lfTUFYID8gaW5kZXggLSAxIDogMDsKLQkJd29ya2xvYWQgPSBzbXUtPndvcmtsb2Fk
X3NldHRpbmdbaW5kZXhdOwotCX0gZWxzZSB7Ci0JCXNtdS0+d29ya2xvYWRfbWFzayB8PSAoMSA8
PCBzbXUtPndvcmtsb2FkX3Byb3JpdHlbdHlwZV0pOwotCQlpbmRleCA9IGZscyhzbXUtPndvcmts
b2FkX21hc2spOwotCQlpbmRleCA9IGluZGV4IDw9IFdPUktMT0FEX1BPTElDWV9NQVggPyBpbmRl
eCAtIDEgOiAwOwotCQl3b3JrbG9hZCA9IHNtdS0+d29ya2xvYWRfc2V0dGluZ1tpbmRleF07Ci0J
fQorCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X29kX3BlcmNlbnRhZ2UpCisJCXJldCA9IHNtdS0+
cHB0X2Z1bmNzLT5nZXRfb2RfcGVyY2VudGFnZShzbXUsIHR5cGUpOwogCi0JaWYgKHNtdV9kcG1f
Y3R4LT5kcG1fbGV2ZWwgIT0gQU1EX0RQTV9GT1JDRURfTEVWRUxfTUFOVUFMKQotCQlzbXVfc2V0
X3Bvd2VyX3Byb2ZpbGVfbW9kZShzbXUsICZ3b3JrbG9hZCwgMCwgZmFsc2UpOworCW11dGV4X3Vu
bG9jaygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X3NldF9vZF9w
ZXJjZW50YWdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSB0eXBl
LCB1aW50MzJfdCB2YWx1ZSkKK3sKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+
bXV0ZXgpOworCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5zZXRfb2RfcGVyY2VudGFnZSkKKwkJcmV0
ID0gc211LT5wcHRfZnVuY3MtPnNldF9vZF9wZXJjZW50YWdlKHNtdSwgdHlwZSwgdmFsdWUpOwog
CiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAotCXJldHVybiAwOworCXJldHVybiByZXQ7
CiB9CiAKLWVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgc211X2dldF9wZXJmb3JtYW5jZV9sZXZl
bChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK2ludCBzbXVfb2RfZWRpdF9kcG1fdGFibGUoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkgIGVudW0gUFBfT0RfRFBNX1RBQkxFX0NPTU1BTkQg
dHlwZSwKKwkJCSAgbG9uZyAqaW5wdXQsIHVpbnQzMl90IHNpemUpCiB7Ci0Jc3RydWN0IHNtdV9k
cG1fY29udGV4dCAqc211X2RwbV9jdHggPSAmKHNtdS0+c211X2RwbSk7Ci0JZW51bSBhbWRfZHBt
X2ZvcmNlZF9sZXZlbCBsZXZlbDsKKwlpbnQgcmV0ID0gMDsKKworCW11dGV4X2xvY2soJnNtdS0+
bXV0ZXgpOworCisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5vZF9lZGl0X2RwbV90YWJsZSkKKwkJcmV0
ID0gc211LT5wcHRfZnVuY3MtPm9kX2VkaXRfZHBtX3RhYmxlKHNtdSwgdHlwZSwgaW5wdXQsIHNp
emUpOworCisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKworCXJldHVybiByZXQ7Cit9CisK
K2ludCBzbXVfcmVhZF9zZW5zb3Ioc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCSAgICBlbnVt
IGFtZF9wcF9zZW5zb3JzIHNlbnNvciwKKwkJICAgIHZvaWQgKmRhdGEsIHVpbnQzMl90ICpzaXpl
KQoreworCWludCByZXQgPSAwOwogCi0JaWYgKCFzbXUtPmlzX2FwdSAmJiAhc211X2RwbV9jdHgt
PmRwbV9jb250ZXh0KQotCQlyZXR1cm4gLUVJTlZBTDsKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4
KTsKIAotCW11dGV4X2xvY2soJihzbXUtPm11dGV4KSk7Ci0JbGV2ZWwgPSBzbXVfZHBtX2N0eC0+
ZHBtX2xldmVsOwotCW11dGV4X3VubG9jaygmKHNtdS0+bXV0ZXgpKTsKKwlpZiAoc211LT5wcHRf
ZnVuY3MtPnJlYWRfc2Vuc29yKQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+cmVhZF9zZW5zb3Io
c211LCBzZW5zb3IsIGRhdGEsIHNpemUpOwogCi0JcmV0dXJuIGxldmVsOworCW11dGV4X3VubG9j
aygmc211LT5tdXRleCk7CisKKwlyZXR1cm4gcmV0OwogfQogCi1pbnQgc211X2ZvcmNlX3BlcmZv
cm1hbmNlX2xldmVsKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIGFtZF9kcG1fZm9yY2Vk
X2xldmVsIGxldmVsKQoraW50IHNtdV9nZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCBjaGFyICpidWYpCiB7Ci0Jc3RydWN0IHNtdV9kcG1fY29udGV4dCAqc211
X2RwbV9jdHggPSAmKHNtdS0+c211X2RwbSk7CiAJaW50IHJldCA9IDA7CiAKLQlpZiAoIXNtdS0+
aXNfYXB1ICYmICFzbXVfZHBtX2N0eC0+ZHBtX2NvbnRleHQpCi0JCXJldHVybiAtRUlOVkFMOwot
CiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlyZXQgPSBzbXVfZW5hYmxlX3VtZF9wc3Rh
dGUoc211LCAmbGV2ZWwpOwotCWlmIChyZXQpIHsKLQkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4
KTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlyZXQgPSBzbXVfaGFuZGxlX3Rhc2soc211LCBsZXZl
bCwKLQkJCSAgICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VSX1NUQVRFLAotCQkJICAgICAg
ZmFsc2UpOworCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSkKKwkJ
cmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9wb3dlcl9wcm9maWxlX21vZGUoc211LCBidWYpOwog
CiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiByZXQ7CiB9CiAKLWludCBz
bXVfc2V0X2Rpc3BsYXlfY291bnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGNv
dW50KQoraW50IHNtdV9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LAorCQkJICAgICAgIGxvbmcgKnBhcmFtLAorCQkJICAgICAgIHVpbnQzMl90IHBhcmFtX3Np
emUpCiB7CiAJaW50IHJldCA9IDA7CiAKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKLQlyZXQg
PSBzbXVfaW5pdF9kaXNwbGF5X2NvdW50KHNtdSwgY291bnQpOworCXJldCA9IHNtdV9jbW5fc2V0
X3Bvd2VyX3Byb2ZpbGVfbW9kZShzbXUsIHBhcmFtLCBwYXJhbV9zaXplKTsKIAltdXRleF91bmxv
Y2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9mb3JjZV9jbGtf
bGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkJIGVudW0gc211X2Nsa190eXBlIGNs
a190eXBlLAotCQkJIHVpbnQzMl90IG1hc2ssCi0JCQkgYm9vbCBsb2NrX25lZWRlZCkKK2ludCBz
bXVfZ2V0X2Zhbl9jb250cm9sX21vZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiB7Ci0Jc3Ry
dWN0IHNtdV9kcG1fY29udGV4dCAqc211X2RwbV9jdHggPSAmKHNtdS0+c211X2RwbSk7CiAJaW50
IHJldCA9IDA7CiAKLQlpZiAoc211X2RwbV9jdHgtPmRwbV9sZXZlbCAhPSBBTURfRFBNX0ZPUkNF
RF9MRVZFTF9NQU5VQUwpIHsKLQkJcHJfZGVidWcoImZvcmNlIGNsb2NrIGxldmVsIGlzIGZvciBk
cG0gbWFudWFsIG1vZGUgb25seS5cbiIpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQlpZiAo
bG9ja19uZWVkZWQpCi0JCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCW11dGV4X2xvY2soJnNt
dS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzICYmIHNtdS0+cHB0X2Z1bmNzLT5mb3Jj
ZV9jbGtfbGV2ZWxzKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Zm9yY2VfY2xrX2xldmVscyhz
bXUsIGNsa190eXBlLCBtYXNrKTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9mYW5fY29udHJv
bF9tb2RlKQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X2Zhbl9jb250cm9sX21vZGUoc211
KTsKIAotCWlmIChsb2NrX25lZWRlZCkKLQkJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKwlt
dXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9z
ZXRfbXAxX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkgICAgICBlbnVtIHBwX21w
MV9zdGF0ZSBtcDFfc3RhdGUpCitpbnQgc211X3NldF9mYW5fY29udHJvbF9tb2RlKHN0cnVjdCBz
bXVfY29udGV4dCAqc211LCBpbnQgdmFsdWUpCiB7Ci0JdWludDE2X3QgbXNnOwotCWludCByZXQ7
Ci0KLQkvKgotCSAqIFRoZSBTTUMgaXMgbm90IGZ1bGx5IHJlYWR5LiBUaGF0IG1heSBiZQotCSAq
IGV4cGVjdGVkIGFzIHRoZSBJUCBtYXkgYmUgbWFza2VkLgotCSAqIFNvLCBqdXN0IHJldHVybiB3
aXRob3V0IGVycm9yLgotCSAqLwotCWlmICghc211LT5wbV9lbmFibGVkKQotCQlyZXR1cm4gMDsK
KwlpbnQgcmV0ID0gMDsKIAogCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0Jc3dpdGNoICht
cDFfc3RhdGUpIHsKLQljYXNlIFBQX01QMV9TVEFURV9TSFVURE9XTjoKLQkJbXNnID0gU01VX01T
R19QcmVwYXJlTXAxRm9yU2h1dGRvd247Ci0JCWJyZWFrOwotCWNhc2UgUFBfTVAxX1NUQVRFX1VO
TE9BRDoKLQkJbXNnID0gU01VX01TR19QcmVwYXJlTXAxRm9yVW5sb2FkOwotCQlicmVhazsKLQlj
YXNlIFBQX01QMV9TVEFURV9SRVNFVDoKLQkJbXNnID0gU01VX01TR19QcmVwYXJlTXAxRm9yUmVz
ZXQ7Ci0JCWJyZWFrOwotCWNhc2UgUFBfTVAxX1NUQVRFX05PTkU6Ci0JZGVmYXVsdDoKLQkJbXV0
ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKLQkJcmV0dXJuIDA7Ci0JfQotCi0JLyogc29tZSBhc2lj
cyBtYXkgbm90IHN1cHBvcnQgdGhvc2UgbWVzc2FnZXMgKi8KLQlpZiAoc211X21zZ19nZXRfaW5k
ZXgoc211LCBtc2cpIDwgMCkgewotCQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwotCQlyZXR1
cm4gMDsKLQl9Ci0KLQlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnKHNtdSwgbXNnKTsKLQlpZiAocmV0
KQotCQlwcl9lcnIoIltQcmVwYXJlTXAxXSBGYWlsZWQhXG4iKTsKKwlpZiAoc211LT5wcHRfZnVu
Y3MtPnNldF9mYW5fY29udHJvbF9tb2RlKQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+c2V0X2Zh
bl9jb250cm9sX21vZGUoc211LCB2YWx1ZSk7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgp
OwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9zZXRfZGZfY3N0YXRlKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LAotCQkgICAgICBlbnVtIHBwX2RmX2NzdGF0ZSBzdGF0ZSkKK2ludCBzbXVf
Z2V0X2Zhbl9zcGVlZF9wZXJjZW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCAq
c3BlZWQpCiB7CiAJaW50IHJldCA9IDA7CiAKLQkvKgotCSAqIFRoZSBTTUMgaXMgbm90IGZ1bGx5
IHJlYWR5LiBUaGF0IG1heSBiZQotCSAqIGV4cGVjdGVkIGFzIHRoZSBJUCBtYXkgYmUgbWFza2Vk
LgotCSAqIFNvLCBqdXN0IHJldHVybiB3aXRob3V0IGVycm9yLgotCSAqLwotCWlmICghc211LT5w
bV9lbmFibGVkKQotCQlyZXR1cm4gMDsKLQotCWlmICghc211LT5wcHRfZnVuY3MgfHwgIXNtdS0+
cHB0X2Z1bmNzLT5zZXRfZGZfY3N0YXRlKQotCQlyZXR1cm4gMDsKLQogCW11dGV4X2xvY2soJnNt
dS0+bXV0ZXgpOwogCi0JcmV0ID0gc211LT5wcHRfZnVuY3MtPnNldF9kZl9jc3RhdGUoc211LCBz
dGF0ZSk7Ci0JaWYgKHJldCkKLQkJcHJfZXJyKCJbU2V0RGZDc3RhdGVdIGZhaWxlZCFcbiIpOwor
CWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9wZXJjZW50KQorCQlyZXQgPSBzbXUt
PnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9wZXJjZW50KHNtdSwgc3BlZWQpOwogCiAJbXV0ZXhf
dW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiByZXQ7CiB9CiAKLWludCBzbXVfd3JpdGVf
d2F0ZXJtYXJrc190YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK2ludCBzbXVfc2V0X2Zh
bl9zcGVlZF9wZXJjZW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBzcGVlZCkK
IHsKIAlpbnQgcmV0ID0gMDsKLQlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQgKnNtdV90YWJsZSA9
ICZzbXUtPnNtdV90YWJsZTsKLQlzdHJ1Y3Qgc211X3RhYmxlICp0YWJsZSA9IE5VTEw7CiAKLQl0
YWJsZSA9ICZzbXVfdGFibGUtPnRhYmxlc1tTTVVfVEFCTEVfV0FURVJNQVJLU107CisJbXV0ZXhf
bG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoIXRhYmxlLT5jcHVfYWRkcikKLQkJcmV0dXJuIC1F
SU5WQUw7CisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5zZXRfZmFuX3NwZWVkX3BlcmNlbnQpCisJCXJl
dCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRfZmFuX3NwZWVkX3BlcmNlbnQoc211LCBzcGVlZCk7CiAK
LQlyZXQgPSBzbXVfdXBkYXRlX3RhYmxlKHNtdSwgU01VX1RBQkxFX1dBVEVSTUFSS1MsIDAsIHRh
YmxlLT5jcHVfYWRkciwKLQkJCQl0cnVlKTsKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwog
CiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9zZXRfd2F0ZXJtYXJrc19mb3JfY2xvY2tfcmFu
Z2VzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQlzdHJ1Y3QgZG1fcHBfd21fc2V0c193aXRo
X2Nsb2NrX3Jhbmdlc19zb2MxNSAqY2xvY2tfcmFuZ2VzKQoraW50IHNtdV9nZXRfZmFuX3NwZWVk
X3JwbShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgKnNwZWVkKQogewogCWludCBy
ZXQgPSAwOwotCXN0cnVjdCBzbXVfdGFibGUgKndhdGVybWFya3MgPSAmc211LT5zbXVfdGFibGUu
dGFibGVzW1NNVV9UQUJMRV9XQVRFUk1BUktTXTsKLQl2b2lkICp0YWJsZSA9IHdhdGVybWFya3Mt
PmNwdV9hZGRyOwogCiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoIXNtdS0+ZGlz
YWJsZV93YXRlcm1hcmsgJiYKLQkJCXNtdV9mZWF0dXJlX2lzX2VuYWJsZWQoc211LCBTTVVfRkVB
VFVSRV9EUE1fRENFRkNMS19CSVQpICYmCi0JCQlzbXVfZmVhdHVyZV9pc19lbmFibGVkKHNtdSwg
U01VX0ZFQVRVUkVfRFBNX1NPQ0NMS19CSVQpKSB7Ci0JCXNtdV9zZXRfd2F0ZXJtYXJrc190YWJs
ZShzbXUsIHRhYmxlLCBjbG9ja19yYW5nZXMpOwotCQlzbXUtPndhdGVybWFya3NfYml0bWFwIHw9
IFdBVEVSTUFSS1NfRVhJU1Q7Ci0JCXNtdS0+d2F0ZXJtYXJrc19iaXRtYXAgJj0gfldBVEVSTUFS
S1NfTE9BREVEOwotCX0KKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcnBtKQor
CQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9ycG0oc211LCBzcGVlZCk7CiAK
IAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotY29uc3Qg
c3RydWN0IGFtZF9pcF9mdW5jcyBzbXVfaXBfZnVuY3MgPSB7Ci0JLm5hbWUgPSAic211IiwKLQku
ZWFybHlfaW5pdCA9IHNtdV9lYXJseV9pbml0LAotCS5sYXRlX2luaXQgPSBzbXVfbGF0ZV9pbml0
LAotCS5zd19pbml0ID0gc211X3N3X2luaXQsCi0JLnN3X2ZpbmkgPSBzbXVfc3dfZmluaSwKLQku
aHdfaW5pdCA9IHNtdV9od19pbml0LAotCS5od19maW5pID0gc211X2h3X2ZpbmksCi0JLnN1c3Bl
bmQgPSBzbXVfc3VzcGVuZCwKLQkucmVzdW1lID0gc211X3Jlc3VtZSwKLQkuaXNfaWRsZSA9IE5V
TEwsCi0JLmNoZWNrX3NvZnRfcmVzZXQgPSBOVUxMLAotCS53YWl0X2Zvcl9pZGxlID0gTlVMTCwK
LQkuc29mdF9yZXNldCA9IE5VTEwsCi0JLnNldF9jbG9ja2dhdGluZ19zdGF0ZSA9IHNtdV9zZXRf
Y2xvY2tnYXRpbmdfc3RhdGUsCi0JLnNldF9wb3dlcmdhdGluZ19zdGF0ZSA9IHNtdV9zZXRfcG93
ZXJnYXRpbmdfc3RhdGUsCi0JLmVuYWJsZV91bWRfcHN0YXRlID0gc211X2VuYWJsZV91bWRfcHN0
YXRlLAotfTsKLQotY29uc3Qgc3RydWN0IGFtZGdwdV9pcF9ibG9ja192ZXJzaW9uIHNtdV92MTFf
MF9pcF9ibG9jayA9CitpbnQgc211X3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIGludCBjbGspCiB7Ci0JLnR5cGUgPSBBTURfSVBfQkxPQ0tfVFlQRV9TTUMs
Ci0JLm1ham9yID0gMTEsCi0JLm1pbm9yID0gMCwKLQkucmV2ID0gMCwKLQkuZnVuY3MgPSAmc211
X2lwX2Z1bmNzLAotfTsKKwlpbnQgcmV0ID0gMDsKIAotY29uc3Qgc3RydWN0IGFtZGdwdV9pcF9i
bG9ja192ZXJzaW9uIHNtdV92MTJfMF9pcF9ibG9jayA9Ci17Ci0JLnR5cGUgPSBBTURfSVBfQkxP
Q0tfVFlQRV9TTUMsCi0JLm1ham9yID0gMTIsCi0JLm1pbm9yID0gMCwKLQkucmV2ID0gMCwKLQku
ZnVuY3MgPSAmc211X2lwX2Z1bmNzLAotfTsKKwltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKwly
ZXQgPSBzbXVfc2V0X21pbl9kY2VmX2RlZXBfc2xlZXAoc211LCBjbGspOworCW11dGV4X3VubG9j
aygmc211LT5tdXRleCk7CiAKLWludCBzbXVfbG9hZF9taWNyb2NvZGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUpCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9zZXRfYWN0aXZlX2Rpc3BsYXlf
Y291bnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGNvdW50KQogewogCWludCBy
ZXQgPSAwOwogCiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVu
Y3MtPmxvYWRfbWljcm9jb2RlKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+bG9hZF9taWNyb2Nv
ZGUoc211KTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPnNldF9hY3RpdmVfZGlzcGxheV9jb3VudCkK
KwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPnNldF9hY3RpdmVfZGlzcGxheV9jb3VudChzbXUsIGNv
dW50KTsKIAogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKIAlyZXR1cm4gcmV0OwogfQog
Ci1pbnQgc211X2NoZWNrX2Z3X3N0YXR1cyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK2ludCBz
bXVfZ2V0X2Nsb2NrX2J5X3R5cGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkgIGVudW0g
YW1kX3BwX2Nsb2NrX3R5cGUgdHlwZSwKKwkJCSAgc3RydWN0IGFtZF9wcF9jbG9ja3MgKmNsb2Nr
cykKIHsKIAlpbnQgcmV0ID0gMDsKIAogCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYg
KHNtdS0+cHB0X2Z1bmNzLT5jaGVja19md19zdGF0dXMpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNz
LT5jaGVja19md19zdGF0dXMoc211KTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9jbG9ja19i
eV90eXBlKQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X2Nsb2NrX2J5X3R5cGUoc211LCB0
eXBlLCBjbG9ja3MpOwogCiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiBy
ZXQ7CiB9CiAKLWludCBzbXVfc2V0X2dmeF9jZ3BnKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBi
b29sIGVuYWJsZWQpCitpbnQgc211X2dldF9tYXhfaGlnaF9jbG9ja3Moc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsCisJCQkgICAgc3RydWN0IGFtZF9wcF9zaW1wbGVfY2xvY2tfaW5mbyAqY2xvY2tz
KQogewogCWludCByZXQgPSAwOwogCiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAo
c211LT5wcHRfZnVuY3MtPnNldF9nZnhfY2dwZykKLQkJcmV0ID0gc211LT5wcHRfZnVuY3MtPnNl
dF9nZnhfY2dwZyhzbXUsIGVuYWJsZWQpOworCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X21heF9o
aWdoX2Nsb2NrcykKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9tYXhfaGlnaF9jbG9ja3Mo
c211LCBjbG9ja3MpOwogCiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiBy
ZXQ7CiB9CiAKLWludCBzbXVfc2V0X2Zhbl9zcGVlZF9ycG0oc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIHVpbnQzMl90IHNwZWVkKQoraW50IHNtdV9nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVu
Y3koc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJICAgICAgIGVudW0gc211X2Nsa190eXBl
IGNsa190eXBlLAorCQkJCSAgICAgICBzdHJ1Y3QgcHBfY2xvY2tfbGV2ZWxzX3dpdGhfbGF0ZW5j
eSAqY2xvY2tzKQogewogCWludCByZXQgPSAwOwogCiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7
CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPnNldF9mYW5fc3BlZWRfcnBtKQotCQlyZXQgPSBzbXUt
PnBwdF9mdW5jcy0+c2V0X2Zhbl9zcGVlZF9ycG0oc211LCBzcGVlZCk7CisJaWYgKHNtdS0+cHB0
X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVuY3kpCisJCXJldCA9IHNtdS0+cHB0
X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVuY3koc211LCBjbGtfdHlwZSwgY2xv
Y2tzKTsKIAogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKIAlyZXR1cm4gcmV0OwogfQog
Ci1pbnQgc211X2dldF9wb3dlcl9saW1pdChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJCXVp
bnQzMl90ICpsaW1pdCwKLQkJCWJvb2wgZGVmLAotCQkJYm9vbCBsb2NrX25lZWRlZCkKK2ludCBz
bXVfZ2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF92b2x0YWdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAorCQkJCSAgICAgICBlbnVtIGFtZF9wcF9jbG9ja190eXBlIHR5cGUsCisJCQkJICAgICAgIHN0
cnVjdCBwcF9jbG9ja19sZXZlbHNfd2l0aF92b2x0YWdlICpjbG9ja3MpCiB7CiAJaW50IHJldCA9
IDA7CiAKLQlpZiAobG9ja19uZWVkZWQpCi0JCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJf
bGltaXQpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfcG93ZXJfbGltaXQoc211LCBsaW1p
dCwgZGVmKTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9jbG9ja19ieV90eXBlX3dpdGhfdm9s
dGFnZSkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9jbG9ja19ieV90eXBlX3dpdGhfdm9s
dGFnZShzbXUsIHR5cGUsIGNsb2Nrcyk7CiAKLQlpZiAobG9ja19uZWVkZWQpCi0JCW11dGV4X3Vu
bG9jaygmc211LT5tdXRleCk7CisJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVy
biByZXQ7CiB9CiAKLWludCBzbXVfc2V0X3Bvd2VyX2xpbWl0KHN0cnVjdCBzbXVfY29udGV4dCAq
c211LCB1aW50MzJfdCBsaW1pdCkKKworaW50IHNtdV9kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVx
dWVzdChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCQkgICAgICBzdHJ1Y3QgcHBfZGlzcGxh
eV9jbG9ja19yZXF1ZXN0ICpjbG9ja19yZXEpCiB7CiAJaW50IHJldCA9IDA7CiAKIAltdXRleF9s
b2NrKCZzbXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X3Bvd2VyX2xpbWl0
KQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+c2V0X3Bvd2VyX2xpbWl0KHNtdSwgbGltaXQpOwor
CWlmIChzbXUtPnBwdF9mdW5jcy0+ZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3QpCisJCXJl
dCA9IHNtdS0+cHB0X2Z1bmNzLT5kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVxdWVzdChzbXUsIGNs
b2NrX3JlcSk7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsK
IH0KIAotaW50IHNtdV9wcmludF9jbGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBl
bnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwgY2hhciAqYnVmKQorCitpbnQgc211X2Rpc3BsYXlf
ZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNoKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29s
IGRpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCkKIHsKLQlpbnQgcmV0ID0gMDsKKwlpbnQgcmV0
ID0gLUVJTlZBTDsKIAogCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0
X2Z1bmNzLT5wcmludF9jbGtfbGV2ZWxzKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+cHJpbnRf
Y2xrX2xldmVscyhzbXUsIGNsa190eXBlLCBidWYpOworCWlmIChzbXUtPnBwdF9mdW5jcy0+ZGlz
cGxheV9kaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2gpCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNz
LT5kaXNwbGF5X2Rpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaChzbXUsIGRpc2FibGVfbWVtb3J5
X2Nsb2NrX3N3aXRjaCk7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJu
IHJldDsKIH0KIAotaW50IHNtdV9nZXRfb2RfcGVyY2VudGFnZShzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgdHlwZSkKK2ludCBzbXVfbm90aWZ5X3NtdV9lbmFibGVf
cHdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogewogCWludCByZXQgPSAwOwogCiAJbXV0ZXhf
bG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9vZF9wZXJjZW50
YWdlKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X29kX3BlcmNlbnRhZ2Uoc211LCB0eXBl
KTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPm5vdGlmeV9zbXVfZW5hYmxlX3B3ZSkKKwkJcmV0ID0g
c211LT5wcHRfZnVuY3MtPm5vdGlmeV9zbXVfZW5hYmxlX3B3ZShzbXUpOwogCiAJbXV0ZXhfdW5s
b2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiByZXQ7CiB9CiAKLWludCBzbXVfc2V0X29kX3Bl
cmNlbnRhZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIHR5cGUs
IHVpbnQzMl90IHZhbHVlKQoraW50IHNtdV9zZXRfeGdtaV9wc3RhdGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsCisJCQl1aW50MzJfdCBwc3RhdGUpCiB7CiAJaW50IHJldCA9IDA7CiAKIAltdXRl
eF9sb2NrKCZzbXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X29kX3BlcmNl
bnRhZ2UpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRfb2RfcGVyY2VudGFnZShzbXUsIHR5
cGUsIHZhbHVlKTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPnNldF94Z21pX3BzdGF0ZSkKKwkJcmV0
ID0gc211LT5wcHRfZnVuY3MtPnNldF94Z21pX3BzdGF0ZShzbXUsIHBzdGF0ZSk7CiAKIAltdXRl
eF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9vZF9l
ZGl0X2RwbV90YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJCSAgZW51bSBQUF9PRF9E
UE1fVEFCTEVfQ09NTUFORCB0eXBlLAotCQkJICBsb25nICppbnB1dCwgdWludDMyX3Qgc2l6ZSkK
K2ludCBzbXVfc2V0X2F6YWxpYV9kM19wbWUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiB7CiAJ
aW50IHJldCA9IDA7CiAKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBw
dF9mdW5jcy0+b2RfZWRpdF9kcG1fdGFibGUpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5vZF9l
ZGl0X2RwbV90YWJsZShzbXUsIHR5cGUsIGlucHV0LCBzaXplKTsKKwlpZiAoc211LT5wcHRfZnVu
Y3MtPnNldF9hemFsaWFfZDNfcG1lKQorCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+c2V0X2F6YWxp
YV9kM19wbWUoc211KTsKIAogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKIAlyZXR1cm4g
cmV0OwogfQogCi1pbnQgc211X3JlYWRfc2Vuc29yKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAot
CQkgICAgZW51bSBhbWRfcHBfc2Vuc29ycyBzZW5zb3IsCi0JCSAgICB2b2lkICpkYXRhLCB1aW50
MzJfdCAqc2l6ZSkKK2Jvb2wgc211X2JhY29faXNfc3VwcG9ydChzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSkKIHsKLQlpbnQgcmV0ID0gMDsKKwlib29sIHJldCA9IGZhbHNlOwogCiAJbXV0ZXhfbG9j
aygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPnJlYWRfc2Vuc29yKQotCQly
ZXQgPSBzbXUtPnBwdF9mdW5jcy0+cmVhZF9zZW5zb3Ioc211LCBzZW5zb3IsIGRhdGEsIHNpemUp
OworCWlmIChzbXUtPnBwdF9mdW5jcy0+YmFjb19pc19zdXBwb3J0KQorCQlyZXQgPSBzbXUtPnBw
dF9mdW5jcy0+YmFjb19pc19zdXBwb3J0KHNtdSk7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0
ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9nZXRfcG93ZXJfcHJvZmlsZV9tb2Rl
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBjaGFyICpidWYpCitpbnQgc211X2JhY29fcmVzZXQo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiB7CiAJaW50IHJldCA9IDA7CiAKIAltdXRleF9sb2Nr
KCZzbXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X3Bvd2VyX3Byb2ZpbGVf
bW9kZSkKLQkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9wb3dlcl9wcm9maWxlX21vZGUoc211
LCBidWYpOworCWlmIChzbXUtPnBwdF9mdW5jcy0+YmFjb19yZXNldCkKKwkJcmV0ID0gc211LT5w
cHRfZnVuY3MtPmJhY29fcmVzZXQoc211KTsKIAogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7
CiAKIAlyZXR1cm4gcmV0OwogfQogCi1pbnQgc211X3NldF9wb3dlcl9wcm9maWxlX21vZGUoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsCi0JCQkgICAgICAgbG9uZyAqcGFyYW0sCi0JCQkgICAgICAg
dWludDMyX3QgcGFyYW1fc2l6ZSwKLQkJCSAgICAgICBib29sIGxvY2tfbmVlZGVkKQoraW50IHNt
dV9tb2RlMl9yZXNldChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIHsKIAlpbnQgcmV0ID0gMDsK
IAotCWlmIChsb2NrX25lZWRlZCkKLQkJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CisJbXV0ZXhf
bG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPnNldF9wb3dlcl9wcm9m
aWxlX21vZGUpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRfcG93ZXJfcHJvZmlsZV9tb2Rl
KHNtdSwgcGFyYW0sIHBhcmFtX3NpemUpOworCWlmIChzbXUtPnBwdF9mdW5jcy0+bW9kZTJfcmVz
ZXQpCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5tb2RlMl9yZXNldChzbXUpOwogCi0JaWYgKGxv
Y2tfbmVlZGVkKQotCQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCW11dGV4X3VubG9jaygm
c211LT5tdXRleCk7CiAKIAlyZXR1cm4gcmV0OwogfQogCi0KLWludCBzbXVfZ2V0X2Zhbl9jb250
cm9sX21vZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCitpbnQgc211X2dldF9tYXhfc3VzdGFp
bmFibGVfY2xvY2tzX2J5X2RjKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJCQkgc3RydWN0
IHBwX3NtdV9udl9jbG9ja190YWJsZSAqbWF4X2Nsb2NrcykKIHsKIAlpbnQgcmV0ID0gMDsKIAog
CW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfZmFu
X2NvbnRyb2xfbW9kZSkKLQkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9mYW5fY29udHJvbF9t
b2RlKHNtdSk7CisJaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nr
c19ieV9kYykKKwkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9tYXhfc3VzdGFpbmFibGVfY2xv
Y2tzX2J5X2RjKHNtdSwgbWF4X2Nsb2Nrcyk7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgp
OwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9zZXRfZmFuX2NvbnRyb2xfbW9kZShzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwgaW50IHZhbHVlKQoraW50IHNtdV9nZXRfdWNsa19kcG1fc3Rh
dGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJICAgIHVuc2lnbmVkIGludCAqY2xvY2tf
dmFsdWVzX2luX2toeiwKKwkJCSAgICB1bnNpZ25lZCBpbnQgKm51bV9zdGF0ZXMpCiB7CiAJaW50
IHJldCA9IDA7CiAKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9m
dW5jcy0+c2V0X2Zhbl9jb250cm9sX21vZGUpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRf
ZmFuX2NvbnRyb2xfbW9kZShzbXUsIHZhbHVlKTsKKwlpZiAoc211LT5wcHRfZnVuY3MtPmdldF91
Y2xrX2RwbV9zdGF0ZXMpCisJCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfdWNsa19kcG1fc3Rh
dGVzKHNtdSwgY2xvY2tfdmFsdWVzX2luX2toeiwgbnVtX3N0YXRlcyk7CiAKIAltdXRleF91bmxv
Y2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9nZXRfZmFuX3Nw
ZWVkX3BlcmNlbnQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90ICpzcGVlZCkKK2Vu
dW0gYW1kX3BtX3N0YXRlX3R5cGUgc211X2dldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHN0cnVjdCBz
bXVfY29udGV4dCAqc211KQogewotCWludCByZXQgPSAwOworCWVudW0gYW1kX3BtX3N0YXRlX3R5
cGUgcG1fc3RhdGUgPSBQT1dFUl9TVEFURV9UWVBFX0RFRkFVTFQ7CiAKIAltdXRleF9sb2NrKCZz
bXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9wZXJjZW50
KQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X2Zhbl9zcGVlZF9wZXJjZW50KHNtdSwgc3Bl
ZWQpOworCWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUpCisJCXBt
X3N0YXRlID0gc211LT5wcHRfZnVuY3MtPmdldF9jdXJyZW50X3Bvd2VyX3N0YXRlKHNtdSk7CiAK
IAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCi0JcmV0dXJuIHJldDsKKwlyZXR1cm4gcG1f
c3RhdGU7CiB9CiAKLWludCBzbXVfc2V0X2Zhbl9zcGVlZF9wZXJjZW50KHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCB1aW50MzJfdCBzcGVlZCkKK2ludCBzbXVfZ2V0X2RwbV9jbG9ja190YWJsZShz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCSAgICBzdHJ1Y3QgZHBtX2Nsb2NrcyAqY2xvY2tf
dGFibGUpCiB7CiAJaW50IHJldCA9IDA7CiAKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAot
CWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X2Zhbl9zcGVlZF9wZXJjZW50KQotCQlyZXQgPSBzbXUt
PnBwdF9mdW5jcy0+c2V0X2Zhbl9zcGVlZF9wZXJjZW50KHNtdSwgc3BlZWQpOworCWlmIChzbXUt
PnBwdF9mdW5jcy0+Z2V0X2RwbV9jbG9ja190YWJsZSkKKwkJcmV0ID0gc211LT5wcHRfZnVuY3Mt
PmdldF9kcG1fY2xvY2tfdGFibGUoc211LCBjbG9ja190YWJsZSk7CiAKIAltdXRleF91bmxvY2so
JnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV9nZXRfZmFuX3NwZWVk
X3JwbShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgKnNwZWVkKQorc2l6ZV90IHNt
dV9zeXNfZ2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgY2hhciAq
YnVmKQogewotCWludCByZXQgPSAwOworCXNpemVfdCBzaXplID0gMDsKKwlpbnQgcmV0ID0gMCwg
aSA9IDA7CisJdWludDMyX3QgZmVhdHVyZV9tYXNrWzJdID0geyAwIH07CisJaW50MzJfdCBmZWF0
dXJlX2luZGV4ID0gMDsKKwl1aW50MzJfdCBjb3VudCA9IDA7CisJdWludDMyX3Qgc29ydF9mZWF0
dXJlW1NNVV9GRUFUVVJFX0NPVU5UXTsKKwl1aW50NjRfdCBod19mZWF0dXJlX2NvdW50ID0gMDsK
IAogCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRf
ZmFuX3NwZWVkX3JwbSkKLQkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9mYW5fc3BlZWRfcnBt
KHNtdSwgc3BlZWQpOworCXJldCA9IHNtdV9mZWF0dXJlX2dldF9lbmFibGVkX21hc2soc211LCBm
ZWF0dXJlX21hc2ssIDIpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbGVkOworCisJc2l6ZSA9ICBz
cHJpbnRmKGJ1ZiArIHNpemUsICJmZWF0dXJlcyBoaWdoOiAweCUwOHggbG93OiAweCUwOHhcbiIs
CisJCQlmZWF0dXJlX21hc2tbMV0sIGZlYXR1cmVfbWFza1swXSk7CisKKwlmb3IgKGkgPSAwOyBp
IDwgU01VX0ZFQVRVUkVfQ09VTlQ7IGkrKykgeworCQlmZWF0dXJlX2luZGV4ID0gc211X2ZlYXR1
cmVfZ2V0X2luZGV4KHNtdSwgaSk7CisJCWlmIChmZWF0dXJlX2luZGV4IDwgMCkKKwkJCWNvbnRp
bnVlOworCQlzb3J0X2ZlYXR1cmVbZmVhdHVyZV9pbmRleF0gPSBpOworCQlod19mZWF0dXJlX2Nv
dW50Kys7CisJfQorCisJZm9yIChpID0gMDsgaSA8IGh3X2ZlYXR1cmVfY291bnQ7IGkrKykgewor
CQlzaXplICs9IHNwcmludGYoYnVmICsgc2l6ZSwgIiUwMmQuICUtMjBzICglMmQpIDogJXNcbiIs
CisJCQkgICAgICAgY291bnQrKywKKwkJCSAgICAgICBzbXVfZ2V0X2ZlYXR1cmVfbmFtZShzbXUs
IHNvcnRfZmVhdHVyZVtpXSksCisJCQkgICAgICAgaSwKKwkJCSAgICAgICAhIXNtdV9mZWF0dXJl
X2lzX2VuYWJsZWQoc211LCBzb3J0X2ZlYXR1cmVbaV0pID8KKwkJCSAgICAgICAiZW5hYmxlZCIg
OiAiZGlzYWJsZWQiKTsKKwl9CiAKK2ZhaWxlZDoKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgp
OwogCi0JcmV0dXJuIHJldDsKKwlyZXR1cm4gc2l6ZTsKIH0KIAotaW50IHNtdV9zZXRfZGVlcF9z
bGVlcF9kY2VmY2xrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBpbnQgY2xrKQoraW50IHNtdV9z
eXNfc2V0X3BwX2ZlYXR1cmVfbWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDY0X3Qg
bmV3X21hc2spCiB7CiAJaW50IHJldCA9IDA7CisJdWludDMyX3QgZmVhdHVyZV9tYXNrWzJdID0g
eyAwIH07CisJdWludDY0X3QgZmVhdHVyZV8yX2VuYWJsZWQgPSAwOworCXVpbnQ2NF90IGZlYXR1
cmVfMl9kaXNhYmxlZCA9IDA7CisJdWludDY0X3QgZmVhdHVyZV9lbmFibGVzID0gMDsKIAogCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5zZXRfZGVlcF9z
bGVlcF9kY2VmY2xrKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+c2V0X2RlZXBfc2xlZXBfZGNl
ZmNsayhzbXUsIGNsayk7CisJcmV0ID0gc211X2ZlYXR1cmVfZ2V0X2VuYWJsZWRfbWFzayhzbXUs
IGZlYXR1cmVfbWFzaywgMik7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlmZWF0dXJlX2Vu
YWJsZXMgPSAoKHVpbnQ2NF90KWZlYXR1cmVfbWFza1sxXSA8PCAzMiB8ICh1aW50NjRfdClmZWF0
dXJlX21hc2tbMF0pOworCisJZmVhdHVyZV8yX2VuYWJsZWQgID0gfmZlYXR1cmVfZW5hYmxlcyAm
IG5ld19tYXNrOworCWZlYXR1cmVfMl9kaXNhYmxlZCA9IGZlYXR1cmVfZW5hYmxlcyAmIH5uZXdf
bWFzazsKKworCWlmIChmZWF0dXJlXzJfZW5hYmxlZCkgeworCQlyZXQgPSBzbXVfZmVhdHVyZV91
cGRhdGVfZW5hYmxlX3N0YXRlKHNtdSwgZmVhdHVyZV8yX2VuYWJsZWQsIHRydWUpOworCQlpZiAo
cmV0KQorCQkJZ290byBvdXQ7CisJfQorCWlmIChmZWF0dXJlXzJfZGlzYWJsZWQpIHsKKwkJcmV0
ID0gc211X2ZlYXR1cmVfdXBkYXRlX2VuYWJsZV9zdGF0ZShzbXUsIGZlYXR1cmVfMl9kaXNhYmxl
ZCwgZmFsc2UpOworCQlpZiAocmV0KQorCQkJZ290byBvdXQ7CisJfQogCitvdXQ6CiAJbXV0ZXhf
dW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiByZXQ7CiB9CiAKLWludCBzbXVfc2V0X2Fj
dGl2ZV9kaXNwbGF5X2NvdW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBjb3Vu
dCkKK2ludCBzbXVfZHBtX3NldF9wb3dlcl9nYXRlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1
aW50MzJfdCBibG9ja190eXBlLAorCQkJICAgYm9vbCBnYXRlKQogewogCWludCByZXQgPSAwOwog
CiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPnNldF9h
Y3RpdmVfZGlzcGxheV9jb3VudCkKLQkJcmV0ID0gc211LT5wcHRfZnVuY3MtPnNldF9hY3RpdmVf
ZGlzcGxheV9jb3VudChzbXUsIGNvdW50KTsKKwlzd2l0Y2ggKGJsb2NrX3R5cGUpIHsKKwljYXNl
IEFNRF9JUF9CTE9DS19UWVBFX1VWRDoKKwkJcmV0ID0gc211X2RwbV9zZXRfdXZkX2VuYWJsZShz
bXUsIGdhdGUpOworCQlicmVhazsKKwljYXNlIEFNRF9JUF9CTE9DS19UWVBFX1ZDRToKKwkJcmV0
ID0gc211X2RwbV9zZXRfdmNlX2VuYWJsZShzbXUsIGdhdGUpOworCQlicmVhazsKKwljYXNlIEFN
RF9JUF9CTE9DS19UWVBFX0dGWDoKKwkJcmV0ID0gc211X2dmeF9vZmZfY29udHJvbChzbXUsIGdh
dGUpOworCQlicmVhazsKKwljYXNlIEFNRF9JUF9CTE9DS19UWVBFX1NETUE6CisJCXJldCA9IHNt
dV9wb3dlcmdhdGVfc2RtYShzbXUsIGdhdGUpOworCQlicmVhazsKKwlkZWZhdWx0OgorCQlicmVh
azsKKwl9CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0K
IAotaW50IHNtdV9nZXRfY2xvY2tfYnlfdHlwZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJ
CSAgZW51bSBhbWRfcHBfY2xvY2tfdHlwZSB0eXBlLAotCQkJICBzdHJ1Y3QgYW1kX3BwX2Nsb2Nr
cyAqY2xvY2tzKQoraW50IHNtdV9nZXRfcG93ZXJfbnVtX3N0YXRlcyhzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwKKwkJCSAgICAgc3RydWN0IHBwX3N0YXRlc19pbmZvICpzdGF0ZV9pbmZvKQogewot
CWludCByZXQgPSAwOworCWlmICghc3RhdGVfaW5mbykKKwkJcmV0dXJuIC1FSU5WQUw7CiAKLQlt
dXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKwkvKiBub3Qgc3VwcG9ydCBwb3dlciBzdGF0ZSAqLwor
CW1lbXNldChzdGF0ZV9pbmZvLCAwLCBzaXplb2Yoc3RydWN0IHBwX3N0YXRlc19pbmZvKSk7CisJ
c3RhdGVfaW5mby0+bnVtcyA9IDE7CisJc3RhdGVfaW5mby0+c3RhdGVzWzBdID0gUE9XRVJfU1RB
VEVfVFlQRV9ERUZBVUxUOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlw
ZSkKLQkJcmV0ID0gc211LT5wcHRfZnVuY3MtPmdldF9jbG9ja19ieV90eXBlKHNtdSwgdHlwZSwg
Y2xvY2tzKTsKKwlyZXR1cm4gMDsKK30KIAotCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7Citi
b29sIGlzX3N1cHBvcnRfc3dfc211KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KQoreworCWlm
IChhZGV2LT5hc2ljX3R5cGUgPT0gQ0hJUF9WRUdBMjApCisJCXJldHVybiAoYW1kZ3B1X2RwbSA9
PSAyKSA/IHRydWU6IGZhbHNlOworCWVsc2UgaWYgKGFkZXYtPmFzaWNfdHlwZSA+PSBDSElQX0FS
Q1RVUlVTKQorCQlyZXR1cm4gdHJ1ZTsKKwllbHNlCisJCXJldHVybiBmYWxzZTsKK30KIAotCXJl
dHVybiByZXQ7Citib29sIGlzX3N1cHBvcnRfc3dfc211X3hnbWkoc3RydWN0IGFtZGdwdV9kZXZp
Y2UgKmFkZXYpCit7CisJaWYgKGFtZGdwdV9kcG0gIT0gMSkKKwkJcmV0dXJuIGZhbHNlOworCisJ
aWYgKGFkZXYtPmFzaWNfdHlwZSA9PSBDSElQX1ZFR0EyMCkKKwkJcmV0dXJuIHRydWU7CisKKwly
ZXR1cm4gZmFsc2U7CiB9CiAKLWludCBzbXVfZ2V0X21heF9oaWdoX2Nsb2NrcyhzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwKLQkJCSAgICBzdHJ1Y3QgYW1kX3BwX3NpbXBsZV9jbG9ja19pbmZvICpj
bG9ja3MpCitpbnQgc211X3N5c19nZXRfcHBfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IHZvaWQgKip0YWJsZSkKIHsKLQlpbnQgcmV0ID0gMDsKKwlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRl
eHQgKnNtdV90YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsKKwl1aW50MzJfdCBwb3dlcnBsYXlfdGFi
bGVfc2l6ZTsKKworCWlmICghc211X3RhYmxlLT5wb3dlcl9wbGF5X3RhYmxlICYmICFzbXVfdGFi
bGUtPmhhcmRjb2RlX3BwdGFibGUpCisJCXJldHVybiAtRUlOVkFMOwogCiAJbXV0ZXhfbG9jaygm
c211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPmdldF9tYXhfaGlnaF9jbG9ja3Mp
Ci0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfbWF4X2hpZ2hfY2xvY2tzKHNtdSwgY2xvY2tz
KTsKKwlpZiAoc211X3RhYmxlLT5oYXJkY29kZV9wcHRhYmxlKQorCQkqdGFibGUgPSBzbXVfdGFi
bGUtPmhhcmRjb2RlX3BwdGFibGU7CisJZWxzZQorCQkqdGFibGUgPSBzbXVfdGFibGUtPnBvd2Vy
X3BsYXlfdGFibGU7CisKKwlwb3dlcnBsYXlfdGFibGVfc2l6ZSA9IHNtdV90YWJsZS0+cG93ZXJf
cGxheV90YWJsZV9zaXplOwogCiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAotCXJldHVy
biByZXQ7CisJcmV0dXJuIHBvd2VycGxheV90YWJsZV9zaXplOwogfQogCi1pbnQgc211X2dldF9j
bG9ja19ieV90eXBlX3dpdGhfbGF0ZW5jeShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJCQkg
ICAgICAgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsCi0JCQkJICAgICAgIHN0cnVjdCBwcF9j
bG9ja19sZXZlbHNfd2l0aF9sYXRlbmN5ICpjbG9ja3MpCitzdGF0aWMgaW50IHNtdV9yZXNldChz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIHsKKwlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9
IHNtdS0+YWRldjsKIAlpbnQgcmV0ID0gMDsKIAotCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwot
Ci0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVuY3kpCi0J
CXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX2xhdGVuY3koc211
LCBjbGtfdHlwZSwgY2xvY2tzKTsKKwlyZXQgPSBzbXVfaHdfZmluaShhZGV2KTsKKwlpZiAocmV0
KQorCQlyZXR1cm4gcmV0OwogCi0JbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKwlyZXQgPSBz
bXVfaHdfaW5pdChhZGV2KTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OwogCiAJcmV0dXJuIHJl
dDsKIH0KIAotaW50IHNtdV9nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Uoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsCi0JCQkJICAgICAgIGVudW0gYW1kX3BwX2Nsb2NrX3R5cGUgdHlwZSwK
LQkJCQkgICAgICAgc3RydWN0IHBwX2Nsb2NrX2xldmVsc193aXRoX3ZvbHRhZ2UgKmNsb2NrcykK
K2ludCBzbXVfc3lzX3NldF9wcF90YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgIHZvaWQg
KmJ1Ziwgc2l6ZV90IHNpemUpCiB7CisJc3RydWN0IHNtdV90YWJsZV9jb250ZXh0ICpzbXVfdGFi
bGUgPSAmc211LT5zbXVfdGFibGU7CisJQVRPTV9DT01NT05fVEFCTEVfSEVBREVSICpoZWFkZXIg
PSAoQVRPTV9DT01NT05fVEFCTEVfSEVBREVSICopYnVmOwogCWludCByZXQgPSAwOwogCisJaWYg
KCFzbXUtPnBtX2VuYWJsZWQpCisJCXJldHVybiAtRUlOVkFMOworCWlmIChoZWFkZXItPnVzU3Ry
dWN0dXJlU2l6ZSAhPSBzaXplKSB7CisJCXByX2VycigicHAgdGFibGUgc2l6ZSBub3QgbWF0Y2hl
ZCAhXG4iKTsKKwkJcmV0dXJuIC1FSU87CisJfQorCiAJbXV0ZXhfbG9jaygmc211LT5tdXRleCk7
CisJaWYgKCFzbXVfdGFibGUtPmhhcmRjb2RlX3BwdGFibGUpCisJCXNtdV90YWJsZS0+aGFyZGNv
ZGVfcHB0YWJsZSA9IGt6YWxsb2Moc2l6ZSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFzbXVfdGFibGUt
PmhhcmRjb2RlX3BwdGFibGUpIHsKKwkJcmV0ID0gLUVOT01FTTsKKwkJZ290byBmYWlsZWQ7CisJ
fQogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Up
Ci0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfY2xvY2tfYnlfdHlwZV93aXRoX3ZvbHRhZ2Uo
c211LCB0eXBlLCBjbG9ja3MpOworCW1lbWNweShzbXVfdGFibGUtPmhhcmRjb2RlX3BwdGFibGUs
IGJ1Ziwgc2l6ZSk7CisJc211X3RhYmxlLT5wb3dlcl9wbGF5X3RhYmxlID0gc211X3RhYmxlLT5o
YXJkY29kZV9wcHRhYmxlOworCXNtdV90YWJsZS0+cG93ZXJfcGxheV90YWJsZV9zaXplID0gc2l6
ZTsKIAotCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisJcmV0ID0gc211X3Jlc2V0KHNtdSk7
CisJaWYgKHJldCkKKwkJcHJfaW5mbygic211IHJlc2V0IGZhaWxlZCwgcmV0ID0gJWRcbiIsIHJl
dCk7CiAKK2ZhaWxlZDoKKwltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCXJldHVybiByZXQ7
CiB9CiAKLQotaW50IHNtdV9kaXNwbGF5X2Nsb2NrX3ZvbHRhZ2VfcmVxdWVzdChzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwKLQkJCQkgICAgICBzdHJ1Y3QgcHBfZGlzcGxheV9jbG9ja19yZXF1ZXN0
ICpjbG9ja19yZXEpCitpbnQgc211X2Rpc3BsYXlfY29uZmlndXJhdGlvbl9jaGFuZ2Uoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJICAgICBjb25zdCBzdHJ1Y3QgYW1kX3BwX2Rpc3BsYXlf
Y29uZmlndXJhdGlvbiAqZGlzcGxheV9jb25maWcpCiB7Ci0JaW50IHJldCA9IDA7CisJaW50IGlu
ZGV4ID0gMDsKKwlpbnQgbnVtX29mX2FjdGl2ZV9kaXNwbGF5ID0gMDsKKworCWlmICghc211LT5w
bV9lbmFibGVkIHx8ICFpc19zdXBwb3J0X3N3X3NtdShzbXUtPmFkZXYpKQorCQlyZXR1cm4gLUVJ
TlZBTDsKKworCWlmICghZGlzcGxheV9jb25maWcpCisJCXJldHVybiAtRUlOVkFMOwogCiAJbXV0
ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPmRpc3BsYXlfY2xv
Y2tfdm9sdGFnZV9yZXF1ZXN0KQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+ZGlzcGxheV9jbG9j
a192b2x0YWdlX3JlcXVlc3Qoc211LCBjbG9ja19yZXEpOworCXNtdV9zZXRfbWluX2RjZWZfZGVl
cF9zbGVlcChzbXUsCisJCQkJZGlzcGxheV9jb25maWctPm1pbl9kY2VmX2RlZXBfc2xlZXBfc2V0
X2NsayAvIDEwMCk7CisKKwlmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBkaXNwbGF5X2NvbmZpZy0+
bnVtX3BhdGhfaW5jbHVkaW5nX25vbl9kaXNwbGF5OyBpbmRleCsrKSB7CisJCWlmIChkaXNwbGF5
X2NvbmZpZy0+ZGlzcGxheXNbaW5kZXhdLmNvbnRyb2xsZXJfaWQgIT0gMCkKKwkJCW51bV9vZl9h
Y3RpdmVfZGlzcGxheSsrOworCX0KKworCXNtdV9zZXRfYWN0aXZlX2Rpc3BsYXlfY291bnQoc211
LCBudW1fb2ZfYWN0aXZlX2Rpc3BsYXkpOworCisJc211X3N0b3JlX2NjNl9kYXRhKHNtdSwgZGlz
cGxheV9jb25maWctPmNwdV9wc3RhdGVfc2VwYXJhdGlvbl90aW1lLAorCQkJICAgZGlzcGxheV9j
b25maWctPmNwdV9jYzZfZGlzYWJsZSwKKwkJCSAgIGRpc3BsYXlfY29uZmlnLT5jcHVfcHN0YXRl
X2Rpc2FibGUsCisJCQkgICBkaXNwbGF5X2NvbmZpZy0+bmJfcHN0YXRlX3N3aXRjaF9kaXNhYmxl
KTsKIAogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKLQlyZXR1cm4gcmV0OworCXJldHVy
biAwOwogfQogCi0KLWludCBzbXVfZGlzcGxheV9kaXNhYmxlX21lbW9yeV9jbG9ja19zd2l0Y2go
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGJvb2wgZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNo
KQorc3RhdGljIGludCBzbXVfZ2V0X2Nsb2NrX2luZm8oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
CisJCQkgICAgICBzdHJ1Y3Qgc211X2Nsb2NrX2luZm8gKmNsa19pbmZvLAorCQkJICAgICAgZW51
bSBzbXVfcGVyZl9sZXZlbF9kZXNpZ25hdGlvbiBkZXNpZ25hdGlvbikKIHsKLQlpbnQgcmV0ID0g
LUVJTlZBTDsKKwlpbnQgcmV0OworCXN0cnVjdCBzbXVfcGVyZm9ybWFuY2VfbGV2ZWwgbGV2ZWwg
PSB7MH07CiAKLQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKwlpZiAoIWNsa19pbmZvKQorCQly
ZXR1cm4gLUVJTlZBTDsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+ZGlzcGxheV9kaXNhYmxlX21l
bW9yeV9jbG9ja19zd2l0Y2gpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5kaXNwbGF5X2Rpc2Fi
bGVfbWVtb3J5X2Nsb2NrX3N3aXRjaChzbXUsIGRpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCk7
CisJcmV0ID0gc211X2dldF9wZXJmX2xldmVsKHNtdSwgUEVSRl9MRVZFTF9BQ1RJVklUWSwgJmxl
dmVsKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gLUVJTlZBTDsKIAotCW11dGV4X3VubG9jaygmc211
LT5tdXRleCk7CisJY2xrX2luZm8tPm1pbl9tZW1fY2xrID0gbGV2ZWwubWVtb3J5X2Nsb2NrOwor
CWNsa19pbmZvLT5taW5fZW5nX2NsayA9IGxldmVsLmNvcmVfY2xvY2s7CisJY2xrX2luZm8tPm1p
bl9idXNfYmFuZHdpZHRoID0gbGV2ZWwubm9uX2xvY2FsX21lbV9mcmVxICogbGV2ZWwubm9uX2xv
Y2FsX21lbV93aWR0aDsKIAotCXJldHVybiByZXQ7CisJcmV0ID0gc211X2dldF9wZXJmX2xldmVs
KHNtdSwgZGVzaWduYXRpb24sICZsZXZlbCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIC1FSU5WQUw7
CisKKwljbGtfaW5mby0+bWluX21lbV9jbGsgPSBsZXZlbC5tZW1vcnlfY2xvY2s7CisJY2xrX2lu
Zm8tPm1pbl9lbmdfY2xrID0gbGV2ZWwuY29yZV9jbG9jazsKKwljbGtfaW5mby0+bWluX2J1c19i
YW5kd2lkdGggPSBsZXZlbC5ub25fbG9jYWxfbWVtX2ZyZXEgKiBsZXZlbC5ub25fbG9jYWxfbWVt
X3dpZHRoOworCisJcmV0dXJuIDA7CiB9CiAKLWludCBzbXVfbm90aWZ5X3NtdV9lbmFibGVfcHdl
KHN0cnVjdCBzbXVfY29udGV4dCAqc211KQoraW50IHNtdV9nZXRfY3VycmVudF9jbG9ja3Moc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkgICBzdHJ1Y3QgYW1kX3BwX2Nsb2NrX2luZm8gKmNs
b2NrcykKIHsKKwlzdHJ1Y3QgYW1kX3BwX3NpbXBsZV9jbG9ja19pbmZvIHNpbXBsZV9jbG9ja3Mg
PSB7MH07CisJc3RydWN0IHNtdV9jbG9ja19pbmZvIGh3X2Nsb2NrczsKIAlpbnQgcmV0ID0gMDsK
IAorCWlmICghaXNfc3VwcG9ydF9zd19zbXUoc211LT5hZGV2KSkKKwkJcmV0dXJuIC1FSU5WQUw7
CisKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+bm90
aWZ5X3NtdV9lbmFibGVfcHdlKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+bm90aWZ5X3NtdV9l
bmFibGVfcHdlKHNtdSk7CisJc211X2dldF9kYWxfcG93ZXJfbGV2ZWwoc211LCAmc2ltcGxlX2Ns
b2Nrcyk7CiAKLQltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOworCWlmIChzbXUtPnN1cHBvcnRf
cG93ZXJfY29udGFpbm1lbnQpCisJCXJldCA9IHNtdV9nZXRfY2xvY2tfaW5mbyhzbXUsICZod19j
bG9ja3MsCisJCQkJCSBQRVJGX0xFVkVMX1BPV0VSX0NPTlRBSU5NRU5UKTsKKwllbHNlCisJCXJl
dCA9IHNtdV9nZXRfY2xvY2tfaW5mbyhzbXUsICZod19jbG9ja3MsIFBFUkZfTEVWRUxfQUNUSVZJ
VFkpOwogCi0JcmV0dXJuIHJldDsKLX0KKwlpZiAocmV0KSB7CisJCXByX2VycigiRXJyb3IgaW4g
c211X2dldF9jbG9ja19pbmZvXG4iKTsKKwkJZ290byBmYWlsZWQ7CisJfQogCi1pbnQgc211X3Nl
dF94Z21pX3BzdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJCXVpbnQzMl90IHBzdGF0
ZSkKLXsKLQlpbnQgcmV0ID0gMDsKKwljbG9ja3MtPm1pbl9lbmdpbmVfY2xvY2sgPSBod19jbG9j
a3MubWluX2VuZ19jbGs7CisJY2xvY2tzLT5tYXhfZW5naW5lX2Nsb2NrID0gaHdfY2xvY2tzLm1h
eF9lbmdfY2xrOworCWNsb2Nrcy0+bWluX21lbW9yeV9jbG9jayA9IGh3X2Nsb2Nrcy5taW5fbWVt
X2NsazsKKwljbG9ja3MtPm1heF9tZW1vcnlfY2xvY2sgPSBod19jbG9ja3MubWF4X21lbV9jbGs7
CisJY2xvY2tzLT5taW5fYnVzX2JhbmR3aWR0aCA9IGh3X2Nsb2Nrcy5taW5fYnVzX2JhbmR3aWR0
aDsKKwljbG9ja3MtPm1heF9idXNfYmFuZHdpZHRoID0gaHdfY2xvY2tzLm1heF9idXNfYmFuZHdp
ZHRoOworCWNsb2Nrcy0+bWF4X2VuZ2luZV9jbG9ja19pbl9zciA9IGh3X2Nsb2Nrcy5tYXhfZW5n
X2NsazsKKwljbG9ja3MtPm1pbl9lbmdpbmVfY2xvY2tfaW5fc3IgPSBod19jbG9ja3MubWluX2Vu
Z19jbGs7CiAKLQltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKKyAgICAgICAgaWYgKHNpbXBsZV9j
bG9ja3MubGV2ZWwgPT0gMCkKKyAgICAgICAgICAgICAgICBjbG9ja3MtPm1heF9jbG9ja3Nfc3Rh
dGUgPSBQUF9EQUxfUE9XRVJMRVZFTF83OworICAgICAgICBlbHNlCisgICAgICAgICAgICAgICAg
Y2xvY2tzLT5tYXhfY2xvY2tzX3N0YXRlID0gc2ltcGxlX2Nsb2Nrcy5sZXZlbDsKIAotCWlmIChz
bXUtPnBwdF9mdW5jcy0+c2V0X3hnbWlfcHN0YXRlKQotCQlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+
c2V0X3hnbWlfcHN0YXRlKHNtdSwgcHN0YXRlKTsKKyAgICAgICAgaWYgKCFzbXVfZ2V0X2N1cnJl
bnRfc2hhbGxvd19zbGVlcF9jbG9ja3Moc211LCAmaHdfY2xvY2tzKSkgeworICAgICAgICAgICAg
ICAgIGNsb2Nrcy0+bWF4X2VuZ2luZV9jbG9ja19pbl9zciA9IGh3X2Nsb2Nrcy5tYXhfZW5nX2Ns
azsKKyAgICAgICAgICAgICAgICBjbG9ja3MtPm1pbl9lbmdpbmVfY2xvY2tfaW5fc3IgPSBod19j
bG9ja3MubWluX2VuZ19jbGs7CisgICAgICAgIH0KIAorZmFpbGVkOgogCW11dGV4X3VubG9jaygm
c211LT5tdXRleCk7Ci0KIAlyZXR1cm4gcmV0OwogfQogCi1pbnQgc211X3NldF9hemFsaWFfZDNf
cG1lKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQoraW50IHNtdV9oYW5kbGVfdGFzayhzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwKKwkJICAgIGVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWws
CisJCSAgICBlbnVtIGFtZF9wcF90YXNrIHRhc2tfaWQpCiB7CiAJaW50IHJldCA9IDA7CiAKIAlt
dXRleF9sb2NrKCZzbXUtPm11dGV4KTsKLQotCWlmIChzbXUtPnBwdF9mdW5jcy0+c2V0X2F6YWxp
YV9kM19wbWUpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5zZXRfYXphbGlhX2QzX3BtZShzbXUp
OwotCisJcmV0ID0gc211X2Ntbl9oYW5kbGVfdGFzayhzbXUsIGxldmVsLCB0YXNrX2lkKTsKIAlt
dXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotYm9vbCBzbXVf
YmFjb19pc19zdXBwb3J0KHN0cnVjdCBzbXVfY29udGV4dCAqc211KQoraW50IHNtdV9zd2l0Y2hf
cG93ZXJfcHJvZmlsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCSAgICAgZW51bSBQUF9T
TUNfUE9XRVJfUFJPRklMRSB0eXBlLAorCQkJICAgICBib29sIGVuKQogewotCWJvb2wgcmV0ID0g
ZmFsc2U7CisJc3RydWN0IHNtdV9kcG1fY29udGV4dCAqc211X2RwbV9jdHggPSAmKHNtdS0+c211
X2RwbSk7CisJbG9uZyB3b3JrbG9hZDsKKwl1aW50MzJfdCBpbmRleDsKKworCWlmICghc211LT5w
bV9lbmFibGVkKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmICghKHR5cGUgPCBQUF9TTUNfUE9X
RVJfUFJPRklMRV9DVVNUT00pKQorCQlyZXR1cm4gLUVJTlZBTDsKIAogCW11dGV4X2xvY2soJnNt
dS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5iYWNvX2lzX3N1cHBvcnQpCi0JCXJl
dCA9IHNtdS0+cHB0X2Z1bmNzLT5iYWNvX2lzX3N1cHBvcnQoc211KTsKKwlpZiAoIWVuKSB7CisJ
CXNtdS0+d29ya2xvYWRfbWFzayAmPSB+KDEgPDwgc211LT53b3JrbG9hZF9wcm9yaXR5W3R5cGVd
KTsKKwkJaW5kZXggPSBmbHMoc211LT53b3JrbG9hZF9tYXNrKTsKKwkJaW5kZXggPSBpbmRleCA+
IDAgJiYgaW5kZXggPD0gV09SS0xPQURfUE9MSUNZX01BWCA/IGluZGV4IC0gMSA6IDA7CisJCXdv
cmtsb2FkID0gc211LT53b3JrbG9hZF9zZXR0aW5nW2luZGV4XTsKKwl9IGVsc2UgeworCQlzbXUt
Pndvcmtsb2FkX21hc2sgfD0gKDEgPDwgc211LT53b3JrbG9hZF9wcm9yaXR5W3R5cGVdKTsKKwkJ
aW5kZXggPSBmbHMoc211LT53b3JrbG9hZF9tYXNrKTsKKwkJaW5kZXggPSBpbmRleCA8PSBXT1JL
TE9BRF9QT0xJQ1lfTUFYID8gaW5kZXggLSAxIDogMDsKKwkJd29ya2xvYWQgPSBzbXUtPndvcmts
b2FkX3NldHRpbmdbaW5kZXhdOworCX0KKworCWlmIChzbXVfZHBtX2N0eC0+ZHBtX2xldmVsICE9
IEFNRF9EUE1fRk9SQ0VEX0xFVkVMX01BTlVBTCkKKwkJc211X2Ntbl9zZXRfcG93ZXJfcHJvZmls
ZV9tb2RlKHNtdSwgJndvcmtsb2FkLCAwKTsKIAogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7
CiAKLQlyZXR1cm4gcmV0OworCXJldHVybiAwOwogfQogCi1pbnQgc211X2JhY29fZ2V0X3N0YXRl
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9iYWNvX3N0YXRlICpzdGF0ZSkKK2Vu
dW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgc211X2dldF9wZXJmb3JtYW5jZV9sZXZlbChzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSkKIHsKLQlpZiAoc211LT5wcHRfZnVuY3MtPmJhY29fZ2V0X3N0YXRl
KQorCXN0cnVjdCBzbXVfZHBtX2NvbnRleHQgKnNtdV9kcG1fY3R4ID0gJihzbXUtPnNtdV9kcG0p
OworCWVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWw7CisKKwlpZiAoIXNtdS0+aXNfYXB1
ICYmICFzbXVfZHBtX2N0eC0+ZHBtX2NvbnRleHQpCiAJCXJldHVybiAtRUlOVkFMOwogCi0JbXV0
ZXhfbG9jaygmc211LT5tdXRleCk7Ci0JKnN0YXRlID0gc211LT5wcHRfZnVuY3MtPmJhY29fZ2V0
X3N0YXRlKHNtdSk7Ci0JbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKKwltdXRleF9sb2NrKCYo
c211LT5tdXRleCkpOworCWxldmVsID0gc211X2RwbV9jdHgtPmRwbV9sZXZlbDsKKwltdXRleF91
bmxvY2soJihzbXUtPm11dGV4KSk7CiAKLQlyZXR1cm4gMDsKKwlyZXR1cm4gbGV2ZWw7CiB9CiAK
LWludCBzbXVfYmFjb19yZXNldChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK2ludCBzbXVfZm9y
Y2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gYW1kX2Rw
bV9mb3JjZWRfbGV2ZWwgbGV2ZWwpCiB7CisJc3RydWN0IHNtdV9kcG1fY29udGV4dCAqc211X2Rw
bV9jdHggPSAmKHNtdS0+c211X2RwbSk7CiAJaW50IHJldCA9IDA7CiAKKwlpZiAoIXNtdS0+aXNf
YXB1ICYmICFzbXVfZHBtX2N0eC0+ZHBtX2NvbnRleHQpCisJCXJldHVybiAtRUlOVkFMOworCiAJ
bXV0ZXhfbG9jaygmc211LT5tdXRleCk7CiAKLQlpZiAoc211LT5wcHRfZnVuY3MtPmJhY29fcmVz
ZXQpCi0JCXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5iYWNvX3Jlc2V0KHNtdSk7CisJcmV0ID0gc211
X2VuYWJsZV91bWRfcHN0YXRlKHNtdSwgJmxldmVsKTsKKwlpZiAocmV0KSB7CisJCW11dGV4X3Vu
bG9jaygmc211LT5tdXRleCk7CisJCXJldHVybiByZXQ7CisJfQorCisJcmV0ID0gc211X2Ntbl9o
YW5kbGVfdGFzayhzbXUsIGxldmVsLAorCQkJICAgICAgQU1EX1BQX1RBU0tfUkVBREpVU1RfUE9X
RVJfU1RBVEUpOwogCiAJbXV0ZXhfdW5sb2NrKCZzbXUtPm11dGV4KTsKIAogCXJldHVybiByZXQ7
CiB9CiAKLWludCBzbXVfbW9kZTJfcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCitpbnQg
c211X3NldF9kaXNwbGF5X2NvdW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBj
b3VudCkKIHsKIAlpbnQgcmV0ID0gMDsKIAogCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOworCXJl
dCA9IHNtdV9pbml0X2Rpc3BsYXlfY291bnQoc211LCBjb3VudCk7CisJbXV0ZXhfdW5sb2NrKCZz
bXUtPm11dGV4KTsKIAotCWlmIChzbXUtPnBwdF9mdW5jcy0+bW9kZTJfcmVzZXQpCi0JCXJldCA9
IHNtdS0+cHB0X2Z1bmNzLT5tb2RlMl9yZXNldChzbXUpOworCXJldHVybiByZXQ7Cit9CisKK2lu
dCBzbXVfZm9yY2VfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKKwkJCSBlbnVt
IHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKKwkJCSB1aW50MzJfdCBtYXNrKQoreworCXN0cnVjdCBz
bXVfZHBtX2NvbnRleHQgKnNtdV9kcG1fY3R4ID0gJihzbXUtPnNtdV9kcG0pOworCWludCByZXQg
PSAwOwogCisJaWYgKHNtdV9kcG1fY3R4LT5kcG1fbGV2ZWwgIT0gQU1EX0RQTV9GT1JDRURfTEVW
RUxfTUFOVUFMKSB7CisJCXByX2RlYnVnKCJmb3JjZSBjbG9jayBsZXZlbCBpcyBmb3IgZHBtIG1h
bnVhbCBtb2RlIG9ubHkuXG4iKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJbXV0ZXhfbG9j
aygmc211LT5tdXRleCk7CisJcmV0ID0gc211X2Ntbl9mb3JjZV9jbGtfbGV2ZWxzKHNtdSwgY2xr
X3R5cGUsIG1hc2spOwogCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CiAKIAlyZXR1cm4gcmV0
OwogfQogCi1pbnQgc211X2dldF9tYXhfc3VzdGFpbmFibGVfY2xvY2tzX2J5X2RjKHN0cnVjdCBz
bXVfY29udGV4dCAqc211LAotCQkJCQkgc3RydWN0IHBwX3NtdV9udl9jbG9ja190YWJsZSAqbWF4
X2Nsb2NrcykKK2ludCBzbXVfc2V0X21wMV9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwK
KwkJICAgICAgZW51bSBwcF9tcDFfc3RhdGUgbXAxX3N0YXRlKQogewotCWludCByZXQgPSAwOwor
CXVpbnQxNl90IG1zZzsKKwlpbnQgcmV0OworCisJLyoKKwkgKiBUaGUgU01DIGlzIG5vdCBmdWxs
eSByZWFkeS4gVGhhdCBtYXkgYmUKKwkgKiBleHBlY3RlZCBhcyB0aGUgSVAgbWF5IGJlIG1hc2tl
ZC4KKwkgKiBTbywganVzdCByZXR1cm4gd2l0aG91dCBlcnJvci4KKwkgKi8KKwlpZiAoIXNtdS0+
cG1fZW5hYmxlZCkKKwkJcmV0dXJuIDA7CiAKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAot
CWlmIChzbXUtPnBwdF9mdW5jcy0+Z2V0X21heF9zdXN0YWluYWJsZV9jbG9ja3NfYnlfZGMpCi0J
CXJldCA9IHNtdS0+cHB0X2Z1bmNzLT5nZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYyhz
bXUsIG1heF9jbG9ja3MpOworCXN3aXRjaCAobXAxX3N0YXRlKSB7CisJY2FzZSBQUF9NUDFfU1RB
VEVfU0hVVERPV046CisJCW1zZyA9IFNNVV9NU0dfUHJlcGFyZU1wMUZvclNodXRkb3duOworCQli
cmVhazsKKwljYXNlIFBQX01QMV9TVEFURV9VTkxPQUQ6CisJCW1zZyA9IFNNVV9NU0dfUHJlcGFy
ZU1wMUZvclVubG9hZDsKKwkJYnJlYWs7CisJY2FzZSBQUF9NUDFfU1RBVEVfUkVTRVQ6CisJCW1z
ZyA9IFNNVV9NU0dfUHJlcGFyZU1wMUZvclJlc2V0OworCQlicmVhazsKKwljYXNlIFBQX01QMV9T
VEFURV9OT05FOgorCWRlZmF1bHQ6CisJCW11dGV4X3VubG9jaygmc211LT5tdXRleCk7CisJCXJl
dHVybiAwOworCX0KKworCS8qIHNvbWUgYXNpY3MgbWF5IG5vdCBzdXBwb3J0IHRob3NlIG1lc3Nh
Z2VzICovCisJaWYgKHNtdV9tc2dfZ2V0X2luZGV4KHNtdSwgbXNnKSA8IDApIHsKKwkJbXV0ZXhf
dW5sb2NrKCZzbXUtPm11dGV4KTsKKwkJcmV0dXJuIDA7CisJfQorCisJcmV0ID0gc211X3NlbmRf
c21jX21zZyhzbXUsIG1zZyk7CisJaWYgKHJldCkKKwkJcHJfZXJyKCJbUHJlcGFyZU1wMV0gRmFp
bGVkIVxuIik7CiAKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsK
IH0KIAotaW50IHNtdV9nZXRfdWNsa19kcG1fc3RhdGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAotCQkJICAgIHVuc2lnbmVkIGludCAqY2xvY2tfdmFsdWVzX2luX2toeiwKLQkJCSAgICB1bnNp
Z25lZCBpbnQgKm51bV9zdGF0ZXMpCitpbnQgc211X3NldF9kZl9jc3RhdGUoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsCisJCSAgICAgIGVudW0gcHBfZGZfY3N0YXRlIHN0YXRlKQogewogCWludCBy
ZXQgPSAwOwogCisJLyoKKwkgKiBUaGUgU01DIGlzIG5vdCBmdWxseSByZWFkeS4gVGhhdCBtYXkg
YmUKKwkgKiBleHBlY3RlZCBhcyB0aGUgSVAgbWF5IGJlIG1hc2tlZC4KKwkgKiBTbywganVzdCBy
ZXR1cm4gd2l0aG91dCBlcnJvci4KKwkgKi8KKwlpZiAoIXNtdS0+cG1fZW5hYmxlZCkKKwkJcmV0
dXJuIDA7CisKKwlpZiAoIXNtdS0+cHB0X2Z1bmNzIHx8ICFzbXUtPnBwdF9mdW5jcy0+c2V0X2Rm
X2NzdGF0ZSkKKwkJcmV0dXJuIDA7CisKIAltdXRleF9sb2NrKCZzbXUtPm11dGV4KTsKIAotCWlm
IChzbXUtPnBwdF9mdW5jcy0+Z2V0X3VjbGtfZHBtX3N0YXRlcykKLQkJcmV0ID0gc211LT5wcHRf
ZnVuY3MtPmdldF91Y2xrX2RwbV9zdGF0ZXMoc211LCBjbG9ja192YWx1ZXNfaW5fa2h6LCBudW1f
c3RhdGVzKTsKKwlyZXQgPSBzbXUtPnBwdF9mdW5jcy0+c2V0X2RmX2NzdGF0ZShzbXUsIHN0YXRl
KTsKKwlpZiAocmV0KQorCQlwcl9lcnIoIltTZXREZkNzdGF0ZV0gZmFpbGVkIVxuIik7CiAKIAlt
dXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKIH0KIAotZW51bSBhbWRf
cG1fc3RhdGVfdHlwZSBzbXVfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUpCitpbnQgc211X3NldF93YXRlcm1hcmtzX2Zvcl9jbG9ja19yYW5nZXMoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCisJCXN0cnVjdCBkbV9wcF93bV9zZXRzX3dpdGhfY2xvY2tfcmFu
Z2VzX3NvYzE1ICpjbG9ja19yYW5nZXMpCiB7Ci0JZW51bSBhbWRfcG1fc3RhdGVfdHlwZSBwbV9z
dGF0ZSA9IFBPV0VSX1NUQVRFX1RZUEVfREVGQVVMVDsKKwlpbnQgcmV0ID0gMDsKKwlzdHJ1Y3Qg
c211X3RhYmxlICp3YXRlcm1hcmtzID0gJnNtdS0+c211X3RhYmxlLnRhYmxlc1tTTVVfVEFCTEVf
V0FURVJNQVJLU107CisJdm9pZCAqdGFibGUgPSB3YXRlcm1hcmtzLT5jcHVfYWRkcjsKIAogCW11
dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwogCi0JaWYgKHNtdS0+cHB0X2Z1bmNzLT5nZXRfY3VycmVu
dF9wb3dlcl9zdGF0ZSkKLQkJcG1fc3RhdGUgPSBzbXUtPnBwdF9mdW5jcy0+Z2V0X2N1cnJlbnRf
cG93ZXJfc3RhdGUoc211KTsKKwlpZiAoIXNtdS0+ZGlzYWJsZV93YXRlcm1hcmsgJiYKKwkJCXNt
dV9mZWF0dXJlX2lzX2VuYWJsZWQoc211LCBTTVVfRkVBVFVSRV9EUE1fRENFRkNMS19CSVQpICYm
CisJCQlzbXVfZmVhdHVyZV9pc19lbmFibGVkKHNtdSwgU01VX0ZFQVRVUkVfRFBNX1NPQ0NMS19C
SVQpKSB7CisJCXNtdV9zZXRfd2F0ZXJtYXJrc190YWJsZShzbXUsIHRhYmxlLCBjbG9ja19yYW5n
ZXMpOworCQlzbXUtPndhdGVybWFya3NfYml0bWFwIHw9IFdBVEVSTUFSS1NfRVhJU1Q7CisJCXNt
dS0+d2F0ZXJtYXJrc19iaXRtYXAgJj0gfldBVEVSTUFSS1NfTE9BREVEOworCX0KIAogCW11dGV4
X3VubG9jaygmc211LT5tdXRleCk7CiAKLQlyZXR1cm4gcG1fc3RhdGU7CisJcmV0dXJuIHJldDsK
IH0KIAotaW50IHNtdV9nZXRfZHBtX2Nsb2NrX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAotCQkJICAgIHN0cnVjdCBkcG1fY2xvY2tzICpjbG9ja190YWJsZSkKK2ludCBzbXVfZ2V0X2Rw
bV9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJICAgZW51bSBzbXVfY2xr
X3R5cGUgY2xrX3R5cGUsCisJCQkgICB1aW50MzJfdCAqbWluLAorCQkJICAgdWludDMyX3QgKm1h
eCkKIHsKIAlpbnQgcmV0ID0gMDsKIAotCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwotCi0JaWYg
KHNtdS0+cHB0X2Z1bmNzLT5nZXRfZHBtX2Nsb2NrX3RhYmxlKQotCQlyZXQgPSBzbXUtPnBwdF9m
dW5jcy0+Z2V0X2RwbV9jbG9ja190YWJsZShzbXUsIGNsb2NrX3RhYmxlKTsKKwlpZiAoIW1pbiAm
JiAhbWF4KQorCQlyZXR1cm4gLUVJTlZBTDsKIAorCW11dGV4X2xvY2soJnNtdS0+bXV0ZXgpOwor
CXJldCA9IHNtdV9jbW5fZ2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgY2xrX3R5cGUsIG1pbiwgbWF4
KTsKIAltdXRleF91bmxvY2soJnNtdS0+bXV0ZXgpOwogCiAJcmV0dXJuIHJldDsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FyY3R1cnVzX3BwdC5jIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvYXJjdHVydXNfcHB0LmMKaW5kZXggNTIyOGVkMmUyOGMy
Li43MTk2NjM0NjkxZDEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L2FyY3R1cnVzX3BwdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2FyY3R1
cnVzX3BwdC5jCkBAIC0zMzgsNiArMzM4LDMzIEBAIHN0YXRpYyBpbnQgYXJjdHVydXNfYWxsb2Nh
dGVfZHBtX2NvbnRleHQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiAJcmV0dXJuIDA7CiB9CiAK
K3N0YXRpYyBpbnQgYXJjdHVydXNfaW5pdF9zbWNfdGFibGVzKHN0cnVjdCBzbXVfY29udGV4dCAq
c211KQoreworCXN0cnVjdCBzbXVfdGFibGVfY29udGV4dCAqc211X3RhYmxlID0gJnNtdS0+c211
X3RhYmxlOworCXN0cnVjdCBzbXVfdGFibGUgKnRhYmxlcyA9IE5VTEw7CisJaW50IHJldCA9IDA7
CisKKwlpZiAoc211X3RhYmxlLT50YWJsZXMpCisJCXJldHVybiAtRUlOVkFMOworCisJdGFibGVz
ID0ga2NhbGxvYyhTTVVfVEFCTEVfQ09VTlQsIHNpemVvZihzdHJ1Y3Qgc211X3RhYmxlKSwKKwkJ
CSBHRlBfS0VSTkVMKTsKKwlpZiAoIXRhYmxlcykKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlzbXVf
dGFibGUtPnRhYmxlcyA9IHRhYmxlczsKKworCXJldCA9IGFyY3R1cnVzX3RhYmxlc19pbml0KHNt
dSwgdGFibGVzKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJcmV0ID0gYXJjdHVydXNf
YWxsb2NhdGVfZHBtX2NvbnRleHQoc211KTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJ
cmV0dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQKIGFyY3R1cnVzX2dldF9hbGxvd2VkX2ZlYXR1cmVf
bWFzayhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJCQkgIHVpbnQzMl90ICpmZWF0dXJlX21h
c2ssIHVpbnQzMl90IG51bSkKQEAgLTUyOSw2ICs1NTYsMzAgQEAgc3RhdGljIGludCBhcmN0dXJ1
c19hcHBlbmRfcG93ZXJwbGF5X3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogCXJldHVy
biAwOwogfQogCitzdGF0aWMgaW50IGFyY3R1cnVzX3BhcnNlX3BwdGFibGUoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUpCit7CisJaW50IHJldDsKKworCXN0cnVjdCBzbXVfdGFibGVfY29udGV4dCAq
dGFibGVfY29udGV4dCA9ICZzbXUtPnNtdV90YWJsZTsKKwlzdHJ1Y3Qgc211X3RhYmxlICp0YWJs
ZSA9ICZ0YWJsZV9jb250ZXh0LT50YWJsZXNbU01VX1RBQkxFX1BQVEFCTEVdOworCisJaWYgKHRh
YmxlX2NvbnRleHQtPmRyaXZlcl9wcHRhYmxlKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXRhYmxl
X2NvbnRleHQtPmRyaXZlcl9wcHRhYmxlID0ga3phbGxvYyh0YWJsZS0+c2l6ZSwgR0ZQX0tFUk5F
TCk7CisKKwlpZiAoIXRhYmxlX2NvbnRleHQtPmRyaXZlcl9wcHRhYmxlKQorCQlyZXR1cm4gLUVO
T01FTTsKKworCXJldCA9IGFyY3R1cnVzX3N0b3JlX3Bvd2VycGxheV90YWJsZShzbXUpOworCWlm
IChyZXQpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0ID0gYXJjdHVydXNfYXBwZW5kX3Bvd2Vy
cGxheV90YWJsZShzbXUpOworCisJcmV0dXJuIHJldDsKK30KKwogc3RhdGljIGludCBhcmN0dXJ1
c19ydW5fYnRjKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogewogCWludCByZXQgPSAwOwpAQCAt
MTg1MSwxOSArMTkwMiwxMSBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHBwdGFibGVfZnVuY3MgYXJj
dHVydXNfcHB0X2Z1bmNzID0gewogCS5nZXRfc211X3RhYmxlX2luZGV4ID0gYXJjdHVydXNfZ2V0
X3NtdV90YWJsZV9pbmRleCwKIAkuZ2V0X3NtdV9wb3dlcl9pbmRleD0gYXJjdHVydXNfZ2V0X3B3
cl9zcmNfaW5kZXgsCiAJLmdldF93b3JrbG9hZF90eXBlID0gYXJjdHVydXNfZ2V0X3dvcmtsb2Fk
X3R5cGUsCi0JLyogaW50ZXJuYWwgc3RydWN0dXJzIGFsbG9jYXRpb25zICovCi0JLnRhYmxlc19p
bml0ID0gYXJjdHVydXNfdGFibGVzX2luaXQsCi0JLmFsbG9jX2RwbV9jb250ZXh0ID0gYXJjdHVy
dXNfYWxsb2NhdGVfZHBtX2NvbnRleHQsCi0JLyogcHB0YWJsZSByZWxhdGVkICovCi0JLmNoZWNr
X3Bvd2VycGxheV90YWJsZSA9IGFyY3R1cnVzX2NoZWNrX3Bvd2VycGxheV90YWJsZSwKLQkuc3Rv
cmVfcG93ZXJwbGF5X3RhYmxlID0gYXJjdHVydXNfc3RvcmVfcG93ZXJwbGF5X3RhYmxlLAotCS5h
cHBlbmRfcG93ZXJwbGF5X3RhYmxlID0gYXJjdHVydXNfYXBwZW5kX3Bvd2VycGxheV90YWJsZSwK
IAkvKiBpbml0IGRwbSAqLwogCS5nZXRfYWxsb3dlZF9mZWF0dXJlX21hc2sgPSBhcmN0dXJ1c19n
ZXRfYWxsb3dlZF9mZWF0dXJlX21hc2ssCiAJLyogYnRjICovCiAJLnJ1bl9idGMgPSBhcmN0dXJ1
c19ydW5fYnRjLAogCS8qIGRwbS9jbGsgdGFibGVzICovCi0JLnNldF9kZWZhdWx0X2RwbV90YWJs
ZSA9IGFyY3R1cnVzX3NldF9kZWZhdWx0X2RwbV90YWJsZSwKIAkucG9wdWxhdGVfdW1kX3N0YXRl
X2NsayA9IGFyY3R1cnVzX3BvcHVsYXRlX3VtZF9zdGF0ZV9jbGssCiAJLmdldF90aGVybWFsX3Rl
bXBlcmF0dXJlX3JhbmdlID0gYXJjdHVydXNfZ2V0X3RoZXJtYWxfdGVtcGVyYXR1cmVfcmFuZ2Us
CiAJLmdldF9jdXJyZW50X2Nsa19mcmVxX2J5X3RhYmxlID0gYXJjdHVydXNfZ2V0X2N1cnJlbnRf
Y2xrX2ZyZXFfYnlfdGFibGUsCkBAIC0xODg0LDcgKzE5MjcsNyBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IHBwdGFibGVfZnVuY3MgYXJjdHVydXNfcHB0X2Z1bmNzID0gewogCS5kcG1fc2V0X3V2ZF9l
bmFibGUgPSBhcmN0dXJ1c19kcG1fc2V0X3V2ZF9lbmFibGUsCiAJLmluaXRfbWljcm9jb2RlID0g
c211X3YxMV8wX2luaXRfbWljcm9jb2RlLAogCS5sb2FkX21pY3JvY29kZSA9IHNtdV92MTFfMF9s
b2FkX21pY3JvY29kZSwKLQkuaW5pdF9zbWNfdGFibGVzID0gc211X3YxMV8wX2luaXRfc21jX3Rh
YmxlcywKKwkuaW5pdF9zbWNfdGFibGVzID0gYXJjdHVydXNfaW5pdF9zbWNfdGFibGVzLAogCS5m
aW5pX3NtY190YWJsZXMgPSBzbXVfdjExXzBfZmluaV9zbWNfdGFibGVzLAogCS5pbml0X3Bvd2Vy
ID0gc211X3YxMV8wX2luaXRfcG93ZXIsCiAJLmZpbmlfcG93ZXIgPSBzbXVfdjExXzBfZmluaV9w
b3dlciwKQEAgLTE4OTIsOSArMTkzNSw5IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9m
dW5jcyBhcmN0dXJ1c19wcHRfZnVuY3MgPSB7CiAJLnNldHVwX3BwdGFibGUgPSBzbXVfdjExXzBf
c2V0dXBfcHB0YWJsZSwKIAkuZ2V0X3ZiaW9zX2Jvb3R1cF92YWx1ZXMgPSBzbXVfdjExXzBfZ2V0
X3ZiaW9zX2Jvb3R1cF92YWx1ZXMsCiAJLmdldF9jbGtfaW5mb19mcm9tX3ZiaW9zID0gc211X3Yx
MV8wX2dldF9jbGtfaW5mb19mcm9tX3ZiaW9zLAotCS5jaGVja19wcHRhYmxlID0gc211X3YxMV8w
X2NoZWNrX3BwdGFibGUsCi0JLnBhcnNlX3BwdGFibGUgPSBzbXVfdjExXzBfcGFyc2VfcHB0YWJs
ZSwKLQkucG9wdWxhdGVfc21jX3RhYmxlcyA9IHNtdV92MTFfMF9wb3B1bGF0ZV9zbWNfcHB0YWJs
ZSwKKwkuY2hlY2tfcHB0YWJsZSA9IGFyY3R1cnVzX2NoZWNrX3Bvd2VycGxheV90YWJsZSwKKwku
cGFyc2VfcHB0YWJsZSA9IGFyY3R1cnVzX3BhcnNlX3BwdGFibGUsCisJLnBvcHVsYXRlX3NtY190
YWJsZXMgPSBhcmN0dXJ1c19zZXRfZGVmYXVsdF9kcG1fdGFibGUsCiAJLmNoZWNrX2Z3X3ZlcnNp
b24gPSBzbXVfdjExXzBfY2hlY2tfZndfdmVyc2lvbiwKIAkud3JpdGVfcHB0YWJsZSA9IHNtdV92
MTFfMF93cml0ZV9wcHRhYmxlLAogCS5zZXRfbWluX2RjZWZfZGVlcF9zbGVlcCA9IHNtdV92MTFf
MF9zZXRfbWluX2RjZWZfZGVlcF9zbGVlcCwKQEAgLTE5MTMsNyArMTk1Niw2IEBAIHN0YXRpYyBj
b25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyBhcmN0dXJ1c19wcHRfZnVuY3MgPSB7CiAJLmluaXRf
bWF4X3N1c3RhaW5hYmxlX2Nsb2NrcyA9IHNtdV92MTFfMF9pbml0X21heF9zdXN0YWluYWJsZV9j
bG9ja3MsCiAJLnN0YXJ0X3RoZXJtYWxfY29udHJvbCA9IHNtdV92MTFfMF9zdGFydF90aGVybWFs
X2NvbnRyb2wsCiAJLnN0b3BfdGhlcm1hbF9jb250cm9sID0gc211X3YxMV8wX3N0b3BfdGhlcm1h
bF9jb250cm9sLAotCS5zZXRfZGVlcF9zbGVlcF9kY2VmY2xrID0gc211X3YxMV8wX3NldF9kZWVw
X3NsZWVwX2RjZWZjbGssCiAJLmRpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0ID0gc211X3Yx
MV8wX2Rpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0LAogCS5nZXRfZmFuX2NvbnRyb2xfbW9k
ZSA9IHNtdV92MTFfMF9nZXRfZmFuX2NvbnRyb2xfbW9kZSwKIAkuc2V0X2Zhbl9jb250cm9sX21v
ZGUgPSBzbXVfdjExXzBfc2V0X2Zhbl9jb250cm9sX21vZGUsCkBAIC0xOTI1LDEyICsxOTY3LDEw
IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyBhcmN0dXJ1c19wcHRfZnVuY3Mg
PSB7CiAJLnNldF9hemFsaWFfZDNfcG1lID0gc211X3YxMV8wX3NldF9hemFsaWFfZDNfcG1lLAog
CS5nZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYyA9IHNtdV92MTFfMF9nZXRfbWF4X3N1
c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYywKIAkuYmFjb19pc19zdXBwb3J0PSBzbXVfdjExXzBfYmFj
b19pc19zdXBwb3J0LAotCS5iYWNvX2dldF9zdGF0ZSA9IHNtdV92MTFfMF9iYWNvX2dldF9zdGF0
ZSwKIAkuYmFjb19zZXRfc3RhdGUgPSBzbXVfdjExXzBfYmFjb19zZXRfc3RhdGUsCiAJLmJhY29f
cmVzZXQgPSBzbXVfdjExXzBfYmFjb19yZXNldCwKIAkuZ2V0X2RwbV91bHRpbWF0ZV9mcmVxID0g
c211X3YxMV8wX2dldF9kcG1fdWx0aW1hdGVfZnJlcSwKIAkuc2V0X3NvZnRfZnJlcV9saW1pdGVk
X3JhbmdlID0gc211X3YxMV8wX3NldF9zb2Z0X2ZyZXFfbGltaXRlZF9yYW5nZSwKLQkub3ZlcnJp
ZGVfcGNpZV9wYXJhbWV0ZXJzID0gc211X3YxMV8wX292ZXJyaWRlX3BjaWVfcGFyYW1ldGVycywK
IH07CiAKIHZvaWQgYXJjdHVydXNfc2V0X3BwdF9mdW5jcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L2luYy9hbWRncHVf
c211LmggYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1X3NtdS5oCmlu
ZGV4IDQwMmEwMjFmMjM3Yi4uNjUwYjUwNDdhZDNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS9pbmMvYW1kZ3B1X3NtdS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L2luYy9hbWRncHVfc211LmgKQEAgLTM5NCwxMCArMzk0LDYgQEAgc3RydWN0
IHNtdV9jb250ZXh0CiB9OwogCiBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyB7Ci0JaW50ICgqYWxsb2Nf
ZHBtX2NvbnRleHQpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQlpbnQgKCpzdG9yZV9wb3dl
cnBsYXlfdGFibGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQlpbnQgKCpjaGVja19wb3dl
cnBsYXlfdGFibGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQlpbnQgKCphcHBlbmRfcG93
ZXJwbGF5X3RhYmxlKShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAJaW50ICgqZ2V0X3NtdV9t
c2dfaW5kZXgpKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBpbmRleCk7CiAJaW50
ICgqZ2V0X3NtdV9jbGtfaW5kZXgpKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBp
bmRleCk7CiAJaW50ICgqZ2V0X3NtdV9mZWF0dXJlX2luZGV4KShzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgdWludDMyX3QgaW5kZXgpOwpAQCAtNDA3LDcgKzQwMyw2IEBAIHN0cnVjdCBwcHRhYmxl
X2Z1bmNzIHsKIAlpbnQgKCpydW5fYnRjKShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAJaW50
ICgqZ2V0X2FsbG93ZWRfZmVhdHVyZV9tYXNrKShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWlu
dDMyX3QgKmZlYXR1cmVfbWFzaywgdWludDMyX3QgbnVtKTsKIAllbnVtIGFtZF9wbV9zdGF0ZV90
eXBlICgqZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsK
LQlpbnQgKCpzZXRfZGVmYXVsdF9kcG1fdGFibGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsK
IAlpbnQgKCpzZXRfcG93ZXJfc3RhdGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAlpbnQg
KCpwb3B1bGF0ZV91bWRfc3RhdGVfY2xrKShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAJaW50
ICgqcHJpbnRfY2xrX2xldmVscykoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Ns
a190eXBlIGNsa190eXBlLCBjaGFyICpidWYpOwpAQCAtNDQ5LDcgKzQ0NCw2IEBAIHN0cnVjdCBw
cHRhYmxlX2Z1bmNzIHsKIAkJCQkgICAgICB1aW50MzJfdCAqc29jX21hc2spOwogCWludCAoKnNl
dF9jcHVfcG93ZXJfc3RhdGUpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAlib29sICgqaXNf
ZHBtX3J1bm5pbmcpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQlpbnQgKCp0YWJsZXNfaW5p
dCkoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHN0cnVjdCBzbXVfdGFibGUgKnRhYmxlcyk7CiAJ
aW50ICgqc2V0X3RoZXJtYWxfZmFuX3RhYmxlKShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAJ
aW50ICgqZ2V0X2Zhbl9zcGVlZF9wZXJjZW50KShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWlu
dDMyX3QgKnNwZWVkKTsKIAlpbnQgKCpnZXRfZmFuX3NwZWVkX3JwbSkoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIHVpbnQzMl90ICpzcGVlZCk7CkBAIC00ODgsNyArNDgyLDcgQEAgc3RydWN0IHBw
dGFibGVfZnVuY3MgewogCWludCAoKnBvd2VyZ2F0ZV92Y24pKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LCBib29sIGdhdGUpOwogCWludCAoKnNldF9nZnhfY2dwZykoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsIGJvb2wgZW5hYmxlKTsKIAlpbnQgKCp3cml0ZV9wcHRhYmxlKShzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSk7Ci0JaW50ICgqc2V0X21pbl9kY2VmX2RlZXBfc2xlZXApKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211KTsKKwlpbnQgKCpzZXRfbWluX2RjZWZfZGVlcF9zbGVlcCkoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGNsayk7CiAJaW50ICgqc2V0X3Rvb2xfdGFibGVfbG9j
YXRpb24pKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAlpbnQgKCpub3RpZnlfbWVtb3J5X3Bv
b2xfbG9jYXRpb24pKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAlpbnQgKCpzZXRfbGFzdF9k
Y2VmX21pbl9kZWVwX3NsZWVwX2Nsaykoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwpAQCAtNTA1
LDcgKzQ5OSw2IEBAIHN0cnVjdCBwcHRhYmxlX2Z1bmNzIHsKIAlpbnQgKCppbml0X21heF9zdXN0
YWluYWJsZV9jbG9ja3MpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAlpbnQgKCpzdGFydF90
aGVybWFsX2NvbnRyb2wpKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAlpbnQgKCpzdG9wX3Ro
ZXJtYWxfY29udHJvbCkoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwotCWludCAoKnNldF9kZWVw
X3NsZWVwX2RjZWZjbGspKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCBjbGspOwog
CWludCAoKnNldF9hY3RpdmVfZGlzcGxheV9jb3VudCkoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IHVpbnQzMl90IGNvdW50KTsKIAlpbnQgKCpzdG9yZV9jYzZfZGF0YSkoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIHVpbnQzMl90IHNlcGFyYXRpb25fdGltZSwKIAkJCSAgICAgIGJvb2wgY2M2X2Rp
c2FibGUsIGJvb2wgcHN0YXRlX2Rpc2FibGUsCkBAIC01MzcsMjcgKzUzMCwyMiBAQCBzdHJ1Y3Qg
cHB0YWJsZV9mdW5jcyB7CiAJaW50ICgqc2V0X2F6YWxpYV9kM19wbWUpKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211KTsKIAlpbnQgKCpnZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYykoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsIHN0cnVjdCBwcF9zbXVfbnZfY2xvY2tfdGFibGUgKm1heF9j
bG9ja3MpOwogCWJvb2wgKCpiYWNvX2lzX3N1cHBvcnQpKHN0cnVjdCBzbXVfY29udGV4dCAqc211
KTsKLQllbnVtIHNtdV9iYWNvX3N0YXRlICgqYmFjb19nZXRfc3RhdGUpKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211KTsKIAlpbnQgKCpiYWNvX3NldF9zdGF0ZSkoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIGVudW0gc211X2JhY29fc3RhdGUgc3RhdGUpOwogCWludCAoKmJhY29fcmVzZXQpKHN0cnVj
dCBzbXVfY29udGV4dCAqc211KTsKIAlpbnQgKCptb2RlMl9yZXNldCkoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUpOwogCWludCAoKmdldF9kcG1fdWx0aW1hdGVfZnJlcSkoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLCB1aW50MzJfdCAqbWluLCB1aW50
MzJfdCAqbWF4KTsKIAlpbnQgKCpzZXRfc29mdF9mcmVxX2xpbWl0ZWRfcmFuZ2UpKHN0cnVjdCBz
bXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwgdWludDMyX3QgbWlu
LCB1aW50MzJfdCBtYXgpOwotCWludCAoKm92ZXJyaWRlX3BjaWVfcGFyYW1ldGVycykoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUpOwogfTsKIAogaW50IHNtdV9sb2FkX21pY3JvY29kZShzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSk7CiAKIGludCBzbXVfY2hlY2tfZndfc3RhdHVzKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211KTsKIAotaW50IHNtdV9zZXRfZ2Z4X2NncGcoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsIGJvb2wgZW5hYmxlZCk7Ci0KIGludCBzbXVfc2V0X2Zhbl9zcGVlZF9ycG0oc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IHNwZWVkKTsKIAogaW50IHNtdV9nZXRfcG93ZXJf
bGltaXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCQl1aW50MzJfdCAqbGltaXQsCi0JCQli
b29sIGRlZiwKLQkJCWJvb2wgbG9ja19uZWVkZWQpOworCQkJYm9vbCBkZWYpOwogCiBpbnQgc211
X3NldF9wb3dlcl9saW1pdChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMyX3QgbGltaXQp
OwogaW50IHNtdV9wcmludF9jbGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVt
IHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwgY2hhciAqYnVmKTsKQEAgLTU3NSw4ICs1NjMsNyBAQCBp
bnQgc211X2dldF9wb3dlcl9wcm9maWxlX21vZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNo
YXIgKmJ1Zik7CiAKIGludCBzbXVfc2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZShzdHJ1Y3Qgc211X2Nv
bnRleHQgKnNtdSwKIAkJCSAgICAgICBsb25nICpwYXJhbSwKLQkJCSAgICAgICB1aW50MzJfdCBw
YXJhbV9zaXplLAotCQkJICAgICAgIGJvb2wgbG9ja19uZWVkZWQpOworCQkJICAgICAgIHVpbnQz
Ml90IHBhcmFtX3NpemUpOwogaW50IHNtdV9nZXRfZmFuX2NvbnRyb2xfbW9kZShzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSk7CiBpbnQgc211X3NldF9mYW5fY29udHJvbF9tb2RlKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCBpbnQgdmFsdWUpOwogaW50IHNtdV9nZXRfZmFuX3NwZWVkX3BlcmNlbnQo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90ICpzcGVlZCk7CkBAIC02MTksODAgKzYw
NiwzOCBAQCBpbnQgc211X2JhY29fcmVzZXQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwogCiBp
bnQgc211X21vZGUyX3Jlc2V0KHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAotZXh0ZXJuIGlu
dCBzbXVfZ2V0X2F0b21fZGF0YV90YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMy
X3QgdGFibGUsCi0JCQkJICAgdWludDE2X3QgKnNpemUsIHVpbnQ4X3QgKmZyZXYsIHVpbnQ4X3Qg
KmNyZXYsCi0JCQkJICAgdWludDhfdCAqKmFkZHIpOwotCi1leHRlcm4gY29uc3Qgc3RydWN0IGFt
ZF9pcF9mdW5jcyBzbXVfaXBfZnVuY3M7Ci0KLWV4dGVybiBjb25zdCBzdHJ1Y3QgYW1kZ3B1X2lw
X2Jsb2NrX3ZlcnNpb24gc211X3YxMV8wX2lwX2Jsb2NrOwotZXh0ZXJuIGNvbnN0IHN0cnVjdCBh
bWRncHVfaXBfYmxvY2tfdmVyc2lvbiBzbXVfdjEyXzBfaXBfYmxvY2s7Ci0KLWV4dGVybiBpbnQg
c211X2ZlYXR1cmVfaW5pdF9kcG0oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwotCi1leHRlcm4g
aW50IHNtdV9mZWF0dXJlX2lzX2VuYWJsZWQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCi0JCQkJ
ICBlbnVtIHNtdV9mZWF0dXJlX21hc2sgbWFzayk7Ci1leHRlcm4gaW50IHNtdV9mZWF0dXJlX3Nl
dF9lbmFibGVkKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAotCQkJCSAgIGVudW0gc211X2ZlYXR1
cmVfbWFzayBtYXNrLCBib29sIGVuYWJsZSk7Ci1leHRlcm4gaW50IHNtdV9mZWF0dXJlX2lzX3N1
cHBvcnRlZChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKLQkJCQkgICAgZW51bSBzbXVfZmVhdHVy
ZV9tYXNrIG1hc2spOwotZXh0ZXJuIGludCBzbXVfZmVhdHVyZV9zZXRfc3VwcG9ydGVkKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LAotCQkJCSAgICAgZW51bSBzbXVfZmVhdHVyZV9tYXNrIG1hc2ss
IGJvb2wgZW5hYmxlKTsKLQotaW50IHNtdV91cGRhdGVfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsIGVudW0gc211X3RhYmxlX2lkIHRhYmxlX2luZGV4LCBpbnQgYXJndW1lbnQsCi0JCSAg
ICAgdm9pZCAqdGFibGVfZGF0YSwgYm9vbCBkcnYyc211KTsKLQogYm9vbCBpc19zdXBwb3J0X3N3
X3NtdShzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldik7CiBib29sIGlzX3N1cHBvcnRfc3dfc211
X3hnbWkoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYpOwotaW50IHNtdV9yZXNldChzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSk7Ci1pbnQgc211X2NvbW1vbl9yZWFkX3NlbnNvcihzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwgZW51bSBhbWRfcHBfc2Vuc29ycyBzZW5zb3IsCi0JCQkgICB2b2lkICpk
YXRhLCB1aW50MzJfdCAqc2l6ZSk7CiBpbnQgc211X3N5c19nZXRfcHBfdGFibGUoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUsIHZvaWQgKip0YWJsZSk7CiBpbnQgc211X3N5c19zZXRfcHBfdGFibGUo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsICB2b2lkICpidWYsIHNpemVfdCBzaXplKTsKIGludCBz
bXVfZ2V0X3Bvd2VyX251bV9zdGF0ZXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHN0cnVjdCBw
cF9zdGF0ZXNfaW5mbyAqc3RhdGVfaW5mbyk7CiBlbnVtIGFtZF9wbV9zdGF0ZV90eXBlIHNtdV9n
ZXRfY3VycmVudF9wb3dlcl9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7Ci1pbnQgc211
X3dyaXRlX3dhdGVybWFya3NfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwogaW50IHNt
dV9zZXRfd2F0ZXJtYXJrc19mb3JfY2xvY2tfcmFuZ2VzKAogCQlzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwKIAkJc3RydWN0IGRtX3BwX3dtX3NldHNfd2l0aF9jbG9ja19yYW5nZXNfc29jMTUgKmNs
b2NrX3Jhbmdlcyk7CiAKIC8qIHNtdSB0byBkaXNwbGF5IGludGVyZmFjZSAqLwotZXh0ZXJuIGlu
dCBzbXVfZGlzcGxheV9jb25maWd1cmF0aW9uX2NoYW5nZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSwgY29uc3QKK2ludCBzbXVfZGlzcGxheV9jb25maWd1cmF0aW9uX2NoYW5nZShzdHJ1Y3Qgc211
X2NvbnRleHQgKnNtdSwgY29uc3QKIAkJCQkJICAgIHN0cnVjdCBhbWRfcHBfZGlzcGxheV9jb25m
aWd1cmF0aW9uCiAJCQkJCSAgICAqZGlzcGxheV9jb25maWcpOwotZXh0ZXJuIGludCBzbXVfZ2V0
X2N1cnJlbnRfY2xvY2tzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAoraW50IHNtdV9nZXRfY3Vy
cmVudF9jbG9ja3Moc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCQkJICBzdHJ1Y3QgYW1kX3Bw
X2Nsb2NrX2luZm8gKmNsb2Nrcyk7Ci1leHRlcm4gaW50IHNtdV9kcG1fc2V0X3Bvd2VyX2dhdGUo
c3RydWN0IHNtdV9jb250ZXh0ICpzbXUsdWludDMyX3QgYmxvY2tfdHlwZSwgYm9vbCBnYXRlKTsK
LWV4dGVybiBpbnQgc211X2hhbmRsZV90YXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAoraW50
IHNtdV9kcG1fc2V0X3Bvd2VyX2dhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsdWludDMyX3Qg
YmxvY2tfdHlwZSwgYm9vbCBnYXRlKTsKK2ludCBzbXVfaGFuZGxlX3Rhc2soc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsCiAJCQkgICBlbnVtIGFtZF9kcG1fZm9yY2VkX2xldmVsIGxldmVsLAotCQkJ
ICAgZW51bSBhbWRfcHBfdGFzayB0YXNrX2lkLAotCQkJICAgYm9vbCBsb2NrX25lZWRlZCk7CisJ
CQkgICBlbnVtIGFtZF9wcF90YXNrIHRhc2tfaWQpOwogaW50IHNtdV9zd2l0Y2hfcG93ZXJfcHJv
ZmlsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJCSAgICAgZW51bSBQUF9TTUNfUE9XRVJf
UFJPRklMRSB0eXBlLAogCQkJICAgICBib29sIGVuKTsKLWludCBzbXVfZ2V0X3NtY192ZXJzaW9u
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCAqaWZfdmVyc2lvbiwgdWludDMyX3Qg
KnNtdV92ZXJzaW9uKTsKLWludCBzbXVfZ2V0X2RwbV9mcmVxX2J5X2luZGV4KHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJCSAgICAgIHVpbnQx
Nl90IGxldmVsLCB1aW50MzJfdCAqdmFsdWUpOwotaW50IHNtdV9nZXRfZHBtX2xldmVsX2NvdW50
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKLQkJ
CSAgICB1aW50MzJfdCAqdmFsdWUpOwotaW50IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLAotCQkJICAgdWlu
dDMyX3QgKm1pbiwgdWludDMyX3QgKm1heCwgYm9vbCBsb2NrX25lZWRlZCk7Ci1pbnQgc211X3Nl
dF9zb2Z0X2ZyZXFfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190
eXBlIGNsa190eXBlLAotCQkJICAgIHVpbnQzMl90IG1pbiwgdWludDMyX3QgbWF4KTsKLWludCBz
bXVfc2V0X2hhcmRfZnJlcV9yYW5nZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVf
Y2xrX3R5cGUgY2xrX3R5cGUsCi0JCQkgICAgdWludDMyX3QgbWluLCB1aW50MzJfdCBtYXgpOwog
ZW51bSBhbWRfZHBtX2ZvcmNlZF9sZXZlbCBzbXVfZ2V0X3BlcmZvcm1hbmNlX2xldmVsKHN0cnVj
dCBzbXVfY29udGV4dCAqc211KTsKIGludCBzbXVfZm9yY2VfcGVyZm9ybWFuY2VfbGV2ZWwoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWwpOwog
aW50IHNtdV9zZXRfZGlzcGxheV9jb3VudChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgdWludDMy
X3QgY291bnQpOwotYm9vbCBzbXVfY2xrX2RwbV9pc19lbmFibGVkKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSk7CiBjb25zdCBjaGFyICpzbXVfZ2V0
X21lc3NhZ2VfbmFtZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVfbWVzc2FnZV90
eXBlIHR5cGUpOwotY29uc3QgY2hhciAqc211X2dldF9mZWF0dXJlX25hbWUoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIGVudW0gc211X2ZlYXR1cmVfbWFzayBmZWF0dXJlKTsKIHNpemVfdCBzbXVf
c3lzX2dldF9wcF9mZWF0dXJlX21hc2soc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGNoYXIgKmJ1
Zik7CiBpbnQgc211X3N5c19zZXRfcHBfZmVhdHVyZV9tYXNrKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LCB1aW50NjRfdCBuZXdfbWFzayk7CiBpbnQgc211X2ZvcmNlX2Nsa19sZXZlbHMoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCiAJCQkgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsCi0JCQkg
dWludDMyX3QgbWFzaywKLQkJCSBib29sIGxvY2tfbmVlZGVkKTsKKwkJCSB1aW50MzJfdCBtYXNr
KTsKIGludCBzbXVfc2V0X21wMV9zdGF0ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAkJICAg
ICAgZW51bSBwcF9tcDFfc3RhdGUgbXAxX3N0YXRlKTsKIGludCBzbXVfc2V0X2RmX2NzdGF0ZShz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKQEAgLTcwOCw0ICs2NTMsMTMgQEAgaW50IHNtdV9nZXRf
dWNsa19kcG1fc3RhdGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogaW50IHNtdV9nZXRfZHBt
X2Nsb2NrX3RhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQkJICAgIHN0cnVjdCBkcG1f
Y2xvY2tzICpjbG9ja190YWJsZSk7CiAKK2ludCBzbXVfZ2V0X2RwbV9mcmVxX3JhbmdlKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LAorCQkJICAgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsCisJ
CQkgICB1aW50MzJfdCAqbWluLAorCQkJICAgdWludDMyX3QgKm1heCk7CisKK2V4dGVybiBjb25z
dCBzdHJ1Y3QgYW1kX2lwX2Z1bmNzIHNtdV9pcF9mdW5jczsKK2V4dGVybiBjb25zdCBzdHJ1Y3Qg
YW1kZ3B1X2lwX2Jsb2NrX3ZlcnNpb24gc211X3YxMV8wX2lwX2Jsb2NrOworZXh0ZXJuIGNvbnN0
IHN0cnVjdCBhbWRncHVfaXBfYmxvY2tfdmVyc2lvbiBzbXVfdjEyXzBfaXBfYmxvY2s7CisKICNl
bmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5jL3NtdV92
MTFfMC5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5jL3NtdV92MTFfMC5oCmlu
ZGV4IDg4ZWU2NjY4MzI3MS4uMTg0ZmI3YzlkOGRjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS9pbmMvc211X3YxMV8wLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2Ft
ZC9wb3dlcnBsYXkvaW5jL3NtdV92MTFfMC5oCkBAIC0xMzUsOCArMTM1LDYgQEAgaW50IHNtdV92
MTFfMF9pbml0X21pY3JvY29kZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAKIGludCBzbXVf
djExXzBfbG9hZF9taWNyb2NvZGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwogCi1pbnQgc211
X3YxMV8wX2luaXRfc21jX3RhYmxlcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7Ci0KIGludCBz
bXVfdjExXzBfZmluaV9zbWNfdGFibGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAogaW50
IHNtdV92MTFfMF9pbml0X3Bvd2VyKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKQEAgLTE1MSwx
NyArMTQ5LDExIEBAIGludCBzbXVfdjExXzBfZ2V0X3ZiaW9zX2Jvb3R1cF92YWx1ZXMoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUpOwogCiBpbnQgc211X3YxMV8wX2dldF9jbGtfaW5mb19mcm9tX3Zi
aW9zKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAotaW50IHNtdV92MTFfMF9jaGVja19wcHRh
YmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQotaW50IHNtdV92MTFfMF9wYXJzZV9wcHRh
YmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQotaW50IHNtdV92MTFfMF9wb3B1bGF0ZV9z
bWNfcHB0YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7Ci0KIGludCBzbXVfdjExXzBfY2hl
Y2tfZndfdmVyc2lvbihzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAKIGludCBzbXVfdjExXzBf
d3JpdGVfcHB0YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAKLWludCBzbXVfdjExXzBf
c2V0X21pbl9kY2VmX2RlZXBfc2xlZXAoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOworaW50IHNt
dV92MTFfMF9zZXRfbWluX2RjZWZfZGVlcF9zbGVlcChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwg
dWludDMyX3QgY2xrKTsKIAogaW50IHNtdV92MTFfMF9zZXRfdG9vbF90YWJsZV9sb2NhdGlvbihz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7CiAKQEAgLTIwMyw4ICsxOTUsNiBAQCBpbnQgc211X3Yx
MV8wX3JlYWRfc2Vuc29yKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQkJCSBlbnVtIGFtZF9w
cF9zZW5zb3JzIHNlbnNvciwKIAkJCQkgdm9pZCAqZGF0YSwgdWludDMyX3QgKnNpemUpOwogCi1p
bnQgc211X3YxMV8wX3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIHVpbnQzMl90IGNsayk7Ci0KIGludAogc211X3YxMV8wX2Rpc3BsYXlfY2xvY2tfdm9sdGFn
ZV9yZXF1ZXN0KHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQkJCQlzdHJ1Y3QgcHBfZGlzcGxh
eV9jbG9ja19yZXF1ZXN0CkBAIC0yMzcsOCArMjI3LDYgQEAgaW50IHNtdV92MTFfMF9nZXRfbWF4
X3N1c3RhaW5hYmxlX2Nsb2Nrc19ieV9kYyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwKIAogYm9v
bCBzbXVfdjExXzBfYmFjb19pc19zdXBwb3J0KHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKIAot
ZW51bSBzbXVfYmFjb19zdGF0ZSBzbXVfdjExXzBfYmFjb19nZXRfc3RhdGUoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUpOwotCiBpbnQgc211X3YxMV8wX2JhY29fc2V0X3N0YXRlKHN0cnVjdCBzbXVf
Y29udGV4dCAqc211LCBlbnVtIHNtdV9iYWNvX3N0YXRlIHN0YXRlKTsKIAogaW50IHNtdV92MTFf
MF9iYWNvX3Jlc2V0KHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKQEAgLTI0OSw2ICsyMzcsNiBA
QCBpbnQgc211X3YxMV8wX2dldF9kcG1fdWx0aW1hdGVfZnJlcShzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgYwogaW50IHNtdV92MTFfMF9zZXRfc29mdF9mcmVxX2xp
bWl0ZWRfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNs
a190eXBlLAogCQkJICAgIHVpbnQzMl90IG1pbiwgdWludDMyX3QgbWF4KTsKIAotaW50IHNtdV92
MTFfMF9vdmVycmlkZV9wY2llX3BhcmFtZXRlcnMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwot
CitpbnQgc211X3YxMV8wX3NldF9oYXJkX2ZyZXFfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLAorCQkJICAgIHVpbnQzMl90IG1pbiwgdWlu
dDMyX3QgbWF4KTsKICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dl
cnBsYXkvaW5jL3NtdV92MTJfMC5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5j
L3NtdV92MTJfMC5oCmluZGV4IDliOWY1ZGYwOTExYy4uNjhhOTY1NTBlNTM0IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS9pbmMvc211X3YxMl8wLmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvaW5jL3NtdV92MTJfMC5oCkBAIC02MCwxMiArNjAs
OCBAQCBpbnQgc211X3YxMl8wX3Bvd2VyZ2F0ZV92Y24oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUs
IGJvb2wgZ2F0ZSk7CiAKIGludCBzbXVfdjEyXzBfc2V0X2dmeF9jZ3BnKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCBib29sIGVuYWJsZSk7CiAKLXVpbnQzMl90IHNtdV92MTJfMF9nZXRfZ2Z4b2Zm
X3N0YXR1cyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSk7Ci0KIGludCBzbXVfdjEyXzBfZ2Z4X29m
Zl9jb250cm9sKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGVuYWJsZSk7CiAKLWludCBz
bXVfdjEyXzBfaW5pdF9zbWNfdGFibGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211KTsKLQogaW50
IHNtdV92MTJfMF9maW5pX3NtY190YWJsZXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpOwogCiBp
bnQgc211X3YxMl8wX3BvcHVsYXRlX3NtY190YWJsZXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5j
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvbmF2aTEwX3BwdC5jCmluZGV4IDM0Mzkw
NjU2YTAzZS4uMTEyMWQwNjQxNzZjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bv
d2VycGxheS9uYXZpMTBfcHB0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkv
bmF2aTEwX3BwdC5jCkBAIC01MjgsNiArNTI4LDMwIEBAIHN0YXRpYyBpbnQgbmF2aTEwX3N0b3Jl
X3Bvd2VycGxheV90YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAlyZXR1cm4gMDsKIH0K
IAorc3RhdGljIGludCBuYXZpMTBfcGFyc2VfcHB0YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNt
dSkKK3sKKwlpbnQgcmV0OworCisJc3RydWN0IHNtdV90YWJsZV9jb250ZXh0ICp0YWJsZV9jb250
ZXh0ID0gJnNtdS0+c211X3RhYmxlOworCXN0cnVjdCBzbXVfdGFibGUgKnRhYmxlID0gJnRhYmxl
X2NvbnRleHQtPnRhYmxlc1tTTVVfVEFCTEVfUFBUQUJMRV07CisKKwlpZiAodGFibGVfY29udGV4
dC0+ZHJpdmVyX3BwdGFibGUpCisJCXJldHVybiAtRUlOVkFMOworCisJdGFibGVfY29udGV4dC0+
ZHJpdmVyX3BwdGFibGUgPSBremFsbG9jKHRhYmxlLT5zaXplLCBHRlBfS0VSTkVMKTsKKworCWlm
ICghdGFibGVfY29udGV4dC0+ZHJpdmVyX3BwdGFibGUpCisJCXJldHVybiAtRU5PTUVNOworCisJ
cmV0ID0gbmF2aTEwX3N0b3JlX3Bvd2VycGxheV90YWJsZShzbXUpOworCWlmIChyZXQpCisJCXJl
dHVybiAtRUlOVkFMOworCisJcmV0ID0gbmF2aTEwX2FwcGVuZF9wb3dlcnBsYXlfdGFibGUoc211
KTsKKworCXJldHVybiByZXQ7Cit9CisKIHN0YXRpYyBpbnQgbmF2aTEwX3RhYmxlc19pbml0KHN0
cnVjdCBzbXVfY29udGV4dCAqc211LCBzdHJ1Y3Qgc211X3RhYmxlICp0YWJsZXMpCiB7CiAJc3Ry
dWN0IHNtdV90YWJsZV9jb250ZXh0ICpzbXVfdGFibGUgPSAmc211LT5zbXVfdGFibGU7CkBAIC01
OTIsNiArNjE2LDMzIEBAIHN0YXRpYyBpbnQgbmF2aTEwX2FsbG9jYXRlX2RwbV9jb250ZXh0KHN0
cnVjdCBzbXVfY29udGV4dCAqc211KQogCXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IG5hdmkx
MF9pbml0X3NtY190YWJsZXMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCit7CisJc3RydWN0IHNt
dV90YWJsZV9jb250ZXh0ICpzbXVfdGFibGUgPSAmc211LT5zbXVfdGFibGU7CisJc3RydWN0IHNt
dV90YWJsZSAqdGFibGVzID0gTlVMTDsKKwlpbnQgcmV0ID0gMDsKKworCWlmIChzbXVfdGFibGUt
PnRhYmxlcykKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwl0YWJsZXMgPSBrY2FsbG9jKFNNVV9UQUJM
RV9DT1VOVCwgc2l6ZW9mKHN0cnVjdCBzbXVfdGFibGUpLAorCQkJIEdGUF9LRVJORUwpOworCWlm
ICghdGFibGVzKQorCQlyZXR1cm4gLUVOT01FTTsKKworCXNtdV90YWJsZS0+dGFibGVzID0gdGFi
bGVzOworCisJcmV0ID0gbmF2aTEwX3RhYmxlc19pbml0KHNtdSwgdGFibGVzKTsKKwlpZiAocmV0
KQorCQlyZXR1cm4gcmV0OworCisJcmV0ID0gbmF2aTEwX2FsbG9jYXRlX2RwbV9jb250ZXh0KHNt
dSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXJldHVybiAwOworfQorCiBzdGF0aWMg
aW50IG5hdmkxMF9zZXRfZGVmYXVsdF9kcG1fdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUp
CiB7CiAJc3RydWN0IHNtdV9kcG1fY29udGV4dCAqc211X2RwbSA9ICZzbXUtPnNtdV9kcG07CkBA
IC02OTAsNiArNzQxLDQ2IEBAIHN0YXRpYyBib29sIG5hdmkxMF9pc19zdXBwb3J0X2ZpbmVfZ3Jh
aW5lZF9kcG0oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211CiAJcmV0dXJuIGRwbV9k
ZXNjLT5TbmFwVG9EaXNjcmV0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlOwogfQogCitzdGF0aWMgaW50
IG5hdmkxMF9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVu
dW0gc211X2Nsa190eXBlIGNsa190eXBlLAorCQkJICAgICAgdWludDE2X3QgbGV2ZWwsIHVpbnQz
Ml90ICp2YWx1ZSkKK3sKKwlpbnQgcmV0ID0gMCwgY2xrX2lkID0gMDsKKwl1aW50MzJfdCBwYXJh
bTsKKworCWlmICghdmFsdWUpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKCFzbXVfY2xrX2Rw
bV9pc19lbmFibGVkKHNtdSwgY2xrX3R5cGUpKQorCQlyZXR1cm4gMDsKKworCWNsa19pZCA9IHNt
dV9jbGtfZ2V0X2luZGV4KHNtdSwgY2xrX3R5cGUpOworCWlmIChjbGtfaWQgPCAwKQorCQlyZXR1
cm4gY2xrX2lkOworCisJcGFyYW0gPSAodWludDMyX3QpKCgoY2xrX2lkICYgMHhmZmZmKSA8PCAx
NikgfCAobGV2ZWwgJiAweGZmZmYpKTsKKworCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9w
YXJhbShzbXUsU01VX01TR19HZXREcG1GcmVxQnlJbmRleCwKKwkJCQkJICBwYXJhbSk7CisJaWYg
KHJldCkKKwkJcmV0dXJuIHJldDsKKworCXJldCA9IHNtdV9yZWFkX3NtY19hcmcoc211LCAmcGFy
YW0pOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkvKiBCSVQzMTogIDAgLSBGaW5lIGdy
YWluZWQgRFBNLCAxIC0gRGljcmV0ZSBEUE0KKwkgKiBub3csIHdlIHVuLXN1cHBvcnQgaXQgKi8K
KwkqdmFsdWUgPSBwYXJhbSAmIDB4N2ZmZmZmZmY7CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0
aWMgaW50IG5hdmkxMF9nZXRfZHBtX2xldmVsX2NvdW50KHN0cnVjdCBzbXVfY29udGV4dCAqc211
LCBlbnVtIHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKKwkJCSAgICB1aW50MzJfdCAqdmFsdWUpCit7
CisJcmV0dXJuIG5hdmkxMF9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgoc211LCBjbGtfdHlwZSwgMHhm
ZiwgdmFsdWUpOworfQorCiBzdGF0aWMgaW50IG5hdmkxMF9wcmludF9jbGtfbGV2ZWxzKHN0cnVj
dCBzbXVfY29udGV4dCAqc211LAogCQkJZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsIGNoYXIg
KmJ1ZikKIHsKQEAgLTcxMywxMyArODA0LDEzIEBAIHN0YXRpYyBpbnQgbmF2aTEwX3ByaW50X2Ns
a19sZXZlbHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCS8qIDEwS0h6IC0+IE1IeiAqLwog
CQljdXJfdmFsdWUgPSBjdXJfdmFsdWUgLyAxMDA7CiAKLQkJcmV0ID0gc211X2dldF9kcG1fbGV2
ZWxfY291bnQoc211LCBjbGtfdHlwZSwgJmNvdW50KTsKKwkJcmV0ID0gbmF2aTEwX2dldF9kcG1f
bGV2ZWxfY291bnQoc211LCBjbGtfdHlwZSwgJmNvdW50KTsKIAkJaWYgKHJldCkKIAkJCXJldHVy
biBzaXplOwogCiAJCWlmICghbmF2aTEwX2lzX3N1cHBvcnRfZmluZV9ncmFpbmVkX2RwbShzbXUs
IGNsa190eXBlKSkgewogCQkJZm9yIChpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKLQkJCQlyZXQg
PSBzbXVfZ2V0X2RwbV9mcmVxX2J5X2luZGV4KHNtdSwgY2xrX3R5cGUsIGksICZ2YWx1ZSk7CisJ
CQkJcmV0ID0gbmF2aTEwX2dldF9kcG1fZnJlcV9ieV9pbmRleChzbXUsIGNsa190eXBlLCBpLCAm
dmFsdWUpOwogCQkJCWlmIChyZXQpCiAJCQkJCXJldHVybiBzaXplOwogCkBAIC03MjcsMTAgKzgx
OCwxMCBAQCBzdGF0aWMgaW50IG5hdmkxMF9wcmludF9jbGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LAogCQkJCQkJY3VyX3ZhbHVlID09IHZhbHVlID8gIioiIDogIiIpOwogCQkJfQog
CQl9IGVsc2UgewotCQkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9ieV9pbmRleChzbXUsIGNsa190
eXBlLCAwLCAmZnJlcV92YWx1ZXNbMF0pOworCQkJcmV0ID0gbmF2aTEwX2dldF9kcG1fZnJlcV9i
eV9pbmRleChzbXUsIGNsa190eXBlLCAwLCAmZnJlcV92YWx1ZXNbMF0pOwogCQkJaWYgKHJldCkK
IAkJCQlyZXR1cm4gc2l6ZTsKLQkJCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgoc211
LCBjbGtfdHlwZSwgY291bnQgLSAxLCAmZnJlcV92YWx1ZXNbMl0pOworCQkJcmV0ID0gbmF2aTEw
X2dldF9kcG1fZnJlcV9ieV9pbmRleChzbXUsIGNsa190eXBlLCBjb3VudCAtIDEsICZmcmVxX3Zh
bHVlc1syXSk7CiAJCQlpZiAocmV0KQogCQkJCXJldHVybiBzaXplOwogCkBAIC03NzIsMTEgKzg2
MywxMSBAQCBzdGF0aWMgaW50IG5hdmkxMF9mb3JjZV9jbGtfbGV2ZWxzKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LAogCWNhc2UgU01VX1VDTEs6CiAJY2FzZSBTTVVfRENFRkNMSzoKIAljYXNlIFNN
VV9GQ0xLOgotCQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX2J5X2luZGV4KHNtdSwgY2xrX3R5cGUs
IHNvZnRfbWluX2xldmVsLCAmbWluX2ZyZXEpOworCQlyZXQgPSBuYXZpMTBfZ2V0X2RwbV9mcmVx
X2J5X2luZGV4KHNtdSwgY2xrX3R5cGUsIHNvZnRfbWluX2xldmVsLCAmbWluX2ZyZXEpOwogCQlp
ZiAocmV0KQogCQkJcmV0dXJuIHNpemU7CiAKLQkJcmV0ID0gc211X2dldF9kcG1fZnJlcV9ieV9p
bmRleChzbXUsIGNsa190eXBlLCBzb2Z0X21heF9sZXZlbCwgJm1heF9mcmVxKTsKKwkJcmV0ID0g
bmF2aTEwX2dldF9kcG1fZnJlcV9ieV9pbmRleChzbXUsIGNsa190eXBlLCBzb2Z0X21heF9sZXZl
bCwgJm1heF9mcmVxKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiBzaXplOwogCkBAIC03OTYsMTMg
Kzg4NywxMyBAQCBzdGF0aWMgaW50IG5hdmkxMF9wb3B1bGF0ZV91bWRfc3RhdGVfY2xrKHN0cnVj
dCBzbXVfY29udGV4dCAqc211KQogCWludCByZXQgPSAwOwogCXVpbnQzMl90IG1pbl9zY2xrX2Zy
ZXEgPSAwLCBtaW5fbWNsa19mcmVxID0gMDsKIAotCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFu
Z2Uoc211LCBTTVVfU0NMSywgJm1pbl9zY2xrX2ZyZXEsIE5VTEwsIGZhbHNlKTsKKwlyZXQgPSBz
bXVfY21uX2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9TQ0xLLCAmbWluX3NjbGtfZnJlcSwg
TlVMTCk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAogCXNtdS0+cHN0YXRlX3NjbGsgPSBt
aW5fc2Nsa19mcmVxICogMTAwOwogCi0JcmV0ID0gc211X2dldF9kcG1fZnJlcV9yYW5nZShzbXUs
IFNNVV9NQ0xLLCAmbWluX21jbGtfZnJlcSwgTlVMTCwgZmFsc2UpOworCXJldCA9IHNtdV9jbW5f
Z2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgU01VX01DTEssICZtaW5fbWNsa19mcmVxLCBOVUxMKTsK
IAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCkBAIC04MjIsNyArOTEzLDcgQEAgc3RhdGljIGlu
dCBuYXZpMTBfZ2V0X2Nsb2NrX2J5X3R5cGVfd2l0aF9sYXRlbmN5KHN0cnVjdCBzbXVfY29udGV4
dCAqc211LAogCWNhc2UgU01VX0dGWENMSzoKIAljYXNlIFNNVV9EQ0VGQ0xLOgogCWNhc2UgU01V
X1NPQ0NMSzoKLQkJcmV0ID0gc211X2dldF9kcG1fbGV2ZWxfY291bnQoc211LCBjbGtfdHlwZSwg
JmxldmVsX2NvdW50KTsKKwkJcmV0ID0gbmF2aTEwX2dldF9kcG1fbGV2ZWxfY291bnQoc211LCBj
bGtfdHlwZSwgJmxldmVsX2NvdW50KTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAKQEAg
LTgzMCw3ICs5MjEsNyBAQCBzdGF0aWMgaW50IG5hdmkxMF9nZXRfY2xvY2tfYnlfdHlwZV93aXRo
X2xhdGVuY3koc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCWNsb2Nrcy0+bnVtX2xldmVscyA9
IGxldmVsX2NvdW50OwogCiAJCWZvciAoaSA9IDA7IGkgPCBsZXZlbF9jb3VudDsgaSsrKSB7Ci0J
CQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX2J5X2luZGV4KHNtdSwgY2xrX3R5cGUsIGksICZmcmVx
KTsKKwkJCXJldCA9IG5hdmkxMF9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgoc211LCBjbGtfdHlwZSwg
aSwgJmZyZXEpOwogCQkJaWYgKHJldCkKIAkJCQlyZXR1cm4gcmV0OwogCkBAIC04NTUsMTAgKzk0
NiwxMCBAQCBzdGF0aWMgaW50IG5hdmkxMF9wcmVfZGlzcGxheV9jb25maWdfY2hhbmdlZChzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSkKIAkJcmV0dXJuIHJldDsKIAogCWlmIChzbXVfZmVhdHVyZV9p
c19lbmFibGVkKHNtdSwgU01VX0ZFQVRVUkVfRFBNX1VDTEtfQklUKSkgewotCQlyZXQgPSBzbXVf
Z2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgU01VX1VDTEssIE5VTEwsICZtYXhfZnJlcSwgZmFsc2Up
OworCQlyZXQgPSBzbXVfY21uX2dldF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xLLCBOVUxM
LCAmbWF4X2ZyZXEpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKLQkJcmV0ID0gc211X3Nl
dF9oYXJkX2ZyZXFfcmFuZ2Uoc211LCBTTVVfVUNMSywgMCwgbWF4X2ZyZXEpOworCQlyZXQgPSBz
bXVfdjExXzBfc2V0X2hhcmRfZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xLLCAwLCBtYXhfZnJlcSk7
CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCX0KQEAgLTkwNSw3ICs5OTYsNyBAQCBzdGF0
aWMgaW50IG5hdmkxMF9mb3JjZV9kcG1fbGltaXRfdmFsdWUoc3RydWN0IHNtdV9jb250ZXh0ICpz
bXUsIGJvb2wgaGlnaGVzdCkKIAogCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGNsa3MpOyBp
KyspIHsKIAkJY2xrX3R5cGUgPSBjbGtzW2ldOwotCQlyZXQgPSBzbXVfZ2V0X2RwbV9mcmVxX3Jh
bmdlKHNtdSwgY2xrX3R5cGUsICZtaW5fZnJlcSwgJm1heF9mcmVxLCBmYWxzZSk7CisJCXJldCA9
IHNtdV9jbW5fZ2V0X2RwbV9mcmVxX3JhbmdlKHNtdSwgY2xrX3R5cGUsICZtaW5fZnJlcSwgJm1h
eF9mcmVxKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAKQEAgLTkzMiw3ICsxMDIzLDcg
QEAgc3RhdGljIGludCBuYXZpMTBfdW5mb3JjZV9kcG1fbGV2ZWxzKHN0cnVjdCBzbXVfY29udGV4
dCAqc211KQogCiAJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUoY2xrcyk7IGkrKykgewogCQlj
bGtfdHlwZSA9IGNsa3NbaV07Ci0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBj
bGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEsIGZhbHNlKTsKKwkJcmV0ID0gc211X2Ntbl9n
ZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEpOwog
CQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIApAQCAtMTIzMCwyMSArMTMyMSwyMSBAQCBzdGF0
aWMgaW50IG5hdmkxMF9nZXRfcHJvZmlsaW5nX2Nsa19tYXNrKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LAogCQkJKm1jbGtfbWFzayA9IDA7CiAJfSBlbHNlIGlmIChsZXZlbCA9PSBBTURfRFBNX0ZP
UkNFRF9MRVZFTF9QUk9GSUxFX1BFQUspIHsKIAkJaWYoc2Nsa19tYXNrKSB7Ci0JCQlyZXQgPSBz
bXVfZ2V0X2RwbV9sZXZlbF9jb3VudChzbXUsIFNNVV9TQ0xLLCAmbGV2ZWxfY291bnQpOworCQkJ
cmV0ID0gbmF2aTEwX2dldF9kcG1fbGV2ZWxfY291bnQoc211LCBTTVVfU0NMSywgJmxldmVsX2Nv
dW50KTsKIAkJCWlmIChyZXQpCiAJCQkJcmV0dXJuIHJldDsKIAkJCSpzY2xrX21hc2sgPSBsZXZl
bF9jb3VudCAtIDE7CiAJCX0KIAogCQlpZihtY2xrX21hc2spIHsKLQkJCXJldCA9IHNtdV9nZXRf
ZHBtX2xldmVsX2NvdW50KHNtdSwgU01VX01DTEssICZsZXZlbF9jb3VudCk7CisJCQlyZXQgPSBu
YXZpMTBfZ2V0X2RwbV9sZXZlbF9jb3VudChzbXUsIFNNVV9NQ0xLLCAmbGV2ZWxfY291bnQpOwog
CQkJaWYgKHJldCkKIAkJCQlyZXR1cm4gcmV0OwogCQkJKm1jbGtfbWFzayA9IGxldmVsX2NvdW50
IC0gMTsKIAkJfQogCiAJCWlmKHNvY19tYXNrKSB7Ci0JCQlyZXQgPSBzbXVfZ2V0X2RwbV9sZXZl
bF9jb3VudChzbXUsIFNNVV9TT0NDTEssICZsZXZlbF9jb3VudCk7CisJCQlyZXQgPSBuYXZpMTBf
Z2V0X2RwbV9sZXZlbF9jb3VudChzbXUsIFNNVV9TT0NDTEssICZsZXZlbF9jb3VudCk7CiAJCQlp
ZiAocmV0KQogCQkJCXJldHVybiByZXQ7CiAJCQkqc29jX21hc2sgPSBsZXZlbF9jb3VudCAtIDE7
CkBAIC0xMjg1LDcgKzEzNzYsNyBAQCBzdGF0aWMgaW50IG5hdmkxMF9ub3RpZnlfc21jX2Rpc3Bh
bHlfY29uZmlnKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQogCX0KIAogCWlmIChzbXVfZmVhdHVy
ZV9pc19lbmFibGVkKHNtdSwgU01VX0ZFQVRVUkVfRFBNX1VDTEtfQklUKSkgewotCQlyZXQgPSBz
bXVfc2V0X2hhcmRfZnJlcV9yYW5nZShzbXUsIFNNVV9VQ0xLLCBtaW5fY2xvY2tzLm1lbW9yeV9j
bG9jay8xMDAsIDApOworCQlyZXQgPSBzbXVfdjExXzBfc2V0X2hhcmRfZnJlcV9yYW5nZShzbXUs
IFNNVV9VQ0xLLCBtaW5fY2xvY2tzLm1lbW9yeV9jbG9jay8xMDAsIDApOwogCQlpZiAocmV0KSB7
CiAJCQlwcl9lcnIoIlslc10gU2V0IGhhcmQgbWluIHVjbGsgZmFpbGVkISIsIF9fZnVuY19fKTsK
IAkJCXJldHVybiByZXQ7CkBAIC0xNTA5LDEwICsxNjAwLDEwIEBAIHN0YXRpYyBpbnQgbmF2aTEw
X3NldF9wZWFrX2Nsb2NrX2J5X2RldmljZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAkJcmV0
dXJuIC1FSU5WQUw7CiAJfQogCi0JcmV0ID0gc211X2dldF9kcG1fbGV2ZWxfY291bnQoc211LCBT
TVVfVUNMSywgJnVjbGtfbGV2ZWwpOworCXJldCA9IG5hdmkxMF9nZXRfZHBtX2xldmVsX2NvdW50
KHNtdSwgU01VX1VDTEssICZ1Y2xrX2xldmVsKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0Owot
CXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgoc211LCBTTVVfVUNMSywgdWNsa19sZXZl
bCAtIDEsICZ1Y2xrX2ZyZXEpOworCXJldCA9IG5hdmkxMF9nZXRfZHBtX2ZyZXFfYnlfaW5kZXgo
c211LCBTTVVfVUNMSywgdWNsa19sZXZlbCAtIDEsICZ1Y2xrX2ZyZXEpOwogCWlmIChyZXQpCiAJ
CXJldHVybiByZXQ7CiAKQEAgLTE1NzEsOSArMTY2Miw5IEBAIHN0YXRpYyBpbnQgbmF2aTEwX2Rp
c3BsYXlfZGlzYWJsZV9tZW1vcnlfY2xvY2tfc3dpdGNoKHN0cnVjdCBzbXVfY29udGV4dCAqc211
LAogCQlyZXR1cm4gMDsKIAogCWlmKGRpc2FibGVfbWVtb3J5X2Nsb2NrX3N3aXRjaCkKLQkJcmV0
ID0gc211X3NldF9oYXJkX2ZyZXFfcmFuZ2Uoc211LCBTTVVfVUNMSywgbWF4X21lbW9yeV9jbG9j
aywgMCk7CisJCXJldCA9IHNtdV92MTFfMF9zZXRfaGFyZF9mcmVxX3JhbmdlKHNtdSwgU01VX1VD
TEssIG1heF9tZW1vcnlfY2xvY2ssIDApOwogCWVsc2UKLQkJcmV0ID0gc211X3NldF9oYXJkX2Zy
ZXFfcmFuZ2Uoc211LCBTTVVfVUNMSywgbWluX21lbW9yeV9jbG9jaywgMCk7CisJCXJldCA9IHNt
dV92MTFfMF9zZXRfaGFyZF9mcmVxX3JhbmdlKHNtdSwgU01VX1VDTEssIG1pbl9tZW1vcnlfY2xv
Y2ssIDApOwogCiAJaWYoIXJldCkKIAkJc211LT5kaXNhYmxlX3VjbGtfc3dpdGNoID0gZGlzYWJs
ZV9tZW1vcnlfY2xvY2tfc3dpdGNoOwpAQCAtMTY1NCwxMSArMTc0NSw2IEBAIHN0YXRpYyBpbnQg
bmF2aTEwX3VwZGF0ZV9wY2llX3BhcmFtZXRlcnMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAK
IAogc3RhdGljIGNvbnN0IHN0cnVjdCBwcHRhYmxlX2Z1bmNzIG5hdmkxMF9wcHRfZnVuY3MgPSB7
Ci0JLnRhYmxlc19pbml0ID0gbmF2aTEwX3RhYmxlc19pbml0LAotCS5hbGxvY19kcG1fY29udGV4
dCA9IG5hdmkxMF9hbGxvY2F0ZV9kcG1fY29udGV4dCwKLQkuc3RvcmVfcG93ZXJwbGF5X3RhYmxl
ID0gbmF2aTEwX3N0b3JlX3Bvd2VycGxheV90YWJsZSwKLQkuY2hlY2tfcG93ZXJwbGF5X3RhYmxl
ID0gbmF2aTEwX2NoZWNrX3Bvd2VycGxheV90YWJsZSwKLQkuYXBwZW5kX3Bvd2VycGxheV90YWJs
ZSA9IG5hdmkxMF9hcHBlbmRfcG93ZXJwbGF5X3RhYmxlLAogCS5nZXRfc211X21zZ19pbmRleCA9
IG5hdmkxMF9nZXRfc211X21zZ19pbmRleCwKIAkuZ2V0X3NtdV9jbGtfaW5kZXggPSBuYXZpMTBf
Z2V0X3NtdV9jbGtfaW5kZXgsCiAJLmdldF9zbXVfZmVhdHVyZV9pbmRleCA9IG5hdmkxMF9nZXRf
c211X2ZlYXR1cmVfaW5kZXgsCkBAIC0xNjY2LDcgKzE3NTIsNiBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IHBwdGFibGVfZnVuY3MgbmF2aTEwX3BwdF9mdW5jcyA9IHsKIAkuZ2V0X3NtdV9wb3dlcl9p
bmRleD0gbmF2aTEwX2dldF9wd3Jfc3JjX2luZGV4LAogCS5nZXRfd29ya2xvYWRfdHlwZSA9IG5h
dmkxMF9nZXRfd29ya2xvYWRfdHlwZSwKIAkuZ2V0X2FsbG93ZWRfZmVhdHVyZV9tYXNrID0gbmF2
aTEwX2dldF9hbGxvd2VkX2ZlYXR1cmVfbWFzaywKLQkuc2V0X2RlZmF1bHRfZHBtX3RhYmxlID0g
bmF2aTEwX3NldF9kZWZhdWx0X2RwbV90YWJsZSwKIAkuZHBtX3NldF91dmRfZW5hYmxlID0gbmF2
aTEwX2RwbV9zZXRfdXZkX2VuYWJsZSwKIAkuZ2V0X2N1cnJlbnRfY2xrX2ZyZXFfYnlfdGFibGUg
PSBuYXZpMTBfZ2V0X2N1cnJlbnRfY2xrX2ZyZXFfYnlfdGFibGUsCiAJLnByaW50X2Nsa19sZXZl
bHMgPSBuYXZpMTBfcHJpbnRfY2xrX2xldmVscywKQEAgLTE2OTQsNyArMTc3OSw3IEBAIHN0YXRp
YyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyBuYXZpMTBfcHB0X2Z1bmNzID0gewogCS51cGRh
dGVfcGNpZV9wYXJhbWV0ZXJzID0gbmF2aTEwX3VwZGF0ZV9wY2llX3BhcmFtZXRlcnMsCiAJLmlu
aXRfbWljcm9jb2RlID0gc211X3YxMV8wX2luaXRfbWljcm9jb2RlLAogCS5sb2FkX21pY3JvY29k
ZSA9IHNtdV92MTFfMF9sb2FkX21pY3JvY29kZSwKLQkuaW5pdF9zbWNfdGFibGVzID0gc211X3Yx
MV8wX2luaXRfc21jX3RhYmxlcywKKwkuaW5pdF9zbWNfdGFibGVzID0gbmF2aTEwX2luaXRfc21j
X3RhYmxlcywKIAkuZmluaV9zbWNfdGFibGVzID0gc211X3YxMV8wX2Zpbmlfc21jX3RhYmxlcywK
IAkuaW5pdF9wb3dlciA9IHNtdV92MTFfMF9pbml0X3Bvd2VyLAogCS5maW5pX3Bvd2VyID0gc211
X3YxMV8wX2ZpbmlfcG93ZXIsCkBAIC0xNzAyLDkgKzE3ODcsOSBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IHBwdGFibGVfZnVuY3MgbmF2aTEwX3BwdF9mdW5jcyA9IHsKIAkuc2V0dXBfcHB0YWJsZSA9
IHNtdV92MTFfMF9zZXR1cF9wcHRhYmxlLAogCS5nZXRfdmJpb3NfYm9vdHVwX3ZhbHVlcyA9IHNt
dV92MTFfMF9nZXRfdmJpb3NfYm9vdHVwX3ZhbHVlcywKIAkuZ2V0X2Nsa19pbmZvX2Zyb21fdmJp
b3MgPSBzbXVfdjExXzBfZ2V0X2Nsa19pbmZvX2Zyb21fdmJpb3MsCi0JLmNoZWNrX3BwdGFibGUg
PSBzbXVfdjExXzBfY2hlY2tfcHB0YWJsZSwKLQkucGFyc2VfcHB0YWJsZSA9IHNtdV92MTFfMF9w
YXJzZV9wcHRhYmxlLAotCS5wb3B1bGF0ZV9zbWNfdGFibGVzID0gc211X3YxMV8wX3BvcHVsYXRl
X3NtY19wcHRhYmxlLAorCS5jaGVja19wcHRhYmxlID0gbmF2aTEwX2NoZWNrX3Bvd2VycGxheV90
YWJsZSwKKwkucGFyc2VfcHB0YWJsZSA9IG5hdmkxMF9wYXJzZV9wcHRhYmxlLAorCS5wb3B1bGF0
ZV9zbWNfdGFibGVzID0gbmF2aTEwX3NldF9kZWZhdWx0X2RwbV90YWJsZSwKIAkuY2hlY2tfZndf
dmVyc2lvbiA9IHNtdV92MTFfMF9jaGVja19md192ZXJzaW9uLAogCS53cml0ZV9wcHRhYmxlID0g
c211X3YxMV8wX3dyaXRlX3BwdGFibGUsCiAJLnNldF9taW5fZGNlZl9kZWVwX3NsZWVwID0gc211
X3YxMV8wX3NldF9taW5fZGNlZl9kZWVwX3NsZWVwLApAQCAtMTcyMyw3ICsxODA4LDYgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBwcHRhYmxlX2Z1bmNzIG5hdmkxMF9wcHRfZnVuY3MgPSB7CiAJLmlu
aXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2NrcyA9IHNtdV92MTFfMF9pbml0X21heF9zdXN0YWluYWJs
ZV9jbG9ja3MsCiAJLnN0YXJ0X3RoZXJtYWxfY29udHJvbCA9IHNtdV92MTFfMF9zdGFydF90aGVy
bWFsX2NvbnRyb2wsCiAJLnN0b3BfdGhlcm1hbF9jb250cm9sID0gc211X3YxMV8wX3N0b3BfdGhl
cm1hbF9jb250cm9sLAotCS5zZXRfZGVlcF9zbGVlcF9kY2VmY2xrID0gc211X3YxMV8wX3NldF9k
ZWVwX3NsZWVwX2RjZWZjbGssCiAJLmRpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0ID0gc211
X3YxMV8wX2Rpc3BsYXlfY2xvY2tfdm9sdGFnZV9yZXF1ZXN0LAogCS5nZXRfZmFuX2NvbnRyb2xf
bW9kZSA9IHNtdV92MTFfMF9nZXRfZmFuX2NvbnRyb2xfbW9kZSwKIAkuc2V0X2Zhbl9jb250cm9s
X21vZGUgPSBzbXVfdjExXzBfc2V0X2Zhbl9jb250cm9sX21vZGUsCkBAIC0xNzM1LDEyICsxODE5
LDEwIEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyBuYXZpMTBfcHB0X2Z1bmNz
ID0gewogCS5zZXRfYXphbGlhX2QzX3BtZSA9IHNtdV92MTFfMF9zZXRfYXphbGlhX2QzX3BtZSwK
IAkuZ2V0X21heF9zdXN0YWluYWJsZV9jbG9ja3NfYnlfZGMgPSBzbXVfdjExXzBfZ2V0X21heF9z
dXN0YWluYWJsZV9jbG9ja3NfYnlfZGMsCiAJLmJhY29faXNfc3VwcG9ydD0gc211X3YxMV8wX2Jh
Y29faXNfc3VwcG9ydCwKLQkuYmFjb19nZXRfc3RhdGUgPSBzbXVfdjExXzBfYmFjb19nZXRfc3Rh
dGUsCiAJLmJhY29fc2V0X3N0YXRlID0gc211X3YxMV8wX2JhY29fc2V0X3N0YXRlLAogCS5iYWNv
X3Jlc2V0ID0gc211X3YxMV8wX2JhY29fcmVzZXQsCiAJLmdldF9kcG1fdWx0aW1hdGVfZnJlcSA9
IHNtdV92MTFfMF9nZXRfZHBtX3VsdGltYXRlX2ZyZXEsCiAJLnNldF9zb2Z0X2ZyZXFfbGltaXRl
ZF9yYW5nZSA9IHNtdV92MTFfMF9zZXRfc29mdF9mcmVxX2xpbWl0ZWRfcmFuZ2UsCi0JLm92ZXJy
aWRlX3BjaWVfcGFyYW1ldGVycyA9IHNtdV92MTFfMF9vdmVycmlkZV9wY2llX3BhcmFtZXRlcnMs
CiB9OwogCiB2b2lkIG5hdmkxMF9zZXRfcHB0X2Z1bmNzKHN0cnVjdCBzbXVfY29udGV4dCAqc211
KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvcmVub2lyX3BwdC5j
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvcmVub2lyX3BwdC5jCmluZGV4IDQ1YzVm
NTRlNjBkOC4uNjM5MmY4ODg2NjljIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bv
d2VycGxheS9yZW5vaXJfcHB0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkv
cmVub2lyX3BwdC5jCkBAIC0xNTcsNiArMTU3LDI0IEBAIHN0YXRpYyBpbnQgcmVub2lyX3RhYmxl
c19pbml0KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBzdHJ1Y3Qgc211X3RhYmxlICp0YWJsZXMp
CiAJcmV0dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgcmVub2lyX2luaXRfc21jX3RhYmxlcyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQgKnNtdV90
YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsKKwlzdHJ1Y3Qgc211X3RhYmxlICp0YWJsZXMgPSBOVUxM
OworCisJaWYgKHNtdV90YWJsZS0+dGFibGVzKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXRhYmxl
cyA9IGtjYWxsb2MoU01VX1RBQkxFX0NPVU5ULCBzaXplb2Yoc3RydWN0IHNtdV90YWJsZSksCisJ
CQkgR0ZQX0tFUk5FTCk7CisJaWYgKCF0YWJsZXMpCisJCXJldHVybiAtRU5PTUVNOworCisJc211
X3RhYmxlLT50YWJsZXMgPSB0YWJsZXM7CisKKwlyZXR1cm4gcmVub2lyX3RhYmxlc19pbml0KHNt
dSwgdGFibGVzKTsKK30KKwogLyoqCiAgKiBUaGlzIGludGVyZmFjZSBqdXN0IGZvciBnZXR0aW5n
IHVjbGsgdWx0aW1hdGUgZnJlcSBhbmQgc2hvdWxkJ3QgaW50cm9kdWNlCiAgKiBvdGhlciBsaWtl
d2lzZSBmdW5jdGlvbiByZXN1bHQgaW4gb3Zlcm11Y2ggY2FsbGJhY2suCkBAIC0xOTUsNyArMjEz
LDcgQEAgc3RhdGljIGludCByZW5vaXJfcHJpbnRfY2xrX2xldmVscyhzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwKIAljYXNlIFNNVV9TQ0xLOgogCQkvKiByZXRpcnZlIHRhYmxlIHJldHVybmVkIHBh
cmFtdGVycyB1bml0IGlzIE1IeiAqLwogCQljdXJfdmFsdWUgPSBtZXRyaWNzLkNsb2NrRnJlcXVl
bmN5W0NMT0NLX0dGWENMS107Ci0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBT
TVVfR0ZYQ0xLLCAmbWluLCAmbWF4LCBmYWxzZSk7CisJCXJldCA9IHNtdV9jbW5fZ2V0X2RwbV9m
cmVxX3JhbmdlKHNtdSwgU01VX0dGWENMSywgJm1pbiwgJm1heCk7CiAJCWlmICghcmV0KSB7CiAJ
CQkvKiBkcml2ZXIgb25seSBrbm93IG1pbi9tYXggZ2Z4X2NsaywgQWRkIGxldmVsIDEgZm9yIGFs
bCBvdGhlciBnZnggY2xrcyAqLwogCQkJaWYgKGN1cl92YWx1ZSAgPT0gbWF4KQpAQCAtMzEzLDcg
KzMzMSw3IEBAIHN0YXRpYyBpbnQgcmVub2lyX2ZvcmNlX2RwbV9saW1pdF92YWx1ZShzdHJ1Y3Qg
c211X2NvbnRleHQgKnNtdSwgYm9vbCBoaWdoZXN0KQogCiAJZm9yIChpID0gMDsgaSA8IEFSUkFZ
X1NJWkUoY2xrcyk7IGkrKykgewogCQljbGtfdHlwZSA9IGNsa3NbaV07Ci0JCXJldCA9IHNtdV9n
ZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEsIGZh
bHNlKTsKKwkJcmV0ID0gc211X2Ntbl9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlwZSwg
Jm1pbl9mcmVxLCAmbWF4X2ZyZXEpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIApAQCAt
MzQ3LDcgKzM2NSw3IEBAIHN0YXRpYyBpbnQgcmVub2lyX3VuZm9yY2VfZHBtX2xldmVscyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSkgewogCiAJCWNsa190eXBlID0gY2xrX2ZlYXR1cmVfbWFwW2ld
LmNsa190eXBlOwogCi0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlw
ZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEsIGZhbHNlKTsKKwkJcmV0ID0gc211X2Ntbl9nZXRfZHBt
X2ZyZXFfcmFuZ2Uoc211LCBjbGtfdHlwZSwgJm1pbl9mcmVxLCAmbWF4X2ZyZXEpOwogCQlpZiAo
cmV0KQogCQkJcmV0dXJuIHJldDsKIApAQCAtNDY4LDcgKzQ4Niw3IEBAIHN0YXRpYyBpbnQgcmVu
b2lyX2ZvcmNlX2Nsa19sZXZlbHMoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCQlyZXR1cm4g
LUVJTlZBTDsKIAkJfQogCi0JCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVf
R0ZYQ0xLLCAmbWluX2ZyZXEsICZtYXhfZnJlcSwgZmFsc2UpOworCQlyZXQgPSBzbXVfY21uX2dl
dF9kcG1fZnJlcV9yYW5nZShzbXUsIFNNVV9HRlhDTEssICZtaW5fZnJlcSwgJm1heF9mcmVxKTsK
IAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAJCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0
aF9wYXJhbShzbXUsIFNNVV9NU0dfU2V0U29mdE1heEdmeENsaywKQEAgLTU0NCw3ICs1NjIsNyBA
QCBzdGF0aWMgaW50IHJlbm9pcl9zZXRfcGVha19jbG9ja19ieV9kZXZpY2Uoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUpCiAJaW50IHJldCA9IDA7CiAJdWludDMyX3Qgc2Nsa19mcmVxID0gMCwgdWNs
a19mcmVxID0gMDsKIAotCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfU0NM
SywgTlVMTCwgJnNjbGtfZnJlcSwgZmFsc2UpOworCXJldCA9IHNtdV9jbW5fZ2V0X2RwbV9mcmVx
X3JhbmdlKHNtdSwgU01VX1NDTEssIE5VTEwsICZzY2xrX2ZyZXEpOwogCWlmIChyZXQpCiAJCXJl
dHVybiByZXQ7CiAKQEAgLTU1Miw3ICs1NzAsNyBAQCBzdGF0aWMgaW50IHJlbm9pcl9zZXRfcGVh
a19jbG9ja19ieV9kZXZpY2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiAJaWYgKHJldCkKIAkJ
cmV0dXJuIHJldDsKIAotCXJldCA9IHNtdV9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc211LCBTTVVfVUNM
SywgTlVMTCwgJnVjbGtfZnJlcSwgZmFsc2UpOworCXJldCA9IHNtdV9jbW5fZ2V0X2RwbV9mcmVx
X3JhbmdlKHNtdSwgU01VX1VDTEssIE5VTEwsICZ1Y2xrX2ZyZXEpOwogCWlmIChyZXQpCiAJCXJl
dHVybiByZXQ7CiAKQEAgLTY3NSw3ICs2OTMsNiBAQCBzdGF0aWMgaW50IHJlbm9pcl9nZXRfcG93
ZXJfcHJvZmlsZV9tb2RlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogc3RhdGljIGNvbnN0IHN0
cnVjdCBwcHRhYmxlX2Z1bmNzIHJlbm9pcl9wcHRfZnVuY3MgPSB7CiAJLmdldF9zbXVfbXNnX2lu
ZGV4ID0gcmVub2lyX2dldF9zbXVfbXNnX2luZGV4LAogCS5nZXRfc211X3RhYmxlX2luZGV4ID0g
cmVub2lyX2dldF9zbXVfdGFibGVfaW5kZXgsCi0JLnRhYmxlc19pbml0ID0gcmVub2lyX3RhYmxl
c19pbml0LAogCS5zZXRfcG93ZXJfc3RhdGUgPSBOVUxMLAogCS5nZXRfZHBtX2Nsa19saW1pdGVk
ID0gcmVub2lyX2dldF9kcG1fY2xrX2xpbWl0ZWQsCiAJLnByaW50X2Nsa19sZXZlbHMgPSByZW5v
aXJfcHJpbnRfY2xrX2xldmVscywKQEAgLTcwMCw3ICs3MTcsNyBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IHBwdGFibGVfZnVuY3MgcmVub2lyX3BwdF9mdW5jcyA9IHsKIAkucmVhZF9zbWNfYXJnID0g
c211X3YxMl8wX3JlYWRfYXJnLAogCS5zZXRfZ2Z4X2NncGcgPSBzbXVfdjEyXzBfc2V0X2dmeF9j
Z3BnLAogCS5nZnhfb2ZmX2NvbnRyb2wgPSBzbXVfdjEyXzBfZ2Z4X29mZl9jb250cm9sLAotCS5p
bml0X3NtY190YWJsZXMgPSBzbXVfdjEyXzBfaW5pdF9zbWNfdGFibGVzLAorCS5pbml0X3NtY190
YWJsZXMgPSByZW5vaXJfaW5pdF9zbWNfdGFibGVzLAogCS5maW5pX3NtY190YWJsZXMgPSBzbXVf
djEyXzBfZmluaV9zbWNfdGFibGVzLAogCS5wb3B1bGF0ZV9zbWNfdGFibGVzID0gc211X3YxMl8w
X3BvcHVsYXRlX3NtY190YWJsZXMsCiAJLmdldF9kcG1fdWx0aW1hdGVfZnJlcSA9IHNtdV92MTJf
MF9nZXRfZHBtX3VsdGltYXRlX2ZyZXEsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1k
L3Bvd2VycGxheS9zbXVfaW50ZXJuYWwuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5
L3NtdV9pbnRlcm5hbC5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4u
N2RkODlhYThiZjM0Ci0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dl
cnBsYXkvc211X2ludGVybmFsLmMKQEAgLTAsMCArMSw0OTAgQEAKKy8qCisgKiBDb3B5cmlnaHQg
MjAxOSBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKgorICogUGVybWlzc2lvbiBpcyBo
ZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEK
KyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZp
bGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0
IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRz
IHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGlj
ZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJt
aXQgcGVyc29ucyB0byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNv
LCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUg
Y29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNs
dWRlZCBpbgorICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29m
dHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQg
V0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBC
VVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICog
RklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElO
IE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hUIEhPTERFUihTKSBPUiBBVVRIT1IoUykg
QkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IKKyAqIE9USEVSIExJQUJJTElUWSwg
V0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLAorICog
QVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBP
UiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCisgKi8KKwor
I2luY2x1ZGUgInNtdV9pbnRlcm5hbC5oIgorI2luY2x1ZGUgImF0b20uaCIKKworYm9vbCBzbXVf
Y2xrX2RwbV9pc19lbmFibGVkKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9jbGtf
dHlwZSBjbGtfdHlwZSkKK3sKKwllbnVtIHNtdV9mZWF0dXJlX21hc2sgZmVhdHVyZV9pZCA9IDA7
CisKKwlzd2l0Y2ggKGNsa190eXBlKSB7CisJY2FzZSBTTVVfTUNMSzoKKwljYXNlIFNNVV9VQ0xL
OgorCQlmZWF0dXJlX2lkID0gU01VX0ZFQVRVUkVfRFBNX1VDTEtfQklUOworCQlicmVhazsKKwlj
YXNlIFNNVV9HRlhDTEs6CisJY2FzZSBTTVVfU0NMSzoKKwkJZmVhdHVyZV9pZCA9IFNNVV9GRUFU
VVJFX0RQTV9HRlhDTEtfQklUOworCQlicmVhazsKKwljYXNlIFNNVV9TT0NDTEs6CisJCWZlYXR1
cmVfaWQgPSBTTVVfRkVBVFVSRV9EUE1fU09DQ0xLX0JJVDsKKwkJYnJlYWs7CisJZGVmYXVsdDoK
KwkJcmV0dXJuIHRydWU7CisJfQorCisJaWYoIXNtdV9mZWF0dXJlX2lzX2VuYWJsZWQoc211LCBm
ZWF0dXJlX2lkKSkgeworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJcmV0dXJuIHRydWU7Cit9CisK
K2ludCBzbXVfZmVhdHVyZV91cGRhdGVfZW5hYmxlX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LAorCQkJCSAgICB1aW50NjRfdCBmZWF0dXJlX21hc2ssCisJCQkJICAgIGJvb2wgZW5hYmxl
ZCkKK3sKKwlzdHJ1Y3Qgc211X2ZlYXR1cmUgKmZlYXR1cmUgPSAmc211LT5zbXVfZmVhdHVyZTsK
Kwl1aW50MzJfdCBmZWF0dXJlX2xvdyA9IDAsIGZlYXR1cmVfaGlnaCA9IDA7CisJaW50IHJldCA9
IDA7CisKKwlpZiAoIXNtdS0+cG1fZW5hYmxlZCkKKwkJcmV0dXJuIHJldDsKKworCWZlYXR1cmVf
bG93ID0gKGZlYXR1cmVfbWFzayA+PiAwICkgJiAweGZmZmZmZmZmOworCWZlYXR1cmVfaGlnaCA9
IChmZWF0dXJlX21hc2sgPj4gMzIpICYgMHhmZmZmZmZmZjsKKworCWlmIChlbmFibGVkKSB7CisJ
CXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfRW5hYmxlU211
RmVhdHVyZXNMb3csCisJCQkJCQkgIGZlYXR1cmVfbG93KTsKKwkJaWYgKHJldCkKKwkJCXJldHVy
biByZXQ7CisJCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0df
RW5hYmxlU211RmVhdHVyZXNIaWdoLAorCQkJCQkJICBmZWF0dXJlX2hpZ2gpOworCQlpZiAocmV0
KQorCQkJcmV0dXJuIHJldDsKKwl9IGVsc2UgeworCQlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnX3dp
dGhfcGFyYW0oc211LCBTTVVfTVNHX0Rpc2FibGVTbXVGZWF0dXJlc0xvdywKKwkJCQkJCSAgZmVh
dHVyZV9sb3cpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwkJcmV0ID0gc211X3NlbmRf
c21jX21zZ193aXRoX3BhcmFtKHNtdSwgU01VX01TR19EaXNhYmxlU211RmVhdHVyZXNIaWdoLAor
CQkJCQkJICBmZWF0dXJlX2hpZ2gpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwl9CisK
KwltdXRleF9sb2NrKCZmZWF0dXJlLT5tdXRleCk7CisJaWYgKGVuYWJsZWQpCisJCWJpdG1hcF9v
cihmZWF0dXJlLT5lbmFibGVkLCBmZWF0dXJlLT5lbmFibGVkLAorCQkJCSh1bnNpZ25lZCBsb25n
ICopKCZmZWF0dXJlX21hc2spLCBTTVVfRkVBVFVSRV9NQVgpOworCWVsc2UKKwkJYml0bWFwX2Fu
ZG5vdChmZWF0dXJlLT5lbmFibGVkLCBmZWF0dXJlLT5lbmFibGVkLAorCQkJCSh1bnNpZ25lZCBs
b25nICopKCZmZWF0dXJlX21hc2spLCBTTVVfRkVBVFVSRV9NQVgpOworCW11dGV4X3VubG9jaygm
ZmVhdHVyZS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9nZXRfc21jX3Zl
cnNpb24oc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90ICppZl92ZXJzaW9uLCB1aW50
MzJfdCAqc211X3ZlcnNpb24pCit7CisJaW50IHJldCA9IDA7CisKKwlpZiAoIWlmX3ZlcnNpb24g
JiYgIXNtdV92ZXJzaW9uKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChpZl92ZXJzaW9uKSB7
CisJCXJldCA9IHNtdV9zZW5kX3NtY19tc2coc211LCBTTVVfTVNHX0dldERyaXZlcklmVmVyc2lv
bik7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCisJCXJldCA9IHNtdV9yZWFkX3NtY19h
cmcoc211LCBpZl92ZXJzaW9uKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJ
aWYgKHNtdV92ZXJzaW9uKSB7CisJCXJldCA9IHNtdV9zZW5kX3NtY19tc2coc211LCBTTVVfTVNH
X0dldFNtdVZlcnNpb24pOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKworCQlyZXQgPSBz
bXVfcmVhZF9zbWNfYXJnKHNtdSwgc211X3ZlcnNpb24pOworCQlpZiAocmV0KQorCQkJcmV0dXJu
IHJldDsKKwl9CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X3NldF9zb2Z0X2ZyZXFfcmFu
Z2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLAor
CQkJICAgIHVpbnQzMl90IG1pbiwgdWludDMyX3QgbWF4KQoreworCWludCByZXQgPSAwOworCisJ
aWYgKG1pbiA8PSAwICYmIG1heCA8PSAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmICghc211
X2Nsa19kcG1faXNfZW5hYmxlZChzbXUsIGNsa190eXBlKSkKKwkJcmV0dXJuIDA7CisKKwlyZXQg
PSBzbXVfc2V0X3NvZnRfZnJlcV9saW1pdGVkX3JhbmdlKHNtdSwgY2xrX3R5cGUsIG1pbiwgbWF4
KTsKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X2Ntbl9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlLAorCQkJICAg
dWludDMyX3QgKm1pbiwgdWludDMyX3QgKm1heCkKK3sKKwl1aW50MzJfdCBjbG9ja19saW1pdDsK
KwlpbnQgcmV0ID0gMDsKKworCWlmICghc211X2Nsa19kcG1faXNfZW5hYmxlZChzbXUsIGNsa190
eXBlKSkgeworCQlzd2l0Y2ggKGNsa190eXBlKSB7CisJCWNhc2UgU01VX01DTEs6CisJCWNhc2Ug
U01VX1VDTEs6CisJCQljbG9ja19saW1pdCA9IHNtdS0+c211X3RhYmxlLmJvb3RfdmFsdWVzLnVj
bGs7CisJCQlicmVhazsKKwkJY2FzZSBTTVVfR0ZYQ0xLOgorCQljYXNlIFNNVV9TQ0xLOgorCQkJ
Y2xvY2tfbGltaXQgPSBzbXUtPnNtdV90YWJsZS5ib290X3ZhbHVlcy5nZnhjbGs7CisJCQlicmVh
azsKKwkJY2FzZSBTTVVfU09DQ0xLOgorCQkJY2xvY2tfbGltaXQgPSBzbXUtPnNtdV90YWJsZS5i
b290X3ZhbHVlcy5zb2NjbGs7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCWNsb2NrX2xpbWl0
ID0gMDsKKwkJCWJyZWFrOworCQl9CisKKwkJLyogY2xvY2sgaW4gTWh6IHVuaXQgKi8KKwkJaWYg
KG1pbikKKwkJCSptaW4gPSBjbG9ja19saW1pdCAvIDEwMDsKKwkJaWYgKG1heCkKKwkJCSptYXgg
PSBjbG9ja19saW1pdCAvIDEwMDsKKwl9IGVsc2UgeworCQkvKgorCQkgKiBUb2RvOiBVc2UgZWFj
aCBhc2ljKEFTSUNfcHB0IGZ1bmNzKSBjb250cm9sIHRoZSBjYWxsYmFja3MgZXhwb3NlZCB0byB0
aGUKKwkJICogY29yZSBkcml2ZXIgYW5kIHRoZW4gaGF2ZSBoZWxwZXJzIGZvciBzdHVmZiB0aGF0
IGlzIGNvbW1vbihTTVVfdjExX3ggfCBTTVVfdjEyX3ggZnVuY3MpLgorCQkgKi8KKwkJcmV0ID0g
c211X2dldF9kcG1fdWx0aW1hdGVfZnJlcShzbXUsIGNsa190eXBlLCBtaW4sIG1heCk7CisJfQor
CisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV91cGRhdGVfdGFibGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIGVudW0gc211X3RhYmxlX2lkIHRhYmxlX2luZGV4LCBpbnQgYXJndW1lbnQsCisJ
CSAgICAgdm9pZCAqdGFibGVfZGF0YSwgYm9vbCBkcnYyc211KQoreworCXN0cnVjdCBzbXVfdGFi
bGVfY29udGV4dCAqc211X3RhYmxlID0gJnNtdS0+c211X3RhYmxlOworCXN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2ID0gc211LT5hZGV2OworCXN0cnVjdCBzbXVfdGFibGUgKnRhYmxlID0gTlVM
TDsKKwlpbnQgcmV0ID0gMDsKKwlpbnQgdGFibGVfaWQgPSBzbXVfdGFibGVfZ2V0X2luZGV4KHNt
dSwgdGFibGVfaW5kZXgpOworCisJaWYgKCF0YWJsZV9kYXRhIHx8IHRhYmxlX2lkID49IFNNVV9U
QUJMRV9DT1VOVCB8fCB0YWJsZV9pZCA8IDApCisJCXJldHVybiAtRUlOVkFMOworCisJdGFibGUg
PSAmc211X3RhYmxlLT50YWJsZXNbdGFibGVfaW5kZXhdOworCisJaWYgKGRydjJzbXUpCisJCW1l
bWNweSh0YWJsZS0+Y3B1X2FkZHIsIHRhYmxlX2RhdGEsIHRhYmxlLT5zaXplKTsKKworCXJldCA9
IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShzbXUsIFNNVV9NU0dfU2V0RHJpdmVyRHJhbUFk
ZHJIaWdoLAorCQkJCQkgIHVwcGVyXzMyX2JpdHModGFibGUtPm1jX2FkZHJlc3MpKTsKKwlpZiAo
cmV0KQorCQlyZXR1cm4gcmV0OworCXJldCA9IHNtdV9zZW5kX3NtY19tc2dfd2l0aF9wYXJhbShz
bXUsIFNNVV9NU0dfU2V0RHJpdmVyRHJhbUFkZHJMb3csCisJCQkJCSAgbG93ZXJfMzJfYml0cyh0
YWJsZS0+bWNfYWRkcmVzcykpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisJcmV0ID0gc211
X3NlbmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwgZHJ2MnNtdSA/CisJCQkJCSAgU01VX01TR19U
cmFuc2ZlclRhYmxlRHJhbTJTbXUgOgorCQkJCQkgIFNNVV9NU0dfVHJhbnNmZXJUYWJsZVNtdTJE
cmFtLAorCQkJCQkgIHRhYmxlX2lkIHwgKChhcmd1bWVudCAmIDB4RkZGRikgPDwgMTYpKTsKKwlp
ZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJLyogZmx1c2ggaGRwIGNhY2hlICovCisJYWRldi0+
bmJpby5mdW5jcy0+aGRwX2ZsdXNoKGFkZXYsIE5VTEwpOworCisJaWYgKCFkcnYyc211KQorCQlt
ZW1jcHkodGFibGVfZGF0YSwgdGFibGUtPmNwdV9hZGRyLCB0YWJsZS0+c2l6ZSk7CisKKwlyZXR1
cm4gcmV0OworfQorCitpbnQgc211X2ZlYXR1cmVfaXNfZW5hYmxlZChzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwgZW51bSBzbXVfZmVhdHVyZV9tYXNrIG1hc2spCit7CisJc3RydWN0IGFtZGdwdV9k
ZXZpY2UgKmFkZXYgPSBzbXUtPmFkZXY7CisJc3RydWN0IHNtdV9mZWF0dXJlICpmZWF0dXJlID0g
JnNtdS0+c211X2ZlYXR1cmU7CisJaW50IGZlYXR1cmVfaWQ7CisJaW50IHJldCA9IDA7CisKKwlp
ZiAoYWRldi0+ZmxhZ3MgJiBBTURfSVNfQVBVKQorCQlyZXR1cm4gMTsKKworCWZlYXR1cmVfaWQg
PSBzbXVfZmVhdHVyZV9nZXRfaW5kZXgoc211LCBtYXNrKTsKKwlpZiAoZmVhdHVyZV9pZCA8IDAp
CisJCXJldHVybiAwOworCisJV0FSTl9PTihmZWF0dXJlX2lkID4gZmVhdHVyZS0+ZmVhdHVyZV9u
dW0pOworCisJbXV0ZXhfbG9jaygmZmVhdHVyZS0+bXV0ZXgpOworCXJldCA9IHRlc3RfYml0KGZl
YXR1cmVfaWQsIGZlYXR1cmUtPmVuYWJsZWQpOworCW11dGV4X3VubG9jaygmZmVhdHVyZS0+bXV0
ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9mZWF0dXJlX3NldF9lbmFibGVkKHN0
cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9mZWF0dXJlX21hc2sgbWFzaywKKwkJCSAg
ICBib29sIGVuYWJsZSkKK3sKKwlzdHJ1Y3Qgc211X2ZlYXR1cmUgKmZlYXR1cmUgPSAmc211LT5z
bXVfZmVhdHVyZTsKKwlpbnQgZmVhdHVyZV9pZDsKKworCWZlYXR1cmVfaWQgPSBzbXVfZmVhdHVy
ZV9nZXRfaW5kZXgoc211LCBtYXNrKTsKKwlpZiAoZmVhdHVyZV9pZCA8IDApCisJCXJldHVybiAt
RUlOVkFMOworCisJV0FSTl9PTihmZWF0dXJlX2lkID4gZmVhdHVyZS0+ZmVhdHVyZV9udW0pOwor
CisJcmV0dXJuIHNtdV9mZWF0dXJlX3VwZGF0ZV9lbmFibGVfc3RhdGUoc211LAorCQkJCQkgICAg
ICAgMVVMTCA8PCBmZWF0dXJlX2lkLAorCQkJCQkgICAgICAgZW5hYmxlKTsKK30KKworaW50IHNt
dV9mZWF0dXJlX2lzX3N1cHBvcnRlZChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSwgZW51bSBzbXVf
ZmVhdHVyZV9tYXNrIG1hc2spCit7CisJc3RydWN0IHNtdV9mZWF0dXJlICpmZWF0dXJlID0gJnNt
dS0+c211X2ZlYXR1cmU7CisJaW50IGZlYXR1cmVfaWQ7CisJaW50IHJldCA9IDA7CisKKwlmZWF0
dXJlX2lkID0gc211X2ZlYXR1cmVfZ2V0X2luZGV4KHNtdSwgbWFzayk7CisJaWYgKGZlYXR1cmVf
aWQgPCAwKQorCQlyZXR1cm4gMDsKKworCVdBUk5fT04oZmVhdHVyZV9pZCA+IGZlYXR1cmUtPmZl
YXR1cmVfbnVtKTsKKworCW11dGV4X2xvY2soJmZlYXR1cmUtPm11dGV4KTsKKwlyZXQgPSB0ZXN0
X2JpdChmZWF0dXJlX2lkLCBmZWF0dXJlLT5zdXBwb3J0ZWQpOworCW11dGV4X3VubG9jaygmZmVh
dHVyZS0+bXV0ZXgpOworCisJcmV0dXJuIHJldDsKK30KKworaW50IHNtdV9mZWF0dXJlX3NldF9z
dXBwb3J0ZWQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkgICAgICBlbnVtIHNtdV9mZWF0
dXJlX21hc2sgbWFzaywKKwkJCSAgICAgIGJvb2wgZW5hYmxlKQoreworCXN0cnVjdCBzbXVfZmVh
dHVyZSAqZmVhdHVyZSA9ICZzbXUtPnNtdV9mZWF0dXJlOworCWludCBmZWF0dXJlX2lkOworCWlu
dCByZXQgPSAwOworCisJZmVhdHVyZV9pZCA9IHNtdV9mZWF0dXJlX2dldF9pbmRleChzbXUsIG1h
c2spOworCWlmIChmZWF0dXJlX2lkIDwgMCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlXQVJOX09O
KGZlYXR1cmVfaWQgPiBmZWF0dXJlLT5mZWF0dXJlX251bSk7CisKKwltdXRleF9sb2NrKCZmZWF0
dXJlLT5tdXRleCk7CisJaWYgKGVuYWJsZSkKKwkJdGVzdF9hbmRfc2V0X2JpdChmZWF0dXJlX2lk
LCBmZWF0dXJlLT5zdXBwb3J0ZWQpOworCWVsc2UKKwkJdGVzdF9hbmRfY2xlYXJfYml0KGZlYXR1
cmVfaWQsIGZlYXR1cmUtPnN1cHBvcnRlZCk7CisJbXV0ZXhfdW5sb2NrKCZmZWF0dXJlLT5tdXRl
eCk7CisKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211X2dldF9hdG9tX2RhdGFfdGFibGUoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IHRhYmxlLAorCQkJICAgIHVpbnQxNl90ICpz
aXplLCB1aW50OF90ICpmcmV2LCB1aW50OF90ICpjcmV2LAorCQkJICAgIHVpbnQ4X3QgKiphZGRy
KQoreworCXN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2ID0gc211LT5hZGV2OworCXVpbnQxNl90
IGRhdGFfc3RhcnQ7CisKKwlpZiAoIWFtZGdwdV9hdG9tX3BhcnNlX2RhdGFfaGVhZGVyKGFkZXYt
Pm1vZGVfaW5mby5hdG9tX2NvbnRleHQsIHRhYmxlLAorCQkJCQkgICBzaXplLCBmcmV2LCBjcmV2
LCAmZGF0YV9zdGFydCkpCisJCXJldHVybiAtRUlOVkFMOworCisJKmFkZHIgPSAodWludDhfdCAq
KWFkZXYtPm1vZGVfaW5mby5hdG9tX2NvbnRleHQtPmJpb3MgKyBkYXRhX3N0YXJ0OworCisJcmV0
dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgc211X2RlZmF1bHRfc2V0X3BlcmZvcm1hbmNlX2xldmVs
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIGFtZF9kcG1fZm9yY2VkX2xldmVsIGxldmVs
KQoreworCWludCByZXQgPSAwOworCXVpbnQzMl90IHNjbGtfbWFzaywgbWNsa19tYXNrLCBzb2Nf
bWFzazsKKworCXN3aXRjaCAobGV2ZWwpIHsKKwljYXNlIEFNRF9EUE1fRk9SQ0VEX0xFVkVMX0hJ
R0g6CisJCXJldCA9IHNtdV9mb3JjZV9kcG1fbGltaXRfdmFsdWUoc211LCB0cnVlKTsKKwkJYnJl
YWs7CisJY2FzZSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9MT1c6CisJCXJldCA9IHNtdV9mb3JjZV9k
cG1fbGltaXRfdmFsdWUoc211LCBmYWxzZSk7CisJCWJyZWFrOworCWNhc2UgQU1EX0RQTV9GT1JD
RURfTEVWRUxfQVVUTzoKKwljYXNlIEFNRF9EUE1fRk9SQ0VEX0xFVkVMX1BST0ZJTEVfU1RBTkRB
UkQ6CisJCXJldCA9IHNtdV91bmZvcmNlX2RwbV9sZXZlbHMoc211KTsKKwkJYnJlYWs7CisJY2Fz
ZSBBTURfRFBNX0ZPUkNFRF9MRVZFTF9QUk9GSUxFX01JTl9TQ0xLOgorCWNhc2UgQU1EX0RQTV9G
T1JDRURfTEVWRUxfUFJPRklMRV9NSU5fTUNMSzoKKwljYXNlIEFNRF9EUE1fRk9SQ0VEX0xFVkVM
X1BST0ZJTEVfUEVBSzoKKwkJcmV0ID0gc211X2dldF9wcm9maWxpbmdfY2xrX21hc2soc211LCBs
ZXZlbCwKKwkJCQkJCSAmc2Nsa19tYXNrLAorCQkJCQkJICZtY2xrX21hc2ssCisJCQkJCQkgJnNv
Y19tYXNrKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJCXNtdV9jbW5fZm9yY2VfY2xr
X2xldmVscyhzbXUsIFNNVV9TQ0xLLCAxIDw8IHNjbGtfbWFzayk7CisJCXNtdV9jbW5fZm9yY2Vf
Y2xrX2xldmVscyhzbXUsIFNNVV9NQ0xLLCAxIDw8IG1jbGtfbWFzayk7CisJCXNtdV9jbW5fZm9y
Y2VfY2xrX2xldmVscyhzbXUsIFNNVV9TT0NDTEssIDEgPDwgc29jX21hc2spOworCQlicmVhazsK
KwljYXNlIEFNRF9EUE1fRk9SQ0VEX0xFVkVMX01BTlVBTDoKKwljYXNlIEFNRF9EUE1fRk9SQ0VE
X0xFVkVMX1BST0ZJTEVfRVhJVDoKKwlkZWZhdWx0OgorCQlicmVhazsKKwl9CisJcmV0dXJuIHJl
dDsKK30KKworc3RhdGljIGludCBzbXVfYWRqdXN0X3Bvd2VyX3N0YXRlX2R5bmFtaWMoc3RydWN0
IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJICAgZW51bSBhbWRfZHBtX2ZvcmNlZF9sZXZlbCBsZXZl
bCwKKwkJCQkgICBib29sIHNraXBfZGlzcGxheV9zZXR0aW5ncykKK3sKKwlpbnQgcmV0ID0gMDsK
KwlpbnQgaW5kZXggPSAwOworCWxvbmcgd29ya2xvYWQ7CisJc3RydWN0IHNtdV9kcG1fY29udGV4
dCAqc211X2RwbV9jdHggPSAmKHNtdS0+c211X2RwbSk7CisKKwlpZiAoIXNtdS0+cG1fZW5hYmxl
ZCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAoIXNraXBfZGlzcGxheV9zZXR0aW5ncykgewor
CQlyZXQgPSBzbXVfZGlzcGxheV9jb25maWdfY2hhbmdlZChzbXUpOworCQlpZiAocmV0KSB7CisJ
CQlwcl9lcnIoIkZhaWxlZCB0byBjaGFuZ2UgZGlzcGxheSBjb25maWchIik7CisJCQlyZXR1cm4g
cmV0OworCQl9CisJfQorCisJcmV0ID0gc211X2FwcGx5X2Nsb2Nrc19hZGp1c3RfcnVsZXMoc211
KTsKKwlpZiAocmV0KSB7CisJCXByX2VycigiRmFpbGVkIHRvIGFwcGx5IGNsb2NrcyBhZGp1c3Qg
cnVsZXMhIik7CisJCXJldHVybiByZXQ7CisJfQorCisJaWYgKCFza2lwX2Rpc3BsYXlfc2V0dGlu
Z3MpIHsKKwkJcmV0ID0gc211X25vdGlmeV9zbWNfZGlzcGFseV9jb25maWcoc211KTsKKwkJaWYg
KHJldCkgeworCQkJcHJfZXJyKCJGYWlsZWQgdG8gbm90aWZ5IHNtYyBkaXNwbGF5IGNvbmZpZyEi
KTsKKwkJCXJldHVybiByZXQ7CisJCX0KKwl9CisKKwlpZiAoc211X2RwbV9jdHgtPmRwbV9sZXZl
bCAhPSBsZXZlbCkgeworCQlyZXQgPSBzbXVfYXNpY19zZXRfcGVyZm9ybWFuY2VfbGV2ZWwoc211
LCBsZXZlbCk7CisJCWlmIChyZXQpIHsKKwkJCXJldCA9IHNtdV9kZWZhdWx0X3NldF9wZXJmb3Jt
YW5jZV9sZXZlbChzbXUsIGxldmVsKTsKKwkJCWlmIChyZXQpIHsKKwkJCQlwcl9lcnIoIkZhaWxl
ZCB0byBzZXQgcGVyZm9ybWFuY2UgbGV2ZWwhIik7CisJCQkJcmV0dXJuIHJldDsKKwkJCX0KKwkJ
fQorCisJCS8qIHVwZGF0ZSB0aGUgc2F2ZWQgY29weSAqLworCQlzbXVfZHBtX2N0eC0+ZHBtX2xl
dmVsID0gbGV2ZWw7CisJfQorCisJaWYgKHNtdV9kcG1fY3R4LT5kcG1fbGV2ZWwgIT0gQU1EX0RQ
TV9GT1JDRURfTEVWRUxfTUFOVUFMKSB7CisJCWluZGV4ID0gZmxzKHNtdS0+d29ya2xvYWRfbWFz
ayk7CisJCWluZGV4ID0gaW5kZXggPiAwICYmIGluZGV4IDw9IFdPUktMT0FEX1BPTElDWV9NQVgg
PyBpbmRleCAtIDEgOiAwOworCQl3b3JrbG9hZCA9IHNtdS0+d29ya2xvYWRfc2V0dGluZ1tpbmRl
eF07CisKKwkJaWYgKHNtdS0+cG93ZXJfcHJvZmlsZV9tb2RlICE9IHdvcmtsb2FkKQorCQkJc211
X2Ntbl9zZXRfcG93ZXJfcHJvZmlsZV9tb2RlKHNtdSwgJndvcmtsb2FkLCAwKTsKKwl9CisKKwly
ZXR1cm4gcmV0OworfQorCitpbnQgc211X2Ntbl9oYW5kbGVfdGFzayhzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwKKwkJCWVudW0gYW1kX2RwbV9mb3JjZWRfbGV2ZWwgbGV2ZWwsCisJCQllbnVtIGFt
ZF9wcF90YXNrIHRhc2tfaWQpCit7CisJaW50IHJldCA9IDA7CisKKwlzd2l0Y2ggKHRhc2tfaWQp
IHsKKwljYXNlIEFNRF9QUF9UQVNLX0RJU1BMQVlfQ09ORklHX0NIQU5HRToKKwkJcmV0ID0gc211
X3ByZV9kaXNwbGF5X2NvbmZpZ19jaGFuZ2VkKHNtdSk7CisJCWlmIChyZXQpCisJCQlnb3RvIG91
dDsKKwkJcmV0ID0gc211X3NldF9jcHVfcG93ZXJfc3RhdGUoc211KTsKKwkJaWYgKHJldCkKKwkJ
CWdvdG8gb3V0OworCQlyZXQgPSBzbXVfYWRqdXN0X3Bvd2VyX3N0YXRlX2R5bmFtaWMoc211LCBs
ZXZlbCwgZmFsc2UpOworCQlicmVhazsKKwljYXNlIEFNRF9QUF9UQVNLX0NPTVBMRVRFX0lOSVQ6
CisJY2FzZSBBTURfUFBfVEFTS19SRUFESlVTVF9QT1dFUl9TVEFURToKKwkJcmV0ID0gc211X2Fk
anVzdF9wb3dlcl9zdGF0ZV9keW5hbWljKHNtdSwgbGV2ZWwsIHRydWUpOworCQlicmVhazsKKwlk
ZWZhdWx0OgorCQlicmVhazsKKwl9CisKK291dDoKKwlyZXR1cm4gcmV0OworfQorCitpbnQgc211
X3dyaXRlX3dhdGVybWFya3NfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCit7CisJaW50
IHJldCA9IDA7CisJc3RydWN0IHNtdV90YWJsZV9jb250ZXh0ICpzbXVfdGFibGUgPSAmc211LT5z
bXVfdGFibGU7CisJc3RydWN0IHNtdV90YWJsZSAqdGFibGUgPSBOVUxMOworCisJdGFibGUgPSAm
c211X3RhYmxlLT50YWJsZXNbU01VX1RBQkxFX1dBVEVSTUFSS1NdOworCisJaWYgKCF0YWJsZS0+
Y3B1X2FkZHIpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0ID0gc211X3VwZGF0ZV90YWJsZShz
bXUsIFNNVV9UQUJMRV9XQVRFUk1BUktTLCAwLCB0YWJsZS0+Y3B1X2FkZHIsCisJCQkJdHJ1ZSk7
CisKKwlyZXR1cm4gcmV0OworfQorCisjdW5kZWYgX19TTVVfRFVNTVlfTUFQCisjZGVmaW5lIF9f
U01VX0RVTU1ZX01BUCh0eXBlKQkjdHlwZQorc3RhdGljIGNvbnN0IGNoYXIqIF9fc211X21lc3Nh
Z2VfbmFtZXNbXSA9IHsKKwlTTVVfTUVTU0FHRV9UWVBFUworfTsKKworY29uc3QgY2hhciAqc211
X2dldF9tZXNzYWdlX25hbWUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X21lc3Nh
Z2VfdHlwZSB0eXBlKQoreworCWlmICh0eXBlIDwgMCB8fCB0eXBlID49IFNNVV9NU0dfTUFYX0NP
VU5UKQorCQlyZXR1cm4gInVua25vd24gc211IG1lc3NhZ2UiOworCXJldHVybiBfX3NtdV9tZXNz
YWdlX25hbWVzW3R5cGVdOworfQorCisjdW5kZWYgX19TTVVfRFVNTVlfTUFQCisjZGVmaW5lIF9f
U01VX0RVTU1ZX01BUChmZWEpCSNmZWEKK3N0YXRpYyBjb25zdCBjaGFyKiBfX3NtdV9mZWF0dXJl
X25hbWVzW10gPSB7CisJU01VX0ZFQVRVUkVfTUFTS1MKK307CisKK2NvbnN0IGNoYXIgKnNtdV9n
ZXRfZmVhdHVyZV9uYW1lKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVtIHNtdV9mZWF0dXJl
X21hc2sgZmVhdHVyZSkKK3sKKwlpZiAoZmVhdHVyZSA8IDAgfHwgZmVhdHVyZSA+PSBTTVVfRkVB
VFVSRV9DT1VOVCkKKwkJcmV0dXJuICJ1bmtub3duIHNtdSBmZWF0dXJlIjsKKwlyZXR1cm4gX19z
bXVfZmVhdHVyZV9uYW1lc1tmZWF0dXJlXTsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvcG93ZXJwbGF5L3NtdV9pbnRlcm5hbC5oIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dl
cnBsYXkvc211X2ludGVybmFsLmgKaW5kZXggOGJjZGE3ODcxMzA5Li4yMWFjZjdhZWRjNDIgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV9pbnRlcm5hbC5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV9pbnRlcm5hbC5oCkBAIC01Nyw4
ICs1Nyw4IEBACiAJKChzbXUpLT5wcHRfZnVuY3MtPmNoZWNrX2Z3X3ZlcnNpb24gPyAoc211KS0+
cHB0X2Z1bmNzLT5jaGVja19md192ZXJzaW9uKChzbXUpKSA6IDApCiAjZGVmaW5lIHNtdV93cml0
ZV9wcHRhYmxlKHNtdSkgXAogCSgoc211KS0+cHB0X2Z1bmNzLT53cml0ZV9wcHRhYmxlID8gKHNt
dSktPnBwdF9mdW5jcy0+d3JpdGVfcHB0YWJsZSgoc211KSkgOiAwKQotI2RlZmluZSBzbXVfc2V0
X21pbl9kY2VmX2RlZXBfc2xlZXAoc211KSBcCi0JKChzbXUpLT5wcHRfZnVuY3MtPnNldF9taW5f
ZGNlZl9kZWVwX3NsZWVwID8gKHNtdSktPnBwdF9mdW5jcy0+c2V0X21pbl9kY2VmX2RlZXBfc2xl
ZXAoKHNtdSkpIDogMCkKKyNkZWZpbmUgc211X3NldF9taW5fZGNlZl9kZWVwX3NsZWVwKHNtdSwg
Y2xrKSBcCisJKChzbXUpLT5wcHRfZnVuY3MtPnNldF9taW5fZGNlZl9kZWVwX3NsZWVwID8gKHNt
dSktPnBwdF9mdW5jcy0+c2V0X21pbl9kY2VmX2RlZXBfc2xlZXAoKHNtdSksIChjbGspKSA6IDAp
CiAjZGVmaW5lIHNtdV9zZXRfdG9vbF90YWJsZV9sb2NhdGlvbihzbXUpIFwKIAkoKHNtdSktPnBw
dF9mdW5jcy0+c2V0X3Rvb2xfdGFibGVfbG9jYXRpb24gPyAoc211KS0+cHB0X2Z1bmNzLT5zZXRf
dG9vbF90YWJsZV9sb2NhdGlvbigoc211KSkgOiAwKQogI2RlZmluZSBzbXVfbm90aWZ5X21lbW9y
eV9wb29sX2xvY2F0aW9uKHNtdSkgXApAQCAtODEsOCArODEsNiBAQAogCSgoc211KS0+cHB0X2Z1
bmNzLT5zZW5kX3NtY19tc2dfd2l0aF9wYXJhbT8gKHNtdSktPnBwdF9mdW5jcy0+c2VuZF9zbWNf
bXNnX3dpdGhfcGFyYW0oKHNtdSksIChtc2cpLCAocGFyYW0pKSA6IDApCiAjZGVmaW5lIHNtdV9y
ZWFkX3NtY19hcmcoc211LCBhcmcpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+cmVhZF9zbWNfYXJn
PyAoc211KS0+cHB0X2Z1bmNzLT5yZWFkX3NtY19hcmcoKHNtdSksIChhcmcpKSA6IDApCi0jZGVm
aW5lIHNtdV9hbGxvY19kcG1fY29udGV4dChzbXUpIFwKLQkoKHNtdSktPnBwdF9mdW5jcy0+YWxs
b2NfZHBtX2NvbnRleHQgPyAoc211KS0+cHB0X2Z1bmNzLT5hbGxvY19kcG1fY29udGV4dCgoc211
KSkgOiAwKQogI2RlZmluZSBzbXVfaW5pdF9kaXNwbGF5X2NvdW50KHNtdSwgY291bnQpIFwKIAko
KHNtdSktPnBwdF9mdW5jcy0+aW5pdF9kaXNwbGF5X2NvdW50ID8gKHNtdSktPnBwdF9mdW5jcy0+
aW5pdF9kaXNwbGF5X2NvdW50KChzbXUpLCAoY291bnQpKSA6IDApCiAjZGVmaW5lIHNtdV9mZWF0
dXJlX3NldF9hbGxvd2VkX21hc2soc211KSBcCkBAIC05MywxNCArOTEsNiBAQAogCSgoc211KS0+
cHB0X2Z1bmNzLT5pc19kcG1fcnVubmluZyA/IChzbXUpLT5wcHRfZnVuY3MtPmlzX2RwbV9ydW5u
aW5nKChzbXUpKSA6IDApCiAjZGVmaW5lIHNtdV9ub3RpZnlfZGlzcGxheV9jaGFuZ2Uoc211KSBc
CiAJKChzbXUpLT5wcHRfZnVuY3MtPm5vdGlmeV9kaXNwbGF5X2NoYW5nZT8gKHNtdSktPnBwdF9m
dW5jcy0+bm90aWZ5X2Rpc3BsYXlfY2hhbmdlKChzbXUpKSA6IDApCi0jZGVmaW5lIHNtdV9zdG9y
ZV9wb3dlcnBsYXlfdGFibGUoc211KSBcCi0JKChzbXUpLT5wcHRfZnVuY3MtPnN0b3JlX3Bvd2Vy
cGxheV90YWJsZSA/IChzbXUpLT5wcHRfZnVuY3MtPnN0b3JlX3Bvd2VycGxheV90YWJsZSgoc211
KSkgOiAwKQotI2RlZmluZSBzbXVfY2hlY2tfcG93ZXJwbGF5X3RhYmxlKHNtdSkgXAotCSgoc211
KS0+cHB0X2Z1bmNzLT5jaGVja19wb3dlcnBsYXlfdGFibGUgPyAoc211KS0+cHB0X2Z1bmNzLT5j
aGVja19wb3dlcnBsYXlfdGFibGUoKHNtdSkpIDogMCkKLSNkZWZpbmUgc211X2FwcGVuZF9wb3dl
cnBsYXlfdGFibGUoc211KSBcCi0JKChzbXUpLT5wcHRfZnVuY3MtPmFwcGVuZF9wb3dlcnBsYXlf
dGFibGUgPyAoc211KS0+cHB0X2Z1bmNzLT5hcHBlbmRfcG93ZXJwbGF5X3RhYmxlKChzbXUpKSA6
IDApCi0jZGVmaW5lIHNtdV9zZXRfZGVmYXVsdF9kcG1fdGFibGUoc211KSBcCi0JKChzbXUpLT5w
cHRfZnVuY3MtPnNldF9kZWZhdWx0X2RwbV90YWJsZSA/IChzbXUpLT5wcHRfZnVuY3MtPnNldF9k
ZWZhdWx0X2RwbV90YWJsZSgoc211KSkgOiAwKQogI2RlZmluZSBzbXVfcG9wdWxhdGVfdW1kX3N0
YXRlX2NsayhzbXUpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+cG9wdWxhdGVfdW1kX3N0YXRlX2Ns
ayA/IChzbXUpLT5wcHRfZnVuY3MtPnBvcHVsYXRlX3VtZF9zdGF0ZV9jbGsoKHNtdSkpIDogMCkK
ICNkZWZpbmUgc211X3NldF9kZWZhdWx0X29kOF9zZXR0aW5ncyhzbXUpIFwKQEAgLTEwOSw4ICs5
OSw2IEBACiAjZGVmaW5lIHNtdV9nZXRfY3VycmVudF9jbGtfZnJlcShzbXUsIGNsa19pZCwgdmFs
dWUpIFwKIAkoKHNtdSktPnBwdF9mdW5jcy0+Z2V0X2N1cnJlbnRfY2xrX2ZyZXE/IChzbXUpLT5w
cHRfZnVuY3MtPmdldF9jdXJyZW50X2Nsa19mcmVxKChzbXUpLCAoY2xrX2lkKSwgKHZhbHVlKSkg
OiAwKQogCi0jZGVmaW5lIHNtdV90YWJsZXNfaW5pdChzbXUsIHRhYikgXAotCSgoc211KS0+cHB0
X2Z1bmNzLT50YWJsZXNfaW5pdCA/IChzbXUpLT5wcHRfZnVuY3MtPnRhYmxlc19pbml0KChzbXUp
LCAodGFiKSkgOiAwKQogI2RlZmluZSBzbXVfc2V0X3RoZXJtYWxfZmFuX3RhYmxlKHNtdSkgXAog
CSgoc211KS0+cHB0X2Z1bmNzLT5zZXRfdGhlcm1hbF9mYW5fdGFibGUgPyAoc211KS0+cHB0X2Z1
bmNzLT5zZXRfdGhlcm1hbF9mYW5fdGFibGUoKHNtdSkpIDogMCkKICNkZWZpbmUgc211X3N0YXJ0
X3RoZXJtYWxfY29udHJvbChzbXUpIFwKQEAgLTE5NSwxMCArMTgzLDYyIEBACiAjZGVmaW5lIHNt
dV9zZXRfc29mdF9mcmVxX2xpbWl0ZWRfcmFuZ2Uoc211LCBjbGtfdHlwZSwgbWluLCBtYXgpIFwK
IAkJKChzbXUpLT5wcHRfZnVuY3MtPnNldF9zb2Z0X2ZyZXFfbGltaXRlZF9yYW5nZSA/IChzbXUp
LT5wcHRfZnVuY3MtPnNldF9zb2Z0X2ZyZXFfbGltaXRlZF9yYW5nZSgoc211KSwgKGNsa190eXBl
KSwgKG1pbiksIChtYXgpKSA6IC1FSU5WQUwpCiAKLSNkZWZpbmUgc211X292ZXJyaWRlX3BjaWVf
cGFyYW1ldGVycyhzbXUpIFwKLQkJKChzbXUpLT5wcHRfZnVuY3MtPm92ZXJyaWRlX3BjaWVfcGFy
YW1ldGVycyA/IChzbXUpLT5wcHRfZnVuY3MtPm92ZXJyaWRlX3BjaWVfcGFyYW1ldGVycygoc211
KSkgOiAwKQotCiAjZGVmaW5lIHNtdV91cGRhdGVfcGNpZV9wYXJhbWV0ZXJzKHNtdSwgcGNpZV9n
ZW5fY2FwLCBwY2llX3dpZHRoX2NhcCkgXAogCQkoKHNtdSktPnBwdF9mdW5jcy0+dXBkYXRlX3Bj
aWVfcGFyYW1ldGVycyA/IChzbXUpLT5wcHRfZnVuY3MtPnVwZGF0ZV9wY2llX3BhcmFtZXRlcnMo
KHNtdSksIChwY2llX2dlbl9jYXApLCAocGNpZV93aWR0aF9jYXApKSA6IDApCiAKKyNkZWZpbmUg
c211X3NldF9nZnhfY2dwZyhzbXUsIGVuYWJsZWQpIFwKKwkJKChzbXUpLT5wcHRfZnVuY3MtPnNl
dF9nZnhfY2dwZyA/IChzbXUpLT5wcHRfZnVuY3MtPnNldF9nZnhfY2dwZygoc211KSwgKGVuYWJs
ZWQpKSA6IDApCisKKyNkZWZpbmUgc211X2Ntbl9mb3JjZV9jbGtfbGV2ZWxzKHNtdSwgY2xrX3R5
cGUsIG1hc2spIFwKKwkJKChzbXUpLT5wcHRfZnVuY3MtPmZvcmNlX2Nsa19sZXZlbHMgPyAoc211
KS0+cHB0X2Z1bmNzLT5mb3JjZV9jbGtfbGV2ZWxzKChzbXUpLCAoY2xrX3R5cGUpLCAobWFzaykp
IDogMCkKKworI2RlZmluZSBzbXVfY21uX2dldF9wb3dlcl9saW1pdChzbXUsIGxpbWl0LCBkZWYp
IFwKKwkJKChzbXUpLT5wcHRfZnVuY3MtPmdldF9wb3dlcl9saW1pdCA/IChzbXUpLT5wcHRfZnVu
Y3MtPmdldF9wb3dlcl9saW1pdCgoc211KSwgKGxpbWl0KSwgKGRlZikpIDogMCkKKworI2RlZmlu
ZSBzbXVfY21uX3NldF9wb3dlcl9wcm9maWxlX21vZGUoc211LCBwYXJhbSwgcGFyYW1fc2l6ZSkg
XAorCQkoKHNtdSktPnBwdF9mdW5jcy0+c2V0X3Bvd2VyX3Byb2ZpbGVfbW9kZSA/IChzbXUpLT5w
cHRfZnVuY3MtPnNldF9wb3dlcl9wcm9maWxlX21vZGUoKHNtdSksIChwYXJhbSksIChwYXJhbV9z
aXplKSkgOiAwKQorCitpbnQgc211X2dldF9hdG9tX2RhdGFfdGFibGUoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIHVpbnQzMl90IHRhYmxlLAorCQkJICAgIHVpbnQxNl90ICpzaXplLCB1aW50OF90
ICpmcmV2LCB1aW50OF90ICpjcmV2LAorCQkJICAgIHVpbnQ4X3QgKiphZGRyKTsKKworaW50IHNt
dV9mZWF0dXJlX2lzX2VuYWJsZWQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJICBlbnVt
IHNtdV9mZWF0dXJlX21hc2sgbWFzayk7CitpbnQgc211X2ZlYXR1cmVfc2V0X2VuYWJsZWQoc3Ry
dWN0IHNtdV9jb250ZXh0ICpzbXUsCisJCQkJICAgZW51bSBzbXVfZmVhdHVyZV9tYXNrIG1hc2ss
IGJvb2wgZW5hYmxlKTsKK2ludCBzbXVfZmVhdHVyZV9pc19zdXBwb3J0ZWQoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsCisJCQkJICAgIGVudW0gc211X2ZlYXR1cmVfbWFzayBtYXNrKTsKK2ludCBz
bXVfZmVhdHVyZV9zZXRfc3VwcG9ydGVkKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJCSAg
ICAgZW51bSBzbXVfZmVhdHVyZV9tYXNrIG1hc2ssIGJvb2wgZW5hYmxlKTsKKworaW50IHNtdV91
cGRhdGVfdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVudW0gc211X3RhYmxlX2lkIHRh
YmxlX2luZGV4LCBpbnQgYXJndW1lbnQsCisJCSAgICAgdm9pZCAqdGFibGVfZGF0YSwgYm9vbCBk
cnYyc211KTsKKworaW50IHNtdV93cml0ZV93YXRlcm1hcmtzX3RhYmxlKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211KTsKKworaW50IHNtdV9nZXRfc21jX3ZlcnNpb24oc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUsIHVpbnQzMl90ICppZl92ZXJzaW9uLCB1aW50MzJfdCAqc211X3ZlcnNpb24pOworCitp
bnQgc211X2Ntbl9nZXRfZHBtX2ZyZXFfcmFuZ2Uoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGVu
dW0gc211X2Nsa190eXBlIGNsa190eXBlLAorCQkJICAgdWludDMyX3QgKm1pbiwgdWludDMyX3Qg
Km1heCk7CisKK2ludCBzbXVfc2V0X3NvZnRfZnJlcV9yYW5nZShzdHJ1Y3Qgc211X2NvbnRleHQg
KnNtdSwgZW51bSBzbXVfY2xrX3R5cGUgY2xrX3R5cGUsCisJCQkgICAgdWludDMyX3QgbWluLCB1
aW50MzJfdCBtYXgpOworCitib29sIHNtdV9jbGtfZHBtX2lzX2VuYWJsZWQoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUsIGVudW0gc211X2Nsa190eXBlIGNsa190eXBlKTsKKworaW50CitzbXVfY21u
X2hhbmRsZV90YXNrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkgICAgZW51bSBhbWRfZHBt
X2ZvcmNlZF9sZXZlbCBsZXZlbCwKKwkJICAgIGVudW0gYW1kX3BwX3Rhc2sgdGFza19pZCk7CisK
K2ludCBzbXVfZmVhdHVyZV91cGRhdGVfZW5hYmxlX3N0YXRlKHN0cnVjdCBzbXVfY29udGV4dCAq
c211LAorCQkJCSAgICB1aW50NjRfdCBmZWF0dXJlX21hc2ssCisJCQkJICAgIGJvb2wgZW5hYmxl
ZCk7CisKK2NvbnN0IGNoYXIgKnNtdV9nZXRfbWVzc2FnZV9uYW1lKHN0cnVjdCBzbXVfY29udGV4
dCAqc211LAorCQkJCSBlbnVtIHNtdV9tZXNzYWdlX3R5cGUgdHlwZSk7CisKK2NvbnN0IGNoYXIg
KnNtdV9nZXRfZmVhdHVyZV9uYW1lKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAorCQkJCSBlbnVt
IHNtdV9mZWF0dXJlX21hc2sgZmVhdHVyZSk7CisKICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMV8wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1k
L3Bvd2VycGxheS9zbXVfdjExXzAuYwppbmRleCA3ZTg4Mjk5OWFiYWQuLmJkYzIxY2FlM2ExZSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMV8wLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkvc211X3YxMV8wLmMKQEAgLTQwMiwxNiAr
NDAyLDYgQEAgaW50IHNtdV92MTFfMF9zZXR1cF9wcHRhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAq
c211KQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IHNtdV92MTFfMF9pbml0X2RwbV9jb250
ZXh0KHN0cnVjdCBzbXVfY29udGV4dCAqc211KQotewotCXN0cnVjdCBzbXVfZHBtX2NvbnRleHQg
KnNtdV9kcG0gPSAmc211LT5zbXVfZHBtOwotCi0JaWYgKHNtdV9kcG0tPmRwbV9jb250ZXh0IHx8
IHNtdV9kcG0tPmRwbV9jb250ZXh0X3NpemUgIT0gMCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQly
ZXR1cm4gc211X2FsbG9jX2RwbV9jb250ZXh0KHNtdSk7Ci19Ci0KIHN0YXRpYyBpbnQgc211X3Yx
MV8wX2ZpbmlfZHBtX2NvbnRleHQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiB7CiAJc3RydWN0
IHNtdV9kcG1fY29udGV4dCAqc211X2RwbSA9ICZzbXUtPnNtdV9kcG07CkBAIC00MzIsMzMgKzQy
Miw2IEBAIHN0YXRpYyBpbnQgc211X3YxMV8wX2ZpbmlfZHBtX2NvbnRleHQoc3RydWN0IHNtdV9j
b250ZXh0ICpzbXUpCiAJcmV0dXJuIDA7CiB9CiAKLWludCBzbXVfdjExXzBfaW5pdF9zbWNfdGFi
bGVzKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQotewotCXN0cnVjdCBzbXVfdGFibGVfY29udGV4
dCAqc211X3RhYmxlID0gJnNtdS0+c211X3RhYmxlOwotCXN0cnVjdCBzbXVfdGFibGUgKnRhYmxl
cyA9IE5VTEw7Ci0JaW50IHJldCA9IDA7Ci0KLQlpZiAoc211X3RhYmxlLT50YWJsZXMpCi0JCXJl
dHVybiAtRUlOVkFMOwotCi0JdGFibGVzID0ga2NhbGxvYyhTTVVfVEFCTEVfQ09VTlQsIHNpemVv
ZihzdHJ1Y3Qgc211X3RhYmxlKSwKLQkJCSBHRlBfS0VSTkVMKTsKLQlpZiAoIXRhYmxlcykKLQkJ
cmV0dXJuIC1FTk9NRU07Ci0KLQlzbXVfdGFibGUtPnRhYmxlcyA9IHRhYmxlczsKLQotCXJldCA9
IHNtdV90YWJsZXNfaW5pdChzbXUsIHRhYmxlcyk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsK
LQotCXJldCA9IHNtdV92MTFfMF9pbml0X2RwbV9jb250ZXh0KHNtdSk7Ci0JaWYgKHJldCkKLQkJ
cmV0dXJuIHJldDsKLQotCXJldHVybiAwOwotfQotCiBpbnQgc211X3YxMV8wX2Zpbmlfc21jX3Rh
YmxlcyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIHsKIAlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRl
eHQgKnNtdV90YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsKQEAgLTcxNyw0NyArNjgwLDYgQEAgaW50
IHNtdV92MTFfMF9ub3RpZnlfbWVtb3J5X3Bvb2xfbG9jYXRpb24oc3RydWN0IHNtdV9jb250ZXh0
ICpzbXUpCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV92MTFfMF9jaGVja19wcHRhYmxlKHN0
cnVjdCBzbXVfY29udGV4dCAqc211KQotewotCWludCByZXQ7Ci0KLQlyZXQgPSBzbXVfY2hlY2tf
cG93ZXJwbGF5X3RhYmxlKHNtdSk7Ci0JcmV0dXJuIHJldDsKLX0KLQotaW50IHNtdV92MTFfMF9w
YXJzZV9wcHRhYmxlKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQotewotCWludCByZXQ7Ci0KLQlz
dHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQgKnRhYmxlX2NvbnRleHQgPSAmc211LT5zbXVfdGFibGU7
Ci0Jc3RydWN0IHNtdV90YWJsZSAqdGFibGUgPSAmdGFibGVfY29udGV4dC0+dGFibGVzW1NNVV9U
QUJMRV9QUFRBQkxFXTsKLQotCWlmICh0YWJsZV9jb250ZXh0LT5kcml2ZXJfcHB0YWJsZSkKLQkJ
cmV0dXJuIC1FSU5WQUw7Ci0KLQl0YWJsZV9jb250ZXh0LT5kcml2ZXJfcHB0YWJsZSA9IGt6YWxs
b2ModGFibGUtPnNpemUsIEdGUF9LRVJORUwpOwotCi0JaWYgKCF0YWJsZV9jb250ZXh0LT5kcml2
ZXJfcHB0YWJsZSkKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQlyZXQgPSBzbXVfc3RvcmVfcG93ZXJw
bGF5X3RhYmxlKHNtdSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlyZXQgPSBz
bXVfYXBwZW5kX3Bvd2VycGxheV90YWJsZShzbXUpOwotCi0JcmV0dXJuIHJldDsKLX0KLQotaW50
IHNtdV92MTFfMF9wb3B1bGF0ZV9zbWNfcHB0YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkK
LXsKLQlpbnQgcmV0OwotCi0JcmV0ID0gc211X3NldF9kZWZhdWx0X2RwbV90YWJsZShzbXUpOwot
Ci0JcmV0dXJuIHJldDsKLX0KLQogaW50IHNtdV92MTFfMF93cml0ZV9wcHRhYmxlKHN0cnVjdCBz
bXVfY29udGV4dCAqc211KQogewogCXN0cnVjdCBzbXVfdGFibGVfY29udGV4dCAqdGFibGVfY29u
dGV4dCA9ICZzbXUtPnNtdV90YWJsZTsKQEAgLTc2OSwxMCArNjkxLDEzIEBAIGludCBzbXVfdjEx
XzBfd3JpdGVfcHB0YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIAlyZXR1cm4gcmV0Owog
fQogCi1pbnQgc211X3YxMV8wX3NldF9kZWVwX3NsZWVwX2RjZWZjbGsoc3RydWN0IHNtdV9jb250
ZXh0ICpzbXUsIHVpbnQzMl90IGNsaykKK2ludCBzbXVfdjExXzBfc2V0X21pbl9kY2VmX2RlZXBf
c2xlZXAoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIHVpbnQzMl90IGNsaykKIHsKIAlpbnQgcmV0
OwogCisJaWYgKCFzbXUtPnBtX2VuYWJsZWQpCisJCXJldHVybiAwOworCiAJcmV0ID0gc211X3Nl
bmRfc21jX21zZ193aXRoX3BhcmFtKHNtdSwKIAkJCQkJICBTTVVfTVNHX1NldE1pbkRlZXBTbGVl
cERjZWZjbGssIGNsayk7CiAJaWYgKHJldCkKQEAgLTc4MSwxOCArNzA2LDYgQEAgaW50IHNtdV92
MTFfMF9zZXRfZGVlcF9zbGVlcF9kY2VmY2xrKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50
MzJfdCBjbGspCiAJcmV0dXJuIHJldDsKIH0KIAotaW50IHNtdV92MTFfMF9zZXRfbWluX2RjZWZf
ZGVlcF9zbGVlcChzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKLXsKLQlzdHJ1Y3Qgc211X3RhYmxl
X2NvbnRleHQgKnRhYmxlX2NvbnRleHQgPSAmc211LT5zbXVfdGFibGU7Ci0KLQlpZiAoIXNtdS0+
cG1fZW5hYmxlZCkKLQkJcmV0dXJuIDA7Ci0JaWYgKCF0YWJsZV9jb250ZXh0KQotCQlyZXR1cm4g
LUVJTlZBTDsKLQotCXJldHVybiBzbXVfdjExXzBfc2V0X2RlZXBfc2xlZXBfZGNlZmNsayhzbXUs
IHRhYmxlX2NvbnRleHQtPmJvb3RfdmFsdWVzLmRjZWZjbGsgLyAxMDApOwotfQotCiBpbnQgc211
X3YxMV8wX3NldF90b29sX3RhYmxlX2xvY2F0aW9uKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQog
ewogCWludCByZXQgPSAwOwpAQCAtMTIyNSw2ICsxMTM4LDUyIEBAIHN0YXRpYyBpbnQgc211X3Yx
MV8wX2dldF9nZnhfdmRkKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCB1aW50MzJfdCAqdmFsdWUp
CiAKIH0KIAorc3RhdGljIGludCBzbXVfY29tbW9uX3JlYWRfc2Vuc29yKHN0cnVjdCBzbXVfY29u
dGV4dCAqc211LCBlbnVtIGFtZF9wcF9zZW5zb3JzIHNlbnNvciwKKwkJCSAgIHZvaWQgKmRhdGEs
IHVpbnQzMl90ICpzaXplKQoreworCXN0cnVjdCBzbXVfcG93ZXJfY29udGV4dCAqc211X3Bvd2Vy
ID0gJnNtdS0+c211X3Bvd2VyOworCXN0cnVjdCBzbXVfcG93ZXJfZ2F0ZSAqcG93ZXJfZ2F0ZSA9
ICZzbXVfcG93ZXItPnBvd2VyX2dhdGU7CisJaW50IHJldCA9IDA7CisKKwlpZighZGF0YSB8fCAh
c2l6ZSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlzd2l0Y2ggKHNlbnNvcikgeworCWNhc2UgQU1E
R1BVX1BQX1NFTlNPUl9TVEFCTEVfUFNUQVRFX1NDTEs6CisJCSooKHVpbnQzMl90ICopZGF0YSkg
PSBzbXUtPnBzdGF0ZV9zY2xrOworCQkqc2l6ZSA9IDQ7CisJCWJyZWFrOworCWNhc2UgQU1ER1BV
X1BQX1NFTlNPUl9TVEFCTEVfUFNUQVRFX01DTEs6CisJCSooKHVpbnQzMl90ICopZGF0YSkgPSBz
bXUtPnBzdGF0ZV9tY2xrOworCQkqc2l6ZSA9IDQ7CisJCWJyZWFrOworCWNhc2UgQU1ER1BVX1BQ
X1NFTlNPUl9FTkFCTEVEX1NNQ19GRUFUVVJFU19NQVNLOgorCQlyZXQgPSBzbXVfZmVhdHVyZV9n
ZXRfZW5hYmxlZF9tYXNrKHNtdSwgKHVpbnQzMl90ICopZGF0YSwgMik7CisJCSpzaXplID0gODsK
KwkJYnJlYWs7CisJY2FzZSBBTURHUFVfUFBfU0VOU09SX1VWRF9QT1dFUjoKKwkJKih1aW50MzJf
dCAqKWRhdGEgPSBzbXVfZmVhdHVyZV9pc19lbmFibGVkKHNtdSwgU01VX0ZFQVRVUkVfRFBNX1VW
RF9CSVQpID8gMSA6IDA7CisJCSpzaXplID0gNDsKKwkJYnJlYWs7CisJY2FzZSBBTURHUFVfUFBf
U0VOU09SX1ZDRV9QT1dFUjoKKwkJKih1aW50MzJfdCAqKWRhdGEgPSBzbXVfZmVhdHVyZV9pc19l
bmFibGVkKHNtdSwgU01VX0ZFQVRVUkVfRFBNX1ZDRV9CSVQpID8gMSA6IDA7CisJCSpzaXplID0g
NDsKKwkJYnJlYWs7CisJY2FzZSBBTURHUFVfUFBfU0VOU09SX1ZDTl9QT1dFUl9TVEFURToKKwkJ
Kih1aW50MzJfdCAqKWRhdGEgPSBwb3dlcl9nYXRlLT52Y25fZ2F0ZWQgPyAwIDogMTsKKwkJKnNp
emUgPSA0OworCQlicmVhazsKKwlkZWZhdWx0OgorCQlyZXQgPSAtRUlOVkFMOworCQlicmVhazsK
Kwl9CisKKwlpZiAocmV0KQorCQkqc2l6ZSA9IDA7CisKKwlyZXR1cm4gcmV0OworfQorCiBpbnQg
c211X3YxMV8wX3JlYWRfc2Vuc29yKHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQkJCSBlbnVt
IGFtZF9wcF9zZW5zb3JzIHNlbnNvciwKIAkJCQkgdm9pZCAqZGF0YSwgdWludDMyX3QgKnNpemUp
CkBAIC0xMzA1LDcgKzEyNjQsNyBAQCBzbXVfdjExXzBfZGlzcGxheV9jbG9ja192b2x0YWdlX3Jl
cXVlc3Qoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJCWlmIChjbGtfc2VsZWN0ID09IFNNVV9V
Q0xLICYmIHNtdS0+ZGlzYWJsZV91Y2xrX3N3aXRjaCkKIAkJCXJldHVybiAwOwogCi0JCXJldCA9
IHNtdV9zZXRfaGFyZF9mcmVxX3JhbmdlKHNtdSwgY2xrX3NlbGVjdCwgY2xrX2ZyZXEsIDApOwor
CQlyZXQgPSBzbXVfdjExXzBfc2V0X2hhcmRfZnJlcV9yYW5nZShzbXUsIGNsa19zZWxlY3QsIGNs
a19mcmVxLCAwKTsKIAogCQlpZihjbGtfc2VsZWN0ID09IFNNVV9VQ0xLKQogCQkJc211LT5oYXJk
X21pbl91Y2xrX3JlcV9mcm9tX2RhbCA9IGNsa19mcmVxOwpAQCAtMTYxOCw3ICsxNTc3LDcgQEAg
Ym9vbCBzbXVfdjExXzBfYmFjb19pc19zdXBwb3J0KHN0cnVjdCBzbXVfY29udGV4dCAqc211KQog
CXJldHVybiBmYWxzZTsKIH0KIAotZW51bSBzbXVfYmFjb19zdGF0ZSBzbXVfdjExXzBfYmFjb19n
ZXRfc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCitzdGF0aWMgZW51bSBzbXVfYmFjb19z
dGF0ZSBzbXVfdjExXzBfYmFjb19nZXRfc3RhdGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCiB7
CiAJc3RydWN0IHNtdV9iYWNvX2NvbnRleHQgKnNtdV9iYWNvID0gJnNtdS0+c211X2JhY287CiAJ
ZW51bSBzbXVfYmFjb19zdGF0ZSBiYWNvX3N0YXRlOwpAQCAtMTczOSw0MyArMTY5OCwzNyBAQCBp
bnQgc211X3YxMV8wX3NldF9zb2Z0X2ZyZXFfbGltaXRlZF9yYW5nZShzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSwgZW51bSBzbXVfY2xrXwogCXJldHVybiByZXQ7CiB9CiAKLWludCBzbXVfdjExXzBf
b3ZlcnJpZGVfcGNpZV9wYXJhbWV0ZXJzKHN0cnVjdCBzbXVfY29udGV4dCAqc211KQoraW50IHNt
dV92MTFfMF9zZXRfaGFyZF9mcmVxX3JhbmdlKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBlbnVt
IHNtdV9jbGtfdHlwZSBjbGtfdHlwZSwKKwkJCSAgICB1aW50MzJfdCBtaW4sIHVpbnQzMl90IG1h
eCkKIHsKLQlzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiA9IHNtdS0+YWRldjsKLQl1aW50MzJf
dCBwY2llX2dlbiA9IDAsIHBjaWVfd2lkdGggPSAwOwotCWludCByZXQ7CisJaW50IHJldCA9IDAs
IGNsa19pZCA9IDA7CisJdWludDMyX3QgcGFyYW07CiAKLQlpZiAoYWRldi0+cG0ucGNpZV9nZW5f
bWFzayAmIENBSUxfUENJRV9MSU5LX1NQRUVEX1NVUFBPUlRfR0VONCkKLQkJcGNpZV9nZW4gPSAz
OwotCWVsc2UgaWYgKGFkZXYtPnBtLnBjaWVfZ2VuX21hc2sgJiBDQUlMX1BDSUVfTElOS19TUEVF
RF9TVVBQT1JUX0dFTjMpCi0JCXBjaWVfZ2VuID0gMjsKLQllbHNlIGlmIChhZGV2LT5wbS5wY2ll
X2dlbl9tYXNrICYgQ0FJTF9QQ0lFX0xJTktfU1BFRURfU1VQUE9SVF9HRU4yKQotCQlwY2llX2dl
biA9IDE7Ci0JZWxzZSBpZiAoYWRldi0+cG0ucGNpZV9nZW5fbWFzayAmIENBSUxfUENJRV9MSU5L
X1NQRUVEX1NVUFBPUlRfR0VOMSkKLQkJcGNpZV9nZW4gPSAwOwotCi0JLyogQml0IDMxOjE2OiBM
Q0xLIERQTSBsZXZlbC4gMCBpcyBEUE0wLCBhbmQgMSBpcyBEUE0xCi0JICogQml0IDE1Ojg6ICBQ
Q0lFIEdFTiwgMCB0byAzIGNvcnJlc3BvbmRzIHRvIEdFTjEgdG8gR0VONAotCSAqIEJpdCA3OjA6
ICAgUENJRSBsYW5lIHdpZHRoLCAxIHRvIDcgY29ycmVzcG9uZHMgaXMgeDEgdG8geDMyCi0JICov
Ci0JaWYgKGFkZXYtPnBtLnBjaWVfbWx3X21hc2sgJiBDQUlMX1BDSUVfTElOS19XSURUSF9TVVBQ
T1JUX1gxNikKLQkJcGNpZV93aWR0aCA9IDY7Ci0JZWxzZSBpZiAoYWRldi0+cG0ucGNpZV9tbHdf
bWFzayAmIENBSUxfUENJRV9MSU5LX1dJRFRIX1NVUFBPUlRfWDEyKQotCQlwY2llX3dpZHRoID0g
NTsKLQllbHNlIGlmIChhZGV2LT5wbS5wY2llX21sd19tYXNrICYgQ0FJTF9QQ0lFX0xJTktfV0lE
VEhfU1VQUE9SVF9YOCkKLQkJcGNpZV93aWR0aCA9IDQ7Ci0JZWxzZSBpZiAoYWRldi0+cG0ucGNp
ZV9tbHdfbWFzayAmIENBSUxfUENJRV9MSU5LX1dJRFRIX1NVUFBPUlRfWDQpCi0JCXBjaWVfd2lk
dGggPSAzOwotCWVsc2UgaWYgKGFkZXYtPnBtLnBjaWVfbWx3X21hc2sgJiBDQUlMX1BDSUVfTElO
S19XSURUSF9TVVBQT1JUX1gyKQotCQlwY2llX3dpZHRoID0gMjsKLQllbHNlIGlmIChhZGV2LT5w
bS5wY2llX21sd19tYXNrICYgQ0FJTF9QQ0lFX0xJTktfV0lEVEhfU1VQUE9SVF9YMSkKLQkJcGNp
ZV93aWR0aCA9IDE7Ci0KLQlyZXQgPSBzbXVfdXBkYXRlX3BjaWVfcGFyYW1ldGVycyhzbXUsIHBj
aWVfZ2VuLCBwY2llX3dpZHRoKTsKKwlpZiAobWluIDw9IDAgJiYgbWF4IDw9IDApCisJCXJldHVy
biAtRUlOVkFMOwogCi0JaWYgKHJldCkKLQkJcHJfZXJyKCJbJXNdIEF0dGVtcHQgdG8gb3ZlcnJp
ZGUgcGNpZSBwYXJhbXMgZmFpbGVkIVxuIiwgX19mdW5jX18pOworCWlmICghc211X2Nsa19kcG1f
aXNfZW5hYmxlZChzbXUsIGNsa190eXBlKSkKKwkJcmV0dXJuIDA7CiAKLQlyZXR1cm4gcmV0Owor
CWNsa19pZCA9IHNtdV9jbGtfZ2V0X2luZGV4KHNtdSwgY2xrX3R5cGUpOworCWlmIChjbGtfaWQg
PCAwKQorCQlyZXR1cm4gY2xrX2lkOwogCisJaWYgKG1heCA+IDApIHsKKwkJcGFyYW0gPSAodWlu
dDMyX3QpKChjbGtfaWQgPDwgMTYpIHwgKG1heCAmIDB4ZmZmZikpOworCQlyZXQgPSBzbXVfc2Vu
ZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211LCBTTVVfTVNHX1NldEhhcmRNYXhCeUZyZXEsCisJCQkJ
CQkgIHBhcmFtKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJaWYgKG1pbiA+
IDApIHsKKwkJcGFyYW0gPSAodWludDMyX3QpKChjbGtfaWQgPDwgMTYpIHwgKG1pbiAmIDB4ZmZm
ZikpOworCQlyZXQgPSBzbXVfc2VuZF9zbWNfbXNnX3dpdGhfcGFyYW0oc211LCBTTVVfTVNHX1Nl
dEhhcmRNaW5CeUZyZXEsCisJCQkJCQkgIHBhcmFtKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiBy
ZXQ7CisJfQorCisJcmV0dXJuIHJldDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvcG93ZXJwbGF5L3NtdV92MTJfMC5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9wb3dlcnBsYXkv
c211X3YxMl8wLmMKaW5kZXggMTM5ZGQ3MzdlYWE1Li41M2MzM2FiZDhmMDIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTJfMC5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9hbWQvcG93ZXJwbGF5L3NtdV92MTJfMC5jCkBAIC0yMjQsNyArMjI0LDcgQEAgaW50
IHNtdV92MTJfMF9zZXRfZ2Z4X2NncGcoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsIGJvb2wgZW5h
YmxlKQogICogUmV0dXJucyAyPU5vdCBpbiBHRlhPRkYuCiAgKiBSZXR1cm5zIDM9VHJhbnNpdGlv
biBpbnRvIEdGWE9GRi4KICAqLwotdWludDMyX3Qgc211X3YxMl8wX2dldF9nZnhvZmZfc3RhdHVz
KHN0cnVjdCBzbXVfY29udGV4dCAqc211KQorc3RhdGljIHVpbnQzMl90IHNtdV92MTJfMF9nZXRf
Z2Z4b2ZmX3N0YXR1cyhzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIHsKIAl1aW50MzJfdCByZWc7
CiAJdWludDMyX3QgZ2Z4T2ZmX1N0YXR1cyA9IDA7CkBAIC0yNjEsMjQgKzI2MSw2IEBAIGludCBz
bXVfdjEyXzBfZ2Z4X29mZl9jb250cm9sKHN0cnVjdCBzbXVfY29udGV4dCAqc211LCBib29sIGVu
YWJsZSkKIAlyZXR1cm4gcmV0OwogfQogCi1pbnQgc211X3YxMl8wX2luaXRfc21jX3RhYmxlcyhz
dHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKLXsKLQlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQgKnNt
dV90YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsKLQlzdHJ1Y3Qgc211X3RhYmxlICp0YWJsZXMgPSBO
VUxMOwotCi0JaWYgKHNtdV90YWJsZS0+dGFibGVzKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCXRh
YmxlcyA9IGtjYWxsb2MoU01VX1RBQkxFX0NPVU5ULCBzaXplb2Yoc3RydWN0IHNtdV90YWJsZSks
Ci0JCQkgR0ZQX0tFUk5FTCk7Ci0JaWYgKCF0YWJsZXMpCi0JCXJldHVybiAtRU5PTUVNOwotCi0J
c211X3RhYmxlLT50YWJsZXMgPSB0YWJsZXM7Ci0KLQlyZXR1cm4gc211X3RhYmxlc19pbml0KHNt
dSwgdGFibGVzKTsKLX0KLQogaW50IHNtdV92MTJfMF9maW5pX3NtY190YWJsZXMoc3RydWN0IHNt
dV9jb250ZXh0ICpzbXUpCiB7CiAJc3RydWN0IHNtdV90YWJsZV9jb250ZXh0ICpzbXVfdGFibGUg
PSAmc211LT5zbXVfdGFibGU7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2Vy
cGxheS92ZWdhMjBfcHB0LmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL3Bvd2VycGxheS92ZWdhMjBf
cHB0LmMKaW5kZXggNzEyNTQwNmM2MjU2Li5kNmNjZGU4MGM2ZGUgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9hbWQvcG93ZXJwbGF5L3ZlZ2EyMF9wcHQuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vYW1kL3Bvd2VycGxheS92ZWdhMjBfcHB0LmMKQEAgLTM3Niw2ICszNzYsMzMgQEAgc3RhdGlj
IGludCB2ZWdhMjBfYWxsb2NhdGVfZHBtX2NvbnRleHQoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUp
CiAJcmV0dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgdmVnYTIwX2luaXRfc21jX3RhYmxlcyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlzdHJ1Y3Qgc211X3RhYmxlX2NvbnRleHQgKnNtdV90
YWJsZSA9ICZzbXUtPnNtdV90YWJsZTsKKwlzdHJ1Y3Qgc211X3RhYmxlICp0YWJsZXMgPSBOVUxM
OworCWludCByZXQgPSAwOworCisJaWYgKHNtdV90YWJsZS0+dGFibGVzKQorCQlyZXR1cm4gLUVJ
TlZBTDsKKworCXRhYmxlcyA9IGtjYWxsb2MoU01VX1RBQkxFX0NPVU5ULCBzaXplb2Yoc3RydWN0
IHNtdV90YWJsZSksCisJCQkgR0ZQX0tFUk5FTCk7CisJaWYgKCF0YWJsZXMpCisJCXJldHVybiAt
RU5PTUVNOworCisJc211X3RhYmxlLT50YWJsZXMgPSB0YWJsZXM7CisKKwlyZXQgPSB2ZWdhMjBf
dGFibGVzX2luaXQoc211LCB0YWJsZXMpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwly
ZXQgPSB2ZWdhMjBfYWxsb2NhdGVfZHBtX2NvbnRleHQoc211KTsKKwlpZiAocmV0KQorCQlyZXR1
cm4gcmV0OworCisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQgdmVnYTIwX3NldHVwX29kOF9p
bmZvcm1hdGlvbihzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKIHsKIAlBVE9NX1ZlZ2EyMF9QT1dF
UlBMQVlUQUJMRSAqcG93ZXJwbGF5X3RhYmxlID0gTlVMTDsKQEAgLTU2Miw2ICs1ODksMzAgQEAg
c3RhdGljIGludCB2ZWdhMjBfYXBwZW5kX3Bvd2VycGxheV90YWJsZShzdHJ1Y3Qgc211X2NvbnRl
eHQgKnNtdSkKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGludCB2ZWdhMjBfcGFyc2VfcHB0YWJs
ZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkKK3sKKwlpbnQgcmV0OworCisJc3RydWN0IHNtdV90
YWJsZV9jb250ZXh0ICp0YWJsZV9jb250ZXh0ID0gJnNtdS0+c211X3RhYmxlOworCXN0cnVjdCBz
bXVfdGFibGUgKnRhYmxlID0gJnRhYmxlX2NvbnRleHQtPnRhYmxlc1tTTVVfVEFCTEVfUFBUQUJM
RV07CisKKwlpZiAodGFibGVfY29udGV4dC0+ZHJpdmVyX3BwdGFibGUpCisJCXJldHVybiAtRUlO
VkFMOworCisJdGFibGVfY29udGV4dC0+ZHJpdmVyX3BwdGFibGUgPSBremFsbG9jKHRhYmxlLT5z
aXplLCBHRlBfS0VSTkVMKTsKKworCWlmICghdGFibGVfY29udGV4dC0+ZHJpdmVyX3BwdGFibGUp
CisJCXJldHVybiAtRU5PTUVNOworCisJcmV0ID0gdmVnYTIwX3N0b3JlX3Bvd2VycGxheV90YWJs
ZShzbXUpOworCWlmIChyZXQpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0ID0gdmVnYTIwX2Fw
cGVuZF9wb3dlcnBsYXlfdGFibGUoc211KTsKKworCXJldHVybiByZXQ7Cit9CisKIHN0YXRpYyBp
bnQgdmVnYTIwX2NoZWNrX3Bvd2VycGxheV90YWJsZShzdHJ1Y3Qgc211X2NvbnRleHQgKnNtdSkK
IHsKIAlBVE9NX1ZlZ2EyMF9QT1dFUlBMQVlUQUJMRSAqcG93ZXJwbGF5X3RhYmxlID0gTlVMTDsK
QEAgLTI1ODMsOSArMjYzNCw5IEBAIHN0YXRpYyBpbnQgdmVnYTIwX3NldF9vZF9wZXJjZW50YWdl
KHN0cnVjdCBzbXVfY29udGV4dCAqc211LAogCQlzaW5nbGVfZHBtX3RhYmxlLT5kcG1fbGV2ZWxz
WzBdLnZhbHVlID0gc211LT5zbXVfdGFibGUuYm9vdF92YWx1ZXMuZ2Z4Y2xrIC8gMTAwOwogCX0K
IAotCXJldCA9IHNtdV9oYW5kbGVfdGFzayhzbXUsIHNtdV9kcG0tPmRwbV9sZXZlbCwKLQkJCSAg
ICAgIEFNRF9QUF9UQVNLX1JFQURKVVNUX1BPV0VSX1NUQVRFLAotCQkJICAgICAgZmFsc2UpOwor
CXJldCA9IHNtdV9jbW5faGFuZGxlX3Rhc2soc211LAorCQkJCSAgc211X2RwbS0+ZHBtX2xldmVs
LAorCQkJCSAgQU1EX1BQX1RBU0tfUkVBREpVU1RfUE9XRVJfU1RBVEUpOwogCiBzZXRfb2RfZmFp
bGVkOgogCXJldHVybiByZXQ7CkBAIC0yODEyLDkgKzI4NjMsOSBAQCBzdGF0aWMgaW50IHZlZ2Ey
MF9vZG5fZWRpdF9kcG1fdGFibGUoc3RydWN0IHNtdV9jb250ZXh0ICpzbXUsCiAJfQogCiAJaWYg
KHR5cGUgPT0gUFBfT0RfQ09NTUlUX0RQTV9UQUJMRSkgewotCQlyZXQgPSBzbXVfaGFuZGxlX3Rh
c2soc211LCBzbXVfZHBtLT5kcG1fbGV2ZWwsCi0JCQkJICAgICAgQU1EX1BQX1RBU0tfUkVBREpV
U1RfUE9XRVJfU1RBVEUsCi0JCQkJICAgICAgZmFsc2UpOworCQlyZXQgPSBzbXVfY21uX2hhbmRs
ZV90YXNrKHNtdSwKKwkJCQkJICBzbXVfZHBtLT5kcG1fbGV2ZWwsCisJCQkJCSAgQU1EX1BQX1RB
U0tfUkVBREpVU1RfUE9XRVJfU1RBVEUpOwogCX0KIAogCXJldHVybiByZXQ7CkBAIC0zMTY5LDEx
ICszMjIwLDYgQEAgc3RhdGljIGludCB2ZWdhMjBfdXBkYXRlX3BjaWVfcGFyYW1ldGVycyhzdHJ1
Y3Qgc211X2NvbnRleHQgKnNtdSwKIAogCiBzdGF0aWMgY29uc3Qgc3RydWN0IHBwdGFibGVfZnVu
Y3MgdmVnYTIwX3BwdF9mdW5jcyA9IHsKLQkudGFibGVzX2luaXQgPSB2ZWdhMjBfdGFibGVzX2lu
aXQsCi0JLmFsbG9jX2RwbV9jb250ZXh0ID0gdmVnYTIwX2FsbG9jYXRlX2RwbV9jb250ZXh0LAot
CS5zdG9yZV9wb3dlcnBsYXlfdGFibGUgPSB2ZWdhMjBfc3RvcmVfcG93ZXJwbGF5X3RhYmxlLAot
CS5jaGVja19wb3dlcnBsYXlfdGFibGUgPSB2ZWdhMjBfY2hlY2tfcG93ZXJwbGF5X3RhYmxlLAot
CS5hcHBlbmRfcG93ZXJwbGF5X3RhYmxlID0gdmVnYTIwX2FwcGVuZF9wb3dlcnBsYXlfdGFibGUs
CiAJLmdldF9zbXVfbXNnX2luZGV4ID0gdmVnYTIwX2dldF9zbXVfbXNnX2luZGV4LAogCS5nZXRf
c211X2Nsa19pbmRleCA9IHZlZ2EyMF9nZXRfc211X2Nsa19pbmRleCwKIAkuZ2V0X3NtdV9mZWF0
dXJlX2luZGV4ID0gdmVnYTIwX2dldF9zbXVfZmVhdHVyZV9pbmRleCwKQEAgLTMxODMsNyArMzIy
OSw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyB2ZWdhMjBfcHB0X2Z1bmNz
ID0gewogCS5ydW5fYnRjID0gdmVnYTIwX3J1bl9idGNfYWZsbCwKIAkuZ2V0X2FsbG93ZWRfZmVh
dHVyZV9tYXNrID0gdmVnYTIwX2dldF9hbGxvd2VkX2ZlYXR1cmVfbWFzaywKIAkuZ2V0X2N1cnJl
bnRfcG93ZXJfc3RhdGUgPSB2ZWdhMjBfZ2V0X2N1cnJlbnRfcG93ZXJfc3RhdGUsCi0JLnNldF9k
ZWZhdWx0X2RwbV90YWJsZSA9IHZlZ2EyMF9zZXRfZGVmYXVsdF9kcG1fdGFibGUsCiAJLnNldF9w
b3dlcl9zdGF0ZSA9IE5VTEwsCiAJLnBvcHVsYXRlX3VtZF9zdGF0ZV9jbGsgPSB2ZWdhMjBfcG9w
dWxhdGVfdW1kX3N0YXRlX2NsaywKIAkucHJpbnRfY2xrX2xldmVscyA9IHZlZ2EyMF9wcmludF9j
bGtfbGV2ZWxzLApAQCAtMzIxNSw3ICszMjYwLDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBwcHRh
YmxlX2Z1bmNzIHZlZ2EyMF9wcHRfZnVuY3MgPSB7CiAJLnVwZGF0ZV9wY2llX3BhcmFtZXRlcnMg
PSB2ZWdhMjBfdXBkYXRlX3BjaWVfcGFyYW1ldGVycywKIAkuaW5pdF9taWNyb2NvZGUgPSBzbXVf
djExXzBfaW5pdF9taWNyb2NvZGUsCiAJLmxvYWRfbWljcm9jb2RlID0gc211X3YxMV8wX2xvYWRf
bWljcm9jb2RlLAotCS5pbml0X3NtY190YWJsZXMgPSBzbXVfdjExXzBfaW5pdF9zbWNfdGFibGVz
LAorCS5pbml0X3NtY190YWJsZXMgPSB2ZWdhMjBfaW5pdF9zbWNfdGFibGVzLAogCS5maW5pX3Nt
Y190YWJsZXMgPSBzbXVfdjExXzBfZmluaV9zbWNfdGFibGVzLAogCS5pbml0X3Bvd2VyID0gc211
X3YxMV8wX2luaXRfcG93ZXIsCiAJLmZpbmlfcG93ZXIgPSBzbXVfdjExXzBfZmluaV9wb3dlciwK
QEAgLTMyMjMsOSArMzI2OCw5IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHB0YWJsZV9mdW5jcyB2
ZWdhMjBfcHB0X2Z1bmNzID0gewogCS5zZXR1cF9wcHRhYmxlID0gc211X3YxMV8wX3NldHVwX3Bw
dGFibGUsCiAJLmdldF92Ymlvc19ib290dXBfdmFsdWVzID0gc211X3YxMV8wX2dldF92Ymlvc19i
b290dXBfdmFsdWVzLAogCS5nZXRfY2xrX2luZm9fZnJvbV92YmlvcyA9IHNtdV92MTFfMF9nZXRf
Y2xrX2luZm9fZnJvbV92YmlvcywKLQkuY2hlY2tfcHB0YWJsZSA9IHNtdV92MTFfMF9jaGVja19w
cHRhYmxlLAotCS5wYXJzZV9wcHRhYmxlID0gc211X3YxMV8wX3BhcnNlX3BwdGFibGUsCi0JLnBv
cHVsYXRlX3NtY190YWJsZXMgPSBzbXVfdjExXzBfcG9wdWxhdGVfc21jX3BwdGFibGUsCisJLmNo
ZWNrX3BwdGFibGUgPSB2ZWdhMjBfY2hlY2tfcG93ZXJwbGF5X3RhYmxlLAorCS5wYXJzZV9wcHRh
YmxlID0gdmVnYTIwX3BhcnNlX3BwdGFibGUsCisJLnBvcHVsYXRlX3NtY190YWJsZXMgPSB2ZWdh
MjBfc2V0X2RlZmF1bHRfZHBtX3RhYmxlLAogCS5jaGVja19md192ZXJzaW9uID0gc211X3YxMV8w
X2NoZWNrX2Z3X3ZlcnNpb24sCiAJLndyaXRlX3BwdGFibGUgPSBzbXVfdjExXzBfd3JpdGVfcHB0
YWJsZSwKIAkuc2V0X21pbl9kY2VmX2RlZXBfc2xlZXAgPSBzbXVfdjExXzBfc2V0X21pbl9kY2Vm
X2RlZXBfc2xlZXAsCkBAIC0zMjQ0LDcgKzMyODksNiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHBw
dGFibGVfZnVuY3MgdmVnYTIwX3BwdF9mdW5jcyA9IHsKIAkuaW5pdF9tYXhfc3VzdGFpbmFibGVf
Y2xvY2tzID0gc211X3YxMV8wX2luaXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2NrcywKIAkuc3RhcnRf
dGhlcm1hbF9jb250cm9sID0gc211X3YxMV8wX3N0YXJ0X3RoZXJtYWxfY29udHJvbCwKIAkuc3Rv
cF90aGVybWFsX2NvbnRyb2wgPSBzbXVfdjExXzBfc3RvcF90aGVybWFsX2NvbnRyb2wsCi0JLnNl
dF9kZWVwX3NsZWVwX2RjZWZjbGsgPSBzbXVfdjExXzBfc2V0X2RlZXBfc2xlZXBfZGNlZmNsaywK
IAkuZGlzcGxheV9jbG9ja192b2x0YWdlX3JlcXVlc3QgPSBzbXVfdjExXzBfZGlzcGxheV9jbG9j
a192b2x0YWdlX3JlcXVlc3QsCiAJLmdldF9mYW5fY29udHJvbF9tb2RlID0gc211X3YxMV8wX2dl
dF9mYW5fY29udHJvbF9tb2RlLAogCS5zZXRfZmFuX2NvbnRyb2xfbW9kZSA9IHNtdV92MTFfMF9z
ZXRfZmFuX2NvbnRyb2xfbW9kZSwKQEAgLTMyNTYsMTIgKzMzMDAsMTAgQEAgc3RhdGljIGNvbnN0
IHN0cnVjdCBwcHRhYmxlX2Z1bmNzIHZlZ2EyMF9wcHRfZnVuY3MgPSB7CiAJLnNldF9hemFsaWFf
ZDNfcG1lID0gc211X3YxMV8wX3NldF9hemFsaWFfZDNfcG1lLAogCS5nZXRfbWF4X3N1c3RhaW5h
YmxlX2Nsb2Nrc19ieV9kYyA9IHNtdV92MTFfMF9nZXRfbWF4X3N1c3RhaW5hYmxlX2Nsb2Nrc19i
eV9kYywKIAkuYmFjb19pc19zdXBwb3J0PSBzbXVfdjExXzBfYmFjb19pc19zdXBwb3J0LAotCS5i
YWNvX2dldF9zdGF0ZSA9IHNtdV92MTFfMF9iYWNvX2dldF9zdGF0ZSwKIAkuYmFjb19zZXRfc3Rh
dGUgPSBzbXVfdjExXzBfYmFjb19zZXRfc3RhdGUsCiAJLmJhY29fcmVzZXQgPSBzbXVfdjExXzBf
YmFjb19yZXNldCwKIAkuZ2V0X2RwbV91bHRpbWF0ZV9mcmVxID0gc211X3YxMV8wX2dldF9kcG1f
dWx0aW1hdGVfZnJlcSwKIAkuc2V0X3NvZnRfZnJlcV9saW1pdGVkX3JhbmdlID0gc211X3YxMV8w
X3NldF9zb2Z0X2ZyZXFfbGltaXRlZF9yYW5nZSwKLQkub3ZlcnJpZGVfcGNpZV9wYXJhbWV0ZXJz
ID0gc211X3YxMV8wX292ZXJyaWRlX3BjaWVfcGFyYW1ldGVycywKIH07CiAKIHZvaWQgdmVnYTIw
X3NldF9wcHRfZnVuY3Moc3RydWN0IHNtdV9jb250ZXh0ICpzbXUpCi0tIAoyLjIzLjAKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmFtZC1nZnggbWFpbGlu
ZyBsaXN0CmFtZC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vYW1kLWdmeA==
