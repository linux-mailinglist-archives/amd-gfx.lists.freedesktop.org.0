Return-Path: <amd-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+amd-gfx@lfdr.de
Delivered-To: lists+amd-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4356E85FB0
	for <lists+amd-gfx@lfdr.de>; Thu,  8 Aug 2019 12:32:35 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 75D4D6E487;
	Thu,  8 Aug 2019 10:32:33 +0000 (UTC)
X-Original-To: amd-gfx@lists.freedesktop.org
Delivered-To: amd-gfx@lists.freedesktop.org
Received: from NAM04-CO1-obe.outbound.protection.outlook.com
 (mail-eopbgr690088.outbound.protection.outlook.com [40.107.69.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 304FF6E487
 for <amd-gfx@lists.freedesktop.org>; Thu,  8 Aug 2019 10:32:32 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=YNyQiHFXu8iBw6nMEkiPRZ3fDBSK2c4iBr0obQNiE9qoCWhmVxplilxWHQ0Xqc63Qb9TYPKpY4g5xO9mumgzsTecQ5CZrpPm3iwWyHvaCQK46GV9O94QLtaqBYFAih/RftQdmVPRpcmZgpgaRC7/5vqFQ/6ApB9fJZR06H52h0LSAGoQrFAWxxvSptqN2eqqHajwhsA2B8og128SV4Rn/PKr2ge3Et8uJ2Bq/nz3/USW3/Uu2bmCAFK8R80Vld+Mt8vsJUDxZ5lPe5Q+umQQJ4ifEkVe3No2Hj4wcRfP4RgKf23j1TJt6jKnkcp3Wd8qjTBCo8ZiwqUAaTKNeYCtlA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com; 
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RsgL/9MoK/kRZCIYzLVrmcWXJnrghSfS18vkztfLasQ=;
 b=IdpW5f2QbBnJgCvy0YoM0aSuXz9SERxBRKPeh6sbjmByzLtc+GmfKa6Fuo27oSAGZbeS4YBuhK5qX/HBrKgGTXZQx9WuWuZiKodafWvZErFOOWSH0gVELFQeK/BYlsVKN3VjMHQJL1kSbJWDXEKMh5asv36kTnsJ79Kze0QbWzo0dOjQ0iduYmYC21dqJlZdscE3p5b2Nvu5ByjRYE8k21/VKxJ0qvrLg7XNqnmse9L6GMYQ4V+ZCeW9fTx9MiADyRTDWy/EIEtj9mByJq4In8tNSCq1jdRCyT4OvOtGSBQKcwuMXGN5UrOcmcrNwNsX8jLnk973qI9/P08Rclk12A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=none (sender ip is
 165.204.84.17) smtp.rcpttodomain=lists.freedesktop.org smtp.mailfrom=amd.com; 
 dmarc=permerror action=none header.from=amd.com; dkim=none (message not
 signed); arc=none
Received: from MWHPR12CA0060.namprd12.prod.outlook.com (2603:10b6:300:103::22)
 by SN6PR12MB2717.namprd12.prod.outlook.com (2603:10b6:805:70::10)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.2157.16; Thu, 8 Aug
 2019 10:32:30 +0000
Received: from CO1NAM03FT018.eop-NAM03.prod.protection.outlook.com
 (2a01:111:f400:7e48::200) by MWHPR12CA0060.outlook.office365.com
 (2603:10b6:300:103::22) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.20.2157.16 via Frontend
 Transport; Thu, 8 Aug 2019 10:32:30 +0000
Received-SPF: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
Received: from SATLEXCHOV01.amd.com (165.204.84.17) by
 CO1NAM03FT018.mail.protection.outlook.com (10.152.80.174) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.20.2157.15 via Frontend Transport; Thu, 8 Aug 2019 10:32:30 +0000
Received: from localhost.localdomain (10.34.1.3) by SATLEXCHOV01.amd.com
 (10.181.40.71) with Microsoft SMTP Server id 14.3.389.1; Thu, 8 Aug 2019
 05:32:28 -0500
From: Le Ma <le.ma@amd.com>
To: <amd-gfx@lists.freedesktop.org>
Subject: [PATCH 1/1] drm/amdgpu: split athub clock gating from mmhub
Date: Thu, 8 Aug 2019 18:32:22 +0800
Message-ID: <1565260342-31106-1-git-send-email-le.ma@amd.com>
X-Mailer: git-send-email 2.7.4
MIME-Version: 1.0
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:165.204.84.17; IPV:NLI; CTRY:US; EFV:NLI;
 SFV:NSPM;
 SFS:(10009020)(4636009)(396003)(39860400002)(136003)(346002)(376002)(2980300002)(428003)(199004)(189003)(5660300002)(486006)(50226002)(30864003)(70206006)(8936002)(6666004)(16586007)(48376002)(70586007)(6916009)(356004)(81156014)(81166006)(8676002)(49486002)(51416003)(316002)(4326008)(47776003)(86362001)(36756003)(186003)(2906002)(26005)(50466002)(2616005)(44832011)(126002)(2351001)(53936002)(305945005)(14444005)(478600001)(426003)(476003)(336012);
 DIR:OUT; SFP:1101; SCL:1; SRVR:SN6PR12MB2717; H:SATLEXCHOV01.amd.com; FPR:;
 SPF:None; LANG:en; PTR:InfoDomainNonexistent; A:1; MX:1; 
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: f5c9f3b6-e5e9-468f-548f-08d71bebb756
X-Microsoft-Antispam: BCL:0; PCL:0;
 RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600148)(711020)(4605104)(1401327)(2017052603328);
 SRVR:SN6PR12MB2717; 
X-MS-TrafficTypeDiagnostic: SN6PR12MB2717:
X-Microsoft-Antispam-PRVS: <SN6PR12MB2717B344D2B0045E2979CA89F6D70@SN6PR12MB2717.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:9508;
X-Forefront-PRVS: 012349AD1C
X-MS-Exchange-SenderADCheck: 1
X-Microsoft-Antispam-Message-Info: 6bZfKUg6rEyZmNB+phLNlOrtr1oFb33HfYrgaH2rHe7Fk7QwgK8KVV12eaQ/jfRXwlXMwGn61efJDm3GD8T4YyQ3WOxa6V8VdPDI2Lypl/xsMByBBK9lIW6lmi1/uGLL+SPO5hbR9eTQ2GnL6Kj7OLKHJlIrH5AGqC8PCd/4v9JbplzFiqtxr14Nrb8m2QFFvkredYtWUtihI6g52DMqKDs5zQ60Rlgnxq9Ct+Jz5mtPxwt9fmpzytvvPNA964I+TtthI+dW1XIXc5OZ8gulTwfRAxOazjZAYJNXMeWavJsvZV2jyYi0pDsjJbZAErtlnRaSf1NDO+ZEn5CcG6oqyKaJD0QjlGJ3FLYiN35or7y0HIWGad+ukA6y6tLoUizSmBKrLMDfA/4hS3md/Bh6xuhjQYxdpl81xRRorzTxz2w=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 08 Aug 2019 10:32:30.0715 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: f5c9f3b6-e5e9-468f-548f-08d71bebb756
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d; Ip=[165.204.84.17];
 Helo=[SATLEXCHOV01.amd.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR12MB2717
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amdcloud-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RsgL/9MoK/kRZCIYzLVrmcWXJnrghSfS18vkztfLasQ=;
 b=KLMcxZdEgwjJ9y+s8CwmlNZB+zy1qBhYIMU1gIYrnIUC8sYXP+qEW1xe7Lu34uhIGJyofkTXDa/7TOuavKNbFjVvxS2xA9rlxILa7kG7+U1p2UPuzl27FUHCPg2pECzlZySqlf0X6nm010suXU5Ti2A4G47Eu1usjLDb9LT6Kw8=
X-Mailman-Original-Authentication-Results: spf=none (sender IP is
 165.204.84.17)
 smtp.mailfrom=amd.com; lists.freedesktop.org; dkim=none (message not signed)
 header.d=none;lists.freedesktop.org; dmarc=permerror action=none
 header.from=amd.com;
X-BeenThere: amd-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Discussion list for AMD gfx <amd-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/amd-gfx>
List-Post: <mailto:amd-gfx@lists.freedesktop.org>
List-Help: <mailto:amd-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/amd-gfx>,
 <mailto:amd-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Le Ma <le.ma@amd.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: amd-gfx-bounces@lists.freedesktop.org
Sender: "amd-gfx" <amd-gfx-bounces@lists.freedesktop.org>

VW50aWUgdGhlIGJpbmQgb2YgZ2V0L3NldCBhdGh1YiBDRyBzdGF0ZSBmcm9tIG1taHViLCBmb3Ig
Y29zbWV0aWMgZml4IGFuZCBBc2ljCm5vdCB1c2luZyBtbWh1YiAxLjAuIEJlc2lkZXMsIGFsc28g
Zml4IHdyb25nIGF0aHViIENHIHN0YXRlIGluIGFtZGdwdV9wbV9pbmZvLgoKQ2hhbmdlLUlkOiBJ
NGJhOTcwY2FlNTU4YWQ1MTYzZTkzZmE5YmM3N2Y1ODkxOTZhMjJiMQpTaWduZWQtb2ZmLWJ5OiBM
ZSBNYSA8bGUubWFAYW1kLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9NYWtl
ZmlsZSAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYXRodWJfdjFfMC5j
IHwgMTAzICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hdGh1Yl92MV8wLmggfCAgMzAgKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvZ21jX3Y5XzAuYyAgIHwgICA5ICsrLQogZHJpdmVycy9ncHUvZHJtL2FtZC9h
bWRncHUvbW1odWJfdjFfMC5jIHwgIDU1ICsrKystLS0tLS0tLS0tLS0tCiA1IGZpbGVzIGNoYW5n
ZWQsIDE1NCBpbnNlcnRpb25zKCspLCA0NCBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0
NCBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hdGh1Yl92MV8wLmMKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBkcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hdGh1Yl92MV8wLmgKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L01ha2VmaWxlCmluZGV4IDhhZmEwYmMuLjQ2NGJmZTUgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L01ha2VmaWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L01ha2VmaWxlCkBAIC0xNTQsNiArMTU0LDcgQEAgYW1kZ3B1LXkgKz0gXAogCiAj
IGFkZCBBVEhVQiBibG9jawogYW1kZ3B1LXkgKz0gXAorCWF0aHViX3YxXzAubyBcCiAJYXRodWJf
djJfMC5vCiAKICMgYWRkIGFtZGtmZCBpbnRlcmZhY2VzCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hdGh1Yl92MV8wLmMgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdw
dS9hdGh1Yl92MV8wLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZDljYzc0
NgotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2F0aHViX3Yx
XzAuYwpAQCAtMCwwICsxLDEwMyBAQAorLyoKKyAqIENvcHlyaWdodCAyMDE2IEFkdmFuY2VkIE1p
Y3JvIERldmljZXMsIEluYy4KKyAqCisgKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBm
cmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQorICogY29weSBvZiB0aGlz
IHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdh
cmUiKSwKKyAqIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGlu
Y2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24KKyAqIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBt
b2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLAorICogYW5kL29y
IHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdo
b20gdGhlCisgKiBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhl
IGZvbGxvd2luZyBjb25kaXRpb25zOgorICoKKyAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNl
IGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCisgKiBhbGwg
Y29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKiBU
SEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkg
S0lORCwgRVhQUkVTUyBPUgorICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBU
TyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBB
UlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwK
KyAqIFRIRSBDT1BZUklHSFQgSE9MREVSKFMpIE9SIEFVVEhPUihTKSBCRSBMSUFCTEUgRk9SIEFO
WSBDTEFJTSwgREFNQUdFUyBPUgorICogT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFD
VElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsCisgKiBBUklTSU5HIEZST00sIE9V
VCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKKyAq
IE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKi8KKyNpbmNsdWRlICJhbWRn
cHUuaCIKKyNpbmNsdWRlICJhdGh1Yl92MV8wLmgiCisKKyNpbmNsdWRlICJhdGh1Yi9hdGh1Yl8x
XzBfb2Zmc2V0LmgiCisjaW5jbHVkZSAiYXRodWIvYXRodWJfMV8wX3NoX21hc2suaCIKKyNpbmNs
dWRlICJ2ZWdhMTBfZW51bS5oIgorCisjaW5jbHVkZSAic29jMTVfY29tbW9uLmgiCisKK3N0YXRp
YyB2b2lkIGF0aHViX3VwZGF0ZV9tZWRpdW1fZ3JhaW5fY2xvY2tfZ2F0aW5nKHN0cnVjdCBhbWRn
cHVfZGV2aWNlICphZGV2LAorCQkJCQkJICAgYm9vbCBlbmFibGUpCit7CisJdWludDMyX3QgZGVm
LCBkYXRhOworCisJZGVmID0gZGF0YSA9IFJSRUczMl9TT0MxNShBVEhVQiwgMCwgbW1BVEhVQl9N
SVNDX0NOVEwpOworCisJaWYgKGVuYWJsZSAmJiAoYWRldi0+Y2dfZmxhZ3MgJiBBTURfQ0dfU1VQ
UE9SVF9NQ19NR0NHKSkKKwkJZGF0YSB8PSBBVEhVQl9NSVNDX0NOVExfX0NHX0VOQUJMRV9NQVNL
OworCWVsc2UKKwkJZGF0YSAmPSB+QVRIVUJfTUlTQ19DTlRMX19DR19FTkFCTEVfTUFTSzsKKwor
CWlmIChkZWYgIT0gZGF0YSkKKwkJV1JFRzMyX1NPQzE1KEFUSFVCLCAwLCBtbUFUSFVCX01JU0Nf
Q05UTCwgZGF0YSk7Cit9CisKK3N0YXRpYyB2b2lkIGF0aHViX3VwZGF0ZV9tZWRpdW1fZ3JhaW5f
bGlnaHRfc2xlZXAoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCisJCQkJCQkgIGJvb2wgZW5h
YmxlKQoreworCXVpbnQzMl90IGRlZiwgZGF0YTsKKworCWRlZiA9IGRhdGEgPSBSUkVHMzJfU09D
MTUoQVRIVUIsIDAsIG1tQVRIVUJfTUlTQ19DTlRMKTsKKworCWlmIChlbmFibGUgJiYgKGFkZXYt
PmNnX2ZsYWdzICYgQU1EX0NHX1NVUFBPUlRfTUNfTFMpICYmCisJICAgIChhZGV2LT5jZ19mbGFn
cyAmIEFNRF9DR19TVVBQT1JUX0hEUF9MUykpCisJCWRhdGEgfD0gQVRIVUJfTUlTQ19DTlRMX19D
R19NRU1fTFNfRU5BQkxFX01BU0s7CisJZWxzZQorCQlkYXRhICY9IH5BVEhVQl9NSVNDX0NOVExf
X0NHX01FTV9MU19FTkFCTEVfTUFTSzsKKworCWlmKGRlZiAhPSBkYXRhKQorCQlXUkVHMzJfU09D
MTUoQVRIVUIsIDAsIG1tQVRIVUJfTUlTQ19DTlRMLCBkYXRhKTsKK30KKworaW50IGF0aHViX3Yx
XzBfc2V0X2Nsb2NrZ2F0aW5nKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAorCQkJICAgICAg
IGVudW0gYW1kX2Nsb2NrZ2F0aW5nX3N0YXRlIHN0YXRlKQoreworCWlmIChhbWRncHVfc3Jpb3Zf
dmYoYWRldikpCisJCXJldHVybiAwOworCisJc3dpdGNoIChhZGV2LT5hc2ljX3R5cGUpIHsKKwlj
YXNlIENISVBfVkVHQTEwOgorCWNhc2UgQ0hJUF9WRUdBMTI6CisJY2FzZSBDSElQX1ZFR0EyMDoK
KwljYXNlIENISVBfUkFWRU46CisJCWF0aHViX3VwZGF0ZV9tZWRpdW1fZ3JhaW5fY2xvY2tfZ2F0
aW5nKGFkZXYsCisJCQkJc3RhdGUgPT0gQU1EX0NHX1NUQVRFX0dBVEUgPyB0cnVlIDogZmFsc2Up
OworCQlhdGh1Yl91cGRhdGVfbWVkaXVtX2dyYWluX2xpZ2h0X3NsZWVwKGFkZXYsCisJCQkJc3Rh
dGUgPT0gQU1EX0NHX1NUQVRFX0dBVEUgPyB0cnVlIDogZmFsc2UpOworCQlicmVhazsKKwlkZWZh
dWx0OgorCQlicmVhazsKKwl9CisKKwlyZXR1cm4gMDsKK30KKwordm9pZCBhdGh1Yl92MV8wX2dl
dF9jbG9ja2dhdGluZyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgdTMyICpmbGFncykKK3sK
KwlpbnQgZGF0YTsKKworCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikpCisJCSpmbGFncyA9IDA7
CisKKwkvKiBBTURfQ0dfU1VQUE9SVF9BVEhVQl9NR0NHICovCisJZGF0YSA9IFJSRUczMl9TT0Mx
NShBVEhVQiwgMCwgbW1BVEhVQl9NSVNDX0NOVEwpOworCWlmIChkYXRhICYgQVRIVUJfTUlTQ19D
TlRMX19DR19FTkFCTEVfTUFTSykKKwkJKmZsYWdzIHw9IEFNRF9DR19TVVBQT1JUX0FUSFVCX01H
Q0c7CisKKwkvKiBBTURfQ0dfU1VQUE9SVF9BVEhVQl9MUyAqLworCWlmIChkYXRhICYgQVRIVUJf
TUlTQ19DTlRMX19DR19NRU1fTFNfRU5BQkxFX01BU0spCisJCSpmbGFncyB8PSBBTURfQ0dfU1VQ
UE9SVF9BVEhVQl9MUzsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2F0aHViX3YxXzAuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2F0aHViX3YxXzAuaApu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwLi5iMjc5YWY1Ci0tLSAvZGV2L251bGwK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYXRodWJfdjFfMC5oCkBAIC0wLDAgKzEs
MzAgQEAKKy8qCisgKiBDb3B5cmlnaHQgMjAxNiBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJbmMu
CisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRv
IGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNz
b2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0byBkZWFs
IGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBs
aW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVi
bGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0
aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQorICogU29mdHdh
cmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0
aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNz
aW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbgorICogYWxsIGNvcGllcyBvciBzdWJzdGFu
dGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBS
T1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IK
KyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMg
T0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0Ug
QU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQ09QWVJJR0hU
IEhPTERFUihTKSBPUiBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMg
T1IKKyAqIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1Qs
IFRPUlQgT1IgT1RIRVJXSVNFLAorICogQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVD
VElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SCisgKiBPVEhFUiBERUFMSU5HUyBJ
TiBUSEUgU09GVFdBUkUuCisgKgorICovCisjaWZuZGVmIF9fQVRIVUJfVjFfMF9IX18KKyNkZWZp
bmUgX19BVEhVQl9WMV8wX0hfXworCitpbnQgYXRodWJfdjFfMF9zZXRfY2xvY2tnYXRpbmcoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsCisJCQkgICAgICAgZW51bSBhbWRfY2xvY2tnYXRpbmdf
c3RhdGUgc3RhdGUpOwordm9pZCBhdGh1Yl92MV8wX2dldF9jbG9ja2dhdGluZyhzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiwgdTMyICpmbGFncyk7CisKKyNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2dtY192OV8wLmMKaW5kZXggYTJhYTM1ZS4uZGIwMTYzZCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvZ21jX3Y5XzAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9nbWNfdjlfMC5jCkBAIC00Myw2ICs0Myw3IEBACiAKICNpbmNsdWRlICJnZnho
dWJfdjFfMC5oIgogI2luY2x1ZGUgIm1taHViX3YxXzAuaCIKKyNpbmNsdWRlICJhdGh1Yl92MV8w
LmgiCiAjaW5jbHVkZSAiZ2Z4aHViX3YxXzEuaCIKICNpbmNsdWRlICJtbWh1Yl92OV80LmgiCiAj
aW5jbHVkZSAidW1jX3Y2XzEuaCIKQEAgLTE0MDYsNyArMTQwNywxMSBAQCBzdGF0aWMgaW50IGdt
Y192OV8wX3NldF9jbG9ja2dhdGluZ19zdGF0ZSh2b2lkICpoYW5kbGUsCiAJaWYgKGFkZXYtPmFz
aWNfdHlwZSA9PSBDSElQX0FSQ1RVUlVTKQogCQlyZXR1cm4gMDsKIAotCXJldHVybiBtbWh1Yl92
MV8wX3NldF9jbG9ja2dhdGluZyhhZGV2LCBzdGF0ZSk7CisJbW1odWJfdjFfMF9zZXRfY2xvY2tn
YXRpbmcoYWRldiwgc3RhdGUpOworCisJYXRodWJfdjFfMF9zZXRfY2xvY2tnYXRpbmcoYWRldiwg
c3RhdGUpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyB2b2lkIGdtY192OV8wX2dldF9jbG9j
a2dhdGluZ19zdGF0ZSh2b2lkICpoYW5kbGUsIHUzMiAqZmxhZ3MpCkBAIC0xNDE3LDYgKzE0MjIs
OCBAQCBzdGF0aWMgdm9pZCBnbWNfdjlfMF9nZXRfY2xvY2tnYXRpbmdfc3RhdGUodm9pZCAqaGFu
ZGxlLCB1MzIgKmZsYWdzKQogCQlyZXR1cm47CiAKIAltbWh1Yl92MV8wX2dldF9jbG9ja2dhdGlu
ZyhhZGV2LCBmbGFncyk7CisKKwlhdGh1Yl92MV8wX2dldF9jbG9ja2dhdGluZyhhZGV2LCBmbGFn
cyk7CiB9CiAKIHN0YXRpYyBpbnQgZ21jX3Y5XzBfc2V0X3Bvd2VyZ2F0aW5nX3N0YXRlKHZvaWQg
KmhhbmRsZSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L21taHViX3Yx
XzAuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L21taHViX3YxXzAuYwppbmRleCAyOTJm
M2IxLi5mOWYwNGM1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9tbWh1
Yl92MV8wLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvbW1odWJfdjFfMC5jCkBA
IC0yNiw4ICsyNiw2IEBACiAjaW5jbHVkZSAibW1odWIvbW1odWJfMV8wX29mZnNldC5oIgogI2lu
Y2x1ZGUgIm1taHViL21taHViXzFfMF9zaF9tYXNrLmgiCiAjaW5jbHVkZSAibW1odWIvbW1odWJf
MV8wX2RlZmF1bHQuaCIKLSNpbmNsdWRlICJhdGh1Yi9hdGh1Yl8xXzBfb2Zmc2V0LmgiCi0jaW5j
bHVkZSAiYXRodWIvYXRodWJfMV8wX3NoX21hc2suaCIKICNpbmNsdWRlICJ2ZWdhMTBfZW51bS5o
IgogCiAjaW5jbHVkZSAic29jMTVfY29tbW9uLmgiCkBAIC00OTEsMjIgKzQ4OSw2IEBAIHN0YXRp
YyB2b2lkIG1taHViX3YxXzBfdXBkYXRlX21lZGl1bV9ncmFpbl9jbG9ja19nYXRpbmcoc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkCiAJCVdSRUczMl9TT0MxNShNTUhVQiwgMCwgbW1EQUdCMV9DTlRM
X01JU0MyLCBkYXRhMik7CiB9CiAKLXN0YXRpYyB2b2lkIGF0aHViX3VwZGF0ZV9tZWRpdW1fZ3Jh
aW5fY2xvY2tfZ2F0aW5nKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAotCQkJCQkJICAgYm9v
bCBlbmFibGUpCi17Ci0JdWludDMyX3QgZGVmLCBkYXRhOwotCi0JZGVmID0gZGF0YSA9IFJSRUcz
Ml9TT0MxNShBVEhVQiwgMCwgbW1BVEhVQl9NSVNDX0NOVEwpOwotCi0JaWYgKGVuYWJsZSAmJiAo
YWRldi0+Y2dfZmxhZ3MgJiBBTURfQ0dfU1VQUE9SVF9NQ19NR0NHKSkKLQkJZGF0YSB8PSBBVEhV
Ql9NSVNDX0NOVExfX0NHX0VOQUJMRV9NQVNLOwotCWVsc2UKLQkJZGF0YSAmPSB+QVRIVUJfTUlT
Q19DTlRMX19DR19FTkFCTEVfTUFTSzsKLQotCWlmIChkZWYgIT0gZGF0YSkKLQkJV1JFRzMyX1NP
QzE1KEFUSFVCLCAwLCBtbUFUSFVCX01JU0NfQ05UTCwgZGF0YSk7Ci19Ci0KIHN0YXRpYyB2b2lk
IG1taHViX3YxXzBfdXBkYXRlX21lZGl1bV9ncmFpbl9saWdodF9zbGVlcChzdHJ1Y3QgYW1kZ3B1
X2RldmljZSAqYWRldiwKIAkJCQkJCSAgICAgICBib29sIGVuYWJsZSkKIHsKQEAgLTUyMywyMyAr
NTA1LDYgQEAgc3RhdGljIHZvaWQgbW1odWJfdjFfMF91cGRhdGVfbWVkaXVtX2dyYWluX2xpZ2h0
X3NsZWVwKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGUKIAkJV1JFRzMyX1NPQzE1KE1NSFVCLCAw
LCBtbUFUQ19MMl9NSVNDX0NHLCBkYXRhKTsKIH0KIAotc3RhdGljIHZvaWQgYXRodWJfdXBkYXRl
X21lZGl1bV9ncmFpbl9saWdodF9zbGVlcChzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwKLQkJ
CQkJCSAgYm9vbCBlbmFibGUpCi17Ci0JdWludDMyX3QgZGVmLCBkYXRhOwotCi0JZGVmID0gZGF0
YSA9IFJSRUczMl9TT0MxNShBVEhVQiwgMCwgbW1BVEhVQl9NSVNDX0NOVEwpOwotCi0JaWYgKGVu
YWJsZSAmJiAoYWRldi0+Y2dfZmxhZ3MgJiBBTURfQ0dfU1VQUE9SVF9NQ19MUykgJiYKLQkgICAg
KGFkZXYtPmNnX2ZsYWdzICYgQU1EX0NHX1NVUFBPUlRfSERQX0xTKSkKLQkJZGF0YSB8PSBBVEhV
Ql9NSVNDX0NOVExfX0NHX01FTV9MU19FTkFCTEVfTUFTSzsKLQllbHNlCi0JCWRhdGEgJj0gfkFU
SFVCX01JU0NfQ05UTF9fQ0dfTUVNX0xTX0VOQUJMRV9NQVNLOwotCi0JaWYoZGVmICE9IGRhdGEp
Ci0JCVdSRUczMl9TT0MxNShBVEhVQiwgMCwgbW1BVEhVQl9NSVNDX0NOVEwsIGRhdGEpOwotfQot
CiBpbnQgbW1odWJfdjFfMF9zZXRfY2xvY2tnYXRpbmcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFk
ZXYsCiAJCQkgICAgICAgZW51bSBhbWRfY2xvY2tnYXRpbmdfc3RhdGUgc3RhdGUpCiB7CkBAIC01
NTMsMTIgKzUxOCw4IEBAIGludCBtbWh1Yl92MV8wX3NldF9jbG9ja2dhdGluZyhzdHJ1Y3QgYW1k
Z3B1X2RldmljZSAqYWRldiwKIAljYXNlIENISVBfUkFWRU46CiAJCW1taHViX3YxXzBfdXBkYXRl
X21lZGl1bV9ncmFpbl9jbG9ja19nYXRpbmcoYWRldiwKIAkJCQlzdGF0ZSA9PSBBTURfQ0dfU1RB
VEVfR0FURSA/IHRydWUgOiBmYWxzZSk7Ci0JCWF0aHViX3VwZGF0ZV9tZWRpdW1fZ3JhaW5fY2xv
Y2tfZ2F0aW5nKGFkZXYsCi0JCQkJc3RhdGUgPT0gQU1EX0NHX1NUQVRFX0dBVEUgPyB0cnVlIDog
ZmFsc2UpOwogCQltbWh1Yl92MV8wX3VwZGF0ZV9tZWRpdW1fZ3JhaW5fbGlnaHRfc2xlZXAoYWRl
diwKIAkJCQlzdGF0ZSA9PSBBTURfQ0dfU1RBVEVfR0FURSA/IHRydWUgOiBmYWxzZSk7Ci0JCWF0
aHViX3VwZGF0ZV9tZWRpdW1fZ3JhaW5fbGlnaHRfc2xlZXAoYWRldiwKLQkJCQlzdGF0ZSA9PSBB
TURfQ0dfU1RBVEVfR0FURSA/IHRydWUgOiBmYWxzZSk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJ
CWJyZWFrOwpAQCAtNTY5LDE4ICs1MzAsMjYgQEAgaW50IG1taHViX3YxXzBfc2V0X2Nsb2NrZ2F0
aW5nKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LAogCiB2b2lkIG1taHViX3YxXzBfZ2V0X2Ns
b2NrZ2F0aW5nKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCB1MzIgKmZsYWdzKQogewotCWlu
dCBkYXRhOworCWludCBkYXRhLCBkYXRhMTsKIAogCWlmIChhbWRncHVfc3Jpb3ZfdmYoYWRldikp
CiAJCSpmbGFncyA9IDA7CiAKKwlkYXRhID0gUlJFRzMyX1NPQzE1KE1NSFVCLCAwLCBtbUFUQ19M
Ml9NSVNDX0NHKTsKKworCWRhdGExID0gUlJFRzMyX1NPQzE1KE1NSFVCLCAwLCBtbURBR0IwX0NO
VExfTUlTQzIpOworCiAJLyogQU1EX0NHX1NVUFBPUlRfTUNfTUdDRyAqLwotCWRhdGEgPSBSUkVH
MzJfU09DMTUoQVRIVUIsIDAsIG1tQVRIVUJfTUlTQ19DTlRMKTsKLQlpZiAoZGF0YSAmIEFUSFVC
X01JU0NfQ05UTF9fQ0dfRU5BQkxFX01BU0spCisJaWYgKChkYXRhICYgQVRDX0wyX01JU0NfQ0df
X0VOQUJMRV9NQVNLKSAmJgorCSAgICAhKGRhdGExICYgKERBR0IwX0NOVExfTUlTQzJfX0RJU0FC
TEVfV1JSRVFfQ0dfTUFTSyB8CisJCSAgICAgICBEQUdCMF9DTlRMX01JU0MyX19ESVNBQkxFX1dS
UkVUX0NHX01BU0sgfAorCQkgICAgICAgREFHQjBfQ05UTF9NSVNDMl9fRElTQUJMRV9SRFJFUV9D
R19NQVNLIHwKKwkJICAgICAgIERBR0IwX0NOVExfTUlTQzJfX0RJU0FCTEVfUkRSRVRfQ0dfTUFT
SyB8CisJCSAgICAgICBEQUdCMF9DTlRMX01JU0MyX19ESVNBQkxFX1RMQldSX0NHX01BU0sgfAor
CQkgICAgICAgREFHQjBfQ05UTF9NSVNDMl9fRElTQUJMRV9UTEJSRF9DR19NQVNLKSkpCiAJCSpm
bGFncyB8PSBBTURfQ0dfU1VQUE9SVF9NQ19NR0NHOwogCiAJLyogQU1EX0NHX1NVUFBPUlRfTUNf
TFMgKi8KLQlkYXRhID0gUlJFRzMyX1NPQzE1KE1NSFVCLCAwLCBtbUFUQ19MMl9NSVNDX0NHKTsK
IAlpZiAoZGF0YSAmIEFUQ19MMl9NSVNDX0NHX19NRU1fTFNfRU5BQkxFX01BU0spCiAJCSpmbGFn
cyB8PSBBTURfQ0dfU1VQUE9SVF9NQ19MUzsKIH0KLS0gCjIuNy40CgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwphbWQtZ2Z4IG1haWxpbmcgbGlzdAphbWQt
Z2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2FtZC1nZng=
